# Define base images and tags
# ---------------------------
ARG DOCKERFILE_BUILD_IMAGE="node"
ARG DOCKERFILE_BUILD_TAG="14-alpine"
ARG DOCKERFILE_BASE_IMAGE="docker.idp.yc.ziiot.ru/digital-plant/zui-ci-basedockerimage"
ARG DOCKERFILE_BASE_TAG="2.2.2"

# Build container
# ---------------
FROM $DOCKERFILE_BUILD_IMAGE:$DOCKERFILE_BUILD_TAG AS builder

# Build arguments
ARG NPM_BUILD_ENVIRONMENT="storybook"
ARG NPM_BUILD_NEXT="next"
ARG NPM_BUILD_LOGLEVEL="error"
ARG CYPRESS_INSTALL_BINARY="0"
ARG NPM_SDK_DEPLOY_URL="/"

WORKDIR /project

COPY .npmrc /project/

# Set separate cache layers, install pakages
COPY package*.json /project/

RUN set -eu && \
    npm --userconfig /project/.npmrc --color=false --loglevel=$NPM_BUILD_LOGLEVEL --no-progress --parseable \
        install --fetch-retries=4
    # --only=production
# Set separate cache layers, build from sources
COPY ./ /project/
RUN set -eu && \
    npm --color=false --loglevel=$NPM_BUILD_LOGLEVEL --no-progress --parseable \
        run build:"$NPM_BUILD_ENVIRONMENT"

RUN chgrp -R 0 /project && \
    chmod -R g+rw /project

# Make application container
# --------------------------
FROM $DOCKERFILE_BASE_IMAGE:$DOCKERFILE_BASE_TAG

COPY --from=builder --chown=101:0 /project/dist/storybook/components /www/storybook
#COPY --from=builder --chown=101:0 /project/dist/apps/doc /www
COPY ./.env /.env