{
    "pipes": [],
    "interfaces": [
        {
            "name": "Customer",
            "id": "interface-Customer-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "verified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 131
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DropdownChangeEvent",
            "id": "interface-DropdownChangeEvent-0b485902fa4f2cf736f84d342a42a3da",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown> {\n  @Input() value: T;\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode:\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'equals'\n    | 'notEquals'\n    | 'in'\n    | 'lt'\n    | 'lte'\n    | 'gt'\n    | 'gte' = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: any;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n  @Output() valueChange = new EventEmitter<T>();\n\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\n\n  itemTemplate: TemplateRef<unknown>;\n  groupTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n  headerTemplate: TemplateRef<unknown>;\n  emptyTemplate: TemplateRef<unknown>;\n  emptyfilterTemplate: TemplateRef<unknown>;\n  footerTemplate: TemplateRef<unknown>;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyfilterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "InputEvent",
            "id": "interface-InputEvent-b5af54c2dd3c720b3226576f320ebaf3",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport interface InputEvent {\n  originalEvent: KeyboardEvent;\n  value: number;\n}\n\n@Component({\n  selector: 'zyfra-input-number',\n  templateUrl: './zyfra-input-number.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputNumberComponent {\n  @Input() value: number;\n  @Input() format = true;\n  @Input() showButtons: boolean;\n  @Input() buttonLayout = 'stacked';\n  @Input() spanClass: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() incrementButtonClass: string;\n  @Input() decrementButtonClass: string;\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\n  @Input() locale: string;\n  @Input() localeMatcher = 'best fit';\n  @Input() mode = 'decimal';\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() currency: string;\n  @Input() currencyDisplay = 'symbol';\n  @Input() useGrouping = true;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 1;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() inputId: string;\n  @Input() inputStyle: string;\n  @Input() inputStyleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string;\n  @Input() disabled: boolean;\n  @Input() title: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() name: string;\n  @Input() autocomplete: string;\n\n  @Output() valueChange = new EventEmitter<number>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onInput = new EventEmitter<InputEvent>();\n}\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyboardEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "NavMenuEvent",
            "id": "interface-NavMenuEvent-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "NavMenuSelectionEvent",
            "id": "interface-NavMenuSelectionEvent-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem | ZyfraMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Order",
            "id": "interface-Order-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1215
                },
                {
                    "name": "customer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1217
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1214
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1212
                },
                {
                    "name": "productCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1213
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1216
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1218
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "PageChangeEvent",
            "id": "interface-PageChangeEvent-ffca6d8963a67d39f742bd9b65767cf8",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\ntype PageOption = number | Record<string, unknown>;\n\nexport interface PageChangeEvent {\n  first: number;\n  rows: number;\n  page: number;\n  pageCount: number;\n}\n\n@Component({\n  selector: 'zyfra-paginator',\n  templateUrl: './zyfra-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraPaginatorComponent {\n  /**\n   * Number of total records.\n   */\n  @Input() totalRecords = 0;\n  /**\n   *  Data count to display per page.\n   */\n  @Input() rows = 0;\n  /**\n   * \tZero-relative number of the first row to be displayed.\n   */\n  @Input() first = 0;\n  /**\n   * \tNumber of page links to display.\n   */\n  @Input() pageLinkSize = 5;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown.\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   */\n  @Input() rowsPerPageOptions: PageOption[] = null;\n  /**\n   * \tInline style of the component.\n   */\n  @Input() style: string = null;\n  /**\n   * \tStyle class of the component.\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Whether to show it even there is only one page.\n   */\n  @Input() alwaysShow = true;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   */\n  @Input() templateLeft: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   */\n  @Input() templateRight: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the dropdown item inside in the paginator.\n   */\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   */\n  @Input() dropdownAppendTo: any = null;\n  /**\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   */\n  @Input() dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate: string;\n  /**\n   * Whether to display current page report.\n   */\n  @Input() showCurrentPageReport = false;\n  /**\n   * \tWhether to display a dropdown to navigate to any page.\n   */\n  @Input() showJumpToPageDropdown = false;\n  /**\n   * \tWhether to show page links.\n   */\n  @Input() showPageLinks = true;\n\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\n\n  onPageChange(event: PageChangeEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1068
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1063
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1065
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1062
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1066
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1070
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1064
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1067
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1069
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1071
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ProductOrder",
            "id": "interface-ProductOrder-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1204
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1199
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1201
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1198
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1202
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1206
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1200
                },
                {
                    "name": "orders",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Order[]",
                    "optional": false,
                    "description": "",
                    "line": 1208
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1203
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1205
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1207
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Sale",
            "id": "interface-Sale-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "lastYearProfit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1044
                },
                {
                    "name": "lastYearSale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1042
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1041
                },
                {
                    "name": "thisYearProfit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1045
                },
                {
                    "name": "thisYearSale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1043
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonChange",
            "id": "interface-SelectButtonChange-bde73bb79a088ff1edeea25a50ba5a08",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonOptionClick",
            "id": "interface-SelectButtonOptionClick-bde73bb79a088ff1edeea25a50ba5a08",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "option",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SettingsConfig",
            "id": "interface-SettingsConfig-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "selectedSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItemSize",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "singleGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "StoryCity",
            "id": "interface-StoryCity-3c9ff690d0b303367893864b189a95e5",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { moduleMetadata } from '@storybook/angular';\nimport { Meta, Story } from '@storybook/angular/types-6-0';\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\nimport { ZyfraSelectButtonModule } from './zyfra-select-button.module';\n\nexport default {\n  moduleId: module.id,\n  title: 'Buttons/SelectButton',\n  component: ZyfraSelectButtonComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ZyfraSelectButtonModule],\n    }),\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-select-button.component.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\ninterface StoryCity {\n  name: string;\n  code: string;\n}\n\nconst cities: StoryCity[] = [\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n];\n\nconst Template: Story<ZyfraSelectButtonComponent<StoryCity, string>> = (args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n});\n\nexport const Default = Template.bind({});\nDefault.args = {\n  options: cities,\n  optionLabel: 'name',\n  optionDisabled: 'inactive',\n  multiple: true,\n  optionValue: 'code',\n  disabled: false,\n  styleClass: 'selectbutton-default',\n};\n\nexport const DefaultMini = Template.bind({});\nDefaultMini.args = {\n  ...Default.args,\n  styleClass: 'p-selectbutton-default p-selectbutton-mini',\n};\n\nexport const Danger = Template.bind({});\nDanger.args = {\n  ...Default.args,\n  styleClass: 'p-selectbutton-danger',\n};\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ToolbarConfig",
            "id": "interface-ToolbarConfig-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "closeAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "filesMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "rubricatorMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "TToggleButtonClick",
            "id": "interface-TToggleButtonClick-be09976d2e482f74fda68d2e0cfc5892",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface TToggleButtonClick {\n  originalEvent: PointerEvent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'zyfra-toggle-button',\n  templateUrl: './zyfra-toggle-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraToggleButtonComponent {\n  @Input() model = true;\n  @Input() onLabel: string = 'confirm';\n  @Input() offLabel: string;\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\n  @Input() offIcon = 'zyfra-icon cancel-close';\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  handleChange(event: TToggleButtonClick): void {\n    this.model = event.checked;\n    this.onChange.emit(this.model);\n  }\n}\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraAccordionOpenClose",
            "id": "interface-ZyfraAccordionOpenClose-96877d4851f8752e11925f87ce51eaf5",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n  //styleUrls: ['./zyfra-accordion.component.less'],\n  //encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraDatePickerLocaleInterface",
            "id": "interface-ZyfraDatePickerLocaleInterface-1d94b4649c3d7d1ba5649705c97416ac",
            "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraDatePickerLocaleInterface {\n  locale: Locale;\n}\n",
            "properties": [
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Locale",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppItem",
            "id": "interface-ZyfraMenuAppItem-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransition",
            "id": "interface-ZyfraMenuAppTransition-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "delay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "timingFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransitionSettings",
            "id": "interface-ZyfraMenuAppTransitionSettings-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "close",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuItem",
            "id": "interface-ZyfraMenuItem-4d725699fc7bc004fee192d4f124803c",
            "file": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { QueryParamsHandling } from '@angular/router';\n\nexport interface ZyfraMenuItem {\n  label?: string;\n  icon?: string;\n  command?: (event?: any) => void;\n  url?: string;\n  items?: ZyfraMenuItem[];\n  expanded?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  target?: string;\n  escape?: boolean;\n  routerLinkActiveOptions?: any;\n  separator?: boolean;\n  badge?: string;\n  tooltip?: string;\n  tooltipPosition?: string;\n  badgeStyleClass?: string;\n  style?: any;\n  styleClass?: string;\n  title?: string;\n  id?: string;\n  automationId?: any;\n  tabindex?: string;\n  routerLink?: any;\n  queryParams?: {\n    [k: string]: any;\n  };\n  fragment?: string;\n  queryParamsHandling?: QueryParamsHandling;\n  preserveFragment?: boolean;\n  skipLocationChange?: boolean;\n  replaceUrl?: boolean;\n  state?: {\n    [k: string]: any;\n  };\n  tooltipOptions?: {\n    tooltipLabel?: string;\n    tooltipPosition?: string;\n    tooltipEvent?: string;\n    appendTo?: any;\n    positionStyle?: string;\n    tooltipStyleClass?: string;\n    tooltipZIndex?: string;\n    escape?: boolean;\n    disabled?: boolean;\n    positionTop?: number;\n    positionLeft?: number;\n    showDelay?: number;\n    hideDelay?: number;\n    life?: number;\n  };\n}\n",
            "properties": [
                {
                    "name": "automationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "badgeStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "command",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "escape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "fragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "preserveFragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "queryParamsHandling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryParamsHandling",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "replaceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "routerLinkActiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "separator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "skipLocationChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tooltipOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraTime",
            "id": "interface-ZyfraTime-48553cf49e7181a783e262b93613e299",
            "file": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraTime {\n  value: string;\n  date: Date;\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "NavMenuService",
            "id": "injectable-NavMenuService-8de5e7457a495cfa09d2a782e2e1af5b",
            "file": "libs/components/src/lib/nav-menu/service/selection.service.ts",
            "properties": [
                {
                    "name": "selection",
                    "defaultValue": "new BehaviorSubject<TreeNode>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection$",
                    "defaultValue": "this.selection.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "selectionChange",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Injectable()\nexport class NavMenuService {\n  private selection = new BehaviorSubject<TreeNode>(null);\n  selection$ = this.selection.asObservable();\n\n  selectionChange(node: TreeNode): void {\n    if (this.selection.value) {\n      this.selection.value.styleClass = '';\n    }\n    if (node) {\n      node.styleClass = 'active';\n    }\n    this.selection.next(node);\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "ZyfraDynamicDialogService",
            "id": "injectable-ZyfraDynamicDialogService-8fa0ee310d40b94f2e3e9b1c0e4a67c0",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogComponentRefMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<DynamicDialogRef | ComponentRef<DynamicDialogComponent>>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "appendDialogComponentToBody",
                    "args": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicDialogRef",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ZyfraDynamicDialogRef",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeDialogComponentFromBody",
                    "args": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector, Type } from '@angular/core';\nimport { DynamicDialogComponent, DynamicDialogConfig, DynamicDialogInjector, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { ZyfraDynamicDialogRef } from '.';\nimport { ZyfraDynamicDialogConfig } from './zyfra-dynamic-dialog-config';\n\n@Injectable()\nexport class ZyfraDynamicDialogService {\n\n  public dialogComponentRefMap: Map<DynamicDialogRef, ComponentRef<DynamicDialogComponent>> = new Map();\n  public config: ZyfraDynamicDialogConfig;\n  public ref: ZyfraDynamicDialogRef;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector) { }\n\n  public open(componentType: Type<unknown>, config: ZyfraDynamicDialogConfig): ZyfraDynamicDialogRef {\n    const dialogRef = this.appendDialogComponentToBody(config);\n    this.config = config;\n    this.ref = dialogRef;\n    this.dialogComponentRefMap.get(dialogRef).instance.childComponentType = componentType;\n\n    return dialogRef;\n  }\n\n  private appendDialogComponentToBody(config: DynamicDialogConfig): DynamicDialogRef {\n    const map = new WeakMap();\n    map.set(DynamicDialogConfig, config);\n\n    const dialogRef = new DynamicDialogRef();\n    map.set(DynamicDialogRef, dialogRef);\n\n    const sub = dialogRef.onClose.subscribe(() => {\n      this.dialogComponentRefMap.get(dialogRef).instance.close();\n    });\n\n    const destroySub = dialogRef.onDestroy.subscribe(() => {\n      this.removeDialogComponentFromBody(dialogRef);\n      destroySub.unsubscribe();\n      sub.unsubscribe();\n    });\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\n    const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\n\n    this.appRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n\n    this.dialogComponentRefMap.set(dialogRef, componentRef);\n\n    return dialogRef;\n  }\n\n  private removeDialogComponentFromBody(dialogRef: DynamicDialogRef): void {\n    if (!dialogRef || !this.dialogComponentRefMap.has(dialogRef)) {\n      return;\n    }\n\n    const dialogComponentRef = this.dialogComponentRefMap.get(dialogRef);\n    this.appRef.detachView(dialogComponentRef.hostView);\n    dialogComponentRef.destroy();\n    this.dialogComponentRefMap.delete(dialogRef);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ZyfraHintOverlayManager",
            "id": "injectable-ZyfraHintOverlayManager-ee848cad15b249d1c089f9c45ecac04e",
            "file": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
            "properties": [
                {
                    "name": "className",
                    "defaultValue": "'zyfra-hint-overlay-container'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        143
                    ]
                },
                {
                    "name": "innerContainer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "append",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZyfraHintOverlayManager {\n  private innerContainer: HTMLElement = null;\n  private readonly className = 'zyfra-hint-overlay-container';\n  private renderer: Renderer2;\n\n  constructor(@Inject(DOCUMENT) private document: Document, rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private get container(): HTMLElement {\n    if (!this.innerContainer) {\n      this.innerContainer = this.document.querySelector(`.${this.className}`);\n      if (!this.innerContainer) {\n        this.innerContainer = this.renderer.createElement('div');\n        this.renderer.addClass(this.innerContainer, this.className);\n        this.renderer.setStyle(\n          this.innerContainer,\n          'cssText',\n          'position:fixed; top:0; left:0; width:100%; height:100%; pointer-events:none; z-index:99999;'\n        );\n        this.document.body.appendChild(this.innerContainer);\n      }\n    }\n    return this.innerContainer;\n  }\n\n  public create(): void {}\n\n  public append(element: HTMLElement): void {\n    this.container.appendChild(element);\n  }\n\n  public remove(element: HTMLElement): void {\n    this.container.removeChild(element);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "container": {
                    "name": "container",
                    "getSignature": {
                        "name": "container",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 16
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ZyfraDynamicDialogConfig",
            "id": "class-ZyfraDynamicDialogConfig-af1f6fb73f9cfd1ff7bca03df59a1c9e",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogConfig } from 'primeng/dynamicdialog';\n\nexport class ZyfraDynamicDialogConfig extends DynamicDialogConfig { }\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogConfig",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraDynamicDialogRef",
            "id": "class-ZyfraDynamicDialogRef-20789316f44d4fd356aa68b4329be764",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogRef } from 'primeng/dynamicdialog';\n\nexport class ZyfraDynamicDialogRef extends DynamicDialogRef { }\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogRef",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraHintOptionsModel",
            "id": "class-ZyfraHintOptionsModel-65e7b724bbbf9aa9feba05235de3c869",
            "file": "libs/components/src/lib/hint/zyfra-hint.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport class ZyfraHintOptionsModel {\n  left?: number;\n  top?: number;\n  className?: string;\n  content?: string | TemplateRef<any>;\n  context: Record<string, unknown>;\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BaseTableTemplateDirective",
            "id": "directive-BaseTableTemplateDirective-49f10ffad9feae437558aac85f74823e",
            "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\nexport type TableTemplateType =\n  'caption'\n  | 'header'\n  | 'headergrouped'\n  | 'body'\n  | 'loadingbody'\n  | 'footer'\n  | 'footergrouped'\n  | 'summary'\n  | 'colgroup'\n  | 'rowexpansion'\n  | 'groupheader'\n  | 'rowspan'\n  | 'groupfooter'\n  | 'frozenrows'\n  | 'frozenheader'\n  | 'frozenbody'\n  | 'frozenfooter'\n  | 'frozencolgroup'\n  | 'frozenrowexpansion'\n  | 'emptymessage'\n  | 'paginatorleft'\n  | 'paginatorright'\n  | 'paginatordropdownitem'\n  | 'input'\n  | 'output'\n  | 'filter';\n\n@Directive()\nexport class BaseTableTemplateDirective {\n  @Input() zyfraTableTemplate: TableTemplateType;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n\n  get template() {\n    return this.templateRef;\n  }\n\n  getType() {\n    return this.zyfraTableTemplate;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTableTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "TableTemplateType"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "TableTemplateType",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "template": {
                    "name": "template",
                    "getSignature": {
                        "name": "template",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                }
            }
        },
        {
            "name": "ZyfraAutofocusDirective",
            "id": "directive-ZyfraAutofocusDirective-ce76f5cf7c981f9e672cf040d7e1dfbe",
            "file": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive, ElementRef,\n  Input, OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[zyfraAutofocus]'\n})\nexport class ZyfraAutofocusDirective implements OnInit {\n  @Input() set zyfraAutofocus(condition: boolean) {\n    this.focus = condition !== false;\n  }\n\n  private focus = true;\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit(): void {\n    if (this.focus) {\n      this.el.nativeElement.focus();\n    }\n  }\n}\n",
            "selector": "[zyfraAutofocus]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraAutofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "focus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "zyfraAutofocus": {
                    "name": "zyfraAutofocus",
                    "setSignature": {
                        "name": "zyfraAutofocus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 10,
                        "jsdoctags": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraBaseSearchCellComponent",
            "id": "directive-ZyfraBaseSearchCellComponent-1b459632b4002e401e0ce1aaa4031343",
            "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HostBinding,\n  Input,\n  Output,\n  EventEmitter,\n  Directive\n} from '@angular/core';\n\ntype ValueChangeEvent = {\n  field: string;\n  value: string;\n};\n\n@Directive()\nexport abstract class ZyfraBaseSearchCellComponent {\n  @Input() placeholder = '';\n  @Input() field: string;\n  /**\n   * If the value is true, then the native filtering of the table will be used,\n   * otherwise the valueChange event will be emitted\n   */\n  @Input() isNativeFiltering = true;\n  @Input() matchMode = 'contains';\n\n  @Output() valueChange = new EventEmitter<ValueChangeEvent>();\n\n  @HostBinding('class') hostClass = 'search-cell';\n\n  public readonly abstract table: any;\n\n\n  // TODO refactor this, need form control\n  filter(value: any, field: string, matchMode: string): void {\n    if (this.isNativeFiltering) {\n      this.table.filter(value, field, matchMode);\n    } else {\n      this.valueChange.emit({ field, value });\n    }\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "isNativeFiltering",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted",
                    "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "matchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<ValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "hostClass",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        143,
                        126
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraBaseTableComponent",
            "id": "directive-ZyfraBaseTableComponent-d2d8b19a02615c67b27758199ba9634a",
            "file": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, Output, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\nimport { SortMeta } from 'primeng/api';\nimport { TableSortEvent } from '../../table/zyfra-table.types';\nimport { BaseTableTemplateDirective } from './directives/base-table-template.directive';\nimport { SortOrder } from './shared-table.types';\n\n@Directive()\nexport abstract class ZyfraBaseTableComponent<T = unknown> {\n  @Output() abstract activeElementChange: EventEmitter<T>;\n\n  styleClasses = 'p-datatable-gridlines';\n\n  public bodyTemplate: TemplateRef<any>;\n  public captionTemplate: TemplateRef<any>;\n  public colGroupTemplate: TemplateRef<any>;\n  public emptyMessageTemplate: TemplateRef<any>;\n  public footerTemplate: TemplateRef<any>;\n  public frozenBodyTemplate: TemplateRef<any>;\n  public frozenColGroupTemplate: TemplateRef<any>;\n  public frozenFooterTemplate: TemplateRef<any>;\n  public frozenHeaderTemplate: TemplateRef<any>;\n  public headerTemplate: TemplateRef<any>;\n  public paginatorDropdownItemTemplate: TemplateRef<any>;\n  public paginatorLeftTemplate: TemplateRef<any>;\n  public paginatorRightTemplate: TemplateRef<any>;\n  public summaryTemplate: TemplateRef<any>;\n\n  //region Inputs\n  /**\n   * Table title\n   */\n  @Input() title = '';\n  /**\n   * An array of objects to display\n   */\n  @Input() value: T[] = [];\n  /**\n   * An array of objects to represent dynamic columns\n   */\n  @Input() columns: any[];\n  /**\n   * Inline style of the component\n   */\n  @Input() style: any;\n  /**\n   * Style class of the component\n   */\n  @Input() styleClass: string;\n  /**\n   * Inline style of the table\n   */\n  @Input() tableStyle: Record<string, string>;\n  /**\n   * Style class of the table\n   */\n  @Input() tableStyleClass: string;\n  /**\n   * Whether the cell widths scale according to their content or not\n   */\n  @Input() autoLayout: boolean;\n  /**\n   * Defines if data is loaded and interacted with in lazy manner\n   */\n  @Input() lazy = false;\n  /**\n   * Whether to call lazy loading on initialization\n   */\n  @Input() lazyLoadOnInit = true;\n  /**\n   * When specified as true, enables the pagination\n   */\n  @Input() paginator: boolean;\n  /**\n   * Number of rows to display per page\n   */\n  @Input() rows = 10;\n  /**\n   * Index of the first row to be displayed\n   */\n  @Input() first = 0;\n  /**\n   * Number of total records, defaults to length of value when not defined\n   */\n  @Input() pageLinks = 5;\n  /**\n   * Number of page links to display in paginator\n   */\n  @Input() rowsPerPageOptions: any[];\n  /**\n   * Whether to show it even there is only one page\n   */\n  @Input() alwaysShowPaginator = true;\n  /**\n   * Position of the paginator, options are \"top\",\"bottom\" or \"both\"\n   */\n  @Input() paginatorPosition: 'top' | 'bottom' | 'both' = 'bottom';\n  /**\n   * Target element to attach the paginator dropdown overlay,\n   * valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)\n   */\n  @Input() paginatorDropdownAppendTo: any;\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate = '{currentPage} of {totalPages}';\n  /**\n   * Whether to display current page report\n   */\n  @Input() showCurrentPageReport: boolean;\n  /**\n   * Whether to display a dropdown to navigate to any page\n   */\n  @Input() showJumpToPageDropdown: boolean;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Whether to show page links\n   */\n  @Input() showPageLinks = true;\n  /**\n   * Context menu selection\n   */\n  @Input() contextMenuSelection: any;\n  /**\n   * Context menu selection mode\n   */\n  @Input() contextMenuSelectionMode: 'separate' | 'joint' = 'separate';\n  /**\n   * Sort order to use when an unsorted column gets sorted by user interaction\n   */\n  @Input() defaultSortOrder = 1;\n  /**\n   * Defines whether sorting works on single column or on multiple columns\n   */\n  @Input() sortMode: 'single' | 'multiple' = 'single';\n  /**\n   * When true, resets paginator to first page after sorting\n   */\n  @Input() resetPageOnSort = true;\n  /**\n   * Whether to use the default sorting or a custom one using sortFunction\n   */\n  @Input() customSort: boolean;\n  /**\n   * Specifies the selection mode, valid values are \"single\" and \"multiple\"\n   */\n  @Input() selectionMode: 'single' | 'multiple';\n  /**\n   * A property to uniquely identify a record in data\n   */\n  @Input() dataKey: string;\n  /**\n   * Defines whether metaKey is should be considered for the selection.\n   * On touch enabled devices, metaKeySelection is turned off automatically\n   */\n  @Input() metaKeySelection: boolean;\n  /**\n   * Algorithm to define if a row is selected,\n   * valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields\n   */\n  @Input() compareSelectionBy: 'deepEquals' | 'equals' = 'deepEquals';\n  /**\n   * Adds hover effect to rows without the need for selectionMode\n   */\n  @Input() rowHover: boolean;\n  /**\n   * Displays a loader to indicate data load is in progress\n   */\n  @Input() loading: boolean;\n  /**\n   * The icon to show while indicating data load is in progress\n   */\n  @Input() loadingIcon = 'pi pi-spinner';\n  /**\n   * Whether to show the loading mask when loading property is true\n   */\n  @Input() showLoader = true;\n  /**\n   * When specifies, enables horizontal and/or vertical scrolling\n   */\n  @Input() scrollable: boolean;\n  /**\n   * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size\n   */\n  @Input() scrollHeight: string;\n  /**\n   * Whether the data should be loaded on demand during scroll\n   */\n  @Input() virtualScroll: boolean;\n  /**\n   * Height of a row to use in calculations of virtual scrolling\n   */\n  @Input() virtualRowHeight = 32;\n  /**\n   * Minimum amount of content buffer (in pixels) that the viewport must render\n   */\n  @Input() minBufferPx: number;\n  /**\n   * Configures how much buffer space to render back up to when it detects that more buffer is required\n   */\n  @Input() maxBufferPx: number;\n  /**\n   * Width of the frozen columns container\n   */\n  @Input() frozenWidth: string;\n  /**\n   * An array of objects to represent dynamic columns that are frozen\n   */\n  @Input() frozenColumns: any[];\n  /**\n   * When enabled, columns can be resized using drag and drop\n   */\n  @Input() resizableColumns: boolean;\n  /**\n   * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"\n   */\n  @Input() columnResizeMode: 'fit' | 'expand' = 'fit';\n  /**\n   * When enabled, columns can be reordered using drag and drop\n   */\n  @Input() reorderableColumns: boolean;\n  /**\n   * Local ng-template varilable of a ContextMenu\n   */\n  @Input() contextMenu: any;\n  /**\n   * An array of fields as string to use in global filtering\n   */\n  @Input() globalFilterFields: string[];\n  /**\n   * Delay in milliseconds before filtering the data\n   */\n  @Input() filterDelay = 300;\n  /**\n   * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n   */\n  @Input() filterMode: 'lenient' | 'strict' = 'lenient';\n  /**\n   * Locale to use in filtering. The default locale is the host environment's current locale.\n   */\n  @Input() filterLocale: string;\n  /**\n   * Number of total records, defaults to length of value when not defined\n   */\n  @Input() totalRecords: number;\n  /**\n   * Name of the field to sort data by default\n   */\n  @Input() sortField: string;\n  /**\n   * Order to sort when default sorting is enabled\n   */\n  @Input() sortOrder: number;\n  /**\n   * An array of SortMeta objects to sort the data by default in multiple sort mode\n   */\n  @Input() multiSortMeta: SortMeta[];\n  /**\n   * Selected row in single mode or an array of values in multiple mode\n   */\n  @Input() selection: any;\n  /**\n   * When true turns on striped display mode\n   */\n  @Input() stripedMode = false;\n  //endregion\n\n  //region Outputs\n  /**\n   * Callback to invoke when data is filtered\n   */\n  @Output() onFilter = new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>();\n  /**\n   * Callback to invoke when pagination occurs\n   */\n  @Output() page = new EventEmitter<{ first: number; rows: number }>();\n  /**\n   * Callback to invoke when a column gets sorted\n   */\n  @Output() sort = new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>();\n\n  /**\n   * Callback to invoke when paging, sorting or filtering happens in lazy mode\n   */\n  @Output() lazyLoad = new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>();\n\n  /**\n   * A function to implement custom sorting\n   */\n  @Output() sortFunction = new EventEmitter<TableSortEvent>();\n  /**\n   * Callback to invoke when a node is selected with right click\n   */\n  @Output() contextMenuSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a column is resized\n   */\n  @Output() colResize = new EventEmitter<{ element: unknown; delta: unknown }>();\n\n  /**\n   * Callback to invoke when a column is reordered\n   */\n  @Output() colReorder = new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>();\n  /**\n   * Callback to invoke when a cell switches to edit mode.\n   */\n  @Output() editInit = new EventEmitter<{ column: unknown; data: unknown,  originalEvent: Event; }>();\n  /**\n   * Callback to invoke when cell edit is completed\n   */\n  @Output() editComplete = new EventEmitter<{ column: unknown; data: unknown }>();\n  /**\n   * Callback to invoke when cell edit is cancelled with escape key\n   */\n  @Output() editCancel = new EventEmitter<{ column: unknown; data: unknown }>();\n  /**\n   * Callback to invoke when state of header checkbox changes\n   */\n  @Output() headerCheckboxToggle = new EventEmitter<{ originalEvent: Event; checked: boolean }>();\n  /**\n   * Callback to invoke when selection is changed\n   */\n  @Output() selectionChange = new EventEmitter<unknown>();\n  //endregion\n\n  private initialData: T[];\n\n  protected abstract getContentTemplate(): QueryList<BaseTableTemplateDirective>;\n  protected abstract getTable(): any;\n  protected abstract initTemplateByType(item: BaseTableTemplateDirective);\n\n  ngOnChanges(changes): void {\n    if (changes.value && changes.value.firstChange) {\n      this.initialData = [...changes.value.currentValue];\n    }\n\n    this.checkUpdateStyleClasses(changes);\n  }\n\n  ngAfterContentInit(): void {\n    this.getContentTemplate().forEach((item) => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n        default:\n          this.initTemplateByType(item)\n      }\n    });\n  }\n\n  public setValue(value: T[]): void {\n    this.value = value;\n  }\n\n  public resetScrollTop(): void {\n    this.getTable().resetScrollTop();\n  }\n\n  public scrollToVirtualIndex(index: number): void {\n    this.getTable().scrollToVirtualIndex(index);\n  }\n\n  public scrollTo(options: any): void {\n    this.getTable().scrollTo(options);\n  }\n\n  public resetSort(): void {\n    const table = this.getTable();\n\n    table._sortField = null;\n    table._sortOrder = 0;\n    table._multiSortMeta = null;\n    table.tableService.onSort(null);\n\n    if (this.lazy) {\n      table.onLazyLoad.emit(table.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = table._value ? table._value.length : 0;\n      this.setValue([...this.initialData]);\n    }\n\n    this.sort.emit(null);\n  }\n  public filter(value: any, field: string, matchMode: string): void {\n    this.getTable().filter(value, field, matchMode);\n  }\n\n  public filterGlobal(value, matchMode): void {\n    return this.getTable().filterGlobal(value, matchMode);\n  }\n\n  public isSelected(rowData): boolean {\n    return this.getTable().isSelected(rowData);\n  }\n\n\n  private _activeElement: T;\n\n  protected updateStyleClasses(): void {\n    const classes = ['p-datatable-gridlines'];\n\n    if (this.paginator) {\n      classes.push('zyfra-table_paginator');\n    }\n\n    if (this.stripedMode) {\n      classes.push('zyfra-table_striped');\n    }\n\n    classes.push(this.styleClass);\n\n    this.styleClasses = classes.join(' ');\n  }\n\n  protected checkUpdateStyleClasses(changes: SimpleChanges): void {\n    if (changes.styleClass || changes.paginator || changes.stripedMode) {\n      this.updateStyleClasses();\n    }\n  }\n\n  set activeElement(activeElement) {\n    if (this.activeElement === activeElement) {\n      return;\n    }\n\n    this._activeElement = activeElement;\n    this.activeElementChange.emit(this.activeElement);\n  }\n\n  get activeElement(): T {\n    return this._activeElement;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\""
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]"
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\""
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any"
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any"
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\""
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string"
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string"
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number"
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string"
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\""
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number"
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]"
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string"
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]"
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean"
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string"
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number"
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean"
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number"
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]"
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean"
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any"
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\""
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean"
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean"
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean"
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean"
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number"
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]"
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string"
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean"
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean"
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean"
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean"
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean"
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string"
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number"
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>"
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number"
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]"
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<T>"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter"
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter"
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter"
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter"
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter"
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown,  originalEvent: Event; }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter"
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter"
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter"
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter"
                },
                {
                    "name": "sort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter"
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 466,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 484,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 453,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 457,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 344,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ]
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ]
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 346,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 461,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 356,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 436,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 428,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "accessors": {
                "activeElement": {
                    "name": "activeElement",
                    "setSignature": {
                        "name": "activeElement",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "activeElement",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 490,
                        "jsdoctags": [
                            {
                                "name": "activeElement",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeElement",
                        "type": "",
                        "returnType": "T",
                        "line": 499
                    }
                }
            }
        },
        {
            "name": "ZyfraCancelEditableRowDirective",
            "id": "directive-ZyfraCancelEditableRowDirective-71cd51b19c1d5afff8372e03301c38e9",
            "file": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { CancelEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraCancelEditableRow]'\n})\nexport class ZyfraCancelEditableRowDirective extends CancelEditableRow {}\n",
            "selector": "[zyfraCancelEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraDropdownTemplateDirective",
            "id": "directive-ZyfraDropdownTemplateDirective-52c5a45164f6b0237b0e6bb2e791246a",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\ntype DropdownTemplateType = 'item' | 'group' | 'selectedItem' | 'header' | 'empty' | 'emptyfilter' | 'footer';\n\n@Directive({\n  selector: '[zyfraDropdownTemplate]',\n})\nexport class ZyfraDropdownTemplateDirective {\n  @Input() zyfraDropdownTemplate: DropdownTemplateType;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n\n  get template() {\n    return this.templateRef;\n  }\n\n  public getType() {\n    return this.zyfraDropdownTemplate;\n  }\n}\n",
            "selector": "[zyfraDropdownTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraDropdownTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "DropdownTemplateType"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "DropdownTemplateType",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "template": {
                    "name": "template",
                    "getSignature": {
                        "name": "template",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "ZyfraEditableColumnDirective",
            "id": "directive-ZyfraEditableColumnDirective-6119cc5e29b9f2022f9d2ae90472c0e5",
            "file": "libs/components/src/lib/table/directives/editable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\nimport { EditableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraEditableColumn]',\n  providers: [{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }]\n})\nexport class ZyfraEditableColumnDirective extends EditableColumn {\n  onClick(event: MouseEvent): void {\n    // doing nothing, redefining parent class method\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    super.onClick(event);\n  }\n}\n",
            "selector": "[zyfraEditableColumn]",
            "providers": [
                {
                    "name": "{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dblclick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDblClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dblclick', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraEditableRowDirective",
            "id": "directive-ZyfraEditableRowDirective-c490fa5bb2164437e6ba8b8576312e48",
            "file": "libs/components/src/lib/table/directives/editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { EditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraEditableRow]',\n  providers: [{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }]\n})\nexport class ZyfraEditableRowDirective extends EditableRow {\n  @Input('zyfraEditableRow') data: any;\n  @Input('zyfraEditableRowDisabled') pEditableRowDisabled: boolean;\n}\n",
            "selector": "[zyfraEditableRow]",
            "providers": [
                {
                    "name": "{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "zyfraEditableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "zyfraEditableRowDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraFrozenColumnDirective",
            "id": "directive-ZyfraFrozenColumnDirective-d2603186c956f8524cc63eed167bb755",
            "file": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { FrozenColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraFrozenColumn]'\n})\nexport class ZyfraFrozenColumnDirective extends FrozenColumn {}\n",
            "selector": "[zyfraFrozenColumn]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraHintDirective",
            "id": "directive-ZyfraHintDirective-bb1cc80c03b58c4ed8f7c1b2fd42db75",
            "file": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Inject,\n  ComponentFactoryResolver,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  ComponentRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  AfterViewInit,\n  TemplateRef,\n  HostListener,\n  Renderer2,\n} from '@angular/core';\nimport { ZyfraHintComponent } from './zyfra-hint.component';\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\n\n@Directive({\n  selector: '[zyfraHint]',\n  exportAs: 'zyfraHint',\n})\nexport class ZyfraHintDirective implements OnDestroy, OnChanges, AfterViewInit {\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Inject(ComponentFactoryResolver)\n    private resolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private zyfraHintOverlayManager: ZyfraHintOverlayManager,\n    private renderer: Renderer2\n  ) {}\n\n  @Input() zyfraHint: string | TemplateRef<any> = null;\n  @Input() zyfraHintContext: Record<string, unknown>;\n  @Input() zyfraHintDelay = 400;\n  @Input() hintClass: string | string[] = '';\n  @Input() zyfraShowHint = false;\n  @Input() position: 'left' | 'right' | 'above' | 'below' = 'right';\n  @Input() hasOverflowText: HTMLElement;\n\n  private hintStyle: string;\n  private mutationObserver: MutationObserver;\n  private componentFactory = this.resolver.resolveComponentFactory(ZyfraHintComponent);\n  private hintCmpRef: ComponentRef<ZyfraHintComponent> = null;\n  private hintElement: HTMLElement = null;\n  private coordinates = { left: 0, top: 0 };\n  private hintTimerId = null;\n\n  @HostListener('click', ['$event']) clickEvent(event: MouseEvent): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter', ['$event']) mouseenter(event: MouseEvent): void {\n    if (!this.zyfraShowHint) {\n      this.show();\n    }\n  }\n\n  @HostListener('mouseleave', ['$event']) mouseleave(event: MouseEvent): void {\n    if (!this.hintCmpRef) {\n      clearTimeout(this.hintTimerId);\n      this.zyfraShowHint = false;\n    } else {\n      this.hide();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.zyfraShowHint) {\n      this.show();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.hintCmpRef) {\n      let wereChanges = false;\n\n      if (changes.position) {\n        const change = changes.position;\n\n        if (!change.firstChange) {\n          this._setHintClasses();\n          wereChanges = true;\n        }\n      }\n\n      if (changes.zyfraHint) {\n        const change = changes.zyfraHint;\n        if (!change.firstChange) {\n          this.hintCmpRef.instance.options.content = change.currentValue;\n          wereChanges = true;\n        }\n      }\n\n      if (wereChanges) {\n        this.hintCmpRef.changeDetectorRef.detectChanges();\n        this._setOptions();\n      }\n    }\n  }\n\n  private _setHintClasses(): void {\n    this.hintCmpRef.instance.hostClasses = `zyfra_hint ${this.position} ${this.hintClass} ${this.hintStyle}`;\n  }\n\n  ngOnDestroy(): void {\n    if (this.hintCmpRef) {\n      this.hintCmpRef.destroy();\n      this.hintCmpRef = null;\n    }\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    this.hide();\n  }\n\n  public toggle(): void {\n    if (this.zyfraShowHint) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  public hintForOveflowText(): boolean {\n    return this.hasOverflowText ? this.hasOverflowText.offsetWidth < this.hasOverflowText.scrollWidth : true;\n  }\n\n  public show(): void {\n    if (this.zyfraHint && this.hintForOveflowText()) {\n      this._showHint();\n      this.zyfraShowHint = true;\n    }\n  }\n\n  public hide(): void {\n    clearTimeout(this.hintTimerId);\n    if (this.hintCmpRef) {\n      this.renderer.setStyle(this.hintCmpRef.location.nativeElement, 'animation', 'hintOut 0.3s');\n    }\n    this.zyfraShowHint = false;\n  }\n\n  private _setOptions(): void {\n    const viewPort: DOMRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const elementHeight: number = viewPort.height;\n    const elementWidth: number = viewPort.width;\n    const hintBoundingClientRect: DOMRect = this.hintElement.getBoundingClientRect();\n    const hintHeight = hintBoundingClientRect.height;\n    const hintWidth = hintBoundingClientRect.width;\n    const margin = 12;\n\n    this._setPosition(hintHeight, elementHeight, viewPort, margin, hintWidth);\n\n    this._setCoordinatesLeftAndTop(hintHeight, elementHeight, viewPort, margin, hintWidth, elementWidth);\n\n    this.hintCmpRef.instance.options.left = this.coordinates.left;\n    this.hintCmpRef.instance.options.top = this.coordinates.top;\n    this._setHintClasses();\n    this.hintCmpRef.changeDetectorRef.detectChanges();\n  }\n\n  private _setPosition(\n    hintHeight: number,\n    elementHeight: number,\n    viewPort: DOMRect,\n    margin: number,\n    hintWidth: number\n  ): void {\n    switch (this.position) {\n      case 'left':\n        if (viewPort.left < hintWidth + margin) {\n          this.position = 'right';\n        }\n        break;\n      case 'right':\n        if (window.innerWidth - viewPort.right < hintWidth + margin) {\n          this.position = 'left';\n        }\n        break;\n      case 'above':\n        if (viewPort.top < hintHeight + margin) {\n          this.position = 'below';\n        }\n        break;\n      case 'below':\n        if (window.innerHeight - (viewPort.top + elementHeight) < hintHeight + margin) {\n          this.position = 'above';\n        }\n        break;\n    }\n  }\n\n  private _setCoordinatesLeftAndTop(\n    hintHeight: number,\n    elementHeight: number,\n    viewPort: DOMRect,\n    margin: number,\n    hintWidth: number,\n    elementWidth: number\n  ): void {\n    switch (this.position) {\n      case 'right': {\n        if (hintHeight <= elementHeight) {\n          this.coordinates.top = viewPort.top;\n        } else {\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\n        }\n        this.coordinates.left = viewPort.right + margin;\n        break;\n      }\n      case 'left': {\n        if (hintHeight <= elementHeight) {\n          this.coordinates.top = viewPort.top;\n        } else {\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\n        }\n        this.coordinates.left = viewPort.left - hintWidth - margin;\n        break;\n      }\n      case 'above': {\n        if (elementWidth >= hintWidth) {\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\n        } else if (viewPort.left < hintWidth / 2) {\n          this.coordinates.left = viewPort.left;\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\n          this.coordinates.left = viewPort.left - hintWidth / 2;\n        } else {\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\n        }\n\n        this.coordinates.top = viewPort.top - hintHeight - margin;\n        break;\n      }\n      case 'below': {\n        if (elementWidth >= hintWidth) {\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\n        } else if (viewPort.left < hintWidth / 2) {\n          this.coordinates.left = viewPort.left;\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\n          this.coordinates.left = viewPort.left - hintWidth / 2;\n        } else {\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\n        }\n        this.coordinates.top = viewPort.bottom + margin;\n        break;\n      }\n      default: {\n        this.coordinates.left = viewPort.right + margin;\n        this.coordinates.top = viewPort.top;\n        break;\n      }\n    }\n  }\n\n  private _showHint(): void {\n    this.hintTimerId = setTimeout(() => {\n      this.zyfraHintOverlayManager.create();\n\n      this.hintCmpRef = this.viewContainerRef.createComponent(this.componentFactory);\n      this.hintStyle = '';\n      this.hintCmpRef.instance.options = {\n        left: -1000,\n        top: -1000,\n        content: this.zyfraHint,\n        context: this.zyfraHintContext,\n      };\n      this._setHintClasses();\n      this.hintElement = this.hintCmpRef.location.nativeElement;\n      this.zyfraHintOverlayManager.append(this.hintElement);\n\n      this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\n        mutations.forEach((mutation: MutationRecord) => {\n          if (mutation.type === 'childList') {\n            this._setOptions();\n          }\n        });\n      });\n\n      this.mutationObserver.observe(this.hintElement, {\n        childList: true,\n      });\n\n      this.hintCmpRef.instance.close.subscribe(() => {\n        this.hintCmpRef.destroy();\n        this.hintCmpRef = null;\n\n        if (this.mutationObserver) {\n          this.mutationObserver.disconnect();\n        }\n      });\n      this._setOptions();\n      this.hintCmpRef.changeDetectorRef.detectChanges();\n    }, this.zyfraHintDelay);\n  }\n}\n",
            "selector": "[zyfraHint]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "hasOverflowText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "HTMLElement"
                },
                {
                    "name": "hintClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | string[]"
                },
                {
                    "name": "position",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\""
                },
                {
                    "name": "zyfraHint",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | TemplateRef<any>"
                },
                {
                    "name": "zyfraHintContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Record<string | >"
                },
                {
                    "name": "zyfraHintDelay",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "zyfraShowHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentFactory",
                    "defaultValue": "this.resolver.resolveComponentFactory(ZyfraHintComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinates",
                    "defaultValue": "{ left: 0, top: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintCmpRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<ZyfraHintComponent>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintTimerId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "mutationObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_setCoordinatesLeftAndTop",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setHintClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setPosition",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_showHint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hintForOveflowText",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnDestroy",
                "OnChanges",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraInitEditableRowDirective",
            "id": "directive-ZyfraInitEditableRowDirective-248811e1c9696973f26574dc265a66e8",
            "file": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { InitEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraInitEditableRow]'\n})\nexport class ZyfraInitEditableRowDirective extends InitEditableRow {}\n",
            "selector": "[zyfraInitEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraNavMenuGroupDirective",
            "id": "directive-ZyfraNavMenuGroupDirective-718853d33f9d28e5c4c8ba46d826fc98",
            "file": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ZyfraMenuItem } from '../model/zyfra-menu-item.interface';\n@Directive({\n  selector: '[zyfraNavMenuGroup]'\n})\nexport class ZyfraNavMenuGroupDirective {\n  @Input() items: ZyfraMenuItem[] = [];\n  @Input() header: string;\n}\n",
            "selector": "[zyfraNavMenuGroup]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "ZyfraMenuItem[]"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableColumnDirective",
            "id": "directive-ZyfraReordableColumnDirective-ed39d89e19b7dee48b9627d2a89b77a9",
            "file": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { ReorderableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableColumn]',\n})\nexport class ZyfraReordableColumnDirective extends ReorderableColumn {\n  @Input('zyfraReordableColumnDisabled') pReorderableColumnDisabled: boolean;\n\n  @HostBinding('attr.preorderablecolumn') reorderableColumnAttribute = true;\n}\n",
            "selector": "[zyfraReordableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.preorderablecolumn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "reorderableColumnAttribute",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.preorderablecolumn'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableRowDirective",
            "id": "directive-ZyfraReordableRowDirective-6a4e00d00a3a2e5f449e070bf7973ca8",
            "file": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ReorderableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableRow]'\n})\nexport class ZyfraReordableRowDirective extends ReorderableRow {\n  @Input('zyfraReordableRow') index: number;\n}\n",
            "selector": "[zyfraReordableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableRowHandlerDirective",
            "id": "directive-ZyfraReordableRowHandlerDirective-a35052dddbc1c7648bb4aba26b20d090",
            "file": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ReorderableRowHandle } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableRowHandler]'\n})\nexport class ZyfraReordableRowHandlerDirective extends ReorderableRowHandle {\n  @Input('zyfraReordableRowHandler') index: number;\n}\n",
            "selector": "[zyfraReordableRowHandler]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableRowHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraResizableColumnDirective",
            "id": "directive-ZyfraResizableColumnDirective-b56e8c3e883ec33df639fb45f4d54253",
            "file": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ResizableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraResizableColumn]'\n})\nexport class ZyfraResizableColumnDirective extends ResizableColumn {}\n",
            "selector": "[zyfraResizableColumn]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraRowBaseDirective",
            "id": "directive-ZyfraRowBaseDirective-23878d182a644eb511e149e740bf204b",
            "file": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, HostListener, Input } from '@angular/core';\nimport { ZyfraBaseTableComponent } from '../zyfra-base-table.directive';\n\n@Directive()\nexport abstract class ZyfraRowBaseDirective<T> {\n  @Input('zyfraRow') data: T;\n  @Input('zyfraRowStatus') status: 'primary' | 'error' | 'warning' | 'info' = 'primary';\n\n  constructor(private readonly targetTable: ZyfraBaseTableComponent<T>) {}\n\n  @HostBinding('class')\n  get rowStatusClass(): string {\n    return `row_status-${this.status}`;\n  }\n\n  @HostBinding('class.zyfra-active-element')\n  get isActiveElement(): boolean {\n    return this.data === this.targetTable.activeElement;\n  }\n\n  @HostListener('click')\n  onRowClick(): void {\n    this.targetTable.activeElement = this.data;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 6,
                    "type": "T"
                },
                {
                    "name": "zyfraRowStatus",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "\"primary\" | \"error\" | \"warning\" | \"info\""
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "class.zyfra-active-element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRowClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "targetTable",
                        "type": "ZyfraBaseTableComponent<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "targetTable",
                        "type": "ZyfraBaseTableComponent<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "rowStatusClass": {
                    "name": "rowStatusClass",
                    "getSignature": {
                        "name": "rowStatusClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 12
                    }
                },
                "isActiveElement": {
                    "name": "isActiveElement",
                    "getSignature": {
                        "name": "isActiveElement",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 17
                    }
                }
            }
        },
        {
            "name": "ZyfraRowDirective",
            "id": "directive-ZyfraRowDirective-0cc05a6ffb3e1d3667a36efb49207adc",
            "file": "libs/components/src/lib/table/directives/row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ZyfraRowBaseDirective } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n@Directive({\n  selector: '[zyfraRow]',\n})\nexport class ZyfraRowDirective extends ZyfraRowBaseDirective<unknown> {\n  constructor(private readonly table: ZyfraTableComponent) {\n    super(table);\n  }\n}\n",
            "selector": "[zyfraRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraRowGroupHeaderDirective",
            "id": "directive-ZyfraRowGroupHeaderDirective-841799675a0b8c97091bc0c75d744dd8",
            "file": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { RowGroupHeader } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraRowGroupHeader]'\n})\nexport class ZyfraRowGroupHeaderDirective extends RowGroupHeader {}\n",
            "selector": "[zyfraRowGroupHeader]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraSaveEditableRowDirective",
            "id": "directive-ZyfraSaveEditableRowDirective-4f1a0be52f62f94903735338e9f25b47",
            "file": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { SaveEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraSaveEditableRow]'\n})\nexport class ZyfraSaveEditableRowDirective extends SaveEditableRow {}\n",
            "selector": "[zyfraSaveEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraSelectableRowDirective",
            "id": "directive-ZyfraSelectableRowDirective-82d6c5fe10f48d92f1af039b2148bd78",
            "file": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { SelectableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraSelectableRow]',\n})\nexport class ZyfraSelectableRowDirective extends SelectableRow {\n  @Input('zyfraSelectableRow') data: any;\n  @Input('zyfraSelectableRowIndex') index: number;\n\n  @HostBinding('class.p-highlight')\n  get isSelected(): boolean {\n    return this.dt.isSelected(this.data);\n  }\n}\n",
            "selector": "[zyfraSelectableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraSelectableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraSelectableRowIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.p-highlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "accessors": {
                "isSelected": {
                    "name": "isSelected",
                    "getSignature": {
                        "name": "isSelected",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "ZyfraSortableColumnDirective",
            "id": "directive-ZyfraSortableColumnDirective-349c173883dea32d4d18931b103931b5",
            "file": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { SortableColumn } from 'primeng/table';\nimport { onSortColumnClick } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n@Directive({\n  selector: '[zyfraSortableColumn]',\n})\nexport class ZyfraSortableColumnDirective extends SortableColumn {\n  @Input('zyfraSortableColumn') field: string;\n  @Input('zyfraSortableColumnDisabled') pSortableColumnDisabled: boolean;\n\n  constructor(private zyfraTable: ZyfraTableComponent) {\n    super(zyfraTable.table);\n  }\n\n  onClick(event: MouseEvent): void {\n    onSortColumnClick.call(this, event);\n  }\n\n  private canClick(event: MouseEvent): boolean {\n    return this.isEnabled() && !this.isFilterElement(event.target as HTMLElement);\n  }\n\n  private shouldReset(): boolean {\n    return (\n      (this.zyfraTable.defaultSortOrder === 1 && this.sortOrder === 'descending') ||\n      (this.zyfraTable.defaultSortOrder === -1 && this.sortOrder === 'ascending')\n    );\n  }\n\n  private emitSort(event: { originalEvent: MouseEvent }): void {\n    this.dt.sort({\n      originalEvent: event,\n      field: this.field,\n    });\n  }\n}\n",
            "selector": "[zyfraSortableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraSortableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "zyfraSortableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "canClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldReset",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraSplitterTemplateDirective",
            "id": "directive-ZyfraSplitterTemplateDirective-5bd86f6200c6f62cf387f3733632a0f2",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraSplitterTemplate]',\n})\nexport class ZyfraSplitterTemplateDirective {\n  @Input() type: string;\n\n  constructor(public template: TemplateRef<any>) {}\n}\n",
            "selector": "[zyfraSplitterTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTableTemplateDirective",
            "id": "directive-ZyfraTableTemplateDirective-c0d2213e95ac08d75d1d0876e1df1d74",
            "file": "libs/components/src/lib/table/directives/table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\n\n@Directive({\n  selector: '[zyfraTableTemplate]'\n})\nexport class ZyfraTableTemplateDirective extends BaseTableTemplateDirective{\n  constructor(templateRef: TemplateRef<any>) {\n    super(templateRef);\n  }\n}\n",
            "selector": "[zyfraTableTemplate]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTemplateDirective",
            "id": "directive-ZyfraTemplateDirective-6c8d02ea9929f9ee57a6a104afb3bd5c",
            "file": "libs/components/src/lib/@core/shared/zyfra-template.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraTemplate]',\n})\nexport class ZyfraTemplateDirective {\n  @Input() zyfraTemplate: string;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n",
            "selector": "[zyfraTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableEditableColumnDirective",
            "id": "directive-ZyfraTreeTableEditableColumnDirective-7e9fdb75a674bd56f0af27d4b18f886b",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener, Input } from '@angular/core';\nimport { TTEditableColumn } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTEditableColumn]',\n})\nexport class ZyfraTreeTableEditableColumnDirective extends TTEditableColumn {\n  @Input('zyfraTTEditableColumn') data: any;\n  @Input('zyfraTTEditableColumnField') field: any;\n  @Input('zyfraTTEditableColumnDisabled') ttEditableColumnDisabled: boolean;\n\n  onClick(event: MouseEvent): void {\n    // doing nothing, redefining parent class method\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    super.onClick(event);\n  }\n}\n",
            "selector": "[zyfraTTEditableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTEditableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraTTEditableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "zyfraTTEditableColumnField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dblclick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDblClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dblclick', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraTreeTableReorderableColumnDirective",
            "id": "directive-ZyfraTreeTableReorderableColumnDirective-573a7ec2cf8b85a7cb7e8054fd423c61",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { TTReorderableColumn } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTReorderableColumn]',\n})\nexport class ZyfraTreeTableReorderableColumnDirective extends TTReorderableColumn {\n  @Input('zyfraTTReorderableColumnDisabled') ttReorderableColumnDisabled: boolean;\n\n  @HostBinding('attr.ttreorderablecolumn') reorderableTTColumnAttribute = true;\n}\n",
            "selector": "[zyfraTTReorderableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTReorderableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.ttreorderablecolumn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "reorderableTTColumnAttribute",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.ttreorderablecolumn'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "ZyfraTreeTableRowDirective",
            "id": "directive-ZyfraTreeTableRowDirective-539af09accdbaef1f000718eb5bd2a25",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ZyfraTreeTableComponent } from '../tree-table.component';\nimport { Directive } from '@angular/core';\nimport { ZyfraRowBaseDirective } from '../../@core/base-table';\n\n@Directive({\n  selector: '[zyfraRow]',\n})\nexport class ZyfraTreeTableRowDirective extends ZyfraRowBaseDirective<unknown> {\n  constructor(private readonly table: ZyfraTreeTableComponent) {\n    super(table);\n  }\n}\n",
            "selector": "[zyfraRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableSelectableRowDirective",
            "id": "directive-ZyfraTreeTableSelectableRowDirective-1502213460e3da0d06abc91b5ef697e2",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { TTSelectableRow } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTSelectableRow]',\n})\nexport class ZyfraTreeTableSelectableRowDirective extends TTSelectableRow {\n  @Input('zyfraTTSelectableRow') rowNode: any;\n  @Input('zyfraTTSelectableRowDisabled') ttSelectableRowDisabled: boolean;\n\n  onClick(event): void {\n    if (this.isEnabled()) {\n      this.tt.toggleNodeWithCheckbox({\n        rowNode: this.rowNode,\n        originalEvent: event,\n      });\n    }\n  }\n}\n",
            "selector": "[zyfraTTSelectableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTSelectableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraTTSelectableRowDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraTreeTableSortableColumnDirective",
            "id": "directive-ZyfraTreeTableSortableColumnDirective-a38a703184a1164bec6b6e9e6b30b6dd",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { TTSortableColumn } from 'primeng/treetable';\nimport { onSortColumnClick } from '../../@core/base-table';\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\n\n@Directive({\n  selector: '[zyfraTTSortableColumn]',\n})\nexport class ZyfraTreeTableSortableColumnDirective extends TTSortableColumn {\n  @Input('zyfraTTSortableColumn') field: string;\n  @Input('zyfraTTSortableColumnDisabled') ttSortableColumnDisabled: boolean;\n\n  constructor(private zyfraTable: ZyfraTreeTableComponent) {\n    super(zyfraTable.table);\n  }\n\n  onClick(event: MouseEvent): void {\n    onSortColumnClick.call(this, event);\n  }\n\n  private canClick(): boolean {\n    return this.isEnabled();\n  }\n\n  private shouldReset(): boolean {\n    const table = this.zyfraTable.table;\n\n    return (\n      (table.defaultSortOrder === 1 && table.sortOrder === -1) ||\n      (table.defaultSortOrder === -1 && table.sortOrder === 1)\n    );\n  }\n\n  private emitSort(event: MouseEvent): void {\n    this.tt.sort({\n      originalEvent: event,\n      field: this.field,\n    });\n  }\n}\n",
            "selector": "[zyfraTTSortableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTSortableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "zyfraTTSortableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "canClick",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "emitSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldReset",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableTemplateDirective",
            "id": "directive-ZyfraTreeTableTemplateDirective-13122a8bf121b9ff67d5ba3c5e1af57b",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\n\n\n@Directive({\n  selector: '[zyfraTableTemplate]'\n})\nexport class ZyfraTreeTableTemplateDirective extends BaseTableTemplateDirective{\n  constructor(templateRef: TemplateRef<any>) {\n    super(templateRef);\n  }\n}\n",
            "selector": "[zyfraTableTemplate]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "ExampleDynamicDialogComponent",
            "id": "component-ExampleDynamicDialogComponent-922f1abcf3b705857ecf671c04c91178",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  user component\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\n\n@Component({\n  selector: 'storybook-dynamic-dialog',\n  template: `\n  <zyfra-button (click)=\"open()\"\n                label=\"open dialog\"\n                icon=\"pi pi-check\"></zyfra-button>\n  `,\n  providers: [ZyfraDynamicDialogService]\n})\nclass ZyfraDynamicDialogComponent implements OnDestroy {\n\n  @Input() set data(data: unknown) {\n    this.options.data = data;\n  }\n  @Input() set header(header: string) {\n    this.options.header = header;\n  }\n  @Input() set footer(footer: string) {\n    this.options.footer = footer;\n  }\n  @Input() set width(width: string) {\n    this.options.width = width;\n  }\n  @Input() set height(height: string) {\n    this.options.height = height;\n  }\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\n    this.options.closeOnEscape = closeOnEscape;\n  }\n  @Input() set baseZIndex(baseZIndex: number) {\n    this.options.baseZIndex = baseZIndex;\n  }\n  @Input() set autoZIndex(autoZIndex: boolean) {\n    this.options.autoZIndex = autoZIndex;\n  }\n  @Input() set dismissableMask(dismissableMask: boolean) {\n    this.options.dismissableMask = dismissableMask;\n  }\n  @Input() set rtl(rtl: boolean) {\n    this.options.rtl = rtl;\n  }\n  @Input() set style(style: string) {\n    this.options.style = style;\n  }\n  @Input() set contentStyle(contentStyle: string) {\n    this.options.contentStyle = contentStyle;\n  }\n  @Input() set styleClass(styleClass: string) {\n    this.options.styleClass = styleClass;\n  }\n  @Input() set transitionOptions(transitionOptions: string) {\n    this.options.transitionOptions = transitionOptions;\n  }\n  @Input() set closable(closable: boolean) {\n    this.options.closable = closable;\n  }\n  @Input() set showHeader(showHeader: boolean) {\n    this.options.showHeader = showHeader;\n  }\n\n  public options: ZyfraDynamicDialogConfig = {};\n\n  private ref: ZyfraDynamicDialogRef;\n\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\n\n  public open(): void {\n    this.ref = this.dynamicDialogService.open(\n      ExampleDynamicDialogComponent, this.options\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.ref) {\n      this.ref.close();\n    }\n  }\n}\n\n@Component({\n  template: `\n  <div>\n    user component\n  </div>`\n})\nclass ExampleDynamicDialogComponent { }\n\nexport default {\n  title: 'Dialogs/DynamicDialog',\n  component: ZyfraDynamicDialogComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        ZyfraDynamicDialogComponent,\n        ExampleDynamicDialogComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        ZyfraButtonModule,\n        ZyfraDynamicDialogModule\n      ],\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n});\n\n\nexport const Simple = Template.bind({});\nSimple.args = {\n  data: 'Some data',\n  header: \"Header\",\n  footer: \"Footer\",\n  width: \"500px\",\n  height: \"200px\",\n  closeOnEscape: false,\n  baseZIndex: 0,\n  autoZIndex: false,\n  dismissableMask: false,\n  rtl: false,\n  style: '',\n  contentStyle: '',\n  styleClass: '',\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n  closable: true,\n  showHeader: true\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IconComponents",
            "id": "component-IconComponents-590c72481ad2eaac2c9729994c9e17ff",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    "
            ],
            "template": "<div *ngFor=\"let def of defs\">\n  <h4>{{ def.dir }}</h4>\n\n  <div class=\"icons\">\n    <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n      <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n      <div class=\"name\">{{ name }}</div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defs",
                    "defaultValue": "IconDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraIconComponent } from './zyfra-icon.component';\nimport { IconDefs } from './story/icon-definitions';\n\n//@ts-ignore\nimport doc from './zyfra-icon.component.story.doc.mdx';\n\n@Component({\n  template: `\n    <div *ngFor=\"let def of defs\">\n      <h4>{{ def.dir }}</h4>\n\n      <div class=\"icons\">\n        <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n          <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n          <div class=\"name\">{{ name }}</div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    `,\n  ],\n})\nclass IconComponents {\n  defs = IconDefs;\n}\n\nexport default {\n  title: 'Icons/IconComponent',\n  component: IconComponents,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n      declarations: [ZyfraIconComponent],\n    }),\n  ],\n  parameters: {\n    docs: {\n      page: doc,\n    },\n  },\n} as Meta<ZyfraIconComponent>;\n\nconst Template: Story<IconComponents> = (args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n});\n\nexport const IconsSet = Template.bind({});\nIconsSet.args = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    \n"
        },
        {
            "name": "Page1Component",
            "id": "component-Page1Component-35814dd850ecb4b2db5eccd63716e0d4",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 1",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page2Component",
            "id": "component-Page2Component-35814dd850ecb4b2db5eccd63716e0d4",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 2",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page3Component",
            "id": "component-Page3Component-35814dd850ecb4b2db5eccd63716e0d4",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 3",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "WrapperComponent",
            "id": "component-WrapperComponent-35814dd850ecb4b2db5eccd63716e0d4",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "ZyfraAccordionComponent",
            "id": "component-ZyfraAccordionComponent-96877d4851f8752e11925f87ce51eaf5",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion, deps: [ZyfraAccordionComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion"
                }
            ],
            "selector": "zyfra-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collapseIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "collapse icon class",
                    "description": "<p>collapse icon class</p>\n",
                    "line": 47,
                    "type": "string"
                },
                {
                    "name": "expandIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "expand icon class",
                    "description": "<p>expand icon class</p>\n",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "allow multiple tabs be active at the same time.",
                    "description": "<p>allow multiple tabs be active at the same time.</p>\n",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "inline style",
                    "description": "<p>inline style</p>\n",
                    "line": 41,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "css class",
                    "description": "<p>css class</p>\n",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter",
                    "description": "<p>EventEmitter</p>\n",
                    "line": 50,
                    "type": "EventEmitter<number | []>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on closing tab",
                    "description": "<p>EventEmitter on closing tab</p>\n",
                    "line": 52,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                },
                {
                    "name": "onOpen",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on opening tab",
                    "description": "<p>EventEmitter on opening tab</p>\n",
                    "line": 54,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Accordion",
                    "optional": false,
                    "description": "<p>primeng Accordion component</p>\n",
                    "line": 57,
                    "rawdescription": "\nprimeng Accordion component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Accordion, {static: true}"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraAccordionTabComponent>",
                    "optional": false,
                    "description": "<p>zyfra AccordionTab component</p>\n",
                    "line": 59,
                    "rawdescription": "\nzyfra AccordionTab component",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "name": "tabs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reInitTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n  //styleUrls: ['./zyfra-accordion.component.less'],\n  //encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<p-accordion\n  [multiple]=\"multiple\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [expandIcon]=\"expandIcon\"\n  [collapseIcon]=\"collapseIcon\"\n  (activeIndexChange)=\"activeIndexChange.emit($event)\"\n  (onOpen)=\"onOpen.emit($event)\"\n  (onClose)=\"onClose.emit($event)\"\n>\n  <ng-content></ng-content>\n</p-accordion>\n"
        },
        {
            "name": "ZyfraAccordionTabComponent",
            "id": "component-ZyfraAccordionTabComponent-840b172af317e708974b8be2249aed93",
            "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-accordion-tab",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: contents;\n      }\n    "
            ],
            "templateUrl": [
                "./zyfra-accordion-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether a lazy loaded panel should avoid getting loaded again on reselection",
                    "description": "<p>Whether a lazy loaded panel should avoid getting loaded again on reselection</p>\n",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the tab can be selected",
                    "description": "<p>Defines whether the tab can be selected</p>\n",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Title of the tab",
                    "description": "<p>Title of the tab</p>\n",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if the tab is active",
                    "description": "<p>Defines if the tab is active</p>\n",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Transition options of the animation",
                    "description": "<p>Transition options of the animation</p>\n",
                    "line": 37,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ntab activeness",
                    "description": "<p>tab activeness</p>\n",
                    "line": 41,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "headerFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "iconsFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionTab",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AccordionTab"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ZyfraTemplateDirective } from '../../@core/shared/zyfra-template.directives';\nimport { AccordionTab } from 'primeng/accordion';\n\n@Component({\n  selector: 'zyfra-accordion-tab',\n  templateUrl: './zyfra-accordion-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: contents;\n      }\n    `,\n  ],\n})\nexport class ZyfraAccordionTabComponent implements AfterContentInit, AfterViewInit {\n  /** Title of the tab */\n  @Input() header: string;\n  /** Defines whether the tab can be selected */\n  @Input() disabled: boolean;\n  /** Whether a lazy loaded panel should avoid getting loaded again on reselection */\n  @Input() cache = true;\n  /** Transition options of the animation */\n  @Input() transitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /** Defines if the tab is active */\n  @Input() selected: boolean;\n  /** tab activeness */\n  @Output() selectedChange: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(ZyfraTemplateDirective) tmpl: ZyfraTemplateDirective[];\n  @ViewChild(AccordionTab) tab: AccordionTab;\n\n  headerFacet: TemplateRef<any>;\n  contentFacet: TemplateRef<any>;\n  iconsFacet: TemplateRef<any>;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this.tmpl.forEach((t) => {\n      if (t.zyfraTemplate === 'header') {\n        this.headerFacet = t.templateRef;\n      } else if (t.zyfraTemplate === 'icons') {\n        this.iconsFacet = t.templateRef;\n      } else {\n        this.contentFacet = t.templateRef;\n      }\n    });\n    if (!!this.iconsFacet && !this.headerFacet) {\n      throw new Error('icon template can only be used with header template');\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.cd.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: contents;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit"
            ],
            "templateData": "<p-accordionTab\n  [disabled]=\"disabled\"\n  [header]=\"header\"\n  [cache]=\"cache\"\n  [selected]=\"selected\"\n  [transitionOptions]=\"transitionOptions\"\n  (selectedChange)=\"selectedChange.emit($event)\"\n>\n  <ng-template pTemplate=\"header\" *ngIf=\"!!headerFacet\">\n    <div [class.zyfra-accordion-header__left]=\"!!iconsFacet\">\n      <ng-container *ngTemplateOutlet=\"headerFacet\"></ng-container>\n      <div class=\"zyfra-accordion-header-extra-icons\" *ngIf=\"!!iconsFacet\">\n        <ng-container *ngTemplateOutlet=\"iconsFacet\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"content\" *ngIf=\"!!contentFacet; else noContentFacet\">\n    <ng-container *ngTemplateOutlet=\"contentFacet\"></ng-container>\n  </ng-template>\n  <ng-template #noContentFacet>\n    <ng-content></ng-content>\n  </ng-template>\n</p-accordionTab>\n"
        },
        {
            "name": "ZyfraAutoCompleteComponent",
            "id": "component-ZyfraAutoCompleteComponent-4cfa6b705c22d7bd90d13d3d84953563",
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-auto-complete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-auto-complete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any"
                },
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "autoHighlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number"
                },
                {
                    "name": "completeOnFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "delay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "dropdownMode",
                    "defaultValue": "'blank'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any"
                },
                {
                    "name": "forceSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "immutable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "minLength",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "showEmptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "suggestions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "unique",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "completeMethod",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClear",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeyUp",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\n\n@Component({\n  selector: 'zyfra-auto-complete',\n  templateUrl: './zyfra-auto-complete.component.html',\n})\nexport class ZyfraAutoCompleteComponent<T = unknown> {\n  @Input() value: any;\n  @Input() suggestions: any[];\n  @Input() field: any;\n  @Input() scrollHeight = '200px';\n  @Input() dropdown: boolean;\n  @Input() multiple: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() minLength = 1;\n  @Input() delay = 300;\n  @Input() completeOnFocus: boolean;\n  @Input() style: string;\n  @Input() inputStyle: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() inputStyleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() optionGroupLabel: string;\n  @Input() group: boolean;\n  @Input() optionGroupChildren = 'items';\n  @Input() placeholder: string;\n  @Input() readonly: boolean;\n  @Input() disabled: boolean;\n  @Input() maxlength: number;\n  @Input() size: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() dataKey: string;\n  @Input() autoHighlight: boolean;\n  @Input() type = 'text';\n  @Input() showEmptyMessage: boolean;\n  @Input() emptyMessage = 'No records found.';\n  @Input() immutable = true;\n  @Input() required: boolean;\n  @Input() autofocus: boolean;\n  @Input() forceSelection: boolean;\n  @Input() dropdownMode = 'blank';\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledBy: string;\n  @Input() unique = true;\n  @Input() autocomplete: string;\n  @Input() virtualScroll: boolean;\n  @Input() itemSize: number;\n  @Input() label = '';\n\n  @Output() completeMethod = new EventEmitter<unknown>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onKeyUp = new EventEmitter<KeyboardEvent>();\n  @Output() onSelect = new EventEmitter<T>();\n  @Output() onUnselect = new EventEmitter<unknown>();\n  @Output() onDropdownClick = new EventEmitter<PointerEvent>();\n  @Output() onClear = new EventEmitter<InputEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<void>();\n  @Output() valueChange = new EventEmitter<T>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-autoComplete\n    [(ngModel)]=\"value\"\n    [suggestions]=\"suggestions\"\n    [field]=\"field\"\n    [scrollHeight]=\"scrollHeight\"\n    [dropdown]=\"dropdown\"\n    [multiple]=\"multiple\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [minLength]=\"minLength\"\n    [delay]=\"delay\"\n    [completeOnFocus]=\"completeOnFocus\"\n    [style]=\"style\"\n    [inputStyle]=\"inputStyle\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [inputId]=\"inputId\"\n    [name]=\"name\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [group]=\"group\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [placeholder]=\"placeholder\"\n    [readonly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [maxlength]=\"maxlength\"\n    [size]=\"size\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [dataKey]=\"dataKey\"\n    [autoHighlight]=\"autoHighlight\"\n    [type]=\"type\"\n    [showEmptyMessage]=\"showEmptyMessage\"\n    [emptyMessage]=\"emptyMessage\"\n    [required]=\"required\"\n    [autofocus]=\"autofocus\"\n    [forceSelection]=\"forceSelection\"\n    [dropdownMode]=\"dropdownMode\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [unique]=\"unique\"\n    [autocomplete]=\"autocomplete\"\n    [virtualScroll]=\"virtualScroll\"\n    [itemSize]=\"itemSize\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    (completeMethod)=\"completeMethod.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onKeyUp)=\"onKeyUp.emit($event)\"\n    (onSelect)=\"onSelect.emit($event)\"\n    (onUnselect)=\"onUnselect.emit($event)\"\n    (onDropdownClick)=\"onDropdownClick.emit($event)\"\n    (onClear)=\"onClear.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n  >\n    <div *ngIf=\"dropdown\">\n      <ng-template let-obj pTemplate=\"item\">\n        <div>{{ obj[field] }}</div>\n      </ng-template>\n    </div>\n  </p-autoComplete>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraBreadcrumbComponent",
            "id": "component-ZyfraBreadcrumbComponent-4f0196dddf39d37818d40509c3c4a474",
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "home",
                    "defaultValue": "{ icon: 'zyfra-icon social-home-breadcrumbs' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MenuItem"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MenuItem[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<ItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\ntype ItemClickEvent = { originalEvent: Event; item: MenuItem };\n\n@Component({\n  selector: 'zyfra-breadcrumb',\n  templateUrl: './zyfra-breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraBreadcrumbComponent {\n  @Input() items: MenuItem[] = [];\n  @Input() home: MenuItem = { icon: 'zyfra-icon social-home-breadcrumbs' };\n  @Input() style: string = null;\n  @Input() styleClass: string = null;\n\n  @Output() onItemClick = new EventEmitter<ItemClickEvent>();\n\n  onItemClickHandler(event: ItemClickEvent): void {\n    this.onItemClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-breadcrumb\n  [model]=\"items\"\n  [home]=\"home\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  (onItemClick)=\"onItemClickHandler($event)\"\n></p-breadcrumb>\n"
        },
        {
            "name": "ZyfraButtonComponent",
            "id": "component-ZyfraButtonComponent-edd807ad0df37bd0eeb9f4b98d469796",
            "file": "libs/components/src/lib/button/zyfra-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TZyfraButtonIconPosision"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "blur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nexport type TZyfraButtonIconPosision = 'left' | 'right' | 'top' | 'bottom';\n\n@Component({\n  selector: 'zyfra-button',\n  templateUrl: './zyfra-button.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraButtonComponent {\n  @Input() label: string;\n  @Input() type = 'button';\n  @Input() icon: string;\n  @Input() iconPos: TZyfraButtonIconPosision = 'left';\n  @Input() disabled: boolean;\n  @Input() badge: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n\n  // останавливаю всплытие клика (именно так. через HostListener не работает)\n  nativeClick(event: Event): void {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  click(event: PointerEvent): void {\n    this.onClick.emit(event);\n  }\n\n  focus(event: FocusEvent): void {\n    this.onFocus.emit(event);\n  }\n\n  blur(event: FocusEvent): void {\n    this.onBlur.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-button\n  [type]=\"type\"\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [badge]=\"badge\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  (click)=\"nativeClick($event)\"\n  (onClick)=\"click($event)\"\n  (onFocus)=\"focus($event)\"\n  (onBlur)=\"blur($event)\"\n></p-button>\n"
        },
        {
            "name": "ZyfraCellEditorComponent",
            "id": "component-ZyfraCellEditorComponent-0583ccf698ccf816aabca730ef773633",
            "file": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-cell-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cell-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport { ZyfraTableTemplateDirective } from '../directives/table-template.directive';\n\n@Component({\n  selector: 'zyfra-cell-editor',\n  templateUrl: './cell-editor.component.html',\n})\nexport class ZyfraCellEditorComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  @Input() value = '';\n  @Output() valueChange = new EventEmitter<string>();\n\n  inputTemplate: TemplateRef<unknown>;\n\n  stopPropagation(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-cellEditor>\n  <ng-template pTemplate=\"input\">\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-template #defaultInputTemplate>\n      <input\n        type=\"text\"\n        [value]=\"value\"\n        (input)=\"valueChange.emit($any($event.target).value)\"\n        (click)=\"stopPropagation($event)\"\n      >\n    </ng-template>\n  </ng-template>\n\n  <ng-template pTemplate=\"output\">\n    <ng-content></ng-content>\n  </ng-template>\n</p-cellEditor>\n"
        },
        {
            "name": "ZyfraCheckboxComponent",
            "id": "component-ZyfraCheckboxComponent-d21d90aa412355c00b009a349c3f5fa1",
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "binary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "checkboxIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Checkbox } from 'primeng/checkbox';\n\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'zyfra-checkbox',\n  templateUrl: './zyfra-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CHECKBOX_VALUE_ACCESSOR],\n  styles: [],\n})\nexport class ZyfraCheckboxComponent extends Checkbox implements ControlValueAccessor {\n  @Input() binary = true;\n  @Input() checkboxIcon = 'zyfra-icon selection-check-simple';\n  @Input() model: boolean;\n  @Input() disabled: boolean;\n  @Output() modelChange = new EventEmitter<boolean | null>();\n\n  constructor(cd: ChangeDetectorRef) {\n    super(cd);\n  }\n\n  onChangeHandler(event: { checked: boolean; originalEvent: PointerEvent }) {\n    if (this.formControl) {\n      this.formControl.setValue(event.checked);\n    } else {\n      this.model = event.checked;\n    }\n    this.modelChange.emit(this.model);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Checkbox",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-checkbox\n  [(ngModel)]=\"model\"\n  [name]=\"name\"\n  [value]=\"value\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [binary]=\"binary\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [labelStyleClass]=\"labelStyleClass\"\n  [checkboxIcon]=\"checkboxIcon\"\n  [readonly]=\"readonly\"\n  [required]=\"required\"\n  (onChange)=\"onChangeHandler($event)\"\n></p-checkbox>\n"
        },
        {
            "name": "ZyfraChipComponent",
            "id": "component-ZyfraChipComponent-23ae7c70a75f35fe1f37b7d700338b15",
            "file": "libs/components/src/lib/chip/zyfra-chip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "removeIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onRemove",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRemoveHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-chip',\n  templateUrl: './zyfra-chip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraChipComponent {\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() image: string;\n  @Input() removable: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() removeIcon: string = 'zyfra-icon cancel-close';\n\n  /* onRemove */\n  @Output() onRemove: EventEmitter<any> = new EventEmitter();\n\n  onRemoveHandler(event) {\n    this.onRemove.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-chip\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [image]=\"image\"\n  [removable]=\"removable\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [removeIcon]=\"removeIcon\"\n  (onRemove)=\"onRemoveHandler($event)\"\n></p-chip>\n"
        },
        {
            "name": "ZyfraConfirmDialogComponent",
            "id": "component-ZyfraConfirmDialogComponent-09acb0a64ce60022ac4e2993367a1393",
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                }
            ],
            "selector": "zyfra-confirm-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-confirm-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Function"
                },
                {
                    "name": "acceptButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "acceptIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "acceptLabel",
                    "defaultValue": "'yes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "acceptMessages",
                    "defaultValue": "[\n    { severity: '', summary: '', detail: '' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type[]"
                },
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "closeOnEscape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "defaultFocus",
                    "defaultValue": "'accept'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "reject",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Function"
                },
                {
                    "name": "rejectButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "rejectIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "rejectLabel",
                    "defaultValue": "'no'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "rejectMessages",
                    "defaultValue": "[\n    { severity: '', summary: '', detail: '' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]"
                },
                {
                    "name": "rejectVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'400ms cubic-bezier(0.25, 0.8, 0.25, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHindler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { ConfirmationService } from 'primeng/api';\nimport { Message } from 'primeng/api';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-confirm-dialog',\n  templateUrl: './zyfra-confirm-dialog.component.html',\n  styles: [],\n  providers: [ConfirmationService],\n})\nexport class ZyfraConfirmDialogComponent implements OnInit {\n  @Input() message: any = '';\n  @Input() key: string;\n  @Input() icon: string;\n  @Input() header: string = '';\n  @Input() accept: Function = () => {};\n  @Input() reject: Function = () => {};\n  @Input() acceptMessages: { severity: string; summary: string; detail: string }[] = [\n    { severity: '', summary: '', detail: '' },\n  ];\n  @Input() rejectMessages: { severity: string; summary: string; detail: string }[] = [\n    { severity: '', summary: '', detail: '' },\n  ];\n  @Input() acceptLabel: string = 'yes';\n  @Input() rejectLabel: string = 'no';\n  @Input() acceptIcon: string;\n  @Input() rejectIcon: string;\n  @Input() acceptButtonStyleClass: string;\n  @Input() rejectButtonStyleClass: string;\n  @Input() acceptVisible: boolean = true;\n  @Input() rejectVisible: boolean = true;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() maskStyleClass: string;\n  @Input() blockScroll: boolean = true;\n  @Input() closeOnEscape: boolean = true;\n  @Input() closable: boolean = false;\n  @Input() focusTrap: boolean = true;\n  @Input() appendTo: any;\n  @Input() dismissableMask: boolean;\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() breakpoints: object;\n  @Input() transitionOptions: string = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n  @Input() defaultFocus: string = 'accept';\n\n  msgs: Message[] = [];\n\n  constructor(private confirmationService: ConfirmationService, private primengConfig: PrimeNGConfig) {}\n\n  ngOnInit(): void {}\n\n  onClick(e) {\n    this.confirmationService.confirm({\n      message: this.message,\n      header: this.header,\n      icon: this.icon,\n      accept: () => {\n        this.msgs = this.acceptMessages;\n        this.accept();\n      },\n      reject: () => {\n        this.msgs = this.rejectMessages;\n        this.reject();\n      },\n    });\n  }\n\n  /* onHide */\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n  onHideHindler(event) {\n    this.onHide.emit(event);\n  }\n\n  ngOnDestroy() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-confirmDialog\n  [message]=\"message\"\n  [key]=\"key\"\n  [icon]=\"icon\"\n  [header]=\"header\"\n  [acceptLabel]=\"acceptLabel\"\n  [rejectLabel]=\"rejectLabel\"\n  [acceptIcon]=\"acceptIcon\"\n  [rejectIcon]=\"rejectIcon\"\n  [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n  [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n  [acceptVisible]=\"acceptVisible\"\n  [rejectVisible]=\"rejectVisible\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [maskStyleClass]=\"maskStyleClass\"\n  [blockScroll]=\"blockScroll\"\n  [closeOnEscape]=\"closeOnEscape\"\n  [dismissableMask]=\"dismissableMask\"\n  [closable]=\"closable\"\n  [focusTrap]=\"focusTrap\"\n  [appendTo]=\"appendTo\"\n  [defaultFocus]=\"defaultFocus\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [breakpoints]=\"breakpoints\"\n  [transitionOptions]=\"transitionOptions\"\n  (onHide)=\"onHideHindler($event)\"\n></p-confirmDialog>\n"
        },
        {
            "name": "ZyfraDatepickerComponent",
            "id": "component-ZyfraDatepickerComponent-da5ac53d822503db291a2a5d317a17fb",
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-datepicker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "calendarBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean"
                },
                {
                    "name": "disabledDates",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "Date[]"
                },
                {
                    "name": "disabledDays",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "number[]"
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "number"
                },
                {
                    "name": "hideOnDateTimeSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "inputClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "defaultValue": "ZyfraLocale.ru",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "ZyfraLocale"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string | number | Date"
                },
                {
                    "name": "monthNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean"
                },
                {
                    "name": "numberOfMonths",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "number"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "returnFormatValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "ZyfraDatePickerValueType"
                },
                {
                    "name": "selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "showCalendarBtn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "showChangeMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean"
                },
                {
                    "name": "showDate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean"
                },
                {
                    "name": "showOnFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "boolean"
                },
                {
                    "name": "showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean"
                },
                {
                    "name": "showWeek",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string"
                },
                {
                    "name": "timeMode",
                    "defaultValue": "ZyfraDatePickerMode.absolute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "ZyfraDatePickerMode"
                },
                {
                    "name": "yearNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "yearRange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_defaultDateValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_defaultTimeValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "calendar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Calendar",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'calendar', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "controlRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentValueType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "DatePickerMode",
                    "defaultValue": "ZyfraDatePickerMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        143
                    ]
                },
                {
                    "name": "datepickerValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datepickerValueShowBtn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dateValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultDateFormat",
                    "defaultValue": "'dd.MM.yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultTimeFormat",
                    "defaultValue": "'HH:mm:ss'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formatDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formattedValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formatTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "invalidDateMessage",
                    "defaultValue": "'Invalid date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "localeFns",
                    "defaultValue": "{\n    locale: ruFns,\n   }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDatePickerLocaleInterface",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "modes",
                    "defaultValue": "[\n    {\n      name: 'Абсолютное время',\n      value: ZyfraDatePickerMode.absolute,\n    },\n    {\n      name: 'Относительное время',\n      value: ZyfraDatePickerMode.relative,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        123,
                        143
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTime[]",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timestampFormat",
                    "defaultValue": "'x'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeControlState",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAbsoluteTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 324,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 300,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateFormattedValueFromCalendarValue",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateFormattedValueFromInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getCurrentValueType",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 571,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidatorRequiredControl",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValueOutput",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | number | Date",
                    "typeParameters": [],
                    "line": 533,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarDateChange",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 527,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDatepickerNgModelChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openCalendar",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnValidatorChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replaceSymbols",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 591,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCalendarDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFormattedValue",
                    "args": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 465,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInputTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLocalizationCalendar",
                    "args": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnChanges,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  Self,\n  AfterViewInit,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl,\n} from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Calendar } from 'primeng/calendar';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { en } from './i18n/en_US';\nimport { ru } from './i18n/ru_RU';\nimport { isIsoDate } from './utils/is-iso-date';\nimport { generateTimeArray } from './utils/generate-time-array';\nimport { ZyfraDatePickerMode } from './model/zyfra-date-picker-mode.enum';\nimport { ZyfraLocale } from './model/zyfra-date-picker-locale.enum';\nimport { ZyfraDatePickerValueType } from './model/zyfra-date-picker-value-type.enum';\nimport { ZyfraTime } from './model/zyfra-time.model';\nimport { format, isValid, parse, parseISO } from 'date-fns';\nimport { ru as ruFns, enUS as enFns } from 'date-fns/esm/locale';\nimport { ZyfraDatePickerLocaleInterface } from './model/zyfra-date-picker.model';\n\n@Component({\n  selector: 'zyfra-datepicker',\n  templateUrl: './zyfra-datepicker.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraDatepickerComponent\n  implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n  readonly DatePickerMode = ZyfraDatePickerMode;\n\n  @Input() model: string | number | Date;\n  @Input() placeholder: string;\n  @Input() disabled: boolean;\n  @Input() required: boolean;\n  @Input() label: string;\n  @Input() spanClass: string;\n  @Input() timeMode: ZyfraDatePickerMode = ZyfraDatePickerMode.absolute;\n  @Input() showChangeMode: boolean;\n  @Input() showClear: boolean;\n  @Input() showDate: boolean = true;\n  @Input() showTime: boolean;\n  @Input() inputClass: string = '';\n  @Input() monthNavigator: boolean = false;\n  @Input() yearNavigator: boolean = false;\n  @Input() yearRange: string = null;\n  @Input() showCalendarBtn: boolean = true;\n  @Input() calendarBtnLabel: string;\n  @Input() hideOnDateTimeSelect: boolean = true;\n  @Input() numberOfMonths: number = 1;\n  @Input() selectionMode: string = 'single';\n  @Input() disabledDates: Date[] = null;\n  @Input() disabledDays: number[] = null;\n  @Input() firstDayOfWeek: number = 1;\n  @Input() showOnFocus: boolean = false;\n  @Input() showWeek: boolean = false;\n  @Input() locale: ZyfraLocale = ZyfraLocale.ru;\n  @Input() set dateFormat(formatDate: string) {\n    this.formatDate = this.replaceSymbols(formatDate) || this.defaultDateFormat;\n  }\n  @Input() set timeFormat(formatTime: string) {\n    this.formatTime = this.replaceSymbols(formatTime) || this.defaultTimeFormat;\n  }\n\n  @Input()\n  returnFormatValue: ZyfraDatePickerValueType;\n\n  // @Output() modelChange: EventEmitter<\n  //   string | number | Date | null\n  // > = new EventEmitter();\n\n  @ViewChild('calendar', { static: false }) private calendar: Calendar;\n\n  public controlRequired: boolean;\n  public readonly modes = [\n    {\n      name: 'Абсолютное время',\n      value: ZyfraDatePickerMode.absolute,\n    },\n    {\n      name: 'Относительное время',\n      value: ZyfraDatePickerMode.relative,\n    },\n  ];\n  public datepickerValue: Date;\n  public datepickerValueShowBtn: Date;\n  public timeArray: ZyfraTime[];\n  public formattedValue: string = '';\n  private currentValueType: string;\n  private _defaultDateValue: Date = null;\n  private _defaultTimeValue: Date = null;\n  private destroyed$: Subject<void> = new Subject<void>();\n  private defaultDateFormat = 'dd.MM.yyyy';\n  private defaultTimeFormat = 'HH:mm:ss';\n  private dateValue: string = '';\n  private invalidDateMessage: string = 'Invalid date';\n  private formatDate: string;\n  private formatTime: string;\n  private timeValue: string = '';\n  private timestampFormat: string = 'x';\n  private localeFns: ZyfraDatePickerLocaleInterface = {\n    locale: ruFns,\n   };\n\n  constructor(\n    @Self() @Optional() public ngControl: NgControl,\n    private primeNGConfig: PrimeNGConfig,\n    private cdr: ChangeDetectorRef\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n  public registerOnValidatorChange?(fn: () => void): void {}\n\n  public onChange = (value: string | number | Date) => {};\n  public onTouched = (): void => {};\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  public writeValue(outsideValue: string | number | Date | null): void {\n    this.model = outsideValue;\n    if (this.model) {\n      this.currentValueType = this.getCurrentValueType(this.model);\n    }\n    this.changeControlState(this.model);\n    this.cdr.markForCheck();\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  public ngOnInit(): void {\n    if (this.ngControl) {\n      this.getValidatorRequiredControl(this.ngControl);\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.showTime && changes.showTime.currentValue && this.formatTime) {\n      this.timeArray = generateTimeArray(this.formatTime);\n    }\n\n    if (changes.locale && changes.locale.currentValue) {\n      this.setLocalizationCalendar(changes.locale.currentValue);\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public openCalendar(event: Event): void {\n    this.calendar.onButtonClick(\n      event,\n      this.calendar.inputfieldViewChild.nativeElement\n    );\n    event.stopPropagation();\n  }\n\n  public setMode(mode: ZyfraDatePickerMode): void {\n    this.timeMode = mode;\n    this.clearValue();\n  }\n\n  public onDatepickerNgModelChange(event: string): void {\n    this.formattedValue = event;\n    if (this.timeMode === ZyfraDatePickerMode.absolute) {\n      this.checkAbsoluteTime();\n    }\n  }\n\n  public onCalendarDateChange(datepickerValue: Date): void {\n    if (!this.showCalendarBtn || this.hideOnDateTimeSelect) {\n      this.datepickerValue = datepickerValue;\n      this.generateFormattedValueFromCalendarValue(datepickerValue);\n    } else {\n      this.datepickerValueShowBtn = datepickerValue;\n    }\n    this.cdr.detectChanges();\n  }\n\n  public onCalendarClose(): void {\n    if (this.showCalendarBtn && !this.hideOnDateTimeSelect) {\n      this.calendar.value = this.datepickerValue;\n    }\n  }\n\n  public saveCalendarDate(): void {\n    this.datepickerValue = this.datepickerValueShowBtn;\n    this.generateFormattedValueFromCalendarValue(this.datepickerValue);\n    this.cdr.detectChanges();\n    this.calendar.hideOverlay();\n  }\n\n  public onInputBlur(): void {\n    if (this.formattedValue && this.timeMode === ZyfraDatePickerMode.absolute) {\n      if (\n        this.dateValue === this.invalidDateMessage ||\n        this.timeValue === this.invalidDateMessage\n      ) {\n        this.formattedValue = '';\n        return;\n      }\n\n      if (this.showDate && this.showTime) {\n        this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n      } else if (this.showDate) {\n        this.formattedValue = this.dateValue;\n      } else if (this.showTime) {\n        this.formattedValue = this.timeValue;\n      }\n\n      if (isValid(parseISO(this.dateValue))) {\n        this.datepickerValue = parse(\n          this.dateValue,\n          this.formatDate,\n          new Date(),\n          this.localeFns\n        );\n      }\n\n      this.datepickerValue = parse(this.dateValue, this.formatDate, new Date());\n\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\n      this.onChangeValue(\n        this.getValueOutput(\n          parse(dateValue, formatValue, new Date(), this.localeFns)\n        )\n      );\n    }\n  }\n\n  public setInputTime(time: ZyfraTime): void {\n    this._defaultTimeValue = time.date;\n    this.timeValue = format(\n      this._defaultTimeValue,\n      this.formatTime,\n      this.localeFns\n    );\n    this.formattedValue = this.timeValue;\n    let fullFormatString = this.formatTime;\n\n    if (this.showDate) {\n      if (!this._defaultDateValue || !isValid(this._defaultDateValue)) {\n        this._defaultDateValue = new Date();\n        this.dateValue = format(\n          this._defaultDateValue,\n          this.formatDate,\n          this.localeFns\n        );\n      }\n\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n      fullFormatString = `${this.formatDate} ${this.formatTime}`;\n    }\n\n    this.onChangeValue(\n      this.getValueOutput(\n        parse(this.formattedValue, fullFormatString, new Date(), this.localeFns)\n      )\n    );\n  }\n\n  public clearValue(): void {\n    this.formattedValue = '';\n\n    if (this.ngControl && this.ngControl.control) {\n      this.ngControl.control.markAsDirty();\n    }\n\n    this.cdr.detectChanges();\n    this.datepickerValue = null;\n    this.datepickerValueShowBtn = null;\n    this.onChangeValue(null);\n  }\n\n  private getValidatorRequiredControl(ngControl: NgControl): void {\n    if (ngControl.control && ngControl.control.validator && this.label) {\n      const validators = ngControl.control.validator({} as AbstractControl);\n      this.controlRequired = validators && validators.required;\n    } else {\n      this.controlRequired = false;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  private checkAbsoluteTime(): void {\n    if (!this.formattedValue) {\n      this._defaultDateValue = null;\n      this._defaultTimeValue = null;\n      this.dateValue = '';\n      this.timeValue = '';\n      this.onChangeValue(null);\n      return;\n    }\n\n    let validationString: string = '';\n\n    if (this.showDate) {\n      validationString += this.formatDate;\n    }\n\n    if (this.showTime) {\n      validationString += this.showDate\n        ? ` ${this.formatTime}`\n        : this.formatTime;\n    }\n\n    const newDate = parse(\n      this.formattedValue,\n      validationString,\n      new Date(),\n      this.localeFns\n    );\n\n    if (isValid(newDate)) {\n      if (this.showDate) {\n        this._defaultDateValue = newDate;\n        this.dateValue = format(newDate, this.formatDate, this.localeFns);\n      }\n      if (this.showTime) {\n        this.timeValue = format(newDate, this.formatTime, this.localeFns);\n      }\n    }\n  }\n\n  private generateFormattedValueFromCalendarValue(datepickerValue: Date): void {\n    this._defaultDateValue = datepickerValue;\n    this.dateValue = format(\n      this._defaultDateValue,\n      this.formatDate,\n      this.localeFns\n    );\n    this.formattedValue = this.dateValue;\n\n    if (!this._defaultTimeValue || !isValid(this._defaultTimeValue)) {\n      this._defaultTimeValue = this._defaultDateValue;\n    }\n\n    this.timeValue = format(\n      this._defaultTimeValue,\n      this.formatTime,\n      this.localeFns\n    );\n\n    if (this.showTime) {\n      this.formattedValue += ` ${this.timeValue}`;\n    }\n\n    const dateValue = `${this.dateValue} ${this.timeValue}`;\n    const formatValue = `${this.formatDate} ${this.formatTime}`;\n    this.onChangeValue(\n      this.getValueOutput(\n        parse(dateValue, formatValue, new Date(), this.localeFns)\n      )\n    );\n  }\n\n  private generateFormattedValueFromInput(): void {\n    let dateParam: Date;\n\n    switch (this.currentValueType) {\n      case ZyfraDatePickerValueType.null:\n        this._defaultDateValue = null;\n        break;\n\n      case ZyfraDatePickerValueType.timestamp:\n        dateParam = parse(\n          this.model as string,\n          this.timestampFormat,\n          new Date(),\n          this.localeFns\n        );\n        if (isValid(dateParam)) {\n          this.datepickerValue = dateParam;\n        }\n        this._defaultDateValue = dateParam;\n        break;\n\n      case ZyfraDatePickerValueType.date:\n        dateParam = this.model as Date;\n        if (isValid(dateParam)) {\n          this.datepickerValue = this.model as Date;\n        }\n        this._defaultDateValue = dateParam;\n        break;\n\n      case ZyfraDatePickerValueType.string:\n        dateParam = parse(\n          this.model as string,\n          this.formatDate,\n          new Date(),\n          this.localeFns\n        );\n        if (isValid(dateParam)) {\n          this.datepickerValue = dateParam;\n        }\n        const formatPattern = `${this.formatDate} ${this.formatTime}`;\n        this._defaultDateValue = parse(\n          this.model as string,\n          formatPattern,\n          new Date(),\n          this.localeFns\n        );\n        break;\n\n      case ZyfraDatePickerValueType.isoString:\n        dateParam = parseISO(this.model as string);\n        if (isValid(dateParam)) {\n          this.datepickerValue = new Date(this.model);\n        }\n        this._defaultDateValue = dateParam;\n        break;\n    }\n\n    this.setFormattedValue(this._defaultDateValue);\n  }\n\n  private changeControlState(value: Date | string | number | null): void {\n    this.currentValueType = this.getCurrentValueType(value);\n    if (this.timeMode === ZyfraDatePickerMode.relative) {\n      this.formattedValue = String(value);\n    } else {\n      this.generateFormattedValueFromInput();\n    }\n  }\n\n  private setFormattedValue(defaultDateValue: Date | null): void {\n    this._defaultTimeValue = defaultDateValue ? defaultDateValue : new Date();\n    this.dateValue = format(\n      this._defaultTimeValue,\n      this.formatDate,\n      this.localeFns\n    );\n    this.timeValue = format(\n      this._defaultTimeValue,\n      this.formatTime,\n      this.localeFns\n    );\n\n    if (this.showDate && this.showTime) {\n      if (\n        this.dateValue === this.invalidDateMessage ||\n        this.timeValue === this.invalidDateMessage\n      ) {\n        this.formattedValue = '';\n        this.cdr.detectChanges();\n        return;\n      }\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n    } else if (this.showDate) {\n      this.dateValue = format(\n        this._defaultDateValue,\n        this.formatDate,\n        this.localeFns\n      );\n      this.formattedValue =\n        this.dateValue === this.invalidDateMessage ? '' : this.dateValue;\n    } else if (this.showTime) {\n      this._defaultTimeValue = this._defaultDateValue;\n      this.timeValue = format(\n        this._defaultTimeValue,\n        this.formatTime,\n        this.localeFns\n      );\n      this.formattedValue =\n        this.timeValue === this.invalidDateMessage ? '' : this.timeValue;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private setLocalizationCalendar(locale: string): void {\n    let currentLocale: unknown;\n\n    switch (locale) {\n      case ZyfraLocale.en:\n        currentLocale = en;\n        this.localeFns.locale = enFns;\n        break;\n      case ZyfraLocale.ru:\n      default:\n        currentLocale = ru;\n        this.localeFns.locale = ruFns ;\n        break;\n    }\n    this.primeNGConfig.setTranslation(currentLocale);\n  }\n\n  private onChangeValue(value: string | Date | number | null): void {\n    // this.modelChange.emit(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  private getValueOutput(date: Date): string | number | Date {\n    const returnValueType = this.returnFormatValue || this.currentValueType;\n    let resultDate: string | number | Date;\n    switch (returnValueType) {\n      case ZyfraDatePickerValueType.timestamp:\n        resultDate = date.valueOf();\n        break;\n\n      case ZyfraDatePickerValueType.string:\n        let formatValue: string;\n\n        if (this.formatDate && this.showDate) {\n          formatValue = this.formatDate;\n        }\n\n        if (this.formatTime && this.showTime) {\n          formatValue =\n            this.formatDate && this.showDate\n              ? `${this.formatDate} ${this.formatTime}`\n              : this.formatTime;\n        }\n\n        resultDate = format(date, formatValue, this.localeFns);\n        break;\n\n      case ZyfraDatePickerValueType.isoString:\n        resultDate = date.toISOString();\n        break;\n\n      case ZyfraDatePickerValueType.date:\n      default:\n        resultDate = date;\n        break;\n    }\n\n    return resultDate;\n  }\n\n  private getCurrentValueType(value: string | number | Date | null): string {\n    if (value === null) {\n      return ZyfraDatePickerValueType.null;\n    }\n\n    if (typeof value === 'number') {\n      return ZyfraDatePickerValueType.timestamp;\n    }\n\n    if ((value as unknown) instanceof Date) {\n      return ZyfraDatePickerValueType.date;\n    }\n\n    if (isIsoDate(value as string)) {\n      return ZyfraDatePickerValueType.isoString;\n    }\n\n    return ZyfraDatePickerValueType.string;\n  }\n\n  private replaceSymbols(str: string): string {\n    if (!str) {\n      return str;\n    }\n    const year = /Y/g;\n    const day = /D/g;\n    const hour = /h/g;\n    const sec = /S/g;\n    return str\n      .replace(year, 'y')\n      .replace(day, 'd')\n      .replace(hour, 'H')\n      .replace(sec, 'H');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 120,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnChanges",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "dateFormat": {
                    "name": "dateFormat",
                    "setSignature": {
                        "name": "dateFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 75,
                        "jsdoctags": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "timeFormat": {
                    "name": "timeFormat",
                    "setSignature": {
                        "name": "timeFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 78,
                        "jsdoctags": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"zyfra-datepicker\">\n  <div\n    class=\"zyfra-datepicker-controls\"\n    [ngClass]=\"{\n      'visible-clear': showClear,\n      'visible-date': timeMode === DatePickerMode.absolute && showDate,\n      'visible-time': timeMode === DatePickerMode.absolute && showTime,\n      'visible-change-mode': showChangeMode,\n      'visible-relative': timeMode === DatePickerMode.relative\n    }\"\n  >\n    <button\n      *ngIf=\"showClear\"\n      (click)=\"clearValue()\"\n      [disabled]=\"disabled\"\n      class=\"zyfra-datepicker-control zyfra-datepicker-button\"\n    >\n      <i class=\"zyfra-icon tools-broom\"></i>\n    </button>\n    <ng-container *ngIf=\"timeMode === DatePickerMode.absolute; else relativeTmpl\">\n      <div class=\"zyfra-datepicker-control\" *ngIf=\"showDate\">\n        <button [disabled]=\"disabled\" class=\"zyfra-datepicker-button\" (click)=\"openCalendar($event)\">\n          <i class=\"zyfra-icon date-calendar-blank\"></i>\n        </button>\n        <p-calendar\n          #calendar\n          [ngModel]=\"datepickerValue\"\n          [panelStyleClass]=\"'zyfra-datepicker-calendar'\"\n          [locale]=\"$any(locale)\"\n          [selectionMode]=\"selectionMode\"\n          [showOnFocus]=\"showOnFocus\"\n          [showWeek]=\"showWeek\"\n          [monthNavigator]=\"monthNavigator\"\n          [yearNavigator]=\"yearNavigator\"\n          [yearRange]=\"yearRange\"\n          [hideOnDateTimeSelect]=\"hideOnDateTimeSelect\"\n          [numberOfMonths]=\"numberOfMonths\"\n          [disabledDates]=\"disabledDates\"\n          [disabledDays]=\"disabledDays\"\n          [firstDayOfWeek]=\"firstDayOfWeek\"\n          (onSelect)=\"onCalendarDateChange($event)\"\n          (onClickOutside)=\"onCalendarClose()\"\n        >\n          <ng-template pTemplate=\"footer\" *ngIf=\"showCalendarBtn\">\n            <div class=\"zyfra-datepicker-calendar-footer\">\n              <zyfra-button\n                [label]=\"calendarBtnLabel\"\n                [styleClass]=\"'p-button-mini button-success-style'\"\n                (onClick)=\"saveCalendarDate()\"\n              >\n              </zyfra-button>\n            </div>\n          </ng-template>\n        </p-calendar>\n      </div>\n      <zyfra-dropdown\n        *ngIf=\"showTime\"\n        class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\n        [options]=\"timeArray\"\n        [disabled]=\"disabled\"\n        (valueChange)=\"setInputTime($event)\"\n        [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n        [styleClass]=\"'zyfra-datepicker-dropdown'\"\n        [dropdownIcon]=\"'zyfra-icon date-update'\"\n        [optionLabel]=\"'value'\"\n      >\n      </zyfra-dropdown>\n    </ng-container>\n    <zyfra-dropdown\n      *ngIf=\"showChangeMode\"\n      class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\n      [value]=\"timeMode\"\n      [options]=\"$any(modes)\"\n      (valueChange)=\"setMode($event)\"\n      [disabled]=\"disabled\"\n      [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n      [styleClass]=\"'zyfra-datepicker-dropdown'\"\n      [dropdownIcon]=\"'zyfra-icon chevrons-dropdown'\"\n      [optionLabel]=\"'name'\"\n      [optionValue]=\"'value'\"\n    >\n      <ng-template let-modeType zyfraDropdownTemplate=\"item\">\n        <div class=\"mode-item\">\n          <zyfra-radio-button\n            [name]=\"'groupname'\"\n            [value]=\"modeType.value\"\n            [ngModel]=\"timeMode\"\n          ></zyfra-radio-button>\n          <i\n            class=\"zyfra-icon date-update\"\n            [ngClass]=\"{\n              'date-update': modeType.value === DatePickerMode.absolute,\n              'date-clock': modeType.value === DatePickerMode.relative\n            }\"\n          ></i>\n          <div>{{ modeType.name }}</div>\n        </div>\n      </ng-template>\n    </zyfra-dropdown>\n  </div>\n  <zyfra-input\n    [(ngModel)]=\"formattedValue\"\n    type=\"text\"\n    (ngModelChange)=\"onDatepickerNgModelChange($event)\"\n    (onBlur)=\"onInputBlur()\"\n    [placeholder]=\"placeholder\"\n    [label]=\"label\"\n    [inputClass]=\"{\n      'ng-invalid': !!ngControl?.invalid,\n      'ng-valid': !!ngControl?.valid,\n      'ng-dirty': !!ngControl?.dirty,\n      'ng-touched': !!ngControl?.touched\n    }\"\n    [required]=\"required || controlRequired\"\n    [disabled]=\"disabled\"\n  >\n  </zyfra-input>\n  <ng-template #relativeTmpl>\n    <zyfra-dropdown\n      class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\n      [value]=\"timeMode\"\n      [options]=\"$any(timeArray)\"\n      [disabled]=\"disabled\"\n      [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n      [styleClass]=\"'zyfra-datepicker-dropdown'\"\n      [dropdownIcon]=\"'zyfra-icon date-clock'\"\n      [optionLabel]=\"'value'\"\n    >\n    </zyfra-dropdown>\n  </ng-template>\n</div>\n"
        },
        {
            "name": "ZyfraDialogComponent",
            "id": "component-ZyfraDialogComponent-1e11357e5a372cda72bb492a7815b1ca",
            "file": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "object"
                },
                {
                    "name": "contentStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "focusOnShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "htmlTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "SafeHtml"
                },
                {
                    "name": "keepInViewport",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "maximizable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "maximizeIcon",
                    "defaultValue": "'zyfra-icon arrows-expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "minimizeIcon",
                    "defaultValue": "'zyfra-icon arrows-collapse'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "minX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "minY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "position",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "resizable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'150ms cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onDragEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMaximize",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeInit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDragEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMaximizeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeInitHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'zyfra-dialog',\n  templateUrl: './zyfra-dialog.component.html',\n  styles: [],\n})\nexport class ZyfraDialogComponent {\n  @Input() htmlTemplate: SafeHtml;\n\n  @Input() header: string;\n  @Input() draggable: boolean = true;\n  @Input() acceptVisible: boolean = true;\n  @Input() keepInViewport: boolean = true;\n  @Input() resizable: boolean = true;\n  @Input() contentStyle: object;\n  @Input() visible: boolean;\n  @Input() modal: boolean;\n  @Input() position: string = 'center';\n  @Input() blockScroll: boolean;\n  @Input() closeOnEscape: boolean;\n  @Input() dismissableMask: boolean;\n  @Input() rtl: boolean;\n  @Input() closable: boolean = true;\n  @Input() appendTo: any;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() maskStyleClass: string;\n  @Input() contentStyleClass: string;\n  @Input() showHeader: boolean = true;\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() minX: number = 0;\n  @Input() minY: number = 0;\n  @Input() focusOnShow: boolean = true;\n  @Input() focusTrap: boolean = true;\n  @Input() maximizable: boolean;\n  @Input() breakpoints: object;\n  @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n  @Input() closeIcon: string = 'zyfra-icon selection-check-simple';\n  @Input() minimizeIcon: string = 'zyfra-icon arrows-collapse';\n  @Input() maximizeIcon: string = 'zyfra-icon arrows-expand';\n\n  /* onHide */\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n  onHideHandler(event) {\n    this.visible = false;\n    this.onHide.emit(this.visible);\n  }\n\n  /* onShow */\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n  onShowHandler(event) {\n    this.visible = true;\n    this.onShow.emit(this.visible);\n  }\n\n  /* onResizeInit */\n  @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\n\n  onResizeInitHandler(event) {\n    this.onResizeInit.emit(event);\n  }\n\n  /* onResizeEnd */\n  @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n\n  onResizeEndHandler(event) {\n    this.onResizeEnd.emit(event);\n  }\n\n  /* onDragEnd */\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\n\n  onDragEndHandler(event) {\n    this.onDragEnd.emit(event);\n  }\n\n  /* onMaximize */\n  @Output() onMaximize: EventEmitter<any> = new EventEmitter();\n\n  onInit() {\n    this.visible = true;\n  }\n\n  onMaximizeHandler(event) {\n    this.onMaximize.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-dialog\n  [header]=\"header\"\n  [draggable]=\"draggable\"\n  [keepInViewport]=\"keepInViewport\"\n  [resizable]=\"resizable\"\n  [contentStyle]=\"contentStyle\"\n  [(visible)]=\"visible\"\n  [modal]=\"modal\"\n  [position]=\"position\"\n  [blockScroll]=\"blockScroll\"\n  [closeOnEscape]=\"closeOnEscape\"\n  [dismissableMask]=\"dismissableMask\"\n  [rtl]=\"rtl\"\n  [closable]=\"closable\"\n  [appendTo]=\"appendTo\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [maskStyleClass]=\"maskStyleClass\"\n  [contentStyleClass]=\"contentStyleClass\"\n  [showHeader]=\"showHeader\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [minX]=\"minX\"\n  [minY]=\"minY\"\n  [focusOnShow]=\"focusOnShow\"\n  [focusTrap]=\"focusTrap\"\n  [maximizable]=\"maximizable\"\n  [breakpoints]=\"breakpoints\"\n  [transitionOptions]=\"transitionOptions\"\n  [closeIcon]=\"closeIcon\"\n  [minimizeIcon]=\"minimizeIcon\"\n  [maximizeIcon]=\"maximizeIcon\"\n  (onShow)=\"onShowHandler($event)\"\n  (onHide)=\"onHideHandler($event)\"\n  (onResizeInit)=\"onResizeInitHandler($event)\"\n  (onResizeEnd)=\"onResizeEndHandler($event)\"\n  (onDragEnd)=\"onDragEndHandler($event)\"\n  (onMaximize)=\"onMaximizeHandler($event)\"\n>\n  <div [innerHTML]=\"htmlTemplate\"></div>\n</p-dialog>\n"
        },
        {
            "name": "ZyfraDropdownComponent",
            "id": "component-ZyfraDropdownComponent-0b485902fa4f2cf736f84d342a42a3da",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "any"
                },
                {
                    "name": "ariaFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "autoDisplayFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "boolean"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean"
                },
                {
                    "name": "autofocusFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "number"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "emptyFilterMessage",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "filterMatchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\""
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "boolean"
                },
                {
                    "name": "groupTemplateClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "optionDisabled",
                    "defaultValue": "'disabled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "T[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "resetFilterOnHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string"
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "T"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "EventEmitter"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<DropdownChangeEvent<T>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "emptyfilterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "emptyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "groupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "selectedItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraDropdownTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown> {\n  @Input() value: T;\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode:\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'equals'\n    | 'notEquals'\n    | 'in'\n    | 'lt'\n    | 'lte'\n    | 'gt'\n    | 'gte' = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: any;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n  @Output() valueChange = new EventEmitter<T>();\n\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\n\n  itemTemplate: TemplateRef<unknown>;\n  groupTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n  headerTemplate: TemplateRef<unknown>;\n  emptyTemplate: TemplateRef<unknown>;\n  emptyfilterTemplate: TemplateRef<unknown>;\n  footerTemplate: TemplateRef<unknown>;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyfilterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-dropdown\n    [(ngModel)]=\"value\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [name]=\"name\"\n    [scrollHeight]=\"scrollHeight\"\n    [virtualScroll]=\"virtualScroll\"\n    [style]=\"style\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [filter]=\"filter\"\n    [filterValue]=\"filterValue\"\n    [filterBy]=\"filterBy\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterPlaceholder]=\"filterPlaceholder\"\n    [filterLocale]=\"filterLocale\"\n    [required]=\"required\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [editable]=\"editable\"\n    [maxlength]=\"maxlength\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [placeholder]=\"placeholder\"\n    [inputId]=\"inputId\"\n    [dataKey]=\"dataKey\"\n    [autofocus]=\"autofocus\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [autoDisplayFirst]=\"autoDisplayFirst\"\n    [group]=\"group\"\n    [showClear]=\"showClear\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaFilterLabel]=\"ariaFilterLabel\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    (onChange)=\"onChange.emit($event)\"\n    (onClick)=\"onClick.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n  >\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\n      <ng-container\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\n      ></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n    </ng-template>\n  </p-dropdown>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraDynamicDialogComponent",
            "id": "component-ZyfraDynamicDialogComponent-922f1abcf3b705857ecf671c04c91178",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ZyfraDynamicDialogService"
                }
            ],
            "selector": "storybook-dynamic-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<zyfra-button (click)=\"open()\"\n              label=\"open dialog\"\n              icon=\"pi pi-check\"></zyfra-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number"
                },
                {
                    "name": "closable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": ""
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\n\n@Component({\n  selector: 'storybook-dynamic-dialog',\n  template: `\n  <zyfra-button (click)=\"open()\"\n                label=\"open dialog\"\n                icon=\"pi pi-check\"></zyfra-button>\n  `,\n  providers: [ZyfraDynamicDialogService]\n})\nclass ZyfraDynamicDialogComponent implements OnDestroy {\n\n  @Input() set data(data: unknown) {\n    this.options.data = data;\n  }\n  @Input() set header(header: string) {\n    this.options.header = header;\n  }\n  @Input() set footer(footer: string) {\n    this.options.footer = footer;\n  }\n  @Input() set width(width: string) {\n    this.options.width = width;\n  }\n  @Input() set height(height: string) {\n    this.options.height = height;\n  }\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\n    this.options.closeOnEscape = closeOnEscape;\n  }\n  @Input() set baseZIndex(baseZIndex: number) {\n    this.options.baseZIndex = baseZIndex;\n  }\n  @Input() set autoZIndex(autoZIndex: boolean) {\n    this.options.autoZIndex = autoZIndex;\n  }\n  @Input() set dismissableMask(dismissableMask: boolean) {\n    this.options.dismissableMask = dismissableMask;\n  }\n  @Input() set rtl(rtl: boolean) {\n    this.options.rtl = rtl;\n  }\n  @Input() set style(style: string) {\n    this.options.style = style;\n  }\n  @Input() set contentStyle(contentStyle: string) {\n    this.options.contentStyle = contentStyle;\n  }\n  @Input() set styleClass(styleClass: string) {\n    this.options.styleClass = styleClass;\n  }\n  @Input() set transitionOptions(transitionOptions: string) {\n    this.options.transitionOptions = transitionOptions;\n  }\n  @Input() set closable(closable: boolean) {\n    this.options.closable = closable;\n  }\n  @Input() set showHeader(showHeader: boolean) {\n    this.options.showHeader = showHeader;\n  }\n\n  public options: ZyfraDynamicDialogConfig = {};\n\n  private ref: ZyfraDynamicDialogRef;\n\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\n\n  public open(): void {\n    this.ref = this.dynamicDialogService.open(\n      ExampleDynamicDialogComponent, this.options\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.ref) {\n      this.ref.close();\n    }\n  }\n}\n\n@Component({\n  template: `\n  <div>\n    user component\n  </div>`\n})\nclass ExampleDynamicDialogComponent { }\n\nexport default {\n  title: 'Dialogs/DynamicDialog',\n  component: ZyfraDynamicDialogComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        ZyfraDynamicDialogComponent,\n        ExampleDynamicDialogComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        ZyfraButtonModule,\n        ZyfraDynamicDialogModule\n      ],\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n});\n\n\nexport const Simple = Template.bind({});\nSimple.args = {\n  data: 'Some data',\n  header: \"Header\",\n  footer: \"Footer\",\n  width: \"500px\",\n  height: \"200px\",\n  closeOnEscape: false,\n  baseZIndex: 0,\n  autoZIndex: false,\n  dismissableMask: false,\n  rtl: false,\n  style: '',\n  contentStyle: '',\n  styleClass: '',\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n  closable: true,\n  showHeader: true\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "footer": {
                    "name": "footer",
                    "setSignature": {
                        "name": "footer",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "width": {
                    "name": "width",
                    "setSignature": {
                        "name": "width",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "height": {
                    "name": "height",
                    "setSignature": {
                        "name": "height",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closeOnEscape": {
                    "name": "closeOnEscape",
                    "setSignature": {
                        "name": "closeOnEscape",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "jsdoctags": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "baseZIndex": {
                    "name": "baseZIndex",
                    "setSignature": {
                        "name": "baseZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "autoZIndex": {
                    "name": "autoZIndex",
                    "setSignature": {
                        "name": "autoZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "dismissableMask": {
                    "name": "dismissableMask",
                    "setSignature": {
                        "name": "dismissableMask",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "rtl": {
                    "name": "rtl",
                    "setSignature": {
                        "name": "rtl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 47,
                        "jsdoctags": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "style": {
                    "name": "style",
                    "setSignature": {
                        "name": "style",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "contentStyle": {
                    "name": "contentStyle",
                    "setSignature": {
                        "name": "contentStyle",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "styleClass": {
                    "name": "styleClass",
                    "setSignature": {
                        "name": "styleClass",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "transitionOptions": {
                    "name": "transitionOptions",
                    "setSignature": {
                        "name": "transitionOptions",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closable": {
                    "name": "closable",
                    "setSignature": {
                        "name": "closable",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "showHeader": {
                    "name": "showHeader",
                    "setSignature": {
                        "name": "showHeader",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraHintComponent",
            "id": "component-ZyfraHintComponent-c614503939456c15d0610aa8d5898eee",
            "file": "libs/components/src/lib/hint/zyfra-hint.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-hint",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-hint.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraHintOptionsModel",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hostClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'animationend', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "style.left.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                },
                {
                    "name": "style.top.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "hostListeners": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  ViewEncapsulation,\n  Output,\n  TemplateRef,\n  HostBinding,\n  ChangeDetectionStrategy,\n  HostListener,\n} from '@angular/core';\nimport { ZyfraHintOptionsModel } from './zyfra-hint.model';\n\n@Component({\n  selector: 'zyfra-hint',\n  templateUrl: './zyfra-hint.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraHintComponent {\n  @HostBinding('style.top.px') get topParam(): number {\n    return this.options.top;\n  }\n  @HostBinding('style.left.px') get leftParam(): number {\n    return this.options.left;\n  }\n\n  set options(op: ZyfraHintOptionsModel) {\n    this._options = op;\n    this.hostClasses = op.className;\n  }\n  get options(): ZyfraHintOptionsModel {\n    return this._options;\n  }\n\n  get hasTemplateRef(): boolean {\n    return this._options.content instanceof TemplateRef;\n  }\n  @HostBinding('class') hostClasses = '';\n\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\n\n  private _options: ZyfraHintOptionsModel;\n  @HostListener('animationend', ['$event']) animationend(event: AnimationEvent): void {\n    if (event.animationName === 'hintOut') {\n      this.close.emit(true);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "topParam": {
                    "name": "topParam",
                    "getSignature": {
                        "name": "topParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 20
                    }
                },
                "leftParam": {
                    "name": "leftParam",
                    "getSignature": {
                        "name": "leftParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 23
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "ZyfraHintOptionsModel",
                        "line": 31
                    }
                },
                "hasTemplateRef": {
                    "name": "hasTemplateRef",
                    "getSignature": {
                        "name": "hasTemplateRef",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 35
                    }
                }
            },
            "templateData": "<ng-template [ngIf]=\"hasTemplateRef\" [ngIfElse]=\"string\">\n  <ng-container *ngTemplateOutlet=\"$any(options.content); context: { $implicit: options.context }\"> </ng-container>\n</ng-template>\n<ng-template #string>\n  {{ options.content }}\n</ng-template>\n"
        },
        {
            "name": "ZyfraIconComponent",
            "id": "component-ZyfraIconComponent-bdbb89651e3b5dfecd64f43c2d966a71",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-icon",
            "styleUrls": [
                "./zyfra-icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-icon',\n  templateUrl: './zyfra-icon.component.html',\n  styleUrls: ['./zyfra-icon.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraIconComponent {\n  @Input() iconClass: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    .zyfra-icon-color {\n        fill: none;\n    }\n}",
                    "styleUrl": "./zyfra-icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"zyfra-icon\" [ngClass]=\"iconClass\"></span>"
        },
        {
            "name": "ZyfraInputComponent",
            "id": "component-ZyfraInputComponent-b7dfcdb34e8342dcd0599d36a757209e",
            "file": "libs/components/src/lib/input/zyfra-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "inputClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | string[] | Set<string> | literal type"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "controlRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "changeModel",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidatorRequiredControl",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "outsideValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outsideValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl,\n} from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'zyfra-input',\n  templateUrl: './zyfra-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraInputComponent\n  implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\n  @Input() model: string;\n  @Input() type: string;\n  @Input() id: string;\n  @Input() placeholder: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() spanClass: string;\n  @Input() inputClass:  string | string[] | Set<string> | {\n    [klass: string]: any;\n  };\n  @Input() disabled: boolean;\n  @Input() required: boolean;\n  @Input() tooltip: string;\n  @Input() tooltipPosition = 'right';\n\n  @Output() onBlur = new EventEmitter<unknown>();\n\n  public controlRequired: boolean;\n\n  private destroyed$: Subject<void> = new Subject<void>();\n\n  constructor(\n    @Self() @Optional() public ngControl: NgControl,\n    private cdr: ChangeDetectorRef\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  onChange = (value: string) => {};\n  onTouched = () => {};\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(outsideValue: string): void {\n    this.model = outsideValue;\n    if (!this.model) {\n      this.cdr.detectChanges();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  ngOnInit(): void {\n    if (this.ngControl) {\n      this.getValidatorRequiredControl(this.ngControl);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  changeModel(value: string): void {\n    this.onChange(value);\n  }\n\n  private getValidatorRequiredControl(ngControl: NgControl): void {\n    if (ngControl.control && ngControl.control.validator && this.label) {\n      const validators = ngControl.control.validator({} as AbstractControl);\n      this.controlRequired = validators && validators.required;\n    } else {\n      this.controlRequired = false;\n    }\n\n    this.cdr.markForCheck();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<span class=\"zyfra-input\"\n      [class.zyfra-input_disabled]=\"disabled\"\n      [class.p-float-label]=\"label\">\n  <i *ngIf=\"iClass\"\n     [class]=\"iClass\"></i>\n  <input pInputText\n         [type]=\"type\"\n         [id]=\"id\"\n         [(ngModel)]=\"model\"\n         (ngModelChange)=\"changeModel($event)\"\n         (blur)=\"onBlur.emit($event)\"\n         [placeholder]=\"placeholder\"\n         [ngClass]=\"ngControl ? {'ng-invalid': ngControl.invalid, 'ng-valid': ngControl.valid, 'ng-dirty': ngControl.dirty, 'ng-touched': ngControl.touched} : inputClass\"\n         [disabled]=\"disabled\"\n         [required]=\"required || controlRequired\"\n         [pTooltip]=\"tooltip ? tooltip : null\"\n         [tooltipPosition]=\"tooltipPosition\" />\n  <label *ngIf=\"label\"\n         [class.label-required]=\"required || controlRequired\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraInputMaskComponent",
            "id": "component-ZyfraInputMaskComponent-b4979fdb7bad7a25a1d70767ef51146d",
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-mask",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-mask.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "autoClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "autoFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "characterPattern",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "mask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "slotChar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "unmask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "onComplete",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeydown",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-input-mask',\n  templateUrl: './zyfra-input-mask.component.html',\n})\nexport class ZyfraInputMaskComponent {\n  @Input() value: string;\n  @Input() mask: string;\n  @Input() type: string;\n  @Input() slotChar: string;\n  @Input() autoClear: boolean;\n  @Input() unmask: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n  @Input() name: string;\n  @Input() inputId: string;\n  @Input() required: boolean;\n  @Input() characterPattern: string;\n  @Input() autoFocus: boolean;\n  @Input() autocomplete: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() title: string;\n  @Input() label = '';\n\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() valueChange = new EventEmitter<string>();\n  @Output() onComplete = new EventEmitter<void>();\n  @Output() onKeydown = new EventEmitter<KeyboardEvent>();\n  @Output() onInput = new EventEmitter<KeyboardEvent>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span\n  class=\"zyfra-input\"\n  [class.zyfra-input_disabled]=\"disabled\"\n  [class.p-float-label]=\"label\"\n>\n  <p-inputMask\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    [mask]=\"mask\"\n    [type]=\"type\"\n    [slotChar]=\"slotChar\"\n    [autoClear]=\"autoClear\"\n    [unmask]=\"unmask\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    [placeholder]=\"placeholder\"\n    [size]=\"size\"\n    [maxlength]=\"maxlength\"\n    [tabindex]=\"tabindex\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [name]=\"name\"\n    [inputId]=\"inputId\"\n    [required]=\"required\"\n    [characterPattern]=\"characterPattern\"\n    [autoFocus]=\"autoFocus\"\n    [autocomplete]=\"autocomplete\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaRequired]=\"ariaRequired\"\n    [title]=\"title\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onComplete)=\"onComplete.emit($event)\"\n    (onInput)=\"onInput.emit($event)\"\n    (onKeydown)=\"onKeydown.emit($event)\"\n  ></p-inputMask>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{label}}</label>\n</span>\n"
        },
        {
            "name": "ZyfraInputNumberComponent",
            "id": "component-ZyfraInputNumberComponent-b5af54c2dd3c720b3226576f320ebaf3",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-number",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "buttonLayout",
                    "defaultValue": "'stacked'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "currencyDisplay",
                    "defaultValue": "'symbol'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "decrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "decrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "format",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "incrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "incrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "localeMatcher",
                    "defaultValue": "'best fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number"
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "mode",
                    "defaultValue": "'decimal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "showButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "number"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport interface InputEvent {\n  originalEvent: KeyboardEvent;\n  value: number;\n}\n\n@Component({\n  selector: 'zyfra-input-number',\n  templateUrl: './zyfra-input-number.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputNumberComponent {\n  @Input() value: number;\n  @Input() format = true;\n  @Input() showButtons: boolean;\n  @Input() buttonLayout = 'stacked';\n  @Input() spanClass: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() incrementButtonClass: string;\n  @Input() decrementButtonClass: string;\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\n  @Input() locale: string;\n  @Input() localeMatcher = 'best fit';\n  @Input() mode = 'decimal';\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() currency: string;\n  @Input() currencyDisplay = 'symbol';\n  @Input() useGrouping = true;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 1;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() inputId: string;\n  @Input() inputStyle: string;\n  @Input() inputStyleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string;\n  @Input() disabled: boolean;\n  @Input() title: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() name: string;\n  @Input() autocomplete: string;\n\n  @Output() valueChange = new EventEmitter<number>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onInput = new EventEmitter<InputEvent>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\n\n  <p-inputNumber\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    [format]=\"format\"\n    [showButtons]=\"showButtons\"\n    [buttonLayout]=\"buttonLayout\"\n    [incrementButtonClass]=\"incrementButtonClass\"\n    [decrementButtonClass]=\"decrementButtonClass\"\n    [incrementButtonIcon]=\"incrementButtonIcon\"\n    [decrementButtonIcon]=\"decrementButtonIcon\"\n    [locale]=\"locale\"\n    [localeMatcher]=\"localeMatcher\"\n    [mode]=\"mode\"\n    [prefix]=\"prefix\"\n    [suffix]=\"suffix\"\n    [placeholder]=\"placeholder\"\n    [currency]=\"currency\"\n    [currencyDisplay]=\"currencyDisplay\"\n    [useGrouping]=\"useGrouping\"\n    [minFractionDigits]=\"minFractionDigits\"\n    [maxFractionDigits]=\"maxFractionDigits\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    [inputId]=\"inputId\"\n    [inputStyle]=\"inputStyle\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [size]=\"size\"\n    [maxlength]=\"maxlength\"\n    [tabindex]=\"tabindex\"\n    [disabled]=\"disabled\"\n    [title]=\"title\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaRequired]=\"ariaRequired\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onInput)=\"onInput.emit($event)\"\n  >\n  </p-inputNumber>\n\n  <label\n    *ngIf=\"label\"\n    [class.label-required]=\"ariaRequired\"\n    [style.padding-left]=\"showButtons && buttonLayout === 'horizontal' ? '38px' : ''\"\n    >{{ label }}</label\n  >\n</span>\n"
        },
        {
            "name": "ZyfraInputSwitchComponent",
            "id": "component-ZyfraInputSwitchComponent-1396be29ddc5e7d63d322b99769ddaab",
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-input-switch',\n  templateUrl: './zyfra-input-switch.component.html',\n  styles: [],\n})\nexport class ZyfraInputSwitchComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  @Input() checked: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n\n  /* onChange */\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n  onChangeHandler(event) {\n    this.checked = event.checked;\n    this.onChange.emit(this.checked);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-inputSwitch\n  [(ngModel)]=\"checked\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [name]=\"name\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [disabled]=\"disabled\"\n  [readonly]=\"readonly\"\n  (onChange)=\"onChangeHandler($event)\"\n></p-inputSwitch>\n"
        },
        {
            "name": "ZyfraMenuApplicationsComponent",
            "id": "component-ZyfraMenuApplicationsComponent-e3cbf1e431cbeb07f42bf723a23ec5e8",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "ZyfraMenuAppItem | null"
                },
                {
                    "name": "bottomMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "ZyfraMenuAppItem[]"
                },
                {
                    "name": "hintDelay",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number"
                },
                {
                    "name": "topMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "ZyfraMenuAppItem[]"
                },
                {
                    "name": "transition",
                    "defaultValue": "{\n    open: {\n      duration: 300,\n      delay: 500,\n      timingFunction: 'ease-in',\n    },\n    close: {\n      duration: 300,\n      delay: 300,\n      timingFunction: 'ease-out',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ZyfraMenuAppTransitionSettings"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectItem",
                    "defaultValue": "new EventEmitter<ZyfraMenuAppItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleState",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "transitionDelayEnable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "wrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "closeWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnterHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ]
                },
                {
                    "name": "onMouseOutHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "openWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectItemHandler",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialPanelSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggle",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggleWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ZyfraMenuAppItem, ZyfraMenuAppTransitionSettings } from './zyfra-menu-applications.interface';\n\n@Component({\n  selector: 'zyfra-menu-applications',\n  templateUrl: './zyfra-menu-applications.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraMenuApplicationsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('wrapper', { static: true }) wrapper: ElementRef<HTMLDivElement>;\n\n  @Input() transition: ZyfraMenuAppTransitionSettings = {\n    open: {\n      duration: 300,\n      delay: 500,\n      timingFunction: 'ease-in',\n    },\n    close: {\n      duration: 300,\n      delay: 300,\n      timingFunction: 'ease-out',\n    },\n  };\n  @Input() hintDelay = 1000;\n  @Input() topMenuItems: ZyfraMenuAppItem[] = [];\n  @Input() bottomMenuItems: ZyfraMenuAppItem[] = [];\n  @Input() activeItem: ZyfraMenuAppItem | null = null;\n\n  @Output() selectItem = new EventEmitter<ZyfraMenuAppItem>();\n  @Output() toggleState = new EventEmitter<boolean>();\n\n  transitionDelayEnable = true;\n  private destroy$ = new Subject();\n  private _isOpen = true;\n\n  set isOpen(isOpen: boolean) {\n    this._isOpen = isOpen;\n    this.toggleState.emit(this.isOpen);\n    this.cdr.detectChanges();\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.setInitialPanelSizes();\n\n    fromEvent(this.wrapper.nativeElement, 'mousemove')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.open(true));\n  }\n\n  private setInitialPanelSizes(): void {\n    const menuSplitter = this.elementRef.nativeElement.querySelector('.menu-splitter');\n    const panelBottom = this.elementRef.nativeElement.querySelector('.menu-applications-list__bottom');\n    const splitterPanels = this.elementRef.nativeElement.querySelectorAll('.menu-splitter__panel');\n\n    if (!menuSplitter || !panelBottom || !splitterPanels.length || splitterPanels.length !== 2) {\n      return;\n    }\n\n    const bottomPanelSize = Math.ceil((panelBottom.offsetHeight / menuSplitter.offsetHeight) * 100);\n\n    this.renderer.setStyle(splitterPanels[0], 'flex-basis', 'calc(' + (100 - bottomPanelSize) + '%)');\n    this.renderer.setStyle(splitterPanels[1], 'flex-basis', 'calc(' + bottomPanelSize + '%)');\n  }\n\n  get transitionStyles(): Record<string, string> {\n    let transitionDelay: number;\n\n    if (this.transitionDelayEnable) {\n      transitionDelay = this.isOpen ? this.transition.open.delay : this.transition.close.delay;\n    } else {\n      transitionDelay = 0;\n    }\n\n    return {\n      'transition-delay': `${transitionDelay}ms`,\n      'transition-duration': `${\n        this.isOpen ? this.transition.open.duration : this.transition.close.duration\n      }ms`,\n      'transition-timing-function': this.isOpen\n        ? this.transition.open.timingFunction\n        : this.transition.close.timingFunction,\n    };\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnterHandler(): void {\n    this.open(true);\n  }\n\n  @HostListener('mouseleave')\n  onMouseOutHandler(): void {\n    this.close(true);\n  }\n\n  toggle(withDelay = false): void {\n    if (withDelay) {\n      this.toggleWithDelay();\n    } else {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  private toggleWithDelay(): void {\n    this.transitionDelayEnable = true;\n    this.isOpen = !this.isOpen;\n  }\n\n  private toggleWithoutDelay(): void {\n    this.transitionDelayEnable = false;\n    this.isOpen = !this.isOpen;\n  }\n\n  open(withDelay = false): void {\n    if (withDelay) {\n      this.openWithDelay();\n    } else {\n      this.openWithoutDelay();\n    }\n  }\n\n  private openWithDelay(): void {\n    if (!this.isOpen) {\n      this.toggleWithDelay();\n    }\n  }\n\n  private openWithoutDelay(): void {\n    if (!this.isOpen) {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  close(withDelay = false): void {\n    if (withDelay) {\n      this.closeWithDelay();\n    } else {\n      this.closeWithoutDelay();\n    }\n  }\n\n  private closeWithDelay(): void {\n    if (this.isOpen) {\n      this.toggleWithDelay();\n    }\n  }\n\n  private closeWithoutDelay(): void {\n    if (this.isOpen) {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  selectItemHandler(item: ZyfraMenuAppItem): void {\n    this.selectItem.emit(item);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "isOpen": {
                    "name": "isOpen",
                    "setSignature": {
                        "name": "isOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 59
                    }
                },
                "transitionStyles": {
                    "name": "transitionStyles",
                    "getSignature": {
                        "name": "transitionStyles",
                        "type": "",
                        "returnType": "Record<string, string>",
                        "line": 88
                    }
                }
            },
            "templateData": "<div\n  #wrapper\n  class=\"menu-applications\"\n  [class]=\"isOpen ? 'menu-applications_opened' : 'menu-applications_closed'\"\n  [style]=\"transitionStyles\"\n>\n  <div class=\"menu-applications-wrapper\">\n    <zyfra-splitter [minSizes]=\"[2, 1]\" styleClass=\"menu-splitter\" panelStyleClass=\"menu-splitter__panel\">\n      <ng-template zyfraSplitterTemplate>\n        <ul class=\"menu-applications-list menu-applications-list__top\">\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: topMenuItems }\"></ng-container>\n        </ul>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <ul class=\"menu-applications-list menu-applications-list__bottom\">\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: bottomMenuItems }\"></ng-container>\n        </ul>\n      </ng-template>\n    </zyfra-splitter>\n  </div>\n</div>\n\n<ng-template #itemList let-items>\n  <zyfra-menu-applications-item\n    *ngFor=\"let item of items\"\n    [item]=\"item\"\n    [isActive]=\"item === activeItem\"\n    [zyfraHint]=\"hint\"\n    [zyfraHintContext]=\"item\"\n    [zyfraHintDelay]=\"hintDelay\"\n    (click)=\"selectItemHandler(item)\"\n  ></zyfra-menu-applications-item>\n</ng-template>\n\n<ng-template #hint let-item>\n  <div class=\"menu-applications-hint\">\n    <div class=\"menu-applications-hint__title\">{{ item.title }}</div>\n    <div class=\"menu-applications-hint__desc\" *ngIf=\"item.description\">{{ item.description }}</div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "ZyfraMenuApplicationsItemComponent",
            "id": "component-ZyfraMenuApplicationsItemComponent-c3e08e89299f967d670c483d39282dbb",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ZyfraMenuAppItem"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { ZyfraMenuAppItem } from '../zyfra-menu-applications.interface';\n\n@Component({\n  selector: 'zyfra-menu-applications-item',\n  templateUrl: './zyfra-menu-applications-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraMenuApplicationsItemComponent {\n  @Input() item: ZyfraMenuAppItem;\n  @Input() isActive = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div\n  class=\"zyfra-menu-applications-item\"\n  [class.zyfra-menu-applications-item_active]=\"isActive\"\n>\n  <zyfra-icon [iconClass]=\"item.icon\" class=\"zyfra-menu-applications-item__icon\"></zyfra-icon>\n  <span class=\"zyfra-menu-applications-item__title\">{{ item.title }}</span>\n  <zyfra-icon class=\"zyfra-menu-applications-item__arrow\" iconClass=\"arrows-arrow-right\"></zyfra-icon>\n</div>\n"
        },
        {
            "name": "ZyfraMessageComponent",
            "id": "component-ZyfraMessageComponent-d004a0f550f7d486d8a79451f510d42b",
            "file": "libs/components/src/lib/message/zyfra-message.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "enableService",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "escape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "style",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-message',\n  templateUrl: './zyfra-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [],\n  providers: [MessageService],\n})\nexport class ZyfraMessageComponent implements OnInit {\n  //---- message component --------\n  @Input() value: any[];\n  @Input() closable: boolean = true;\n  @Input() style: string = '';\n  @Input() styleClass: string = '';\n  @Input() enableService: boolean = true;\n  @Input() escape: boolean = true;\n  @Input() showTransitionOptions: string = '300ms ease-out';\n  @Input() hideTransitionOptions: string = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n  // --- for message service -----\n  // @Input() severity:string;\n  // @Input() summary:string;\n  // @Input() detail:string;\n  // @Input() id:any;\n  // @Input() life:number    = 3000;\n  // @Input() sticky:boolean = false;\n  // @Input() data:any;\n\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\n    this.primengConfig.ripple = true;\n  }\n\n  ngOnInit(): void {}\n\n  clear() {\n    this.value = [];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-messages\n  [(value)]=\"value\"\n  [closable]=\"closable\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [enableService]=\"enableService\"\n  [escape]=\"escape\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n></p-messages>\n"
        },
        {
            "name": "ZyfraNavMenuComponent",
            "id": "component-ZyfraNavMenuComponent-52361e8939a2657755836cf3ada135d1",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "headerConfig",
                    "defaultValue": "{\n    settings: false,\n    home: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "HeaderConfig"
                },
                {
                    "name": "menuTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "[]"
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "[]"
                },
                {
                    "name": "searchPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "settingsConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "SettingsConfig"
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "ToolbarConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter"
                },
                {
                    "name": "homeClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<NavMenuSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_settings",
                    "defaultValue": "DEFAULT_SETTINGS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "groupNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[][]",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "headerExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "itemExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'navMenu'"
                        }
                    ]
                },
                {
                    "name": "menuGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraNavMenuGroupDirective>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "name": "settingsPanelConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "toolbarExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [
                {
                    "name": "activeElement",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLElement",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applySettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "copyConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "expandBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasActive",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToActiveElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { ZyfraNavMenuGroupDirective } from '../../directives/nav-menu-group.directive';\nimport { Router } from '@angular/router';\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\nimport { Subject } from 'rxjs';\nimport { convertToNode } from '../../utils/treeNode.functions';\nimport {\n  DEFAULT_SETTINGS,\n  HeaderConfig,\n  NavMenuEvent,\n  NavMenuSelectionEvent,\n  SettingsConfig,\n  ToolbarConfig\n} from '../../model/nav-menu-config';\nimport { ZyfraTemplateDirective } from '../../../@core/shared/zyfra-template.directives';\n\n@Component({\n  selector: 'zyfra-nav-menu',\n  templateUrl: './zyfra-nav-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n  @ViewChild('navMenu') menu: ElementRef;\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\n  @ContentChildren(ZyfraNavMenuGroupDirective) menuGroups: QueryList<ZyfraNavMenuGroupDirective>;\n  @Input() menuTitle: string;\n  @Input() emptyMessage: string;\n  @Input() searchPlaceholder: string = '';\n  @Input() toolbarConfig: ToolbarConfig;\n\n  @Input() get settingsConfig(): SettingsConfig {\n    return this._settings;\n  }\n\n  set settingsConfig(settings: SettingsConfig) {\n    if (!settings) {\n      return;\n    }\n    this._settings = { ...DEFAULT_SETTINGS, ...settings };\n  };\n\n  @Input() headerConfig: HeaderConfig = {\n    settings: false,\n    home: false\n  };\n\n  @Input() set model(items: ZyfraMenuItem[]) {\n    this.nodes = (items || []).map(item => convertToNode(item));\n  }\n\n  @Input() set nodes(nodes: TreeNode[]) {\n    this._nodes = nodes;\n  }\n\n  get nodes(): TreeNode[] {\n    return this._nodes;\n  }\n\n  @Output() homeClick = new EventEmitter<void>();\n  @Output() selectionChange = new EventEmitter<NavMenuSelectionEvent>();\n  @Output() nodeExpand = new EventEmitter<NavMenuEvent>();\n  @Output() nodeCollapse = new EventEmitter<NavMenuEvent>();\n  @Output() activeItemChange = new EventEmitter<NavMenuEvent>();\n\n\n  headerExtraTemplate: TemplateRef<any>;\n  toolbarExtraTemplate: TemplateRef<any>;\n  itemExtraTemplate: TemplateRef<any>;\n\n  settingsPanelConfig: SettingsConfig;\n  activeNode: TreeNode;\n  groupNodes: TreeNode[][] = [];\n  activeGroup: number;\n\n  private _activeNode: TreeNode;\n  private _settings: SettingsConfig = DEFAULT_SETTINGS;\n  private _nodes: TreeNode[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private renderer: Renderer2,\n              private viewContainerRef: ViewContainerRef,\n              private cdr: ChangeDetectorRef,\n              private router: Router\n  ) {\n  }\n\n  ngAfterContentInit(): void {\n    if (this.menuGroups) {\n      this.menuGroups.forEach(({ items }: ZyfraNavMenuGroupDirective) => {\n        this.groupNodes.push(items.map((item: ZyfraMenuItem) => convertToNode(item)));\n      });\n    }\n\n    this.templates.forEach((item) => {\n      switch (item.zyfraTemplate) {\n        case 'header':\n          this.headerExtraTemplate = item.templateRef;\n          break;\n        case 'toolbar':\n          this.toolbarExtraTemplate = item.templateRef;\n          break;\n        case 'menuitem':\n          this.itemExtraTemplate = item.templateRef;\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    let activeGroup;\n    if (this.groupNodes.length) {\n      this.groupNodes.some((nodes, groupIndex) =>\n        nodes.some((node) => {\n          const isActiveGroup = this.hasActive(node);\n          if (isActiveGroup) {\n            activeGroup = groupIndex;\n          }\n          return isActiveGroup;\n        }));\n    } else {\n      this.nodes.some(node => this.hasActive(node));\n    }\n    requestAnimationFrame(() => {\n      this.activeNode = this._activeNode;\n      this.activeGroup = activeGroup;\n      if (this.activeNode) {\n        this.expandBranchFrom(this.activeNode);\n        setTimeout(() => this.scrollToActiveElement(), 500);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  nodeCollapseHandler(node: TreeNode, groupIndex?: number): void {\n    this.nodeCollapse.emit({ item: node.data, groupIndex });\n  }\n\n  nodeExpandHandler(node: TreeNode, groupIndex?: number): void {\n    this.nodeExpand.emit({ item: node.data, groupIndex });\n  }\n\n  updateActiveItem(node: TreeNode, groupIndex?: number): void {\n    this.activeItemChange.emit({ item: node.data, groupIndex });\n  }\n\n  copyConfig(): void {\n    this.settingsPanelConfig = { ...this.settingsConfig };\n  }\n\n  applySettings(): void {\n    this.settingsConfig = this.settingsPanelConfig;\n  }\n\n  selectionChangeHandler(selection: TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[], groupIndex?: number): void {\n    let selectionData;\n    if (selection) {\n      selectionData = Array.isArray(selection)\n        ? selection.map(node => node.data)\n        : selection.data;\n    }\n    this.selectionChange.emit({ selection: selectionData, groupIndex });\n  }\n\n  private hasActive(node: TreeNode): boolean {\n    if (this.isSelected(node)) {\n      return true;\n    }\n    if (node.children) {\n      return node.children.some(childNode => this.isSelected(childNode) || this.hasActive(childNode));\n    }\n    return this.isSelected(node);\n  }\n\n  private isSelected(node: TreeNode): boolean {\n    if (node.data.routerLink) {\n      const isActive = this.isActive(node.data);\n      if (isActive) {\n        node.styleClass = 'active';\n        this._activeNode = node;\n      }\n      return isActive;\n    }\n    return false;\n  }\n\n  private isActive(item: ZyfraMenuItem): boolean {\n    return item.routerLink && this.router.isActive(this.router.createUrlTree(item.routerLink), {\n      paths: 'subset',\n      queryParams: 'subset',\n      fragment: 'ignored',\n      matrixParams: 'ignored'\n    });\n  }\n\n  private expandBranchFrom(node: TreeNode): void {\n    if (node.parent) {\n      node.parent.expanded = true;\n      this.expandBranchFrom(node.parent);\n    } else {\n      node.expanded = true;\n    }\n    this.cdr.markForCheck();\n  }\n\n  private scrollToActiveElement(): void {\n    const activeItem = this.activeElement();\n    if (activeItem) {\n      activeItem.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  private activeElement(): HTMLElement {\n    return this.menu.nativeElement.querySelector('.p-treenode.active');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 96,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterContentInit",
                "OnDestroy"
            ],
            "accessors": {
                "settingsConfig": {
                    "name": "settingsConfig",
                    "setSignature": {
                        "name": "settingsConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "settingsConfig",
                        "type": "",
                        "returnType": "SettingsConfig",
                        "line": 49
                    }
                },
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 69,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 73
                    }
                }
            },
            "templateData": "<div class=\"zyfra-nav-menu p-component\" #navMenu>\n\n  <div class=\"header\" #header>\n    <div class=\"app-name\">{{menuTitle}}</div>\n    <div class=\"right-side\">\n      <ng-container *ngTemplateOutlet=\"headerExtraTemplate\"></ng-container>\n      <i *ngIf=\"headerConfig?.settings\" class=\"toolbar-button zyfra-icon settings-tune\"\n         (click)=\"copyConfig(); settingPanel.show($event, header)\"></i>\n      <i *ngIf=\"headerConfig?.home\" class=\"toolbar-button zyfra-icon social-home\"\n         (click)=\"homeClick.emit()\"></i>\n    </div>\n  </div>\n\n  <div class=\"nav-menu-content\"\n       [ngClass]=\"settingsConfig?.selectedSize\">\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\n      <zyfra-accordion [multiple]=\"!settingsConfig.singleGroup\">\n        <zyfra-accordion-tab *ngFor=\"let group of menuGroups; let i = index\" [selected]=\"i === activeGroup\">\n          <ng-template zyfraTemplate=\"header\">\n                        <span class=\"p-accordion-header-text groupHeader\">\n                            <i class=\"zyfra-icon vectors-circle\"></i>{{group.header}}\n                        </span>\n          </ng-template>\n          <zyfra-menu-group-content [nodes]=\"groupNodes[i]\"\n                                    [selectionMode]=\"settingsConfig.selectionMode\"\n                                    [activeNode]=\"activeGroup === i ? activeNode : null\"\n                                    [searchPlaceholder]=\"searchPlaceholder\"\n                                    [toolbarConfig]=\"toolbarConfig\"\n                                    [toolbarExtra]=\"toolbarExtraTemplate\"\n                                    [itemExtra]=\"itemExtraTemplate\"\n                                    [emptyMessage]=\"emptyMessage\"\n                                    (activeItemChange)=\"updateActiveItem($event, i)\"\n                                    (selectionChange)=\"selectionChangeHandler($event, i)\"\n                                    (nodeCollapse)=\"nodeCollapseHandler($event, i)\"\n                                    (nodeExpand)=\"nodeExpandHandler($event, i)\">\n          </zyfra-menu-group-content>\n        </zyfra-accordion-tab>\n      </zyfra-accordion>\n    </ng-container>\n\n    <ng-template #noGroups>\n      <zyfra-menu-group-content [nodes]=\"nodes\"\n                                [activeNode]=\"activeNode\"\n                                [selectionMode]=\"settingsConfig.selectionMode\"\n                                [searchPlaceholder]=\"searchPlaceholder\"\n                                [toolbarConfig]=\"toolbarConfig\"\n                                [toolbarExtra]=\"toolbarExtraTemplate\"\n                                [itemExtra]=\"itemExtraTemplate\"\n                                [emptyMessage]=\"emptyMessage\"\n                                (activeItemChange)=\"updateActiveItem($event)\"\n                                (selectionChange)=\"selectionChangeHandler($event)\"\n                                (nodeCollapse)=\"nodeCollapseHandler($event)\"\n                                (nodeExpand)=\"nodeExpandHandler($event)\">\n      </zyfra-menu-group-content>\n    </ng-template>\n  </div>\n\n  <p-overlayPanel #settingPanel\n                  styleClass=\"settingsPanel\"\n                  [dismissable]=\"false\"\n                  [appendTo]=\"header\">\n    <ng-template pTemplate>\n      <div>Настройки навигационой панели</div>\n      <div class=\"settings-block\">\n        <span>Представление</span>\n        <zyfra-checkbox label=\"Одиночный режим групповых панелей\"\n                        [(model)]=\"settingsPanelConfig.singleGroup\"></zyfra-checkbox>\n        <zyfra-checkbox label=\"Режим множественного выбора элементов\"\n                        [model]=\"settingsPanelConfig.selectionMode === 'checkbox'\"\n                        (modelChange)=\"settingsPanelConfig.selectionMode = $event ? 'checkbox' : 'single'\"></zyfra-checkbox>\n      </div>\n      <div class=\"settings-block\">\n        <span>Степень компактности</span>\n        <p-radioButton name=\"size\"\n                       value=\"standard\"\n                       label=\"Стандартный вид\"\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\n        <p-radioButton name=\"size\"\n                       value=\"enlarged\"\n                       label=\"Увеличенный вид\"\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\n      </div>\n      <div>\n        <zyfra-button styleClass=\"p-button-secondary p-button-mini\"\n                      label=\"Отмена\"\n                      (onClick)=\"settingPanel.hide()\"></zyfra-button>\n        <zyfra-button styleClass=\"p-button-mini\"\n                      label=\"Подтвердить\"\n                      (onClick)=\"applySettings(); settingPanel.hide()\"></zyfra-button>\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n</div>\n"
        },
        {
            "name": "ZyfraNavMenuGroupComponent",
            "id": "component-ZyfraNavMenuGroupComponent-ce3ac483654c0687c9a23fd33c66e619",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-group-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": ""
                },
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "[]"
                },
                {
                    "name": "search",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "searchPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": ""
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": ""
                },
                {
                    "name": "toolbarExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "TemplateRef<any>"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter<TreeNode | []>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_toolbarConfig",
                    "defaultValue": "DEFAULT_TOOLBAR_CONFIG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeRootNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentFolder",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "folderIcons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'folderIcons'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "folderPath",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isToolbarNotEmpty",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "pathToActiveNode",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rubricatorNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tree",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Tree"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "treeWrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "viewMode",
                    "defaultValue": "'hierarchy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewMode",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "viewNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "methodsClass": [
                {
                    "name": "changeActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 264,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "changeSearchValue",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeViewMode",
                    "args": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearSearchField",
                    "args": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "collapseAllNodes",
                    "args": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranch",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toLevelUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateIfHasActiveChild",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 302,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateViewNodes",
                    "args": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { Tree } from 'primeng/tree';\nimport { TreeNode } from 'primeng/api';\nimport { NavMenuService } from '../../service/selection.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { fromRubricatorNodes, getPath } from '../../utils/treeNode.functions';\nimport {\n  DEFAULT_TOOLBAR_CONFIG,\n  SelectionType,\n  ToolbarConfig,\n  ViewMode\n} from '../../model/nav-menu-config';\n\n@Component({\n  selector: 'zyfra-menu-group-content',\n  templateUrl: './zyfra-nav-menu-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuGroupComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(Tree) public tree: Tree;\n  @ViewChild('folderIcons') public folderIcons: TemplateRef<any>;\n  @Input() itemExtra: TemplateRef<any>;\n  @Input() toolbarExtra: TemplateRef<any>;\n  @Input() emptyMessage: string;\n  @Input() search: boolean = false;\n  @Input() searchPlaceholder: string;\n\n  @Input() set activeNode(node: TreeNode) {\n    if (!node) {\n      return;\n    }\n    this.currentFolder = node.parent;\n    this.setActiveNode(node);\n  }\n\n  get activeNode(): TreeNode {\n    return this._activeNode;\n  }\n\n  @Input() set nodes(nodes: TreeNode[]) {\n    if (!nodes) {\n      return;\n    }\n\n    this._nodes = nodes;\n    this.viewNodes = nodes;\n    if (this.toolbarConfig.rubricatorMode) {\n      this.rubricatorNodes = fromRubricatorNodes(this.nodes);\n    }\n  }\n\n  get nodes(): TreeNode[] {\n    return this._nodes;\n  }\n\n  @Input() set selectionMode(mode: SelectionType) {\n    this._selectionMode = mode;\n    if (this.tree && this.tree.selection) {\n      if (Array.isArray(this.tree.selection) && this._selectionMode === 'single') {\n        this.setActiveNode(this.activeNode);\n      }\n      if (!Array.isArray(this.tree.selection) && this._selectionMode === 'checkbox') {\n        this.tree.selection = [this.tree.selection];\n      }\n    }\n  }\n\n  get selectionMode(): SelectionType {\n    return this._selectionMode;\n  }\n\n  @Input() set toolbarConfig(config: ToolbarConfig) {\n    if (!config) {\n      return;\n    }\n    this._toolbarConfig = { ...DEFAULT_TOOLBAR_CONFIG, ...config };\n    this.isToolbarNotEmpty = Object.values(this._toolbarConfig).some(value => value);\n  }\n\n  get toolbarConfig(): ToolbarConfig {\n    return this._toolbarConfig;\n  }\n\n  @Output() selectionChange: EventEmitter<TreeNode | TreeNode[]> = new EventEmitter();\n  @Output() activeItemChange: EventEmitter<TreeNode> = new EventEmitter();\n  @Output() nodeExpand: EventEmitter<TreeNode> = new EventEmitter();\n  @Output() nodeCollapse: EventEmitter<TreeNode> = new EventEmitter();\n\n  isToolbarNotEmpty: boolean = false;\n  viewNodes: TreeNode[] = [];\n  viewMode: ViewMode = 'hierarchy';\n  currentFolder: TreeNode = null;\n\n  private _selectionMode: SelectionType = 'single';\n  private _nodes: TreeNode[] = [];\n  private _activeNode: TreeNode;\n  private _toolbarConfig: ToolbarConfig = DEFAULT_TOOLBAR_CONFIG;\n  private activeRootNode: TreeNode;\n  private treeWrapper: Element;\n  private rubricatorNodes: TreeNode[] = [];\n  private pathToActiveNode = [];\n  private folderPath = [];\n  private destroyed$ = new Subject();\n\n  constructor(private renderer: Renderer2,\n              private viewContainerRef: ViewContainerRef,\n              private cdr: ChangeDetectorRef,\n              private navMenuService: NavMenuService\n  ) { }\n\n  ngOnInit(): void {\n    this.navMenuService.selection$\n      .pipe(\n        filter(() => Boolean(this.tree)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(value => {\n        if (value !== this.activeNode) {\n          this.resetActiveParent();\n          if (this.selectionMode === 'single') {\n            if (this.tree.selection) {\n              this.tree.selection = null;\n              this.selectionChange.emit(this.tree.selection);\n            }\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    const embeddedViewRef = this.viewContainerRef.createEmbeddedView(this.folderIcons);\n    this.treeWrapper = this.tree.el.nativeElement.querySelector('.p-tree-wrapper');\n    this.renderer.appendChild(this.treeWrapper, embeddedViewRef.rootNodes[0]);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  selectionChangeHandler(selection: TreeNode | TreeNode[]): void {\n    this.selectionChange.emit(selection);\n  };\n\n  nodeCollapseHandler(node: TreeNode): void {\n    this.nodeCollapse.emit(node);\n    this.currentFolder = node.parent;\n    this.updateIfHasActiveChild(node);\n  }\n\n  nodeExpandHandler(node: TreeNode): void {\n    if (node === this.activeRootNode) {\n      this.changeActiveParent();\n    }\n    this.setCurrentNode(node);\n    this.nodeExpand.emit(node);\n  }\n\n  setActiveNode(node: TreeNode): void {\n    this.resetActiveParent();\n    if (this.selectionMode === 'single') {\n      this.tree.selection = node;\n      this.selectionChange.emit(this.tree.selection);\n      this._activeNode = node;\n      this.navMenuService.selectionChange(node);\n    } else {\n      if (this._activeNode) {\n        this._activeNode.styleClass = '';\n      }\n      this._activeNode = node;\n      this._activeNode.styleClass = 'active';\n    }\n    this.pathToActiveNode = getPath(node);\n    if (this.viewMode === 'folder') {\n      this.pathToActiveNode = [...this.folderPath, getPath(node)[1]];\n    }\n    this.activeItemChange.emit(node);\n  }\n\n  toLevelUp(): void {\n    this.currentFolder.expanded = false;\n    this.nodeCollapseHandler(this.currentFolder);\n    this.currentFolder = this.folderPath.pop();\n    this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\n    this.cdr.markForCheck();\n  }\n\n  toTop(): void {\n    this.collapseBranchFrom(this.currentFolder);\n    this.currentFolder = null;\n    this.viewNodes = this.nodes;\n    this.cdr.markForCheck();\n  }\n\n  closeAll(): void {\n    if (this.viewMode === 'folder') {\n      this.toTop();\n    } else {\n      this.collapseAllNodes();\n    }\n    this.currentFolder = null;\n  }\n\n  changeViewMode(triggeredMode: ViewMode): void {\n    if (this.viewMode === 'rubricator') {\n      this.currentFolder = null;\n    }\n    this.viewMode = this.viewMode === triggeredMode\n      ? 'hierarchy'\n      : triggeredMode;\n    this.updateViewNodes(this.viewMode);\n  }\n\n  toggleSearch(): void {\n    this.changeSearchValue('');\n    this.search = !this.search;\n  }\n\n  changeSearchValue(searchString: string): void {\n    this.tree._filter(searchString);\n  }\n\n  clearSearchField(field: HTMLInputElement): void {\n    field.value = '';\n    this.changeSearchValue('');\n    field.focus();\n  }\n\n\n  private setCurrentNode(node: TreeNode): void {\n    if (this.viewMode === 'folder') {\n      this.folderPath.push(this.currentFolder);\n      this.viewNodes = [node];\n    }\n    this.currentFolder = node;\n  }\n\n  private resetActiveParent(): void {\n    if (this.activeRootNode && this.pathToActiveNode) {\n      this.pathToActiveNode.forEach(node => {\n        if (node) {\n          node.styleClass = '';\n        }\n      });\n      this.activeRootNode = null;\n    }\n  }\n\n  private changeActiveParent(): void {\n    if (this.activeRootNode) {\n      this.activeRootNode.styleClass = '';\n      this.activeRootNode = this.pathToActiveNode.find(node => node?.styleClass === 'active-root');\n    }\n  }\n\n  private collapseBranchFrom(node: TreeNode): void {\n    this.updateIfHasActiveChild(node);\n    node.expanded = false;\n    while (this.folderPath.length) {\n      const parent = this.folderPath.pop();\n      if (parent) {\n        parent.expanded = false;\n      }\n      this.updateIfHasActiveChild(parent);\n    }\n  }\n\n  private collapseAllNodes(excludeBranch?: TreeNode): void {\n    this.viewNodes.forEach(node => {\n      if (node !== excludeBranch) {\n        this.collapseBranch(node);\n      }\n    });\n  }\n\n  private collapseBranch(node: TreeNode): void {\n    node.expanded = false;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.updateIfHasActiveChild(childNode);\n        this.collapseBranch(childNode);\n      });\n    }\n    this.updateIfHasActiveChild(node);\n  }\n\n  private updateIfHasActiveChild(node: TreeNode): void {\n    if (node && this.pathToActiveNode.includes(node)) {\n      this.activeRootNode = node;\n      this.activeRootNode.styleClass = 'active-root';\n    }\n  }\n\n  private updateViewNodes(newMode: ViewMode): void {\n    if (newMode === 'rubricator') {\n      if (!this.rubricatorNodes.length) {\n        this.rubricatorNodes = fromRubricatorNodes(this.nodes);\n      }\n      this.viewNodes = this.rubricatorNodes;\n    } else if (newMode === 'folder') {\n      if (this.currentFolder) {\n        this.folderPath = getPath(this.currentFolder);\n        this.collapseAllNodes(this.folderPath[1] || this.currentFolder);\n        this.currentFolder.expanded = true;\n      }\n      this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\n    } else {\n      this.viewNodes = this.nodes;\n    }\n    if (this.search) {\n      this.toggleSearch();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 118,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "activeNode": {
                    "name": "activeNode",
                    "setSignature": {
                        "name": "activeNode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "jsdoctags": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeNode",
                        "type": "",
                        "returnType": "TreeNode",
                        "line": 51
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 67
                    }
                },
                "selectionMode": {
                    "name": "selectionMode",
                    "setSignature": {
                        "name": "selectionMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "selectionMode",
                        "type": "",
                        "returnType": "SelectionType",
                        "line": 83
                    }
                },
                "toolbarConfig": {
                    "name": "toolbarConfig",
                    "setSignature": {
                        "name": "toolbarConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 87,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "toolbarConfig",
                        "type": "",
                        "returnType": "ToolbarConfig",
                        "line": 95
                    }
                }
            },
            "templateData": "<p-tree #headerToolbar\n        filterBy=\"label\"\n        filterMode=\"strict\"\n        [value]=\"viewNodes\"\n        [class.folder-open]=\"viewMode === 'folder' && currentFolder\"\n        [emptyMessage]=\"'<Нет данных для отображения>'\"\n        [selectionMode]=\"selectionMode\"\n        [filterPlaceholder]=\"searchPlaceholder\"\n        (selectionChange)=\"selectionChangeHandler($event)\"\n        (onNodeCollapse)=\"nodeCollapseHandler($event.node)\"\n        (onNodeExpand)=\"nodeExpandHandler($event.node)\">\n\n    <ng-template *ngIf=\"isToolbarNotEmpty || toolbarExtra\" pTemplate=\"header\">\n        <div class=\"header header-toolbar\">\n            <div class=\"right-side\">\n                <ng-container *ngTemplateOutlet=\"toolbarExtra\"></ng-container>\n                <i *ngIf=\"toolbarConfig.filesMode\" class=\"toolbar-button zyfra-icon files-mode\"\n                   [class.active]=\"viewMode === 'folder'\"\n                   (click)=\"changeViewMode('folder')\"></i>\n                <i *ngIf=\"toolbarConfig.rubricatorMode\" class=\"toolbar-button zyfra-icon editor-alfavit\"\n                   [class.active]=\"viewMode === 'rubricator'\"\n                   (click)=\"changeViewMode('rubricator')\"></i>\n                <i *ngIf=\"toolbarConfig.closeAll\" class=\"toolbar-button zyfra-icon chevrons-close-all\"\n                   (click)=\"closeAll()\"></i>\n                <i *ngIf=\"toolbarConfig.search\" class=\"toolbar-button zyfra-icon sort-zoom-in\"\n                   [class.active]=\"search\"\n                   (click)=\"toggleSearch()\"></i>\n            </div>\n        </div>\n\n        <div *ngIf=\"search\"\n             class=\"header header-search-bar\">\n            <span class=\"search-bar p-input-icon-left p-input-icon-right\">\n                <i class=\"toolbar-button zyfra-icon sort-zoom-in\"></i>\n                <i class=\"toolbar-button zyfra-icon tools-broom\"\n                   [class.hidden]=\"!searchField.value\"\n                   (click)=\"clearSearchField(searchField)\"></i>\n                <input #searchField\n                       class=\"search-bar-field\"\n                       pInputText\n                       zyfraAutofocus\n                       type=\"text\"\n                       [placeholder]=\"searchPlaceholder\"\n                       (input)=\"changeSearchValue($event.target.value)\"/>\n            </span>\n        </div>\n    </ng-template>\n\n    <ng-template let-node pTemplate=\"default\">\n        <zyfra-nav-menu-item [item]=\"node.data\"\n                             (itemClick)=\"setActiveNode(node)\" [itemExtra]=\"itemExtra\">\n        </zyfra-nav-menu-item>\n    </ng-template>\n</p-tree>\n\n<ng-template #folderIcons>\n    <div class=\"folder-icons\" [class.visible]=\"this.viewMode === 'folder' && currentFolder\">\n        <i class=\"toolbar-button zyfra-icon arrows-corner-left-up\" (click)=\"toLevelUp()\"></i>\n        <i class=\"toolbar-button zyfra-icon arrows-arrow-up-level\" (click)=\"toTop()\"></i>\n    </div>\n</ng-template>\n"
        },
        {
            "name": "ZyfraNavMenuItemComponent",
            "id": "component-ZyfraNavMenuItemComponent-bf27d37f78311352da157176b79f026d",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ZyfraMenuItem"
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TemplateRef<any>"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<ZyfraMenuItem>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "itemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\n\n@Component({\n  selector: 'zyfra-nav-menu-item',\n  templateUrl: './zyfra-nav-menu-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuItemComponent {\n  @Input() item: ZyfraMenuItem;\n  @Input() itemExtra: TemplateRef<any>;\n\n  @Output() itemClick: EventEmitter<ZyfraMenuItem> = new EventEmitter();\n\n  itemClickHandler(event: MouseEvent, item: ZyfraMenuItem): void {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!item.url) {\n      event.preventDefault();\n    }\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item\n      });\n    }\n    this.itemClick.emit(item);\n  }\n\n  onItemKeyDown(event): void {\n    const listItem = event.currentTarget.parentElement;\n    switch (event.code) {\n      case 'Space':\n      case 'Enter':\n        if (listItem) {\n          listItem.children[0].click();\n        }\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"p-menuitem-wrapper\" (click)=\"$event.stopPropagation()\">\n    <div class=\"p-menuitem-content\"\n         pTooltip\n         [class]=\"item.styleClass\"\n         [ngClass]=\"{'p-hidden': item.visible === false}\"\n         [ngStyle]=\"item.style\"\n         [tooltipOptions]=\"item.tooltipOptions\">\n        <a *ngIf=\"!item.routerLink\"\n           class=\"p-menuitem-link\"\n           role=\"menuitem\"\n           [attr.href]=\"item.url||null\"\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\n           [attr.data-automationid]=\"item.automationId\"\n           [attr.target]=\"item.target\"\n           [attr.title]=\"item.title\"\n           [attr.id]=\"item.id\"\n           [ngClass]=\"{'p-disabled':item.disabled}\"\n           (keydown)=\"onItemKeyDown($event)\"\n           (click)=\"itemClickHandler($event, item)\">\n            <span *ngIf=\"item.icon\"\n                  class=\"p-menuitem-icon\"\n                  [ngClass]=\"item.icon\">\n            </span>\n            <span *ngIf=\"item.escape !== false; else htmlLabel\"\n                  #label\n                  class=\"p-menuitem-text\"\n                  position=\"below\"\n                  [zyfraHint]=\"item.label\"\n                  [hasOverflowText]=\"label\">{{item.label}}\n            </span>\n            <ng-template #htmlLabel>\n                <span #label\n                      class=\"p-menuitem-text\"\n                      position=\"below\"\n                      [zyfraHint]=\"item.label\"\n                      [hasOverflowText]=\"label\"\n                      [innerHTML]=\"item.label\">\n                </span>\n            </ng-template>\n        </a>\n        <a *ngIf=\"item.routerLink\"\n           class=\"p-menuitem-link\"\n           role=\"menuitem\"\n           [routerLink]=\"item.routerLink\"\n           [attr.data-automationid]=\"item.automationId\"\n           [queryParams]=\"item.queryParams\"\n           [routerLinkActive]=\"'p-menuitem-link-active'\"\n           [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n           [attr.target]=\"item.target\"\n           [attr.id]=\"item.id\"\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\n           [attr.title]=\"item.title\"\n           [ngClass]=\"{'p-disabled':item.disabled}\"\n           [fragment]=\"item.fragment\"\n           [queryParamsHandling]=\"item.queryParamsHandling\"\n           [preserveFragment]=\"item.preserveFragment\"\n           [skipLocationChange]=\"item.skipLocationChange\"\n           [replaceUrl]=\"item.replaceUrl\"\n           [state]=\"item.state\"\n           (keydown)=\"onItemKeyDown($event)\"\n           (click)=\"itemClickHandler($event, item)\">\n            <span *ngIf=\"item.icon\"\n                  class=\"p-menuitem-icon\"\n                  [ngClass]=\"item.icon\">\n            </span>\n            <span *ngIf=\"item.escape !== false; else htmlRouteLabel\"\n                  #label\n                  class=\"p-menuitem-text\"\n                  position=\"below\"\n                  [zyfraHint]=\"item.label\"\n                  [hasOverflowText]=\"label\">{{item.label}}\n            </span>\n            <ng-template #htmlRouteLabel>\n                <span #label\n                      class=\"p-menuitem-text\"\n                      position=\"below\"\n                      [zyfraHint]=\"item.label\"\n                      [hasOverflowText]=\"label\"\n                      [innerHTML]=\"item.label\">\n                </span>\n            </ng-template>\n        </a>\n\n        <ng-container *ngTemplateOutlet=\"itemExtra; context: { $implicit: item }\"></ng-container>\n    </div>\n</div>\n"
        },
        {
            "name": "ZyfraPaginatorComponent",
            "id": "component-ZyfraPaginatorComponent-ffca6d8963a67d39f742bd9b65767cf8",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alwaysShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page.",
                    "description": "<p>Whether to show it even there is only one page.</p>\n",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "currentPageReportTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "dropdownAppendTo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).",
                    "description": "<p>Target element to attach the dropdown overlay, valid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name).</p>\n",
                    "line": 71,
                    "type": "any"
                },
                {
                    "name": "dropdownItemTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the dropdown item inside in the paginator.",
                    "description": "<p>Template instance to inject into the dropdown item inside in the paginator.</p>\n",
                    "line": 66,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "dropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.",
                    "description": "<p>Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</p>\n",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Zero-relative number of the first row to be displayed.",
                    "description": "<p>Zero-relative number of the first row to be displayed.</p>\n",
                    "line": 29,
                    "type": "number"
                },
                {
                    "name": "pageLinkSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display.",
                    "description": "<p>Number of page links to display.</p>\n",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Data count to display per page.",
                    "description": "<p>Data count to display per page.</p>\n",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Array of integer/object values to display inside rows per page dropdown.\nA object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]",
                    "description": "<p>Array of integer/object values to display inside rows per page dropdown.\nA object that have &#39;showAll&#39; key can be added to it to show all data. Exp; [10,20,30,{showAll:&#39;All&#39;}]</p>\n",
                    "line": 38,
                    "type": "PageOption[]"
                },
                {
                    "name": "showCurrentPageReport",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report.",
                    "description": "<p>Whether to display current page report.</p>\n",
                    "line": 84,
                    "type": "boolean"
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page.",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page.</p>\n",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "showJumpToPageDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page.",
                    "description": "<p>Whether to display a dropdown to navigate to any page.</p>\n",
                    "line": 88,
                    "type": "boolean"
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links.",
                    "description": "<p>Whether to show page links.</p>\n",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "templateLeft",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the left side of the paginator.",
                    "description": "<p>Template instance to inject into the left side of the paginator.</p>\n",
                    "line": 58,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "templateRight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the right side of the paginator.",
                    "description": "<p>Template instance to inject into the right side of the paginator.</p>\n",
                    "line": 62,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records.",
                    "description": "<p>Number of total records.</p>\n",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\ntype PageOption = number | Record<string, unknown>;\n\nexport interface PageChangeEvent {\n  first: number;\n  rows: number;\n  page: number;\n  pageCount: number;\n}\n\n@Component({\n  selector: 'zyfra-paginator',\n  templateUrl: './zyfra-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraPaginatorComponent {\n  /**\n   * Number of total records.\n   */\n  @Input() totalRecords = 0;\n  /**\n   *  Data count to display per page.\n   */\n  @Input() rows = 0;\n  /**\n   * \tZero-relative number of the first row to be displayed.\n   */\n  @Input() first = 0;\n  /**\n   * \tNumber of page links to display.\n   */\n  @Input() pageLinkSize = 5;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown.\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   */\n  @Input() rowsPerPageOptions: PageOption[] = null;\n  /**\n   * \tInline style of the component.\n   */\n  @Input() style: string = null;\n  /**\n   * \tStyle class of the component.\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Whether to show it even there is only one page.\n   */\n  @Input() alwaysShow = true;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   */\n  @Input() templateLeft: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   */\n  @Input() templateRight: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the dropdown item inside in the paginator.\n   */\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   */\n  @Input() dropdownAppendTo: any = null;\n  /**\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   */\n  @Input() dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate: string;\n  /**\n   * Whether to display current page report.\n   */\n  @Input() showCurrentPageReport = false;\n  /**\n   * \tWhether to display a dropdown to navigate to any page.\n   */\n  @Input() showJumpToPageDropdown = false;\n  /**\n   * \tWhether to show page links.\n   */\n  @Input() showPageLinks = true;\n\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\n\n  onPageChange(event: PageChangeEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-paginator\n  class=\"zyfra-paginator\"\n  [rows]=\"rows\"\n  [totalRecords]=\"totalRecords\"\n  [pageLinkSize]=\"pageLinkSize\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [alwaysShow]=\"alwaysShow\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [templateLeft]=\"templateLeft\"\n  [templateRight]=\"templateRight\"\n  [dropdownItemTemplate]=\"dropdownItemTemplate\"\n  [dropdownAppendTo]=\"dropdownAppendTo\"\n  [dropdownScrollHeight]=\"dropdownScrollHeight\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showPageLinks]=\"showPageLinks\"\n  (onPageChange)=\"onPageChange($event)\"\n></p-paginator>\n"
        },
        {
            "name": "ZyfraPasswordComponent",
            "id": "component-ZyfraPasswordComponent-162f3b86860b7758e4164a78c1118769",
            "file": "libs/components/src/lib/password/zyfra-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "feedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "mediumLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "mediumRegex",
                    "defaultValue": "'Regex for a medium level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "promptLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "required",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "strongLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "strongRegex",
                    "defaultValue": "'Regex for a strong level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "toggleMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                },
                {
                    "name": "weakLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-password',\n  templateUrl: './zyfra-password.component.html',\n})\nexport class ZyfraPasswordComponent {\n  @Input() value: string;\n  @Input() promptLabel: string;\n  @Input() mediumRegex = 'Regex for a medium level password.';\n  @Input() strongRegex = 'Regex for a strong level password.';\n  @Input() weakLabel: string;\n  @Input() mediumLabel: string;\n  @Input() strongLabel: string;\n  @Input() feedback = true;\n  @Input() toggleMask: boolean;\n  @Input() appendTo: string;\n  @Input() inputStyle: any;\n  @Input() inputStyleClass: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() disabled: boolean;\n  @Input() label = '';\n  @Input() required = '';\n\n  @Output() valueChange = new EventEmitter<string>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-password\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    [promptLabel]=\"promptLabel\"\n    [mediumRegex]=\"mediumRegex\"\n    [strongRegex]=\"strongRegex\"\n    [weakLabel]=\"weakLabel\"\n    [disabled]=\"disabled\"\n    [mediumLabel]=\"mediumLabel\"\n    [strongLabel]=\"strongLabel\"\n    [feedback]=\"feedback\"\n    [toggleMask]=\"toggleMask\"\n    [appendTo]=\"appendTo\"\n    [inputStyle]=\"inputStyle\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n  ></p-password>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraProgressBarComponent",
            "id": "component-ZyfraProgressBarComponent-3fde80e7da63a9823a6db6412b700133",
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "defaultValue": "'determinate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"determinate\" | \"indeterminate\""
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "unit",
                    "defaultValue": "'%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-progress-bar',\n  templateUrl: './zyfra-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraProgressBarComponent {\n  @Input() value: number = null;\n  @Input() showValue: boolean = true;\n  @Input() unit: string = '%';\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\n  @Input() style: { [key: string]: string | null } = null;\n  @Input() styleClass: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-progressBar\n  [value]=\"value\"\n  [showValue]=\"showValue\"\n  [unit]=\"unit\"\n  [mode]=\"mode\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n>\n</p-progressBar>\n"
        },
        {
            "name": "ZyfraRadioButtonComponent",
            "id": "component-ZyfraRadioButtonComponent-5058199258f58428562b7d6b285c2840",
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RADIO_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-radio-button",
            "styleUrls": [
                "./zyfra-radio-button.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "FormControl"
                },
                {
                    "name": "formControlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "labelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "ngModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "T"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "T"
                }
            ],
            "outputsClass": [
                {
                    "name": "ngModelChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<T>"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<FocusEvent>"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<FocusEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "modelChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  forwardRef,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nexport const RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'zyfra-radio-button',\n  templateUrl: './zyfra-radio-button.component.html',\n  styleUrls: ['./zyfra-radio-button.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RADIO_VALUE_ACCESSOR],\n})\nexport class ZyfraRadioButtonComponent<T> implements ControlValueAccessor {\n  @Input() name: string;\n  @Input() value: T;\n  @Input() label: string;\n  @Input() disabled: boolean;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n  @Input() ariaLabel: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() labelStyleClass: string;\n  @Input() formControlName: string;\n  @Input() formControl: FormControl;\n  @Input() ngModel: T;\n\n  @Output() ngModelChange: EventEmitter<T> = new EventEmitter();\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\n  @Output() onFocus: EventEmitter<FocusEvent> = new EventEmitter();\n  @Output() onBlur: EventEmitter<FocusEvent> = new EventEmitter();\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  modelChange(value: T): void {\n    if (this.formControl) {\n      this.formControl.setValue(value);\n    }\n    this.ngModelChange.emit(this.ngModel);\n  }\n\n  handleClick(event: PointerEvent): void {\n    this.onClick.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.onFocus.emit(event);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.onBlur.emit(event);\n  }\n\n  registerOnChange(fn: () => void): void {}\n\n  registerOnTouched(fn: () => void): void {}\n\n  writeValue(value: T): void {\n    this.ngModel = value;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n    this.cd.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@radioButtonSize: 20px;\n@radioButtonCoreSize: 8px;\n@radioButtonMiniSize: 16px;\n@radioButtonMiniCoreSize: 4px;\n@radioBorderAccent: 2px solid var(--radioButtonHover);\n\n.radio-disabled() {\n  background: var(--radioButtonDisabledBg);\n  border-color: var(--radioButtonDisabled);\n}\n\n.p-radiobutton {\n  width: @radioButtonSize;\n  height: @radioButtonSize;\n\n  &-mini {\n    width: @radioButtonMiniSize;\n    height: @radioButtonMiniSize;\n  }\n\n  &-group p-radiobutton {\n    margin-bottom: 5px;\n  }\n\n  &-disabled {\n    cursor: default;\n  }\n\n  .p-disabled.p-disabled {\n    opacity: initial;\n    .radio-disabled();\n  }\n\n  .p-radiobutton-box {\n    border: @radioBorderAccent;\n    background: var(--radioButtonBg);\n    width: @radioButtonSize;\n    height: @radioButtonSize;\n\n    &:not(:hover):not(.p-disabled) {\n      border-color: var(--radioButton);\n    }\n\n    .p-radiobutton-mini& {\n      width: @radioButtonMiniSize;\n      height: @radioButtonMiniSize;\n    }\n\n    .p-radiobutton-icon {\n      background-color: var(--radioButtonBg);\n      border: @radioBorderAccent;\n      width: @radioButtonCoreSize;\n      height: @radioButtonCoreSize;\n      .p-radiobutton-mini& {\n        width: @radioButtonMiniCoreSize;\n        height: @radioButtonMiniCoreSize;\n      }\n    }\n\n    &:not(.p-disabled) {\n      &.p-focus {\n        border-color: var(--radioButtonActive);\n      }\n\n      &:not(.p-highlight):hover {\n        border-color: var(--radioButtonHover);\n      }\n    }\n\n    &.p-highlight {\n      &.p-disabled {\n        &,\n        .p-radiobutton-icon {\n          .radio-disabled();\n        }\n      }\n      &:not(.p-disabled),\n      &:not(.p-disabled):hover {\n        background: var(--radioButtonBg);\n        border: @radioBorderAccent;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./zyfra-radio-button.component.less"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-radioButton\n  [name]=\"name\"\n  [(ngModel)]=\"ngModel\"\n  (ngModelChange)=\"modelChange($event)\"\n  [value]=\"value\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [ariaLabel]=\"ariaLabel\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [labelStyleClass]=\"labelStyleClass\"\n  (onClick)=\"handleClick($event)\"\n  (onFocus)=\"handleFocus($event)\"\n  (onBlur)=\"handleBlur($event)\"\n></p-radioButton>\n"
        },
        {
            "name": "ZyfraRowTogglerComponent",
            "id": "component-ZyfraRowTogglerComponent-09f3709c47671ec4e0f302a6ce79d025",
            "file": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-row-toggler",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./row-toggler.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-row-toggler',\n  templateUrl: './row-toggler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraRowTogglerComponent {\n  @Input() data: any;\n  @Input() expanded: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<button class=\"zyfra-row-toggler\" type=\"button\" [pRowToggler]=\"data\">\n  <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n</button>\n"
        },
        {
            "name": "ZyfraSearchCellComponent",
            "id": "component-ZyfraSearchCellComponent-f702ac7fe71220a22a162559d20173f5",
            "file": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[zyfra-search-cell]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-cell.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "isNativeFiltering",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted",
                    "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "matchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<ValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTableComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "hostClass",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ZyfraBaseSearchCellComponent } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n@Component({\n  selector: '[zyfra-search-cell]',\n  templateUrl: './search-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSearchCellComponent extends ZyfraBaseSearchCellComponent {\n  constructor(public readonly table: ZyfraTableComponent) {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ZyfraBaseSearchCellComponent",
            "templateData": "<input\n  class=\"search-cell__input\"\n  type=\"text\"\n  (input)=\"filter($any($event.target).value, field, matchMode)\"\n  [value]=\"$any(table.filters[field])?.value || ''\"\n  [placeholder]=\"placeholder\"\n>\n<i class=\"search-cell__icon pi pi-search\"></i>\n"
        },
        {
            "name": "ZyfraSelectButtonComponent",
            "id": "component-ZyfraSelectButtonComponent-bde73bb79a088ff1edeea25a50ba5a08",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-select-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-select-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "optionDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "OPTION[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change emitter\n",
                    "description": "<p>Optional Change emitter</p>\n",
                    "line": 35,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "onOptionClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick emitter\n",
                    "description": "<p>Optional OptionClick emitter</p>\n",
                    "line": 40,
                    "type": "EventEmitter<SelectButtonOptionClick<OPTION>>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change handler\n",
                    "description": "<p>Optional Change handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOptionClick",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick handler\n",
                    "description": "<p>Optional OptionClick handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-selectButton\n  [options]=\"options\"\n  [optionLabel]=\"optionLabel\"\n  [optionValue]=\"optionValue\"\n  [optionDisabled]=\"optionDisabled\"\n  [multiple]=\"multiple\"\n  [tabindex]=\"tabindex\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [disabled]=\"disabled\"\n  [dataKey]=\"dataKey\"\n  (onChange)=\"handleChange($event)\"\n  (onOptionClick)=\"handleOptionClick($event)\"\n></p-selectButton>\n"
        },
        {
            "name": "ZyfraSliderComponent",
            "id": "component-ZyfraSliderComponent-cd50db376d1be8c2a25cef3b2fdb8440",
            "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | number[]"
                },
                {
                    "name": "orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "SliderOrientation"
                },
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSlideEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSlideEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\ntype SliderOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'zyfra-slider',\n  templateUrl: './zyfra-slider.component.html',\n})\nexport class ZyfraSliderComponent {\n  @Input() model: number | number[];\n  @Input() animate: boolean;\n  @Input() disabled: boolean;\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() orientation: SliderOrientation = 'horizontal'; //| \"vertical\"\n  @Input() step: number = 1;\n  @Input() range: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() ariaLabelledBy: string;\n\n  /* onChange */\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  /* onSlideEnd */\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\n\n  onChangeHandler(event) {\n    //console.log(event, 'event');\n    if (event.value) this.model = event.value;\n    if (event.values) this.model = event.values;\n    this.onChange.emit(this.model);\n  }\n\n  onSlideEndHandler(event) {\n    this.onSlideEnd.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-slider\n  [(ngModel)]=\"model\"\n  [animate]=\"animate\"\n  [disabled]=\"disabled\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [orientation]=\"orientation\"\n  [step]=\"step\"\n  [range]=\"range\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  (onChange)=\"onChangeHandler($event)\"\n  (onSlideEnd)=\"onSlideEndHandler($event)\"\n></p-slider>\n"
        },
        {
            "name": "ZyfraSortIconComponent",
            "id": "component-ZyfraSortIconComponent-51af22eeb8a6321e2d82ea0a03e31362",
            "file": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-sort-icon",
            "styleUrls": [
                "./sort-icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./sort-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-sort-icon',\n  templateUrl: './sort-icon.component.html',\n  styleUrls: ['./sort-icon.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSortIconComponent {\n  @Input() field: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  float: right;\n}\n",
                    "styleUrl": "./sort-icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<p-sortIcon [field]=\"field\"></p-sortIcon>\n"
        },
        {
            "name": "ZyfraSpinnerComponent",
            "id": "component-ZyfraSpinnerComponent-9ad3adba298ff8f6095209b92e42092f",
            "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animationDuration",
                    "defaultValue": "'2s'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SpinnerColor"
                },
                {
                    "name": "fill",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Record<string | string | number>"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\ntype SpinnerColor = 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success';\n\n@Component({\n  selector: 'zyfra-spinner',\n  templateUrl: './zyfra-spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSpinnerComponent {\n  @Input() size = '100px';\n  @Input() style: Record<string, string | number>;\n  @Input() styleClass: string;\n  @Input() strokeWidth = '2';\n  @Input() fill = 'none';\n  @Input() animationDuration = '2s';\n  @Input() color: SpinnerColor = 'primary';\n\n  get spinnerStyle(): Record<string, string | number> {\n    return {\n      ...this.style,\n      width: this.size,\n      height: this.size,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "spinnerStyle": {
                    "name": "spinnerStyle",
                    "getSignature": {
                        "name": "spinnerStyle",
                        "type": "",
                        "returnType": "Record<string, string | number>",
                        "line": 19
                    }
                }
            },
            "templateData": "<p-progressSpinner\n  [class]=\"'zyfra-spinner zyfra-spinner_color-' + color\"\n  [style]=\"spinnerStyle\"\n  [styleClass]=\"styleClass\"\n  [strokeWidth]=\"strokeWidth\"\n  [fill]=\"fill\"\n  [animationDuration]=\"animationDuration\"\n></p-progressSpinner>\n"
        },
        {
            "name": "ZyfraSplitButtonComponent",
            "id": "component-ZyfraSplitButtonComponent-8b3618ef1635c95dd4a1afd74a815ca4",
            "file": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-split-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any"
                },
                {
                    "name": "dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'195ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "menuStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "menuStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "MenuItem[]"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'225ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<PointerEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDropdownClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-split-button',\n  templateUrl: './zyfra-split-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSplitButtonComponent {\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() menuStyle: string;\n  @Input() menuStyleClass: string;\n  @Input() styleClass: string;\n  @Input() appendTo: any;\n  @Input() dir: string;\n  @Input() tabindex: number;\n  @Input() model: MenuItem[];\n  @Input() showTransitionOptions = '225ms ease-out';\n  @Input() hideTransitionOptions = '195ms ease-in';\n\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\n  @Output() onDropdownClick: EventEmitter<PointerEvent> = new EventEmitter();\n\n  nativeClick(event: Event): void {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  onClickHandler(event: PointerEvent) {\n    this.onClick.emit(event);\n  }\n\n  onDropdownClickHandler(event: PointerEvent) {\n    this.onDropdownClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-splitButton\n  [model]=\"model\"\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [menuStyle]=\"menuStyle\"\n  [menuStyleClass]=\"menuStyleClass\"\n  [appendTo]=\"appendTo\"\n  [tabindex]=\"tabindex\"\n  [dir]=\"dir\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n  (click)=\"nativeClick($event)\"\n  (onClick)=\"onClickHandler($event)\"\n  (onDropdownClick)=\"onDropdownClickHandler($event)\"\n></p-splitButton>\n"
        },
        {
            "name": "ZyfraSplitterComponent",
            "id": "component-ZyfraSplitterComponent-afe58619a945d149cab3bec12764f771",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-splitter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "gutterSize",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the divider in pixels.",
                    "description": "<p>Size of the divider in pixels.</p>\n",
                    "line": 41,
                    "type": "number"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Orientation of the panels, valid values are \"horizontal\" and \"vertical\".",
                    "description": "<p>Orientation of the panels, valid values are &quot;horizontal&quot; and &quot;vertical&quot;.</p>\n",
                    "line": 36,
                    "type": "\"horizontal\" | \"vertical\""
                },
                {
                    "name": "minSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum size of the elements relative to 100%.",
                    "description": "<p>Minimum size of the elements relative to 100%.</p>\n",
                    "line": 31,
                    "type": "number[]"
                },
                {
                    "name": "panelSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the elements relative to 100%.",
                    "description": "<p>Size of the elements relative to 100%.</p>\n",
                    "line": 26,
                    "type": "number[]"
                },
                {
                    "name": "panelStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the pnanel.",
                    "description": "<p>Inline style of the pnanel.</p>\n",
                    "line": 71,
                    "type": "literal type"
                },
                {
                    "name": "panelStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the panel.",
                    "description": "<p>Style class of the panel.</p>\n",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "stateKey",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Storage identifier of a stateful Splitter.",
                    "description": "<p>Storage identifier of a stateful Splitter.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.",
                    "description": "<p>Defines where a stateful splitter keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage.</p>\n",
                    "line": 51,
                    "type": "\"session\" | \"local\""
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 56,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 61,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize ends.\n\n",
                    "description": "<p>Callback to invoke when resize ends.</p>\n",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onResizeStart",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize starts.\n\n",
                    "description": "<p>Callback to invoke when resize starts.</p>\n",
                    "line": 84,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraSplitterTemplateDirective>",
                    "optional": false,
                    "description": "<p>Template html.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nTemplate html.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResizeStartHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\ntype onResizeEvent = { originalEvent: MouseEvent; sizes: [number, number] };\n\n@Component({\n  selector: 'zyfra-splitter',\n  templateUrl: './zyfra-splitter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSplitterComponent implements AfterContentInit {\n  // Вся информация о методах и свойствах хранится тут import { Splitter } from 'primeng/splitter';\n  /**\n   * Size of the elements relative to 100%.\n   *\n   */\n  @Input() panelSizes: number[] = [];\n  /**\n   * Minimum size of the elements relative to 100%.\n   *\n   */\n  @Input() minSizes: number[] = [];\n  /**\n   * Orientation of the panels, valid values are \"horizontal\" and \"vertical\".\n   *\n   */\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\n  /**\n   * Size of the divider in pixels.\n   *\n   */\n  @Input() gutterSize = 8;\n  /**\n   * Storage identifier of a stateful Splitter.\n   *\n   */\n  @Input() stateKey: string = null;\n  /**\n   * Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\n   *\n   */\n  @Input() stateStorage: 'session' | 'local' = 'session';\n  /**\n   * Inline style of the component.\n   *\n   */\n  @Input() style: { [key: string]: string | null } = null;\n  /**\n   * Style class of the component.\n   *\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Style class of the panel.\n   *\n   */\n  @Input() panelStyleClass: string = null;\n  /**\n   * Inline style of the pnanel.\n   *\n   */\n  @Input() panelStyle: { [key: string]: string | null } = null;\n\n  /**\n   * Template html.\n   *\n   */\n  @ContentChildren(ZyfraSplitterTemplateDirective)\n  templates: QueryList<ZyfraSplitterTemplateDirective>;\n\n  /**\n   * Callback to invoke when resize starts.\n   *\n   */\n  @Output() onResizeStart = new EventEmitter<onResizeEvent>();\n\n  /**\n   * Callback to invoke when resize ends.\n   *\n   */\n  @Output() onResizeEnd = new EventEmitter<onResizeEvent>();\n\n  panels = [];\n\n  // tslint:disable-next-line: typedef\n  ngAfterContentInit() {\n    this.templates.forEach((item) => {\n      this.panels.push(item.template);\n    });\n  }\n\n  onResizeStartHandler(event) {\n    this.onResizeStart.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-splitter\n  [panelSizes]=\"panelSizes\"\n  [minSizes]=\"minSizes\"\n  [layout]=\"layout\"\n  [gutterSize]=\"gutterSize\"\n  [stateKey]=\"stateKey\"\n  [stateStorage]=\"stateStorage\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [panelStyleClass]=\"panelStyleClass\"\n  [panelStyle]=\"panelStyle\"\n  (onResizeStart)=\"onResizeStartHandler($event)\"\n  (onResizeEnd)=\"onResizeEnd.emit($event)\"\n>\n  <ng-template pTemplate *ngFor=\"let item of panels; let i = index\">\n    <ng-container *ngTemplateOutlet=\"item\"></ng-container>\n  </ng-template>\n</p-splitter>\n"
        },
        {
            "name": "ZyfraTableCheckboxComponent",
            "id": "component-ZyfraTableCheckboxComponent-033e2831b297536abf1331331d28e484",
            "file": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-table-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-table-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableCheckbox",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'checkbox', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional, ViewChild } from '@angular/core';\nimport { ZyfraSelectableRowDirective } from '../directives/selectable-row.directive';\nimport { TableCheckbox } from 'primeng/table';\n\n@Component({\n  selector: 'zyfra-table-checkbox',\n  templateUrl: './zyfra-table-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTableCheckboxComponent {\n  @ViewChild('checkbox', { static: true }) checkbox: TableCheckbox;\n\n  @Input() disabled: boolean;\n  @Input() value: any;\n  @Input() index: number;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() required: boolean;\n  @Input() ariaLabel: string;\n\n  constructor(\n    @Optional() private zyfraSelectableRow: ZyfraSelectableRowDirective\n  ) {}\n\n  onClick(event: Event): void {\n    if (this.zyfraSelectableRow) {\n      event.stopPropagation();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraSelectableRow",
                        "type": "ZyfraSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "zyfraSelectableRow",
                        "type": "ZyfraSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-tableCheckbox\n  #checkbox\n  [value]=\"value\"\n  [disabled]=\"disabled\"\n  [index]=\"index\"\n  [inputId]=\"inputId\"\n  [name]=\"name\"\n  [required]=\"required\"\n  [ariaLabel]=\"ariaLabel\"\n  (click)=\"onClick($event)\"\n></p-tableCheckbox>\n"
        },
        {
            "name": "ZyfraTableColumnFilterComponent",
            "id": "component-ZyfraTableColumnFilterComponent-ea4e9286632082fa75b78eb9d4c949be",
            "file": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable.table, deps: [ZyfraTableComponent]\n}",
                    "type": "component",
                    "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable"
                }
            ],
            "selector": "zyfra-table-column-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-column-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "currencyDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "display",
                    "defaultValue": "'row'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "hideOnClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "localeMatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "matchMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "matchModeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "SelectItem[]"
                },
                {
                    "name": "maxConstraints",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number"
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number"
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number"
                },
                {
                    "name": "operator",
                    "defaultValue": "FilterOperator.AND",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "showAddButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "showApplyButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "showClearButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "showMatchModes",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "showMenu",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "showOperator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport { FilterOperator, SelectItem } from 'primeng/api';\nimport { Table } from 'primeng/table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\nimport { ZyfraTableTemplateDirective } from '../directives/table-template.directive';\n\n@Component({\n  selector: 'zyfra-table-column-filter',\n  templateUrl: './table-column-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Table,\n      useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable.table,\n      deps: [ZyfraTableComponent]\n    }\n  ],\n})\nexport class ZyfraTableColumnFilterComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  headerTemplate: TemplateRef<any>;\n  filterTemplate: TemplateRef<any>;\n  footerTemplate: TemplateRef<any>;\n\n  @Input() field: string;\n  @Input() type = 'text';\n  @Input() display = 'row';\n  @Input() showMenu = true;\n  @Input() matchMode: string;\n  @Input() operator: string = FilterOperator.AND;\n  @Input() showOperator = true;\n  @Input() showClearButton = true;\n  @Input() showApplyButton = true;\n  @Input() showMatchModes = true;\n  @Input() showAddButton = true;\n  @Input() hideOnClear = false;\n  @Input() placeholder: string;\n  @Input() matchModeOptions: SelectItem[];\n  @Input() maxConstraints = 2;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() locale: string;\n  @Input() localeMatcher: string;\n  @Input() currency: string;\n  @Input() currencyDisplay: string;\n  @Input() useGrouping = true;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-columnFilter\n  [field]=\"field\"\n  [type]=\"type\"\n  [display]=\"display\"\n  [showMenu]=\"showMenu\"\n  [matchMode]=\"matchMode\"\n  [operator]=\"operator\"\n  [showOperator]=\"showOperator\"\n  [showClearButton]=\"showClearButton\"\n  [showApplyButton]=\"showApplyButton\"\n  [showMatchModes]=\"showMatchModes\"\n  [showAddButton]=\"showAddButton\"\n  [hideOnClear]=\"hideOnClear\"\n  [placeholder]=\"placeholder\"\n  [matchModeOptions]=\"matchModeOptions\"\n  [maxConstraints]=\"maxConstraints\"\n  [minFractionDigits]=\"minFractionDigits\"\n  [maxFractionDigits]=\"maxFractionDigits\"\n  [prefix]=\"prefix\"\n  [suffix]=\"suffix\"\n  [locale]=\"locale\"\n  [localeMatcher]=\"localeMatcher\"\n  [currency]=\"currency\"\n  [currencyDisplay]=\"currencyDisplay\"\n  [useGrouping]=\"useGrouping\"\n>\n  <ng-template pTemplate=\"header\" let-field *ngIf=\"headerTemplate\">\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: field }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"filter\" let-value let-filterCallback=\"filterCallback\" *ngIf=\"filterTemplate\">\n    <ng-container *ngTemplateOutlet=\"filterTemplate; context: {\n      $implicit: value,\n      filterCallback: filterCallback\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" let-field *ngIf=\"footerTemplate\">\n    <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: field }\"></ng-container>\n  </ng-template>\n</p-columnFilter>\n"
        },
        {
            "name": "ZyfraTableComponent",
            "id": "component-ZyfraTableComponent-3c13d54888bea0afa41c82ff0d969c84",
            "file": "libs/components/src/lib/table/zyfra-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TableService"
                },
                {
                    "name": "FilterService"
                },
                {
                    "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable.table, deps: [ZyfraTableComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable"
                }
            ],
            "selector": "zyfra-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "breakpoint",
                    "defaultValue": "'960px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The breakpoint to define the maximum width boundary when using stack responsive layout",
                    "description": "<p>The breakpoint to define the maximum width boundary when using stack responsive layout</p>\n",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "csvSeparator",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Character to use as the csv separator",
                    "description": "<p>Character to use as the csv separator</p>\n",
                    "line": 81,
                    "type": "string"
                },
                {
                    "name": "editingRowKeys",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Map instance to keep the rows being edited where key of the map is the data key of the row",
                    "description": "<p>Map instance to keep the rows being edited where key of the map is the data key of the row</p>\n",
                    "line": 143,
                    "type": "literal type"
                },
                {
                    "name": "editMode",
                    "defaultValue": "'cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the editing mode, valid values are \"cell\" and \"row\"",
                    "description": "<p>Defines the editing mode, valid values are &quot;cell&quot; and &quot;row&quot;</p>\n",
                    "line": 139,
                    "type": "\"cell\" | \"row\""
                },
                {
                    "name": "expandedRowKeys",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Map instance to keep the expanded rows where key of the map is the data key of the row",
                    "description": "<p>Map instance to keep the expanded rows where key of the map is the data key of the row</p>\n",
                    "line": 103,
                    "type": "literal type"
                },
                {
                    "name": "exportFilename",
                    "defaultValue": "'download'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the exported file",
                    "description": "<p>Name of the exported file</p>\n",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "exportFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A function to implement custom export. Need to return string value",
                    "description": "<p>A function to implement custom export. Need to return string value</p>\n",
                    "line": 127,
                    "type": "function"
                },
                {
                    "name": "filters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of FilterMetadata objects to provide external filters",
                    "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                    "line": 93,
                    "type": ""
                },
                {
                    "name": "frozenValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display as frozen",
                    "description": "<p>An array of objects to display as frozen</p>\n",
                    "line": 56,
                    "type": "any[]"
                },
                {
                    "name": "groupRowsBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "One or more field names to use in row grouping",
                    "description": "<p>One or more field names to use in row grouping</p>\n",
                    "line": 147,
                    "type": "string | string[]"
                },
                {
                    "name": "groupRowsByOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default row grouping is enabled",
                    "description": "<p>Order to sort when default row grouping is enabled</p>\n",
                    "line": 151,
                    "type": "number"
                },
                {
                    "name": "paginatorDropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value",
                    "description": "<p>Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value</p>\n",
                    "line": 123,
                    "type": "string"
                },
                {
                    "name": "responsive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if the columns should be stacked in smaller screens",
                    "description": "<p>Defines if the columns should be stacked in smaller screens</p>\n",
                    "line": 119,
                    "type": "boolean"
                },
                {
                    "name": "responsiveLayout",
                    "defaultValue": "'stack'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the responsive mode",
                    "description": "<p>Defines the responsive mode</p>\n",
                    "line": 60,
                    "type": "\"stack\" | \"scroll\""
                },
                {
                    "name": "rowExpandMode",
                    "defaultValue": "'multiple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether multiple rows can be expanded at any time",
                    "description": "<p>Whether multiple rows can be expanded at any time</p>\n",
                    "line": 107,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "rowGroupMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Type of the row grouping",
                    "description": "<p>Type of the row grouping</p>\n",
                    "line": 68,
                    "type": "\"subheader\" | \"rowspan\""
                },
                {
                    "name": "rowTrackBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
                    "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
                    "line": 77,
                    "type": "function"
                },
                {
                    "name": "scrollDirection",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Orientation of the scrolling",
                    "description": "<p>Orientation of the scrolling</p>\n",
                    "line": 111,
                    "type": "\"vertical\" | \"horizontal\" | \"both\""
                },
                {
                    "name": "showInitialSortBadge",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the initial sort badge or not",
                    "description": "<p>Whether to use the initial sort badge or not</p>\n",
                    "line": 73,
                    "type": "boolean"
                },
                {
                    "name": "stateKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Unique identifier of a stateful table to use in state storage",
                    "description": "<p>Unique identifier of a stateful table to use in state storage</p>\n",
                    "line": 131,
                    "type": "string"
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage",
                    "description": "<p>Defines where a stateful table keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage</p>\n",
                    "line": 135,
                    "type": "\"session\" | \"local\""
                },
                {
                    "name": "virtualScrollDelay",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Threshold in milliseconds to delay lazy loading during scrolling",
                    "description": "<p>Threshold in milliseconds to delay lazy loading during scrolling</p>\n",
                    "line": 115,
                    "type": "number"
                },
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange active element\n",
                    "description": "<p>Change active element</p>\n",
                    "line": 158,
                    "type": "EventEmitter<T>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "firstChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke first is changed\n",
                    "description": "<p>Callback to invoke first is changed</p>\n",
                    "line": 190,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowCollapse",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is collapsed\n",
                    "description": "<p>Callback to invoke when a row is collapsed</p>\n",
                    "line": 174,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowExpand",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is expanded\n",
                    "description": "<p>Callback to invoke when a row is expanded</p>\n",
                    "line": 170,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is reordered\n",
                    "description": "<p>Callback to invoke when a row is reordered</p>\n",
                    "line": 178,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowSelect",
                    "defaultValue": "new EventEmitter<RowSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is selected\n",
                    "description": "<p>Callback to invoke when a row is selected</p>\n",
                    "line": 162,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowUnselect",
                    "defaultValue": "new EventEmitter<RowSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is unselected\n",
                    "description": "<p>Callback to invoke when a row is unselected</p>\n",
                    "line": 166,
                    "type": "EventEmitter"
                },
                {
                    "name": "stateRestore",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke table state is restored\n",
                    "description": "<p>Callback to invoke table state is restored</p>\n",
                    "line": 186,
                    "type": "EventEmitter"
                },
                {
                    "name": "stateSave",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke table state is saved\n",
                    "description": "<p>Callback to invoke table state is saved</p>\n",
                    "line": 182,
                    "type": "EventEmitter"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown,  originalEvent: Event; }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_filters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Filters",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "expandedRowTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footerGroupedTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenExpandedRowTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenRowsTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "groupFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "groupHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerGroupedTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rowspanTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Table",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'ptable', {static: true}"
                        }
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 466,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "exportCSV",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "Table",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 484,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 453,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 457,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 461,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 356,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 436,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 428,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { FilterService } from 'primeng/api';\nimport { Table, TableService } from 'primeng/table';\nimport { ZyfraBaseTableComponent } from '../@core/base-table';\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\nimport { ZyfraTableTemplateDirective } from './directives/table-template.directive';\nimport { Filters, RowSelectionEvent } from './zyfra-table.types';\n\n@Component({\n  selector: 'zyfra-table',\n  templateUrl: './zyfra-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    TableService,\n    FilterService,\n    {\n      provide: Table,\n      useFactory: (zyfraTable: ZyfraTableComponent) => zyfraTable.table,\n      deps: [ZyfraTableComponent],\n    },\n  ],\n})\nexport class ZyfraTableComponent<T = unknown>\n  extends ZyfraBaseTableComponent<T>\n  implements AfterContentInit, OnChanges\n{\n  @ViewChild('ptable', { static: true }) table: Table;\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  public expandedRowTemplate: TemplateRef<any>;\n  public footerGroupedTemplate: TemplateRef<any>;\n  public frozenExpandedRowTemplate: TemplateRef<any>;\n  public frozenRowsTemplate: TemplateRef<any>;\n  public groupFooterTemplate: TemplateRef<unknown>;\n  public groupHeaderTemplate: TemplateRef<unknown>;\n  public headerGroupedTemplate: TemplateRef<any>;\n  public loadingBodyTemplate: TemplateRef<any>;\n  public rowspanTemplate: TemplateRef<any>;\n\n  //region Inputs\n  /**\n   * An array of objects to display as frozen\n   */\n  @Input() frozenValue: any[];\n  /**\n   * Defines the responsive mode\n   */\n  @Input() responsiveLayout: 'stack' | 'scroll' = 'stack';\n  /**\n   * The breakpoint to define the maximum width boundary when using stack responsive layout\n   */\n  @Input() breakpoint = '960px';\n  /**\n   * Type of the row grouping\n   */\n  @Input() rowGroupMode: 'subheader' | 'rowspan';\n\n  /**\n   * Whether to use the initial sort badge or not\n   */\n  @Input() showInitialSortBadge = true;\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\n   */\n  @Input() rowTrackBy: (...args: any[]) => any;\n  /**\n   * Character to use as the csv separator\n   */\n  @Input() csvSeparator = ',';\n  /**\n   * Name of the exported file\n   */\n  @Input() exportFilename = 'download';\n\n  private _filters: Filters = {};\n\n  /**\n   * An array of FilterMetadata objects to provide external filters\n   */\n  @Input()\n  set filters(filters: Filters) {\n    this._filters = filters;\n  }\n\n  get filters(): Filters {\n    return this.table.filters;\n  }\n  /**\n   * Map instance to keep the expanded rows where key of the map is the data key of the row\n   */\n  @Input() expandedRowKeys: { [s: string]: boolean } = {};\n  /**\n   * Whether multiple rows can be expanded at any time\n   */\n  @Input() rowExpandMode: 'single' | 'multiple' = 'multiple';\n  /**\n   * Orientation of the scrolling\n   */\n  @Input() scrollDirection: 'vertical' | 'horizontal' | 'both' = 'vertical';\n  /**\n   * Threshold in milliseconds to delay lazy loading during scrolling\n   */\n  @Input() virtualScrollDelay = 250;\n  /**\n   * Defines if the columns should be stacked in smaller screens\n   */\n  @Input() responsive = false;\n  /**\n   * Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value\n   */\n  @Input() paginatorDropdownScrollHeight = '200px';\n  /**\n   * A function to implement custom export. Need to return string value\n   */\n  @Input() exportFunction: (event: { data: any; field: any }) => string;\n  /**\n   * Unique identifier of a stateful table to use in state storage\n   */\n  @Input() stateKey: string;\n  /**\n   * Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage\n   */\n  @Input() stateStorage: 'session' | 'local' = 'session';\n  /**\n   * Defines the editing mode, valid values are \"cell\" and \"row\"\n   */\n  @Input() editMode: 'cell' | 'row' = 'cell';\n  /**\n   * Map instance to keep the rows being edited where key of the map is the data key of the row\n   */\n  @Input() editingRowKeys: { [s: string]: boolean } = {};\n  /**\n   * One or more field names to use in row grouping\n   */\n  @Input() groupRowsBy: string | string[];\n  /**\n   * Order to sort when default row grouping is enabled\n   */\n  @Input() groupRowsByOrder = 1;\n  //endregion\n\n  //region Outputs\n  /**\n   * Change active element\n   */\n  @Output() activeElementChange: EventEmitter<T> = new EventEmitter<T>();\n  /**\n   * Callback to invoke when a row is selected\n   */\n  @Output() rowSelect = new EventEmitter<RowSelectionEvent>();\n  /**\n   * Callback to invoke when a row is unselected\n   */\n  @Output() rowUnselect = new EventEmitter<RowSelectionEvent>();\n  /**\n   * Callback to invoke when a row is expanded\n   */\n  @Output() rowExpand = new EventEmitter<{ originalEvent: Event; data: unknown }>();\n  /**\n   * Callback to invoke when a row is collapsed\n   */\n  @Output() rowCollapse = new EventEmitter<{ originalEvent: Event; data: unknown }>();\n  /**\n   * Callback to invoke when a row is reordered\n   */\n  @Output() rowReorder = new EventEmitter<{ dragIndex: number; dropIndex: number }>();\n  /**\n   * Callback to invoke table state is saved\n   */\n  @Output() stateSave = new EventEmitter<unknown>();\n  /**\n   * Callback to invoke table state is restored\n   */\n  @Output() stateRestore = new EventEmitter<unknown>();\n  /**\n   * Callback to invoke first is changed\n   */\n  @Output() firstChange = new EventEmitter<number>();\n  //endregion\n\n  //region Base class overrides\n  override getContentTemplate(): QueryList<BaseTableTemplateDirective> {\n    return this.templates;\n  }\n\n  override getTable(): Table {\n    return this.table;\n  }\n\n  override initTemplateByType(item: ZyfraTableTemplateDirective): void {\n    switch (item.getType()) {\n      case 'headergrouped':\n        this.headerGroupedTemplate = item.template;\n        break;\n\n      case 'loadingbody':\n        this.loadingBodyTemplate = item.template;\n        break;\n\n      case 'footergrouped':\n        this.footerGroupedTemplate = item.template;\n        break;\n\n      case 'rowexpansion':\n        this.expandedRowTemplate = item.template;\n        break;\n\n      case 'groupheader':\n        this.groupHeaderTemplate = item.template;\n        break;\n\n      case 'rowspan':\n        this.rowspanTemplate = item.template;\n        break;\n\n      case 'groupfooter':\n        this.groupFooterTemplate = item.template;\n        break;\n\n      case 'frozenrows':\n        this.frozenRowsTemplate = item.template;\n        break;\n\n      case 'frozenheader':\n        this.frozenHeaderTemplate = item.template;\n        break;\n\n      case 'frozenbody':\n        this.frozenBodyTemplate = item.template;\n        break;\n\n      case 'frozenfooter':\n        this.frozenFooterTemplate = item.template;\n        break;\n\n      case 'frozencolgroup':\n        this.frozenColGroupTemplate = item.template;\n        break;\n\n      case 'frozenrowexpansion':\n        this.frozenExpandedRowTemplate = item.template;\n        break;\n    }\n  }\n  //endregion\n\n  public exportCSV(options?: any): void {\n    return this.table.exportCSV(options);\n  }\n\n  public clear(): void {\n    this.table.clear();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "ZyfraBaseTableComponent",
            "implements": [
                "AfterContentInit",
                "OnChanges"
            ],
            "accessors": {
                "filters": {
                    "name": "filters",
                    "setSignature": {
                        "name": "filters",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "filters",
                                "type": "Filters",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "rawdescription": "An array of FilterMetadata objects to provide external filters",
                        "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                        "jsdoctags": [
                            {
                                "name": "filters",
                                "type": "Filters",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "filters",
                        "type": "",
                        "returnType": "Filters",
                        "line": 97
                    }
                }
            },
            "templateData": "<p-table\n  class=\"zyfra-table\"\n  #ptable\n  [value]=\"value\"\n  [columns]=\"columns\"\n  [frozenColumns]=\"frozenColumns\"\n  [frozenValue]=\"frozenValue\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n  [tableStyle]=\"tableStyle\"\n  [tableStyleClass]=\"tableStyleClass\"\n  [paginator]=\"paginator\"\n  [rows]=\"rows\"\n  [first]=\"first\"\n  [totalRecords]=\"totalRecords\"\n  [pageLinks]=\"pageLinks\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [paginatorPosition]=\"paginatorPosition\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showPageLinks]=\"showPageLinks\"\n  [sortMode]=\"sortMode\"\n  [sortField]=\"sortField\"\n  [sortOrder]=\"sortOrder\"\n  [multiSortMeta]=\"multiSortMeta\"\n  [defaultSortOrder]=\"defaultSortOrder\"\n  [customSort]=\"customSort\"\n  [showInitialSortBadge]=\"showInitialSortBadge\"\n  [selectionMode]=\"selectionMode\"\n  [selection]=\"selection\"\n  [contextMenuSelection]=\"contextMenuSelection\"\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\n  [dataKey]=\"dataKey\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [rowTrackBy]=\"rowTrackBy\"\n  [lazy]=\"lazy\"\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\n  [compareSelectionBy]=\"compareSelectionBy\"\n  [csvSeparator]=\"csvSeparator\"\n  [exportFilename]=\"exportFilename\"\n  [filters]=\"filters\"\n  [filterDelay]=\"filterDelay\"\n  [globalFilterFields]=\"globalFilterFields\"\n  [filterLocale]=\"filterLocale\"\n  [expandedRowKeys]=\"expandedRowKeys\"\n  [rowExpandMode]=\"rowExpandMode\"\n  [scrollable]=\"scrollable\"\n  [scrollDirection]=\"scrollDirection\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualScrollDelay]=\"virtualScrollDelay\"\n  [virtualRowHeight]=\"virtualRowHeight\"\n  [responsive]=\"responsive\"\n  [contextMenu]=\"contextMenu\"\n  [resizableColumns]=\"resizableColumns\"\n  [columnResizeMode]=\"columnResizeMode\"\n  [reorderableColumns]=\"reorderableColumns\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [showLoader]=\"showLoader\"\n  [rowHover]=\"rowHover\"\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\n  [paginatorDropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n  [autoLayout]=\"autoLayout\"\n  [resetPageOnSort]=\"resetPageOnSort\"\n  [exportFunction]=\"exportFunction\"\n  [stateKey]=\"stateKey\"\n  [stateStorage]=\"stateStorage\"\n  [editMode]=\"editMode\"\n  [editingRowKeys]=\"editingRowKeys\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [groupRowsBy]=\"groupRowsBy\"\n  [rowGroupMode]=\"rowGroupMode\"\n  (onRowSelect)=\"rowSelect.emit($event)\"\n  (onRowUnselect)=\"rowUnselect.emit($event)\"\n  (onPage)=\"page.emit($event)\"\n  (onSort)=\"sort.emit($event)\"\n  (onFilter)=\"onFilter.emit($event)\"\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\n  (onRowExpand)=\"rowExpand.emit($event)\"\n  (onRowCollapse)=\"rowCollapse.emit($event)\"\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\n  (onColResize)=\"colResize.emit($event)\"\n  (onColReorder)=\"colReorder.emit($event)\"\n  (onRowReorder)=\"rowReorder.emit($event)\"\n  (onEditInit)=\"editInit.emit($event)\"\n  (onEditComplete)=\"editComplete.emit($event)\"\n  (onEditCancel)=\"editCancel.emit($event)\"\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\n  (onStateSave)=\"stateSave.emit($event)\"\n  (onStateRestore)=\"stateRestore.emit($event)\"\n  (sortFunction)=\"sortFunction.emit($event)\"\n  (firstChange)=\"firstChange.emit($event)\"\n  (selectionChange)=\"selectionChange.emit($event)\"\n>\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\n    <div class=\"zyfra-table-title\">{{ title }}</div>\n    <ng-container *ngIf=\"captionTemplate\">\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\" *ngIf=\"headerTemplate\" let-columns>\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"groupheader\" let-item *ngIf=\"groupHeaderTemplate\">\n    <ng-container *ngTemplateOutlet=\"groupHeaderTemplate; context: { $implicit: item  }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"groupfooter\" let-item *ngIf=\"groupFooterTemplate\">\n    <ng-container *ngTemplateOutlet=\"groupFooterTemplate; context: { $implicit: item  }\"></ng-container>\n  </ng-template>\n\n  <ng-template\n    pTemplate=\"body\"\n    let-item\n    let-rowIndex=\"rowIndex\"\n    let-rowgroup=\"rowgroup\"\n    let-rowspan=\"rowspan\"\n    let-expanded=\"expanded\"\n    let-editing=\"editing\"\n    let-columns=\"columns\"\n    *ngIf=\"bodyTemplate\"\n  >\n    <ng-container *ngTemplateOutlet=\"bodyTemplate; context: {\n      $implicit: item,\n      rowIndex: rowIndex,\n      rowgroup: rowgroup,\n      rowspan: rowspan,\n      expanded: expanded,\n      editing: editing,\n      columns: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"frozenbody\" let-item let-rowIndex=\"rowIndex\" *ngIf=\"frozenBodyTemplate\">\n    <ng-container *ngTemplateOutlet=\"frozenBodyTemplate; context: {\n      $implicit: item,\n      rowIndex: rowIndex\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"loadingbody\" let-columns=\"columns\" *ngIf=\"loadingBodyTemplate\">\n    <ng-container *ngTemplateOutlet=\"loadingBodyTemplate; context: {\n      columns: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-item *ngIf=\"expandedRowTemplate\">\n    <ng-container *ngTemplateOutlet=\"expandedRowTemplate; context: { $implicit: item }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" *ngIf=\"footerTemplate\">\n    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\" *ngIf=\"emptyMessageTemplate\">\n    <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\n  </ng-template>\n</p-table>\n"
        },
        {
            "name": "ZyfraTableHeaderCheckboxComponent",
            "id": "component-ZyfraTableHeaderCheckboxComponent-20f4f14cf667f7aadfcfb46ab6938b65",
            "file": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-table-header-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-header-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-table-header-checkbox',\n  templateUrl: './table-header-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTableHeaderCheckboxComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n"
        },
        {
            "name": "ZyfraTabMenuComponent",
            "id": "component-ZyfraTabMenuComponent-9c0ea3419a2a82c7e2d1315637108e59",
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "MenuItem"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_model",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backLabel",
                    "defaultValue": "'Вернуться'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentMenu",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentMenuIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<Element>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navListElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scroll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Event>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "stopOutsideClickListener$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subMenuContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabSubmenuContainer'"
                        }
                    ]
                },
                {
                    "name": "subMenuObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabMenu",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabMenu"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initClickListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initOutsideClickListener",
                    "args": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initSubmenuObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isPartlyVisible",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentIndex",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  HostBinding,\n  AfterViewChecked,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { TabMenu } from 'primeng/tabmenu';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { debounceTime, filter, first, takeUntil } from 'rxjs/operators';\nimport { SlideMenu } from 'primeng/slidemenu';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'zyfra-tab-menu',\n  templateUrl: './zyfra-tab-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraTabMenuComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\n  @ViewChild(TabMenu) public tabMenu: TabMenu;\n  @ViewChild('tabSubmenuContainer') subMenuContainer: ElementRef;\n  @ViewChild('prevControl') public prevControl: ElementRef;\n  @ViewChild('nextControl') public nextControl: ElementRef;\n  @Input() activeItem: MenuItem = null;\n  @Input() style: string = null;\n  @Input() styleClass: string = null;\n  @Input() set model(items: MenuItem[]) {\n    this._model = items;\n    this.tabsChanged = true;\n  }\n  get model(): MenuItem[] {\n    return this._model;\n  }\n  public backLabel = 'Вернуться';\n  public openedItem: MenuItem;\n\n  private _model: MenuItem[] = null;\n  private tabsChanged: boolean;\n  private maxScrollDistance: number;\n  private navLinks: NodeListOf<Element>;\n  private navListElement: HTMLElement;\n  private currentMenu = null;\n  private currentMenuIndex: number;\n  private subMenuObserver: MutationObserver;\n  private destroyed$ = new Subject();\n  private scroll$: Observable<Event>;\n  private stopOutsideClickListener$ = new Subject();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public ngAfterViewInit(): void {\n    this.navListElement = this.tabMenu.navbar.nativeElement;\n    this.navLinks = this.navListElement.querySelectorAll('a.p-menuitem-link');\n    this.initClickListeners();\n    this.scroll$ = fromEvent(this.navListElement, 'scroll').pipe(debounceTime(50));\n    this.scroll$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.updateControlsState());\n    this.initSubmenuObserver();\n  }\n\n  public ngAfterViewChecked(): void {\n    if (this.tabsChanged) {\n      this.tabsChanged = false;\n      requestAnimationFrame(() => {\n        this.hasOverflow = this.navListElement.scrollWidth > this.navListElement.offsetWidth;\n        this.updateControlsState();\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.subMenuObserver.disconnect();\n    this.stopOutsideClickListener$.next();\n    this.stopOutsideClickListener$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public toggleMenu(event: MouseEvent, menu: SlideMenu, index: number): void {\n    const currentTarget = (event.target as HTMLElement).closest('li');\n    if (this.currentMenu && this.currentMenu !== menu) {\n      this.currentMenu.hide();\n    }\n    const toggleMenu = () => {\n      menu.toggle({ currentTarget });\n      this.currentMenu = menu;\n      this.currentMenuIndex = index;\n    };\n\n    if (this.isPartlyVisible(event.target as HTMLElement)) {\n      currentTarget.scrollIntoView({ inline: 'nearest' });\n      this.scroll$.pipe(first(), takeUntil(this.destroyed$)).subscribe(() => toggleMenu());\n    } else {\n      toggleMenu();\n    }\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n\n  initOutsideClickListener(menu): void {\n    this.stopOutsideClickListener$.next();\n    fromEvent(this.document, 'click')\n      .pipe(takeUntil(this.stopOutsideClickListener$))\n      .subscribe((e: PointerEvent) => {\n        const clickInside = e.composedPath().includes(this.subMenuContainer.nativeElement);\n        if (!clickInside) {\n          menu.hide();\n          this.stopOutsideClickListener$.next();\n        }\n      });\n  }\n\n  public selectTabFromList(index: number): void {\n    this.activeItem = this.model[index];\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\n    (this.navLinks.item(index) as HTMLElement).click();\n  }\n\n  public scrollPrevious(): void {\n    this.navListElement.scrollLeft -= this.navListElement.offsetWidth;\n  }\n\n  public scrollNext(): void {\n    this.navListElement.scrollLeft += this.navListElement.offsetWidth;\n  }\n\n  private updateControlsState(): void {\n    if (this.hasOverflow) {\n      this.maxScrollDistance = this.navListElement.scrollWidth - this.navListElement.offsetWidth;\n      this.disablePrevControl = this.navListElement.scrollLeft === 0;\n      this.disableNextControl = this.maxScrollDistance - this.navListElement.scrollLeft < 1;\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\n    }\n  }\n\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\n    if (isDisabled) {\n      this.renderer.addClass(el, 'disabled');\n    } else {\n      this.renderer.removeClass(el, 'disabled');\n    }\n  }\n\n  private isPartlyVisible(target: HTMLElement): boolean {\n    const offsetParent = target.offsetParent as HTMLElement;\n    const isLeftSideHidden =\n      offsetParent.offsetLeft - this.navListElement.scrollLeft < this.nextControl.nativeElement.offsetWidth;\n    const isRightSideHidden =\n      offsetParent.offsetLeft +\n        offsetParent.offsetWidth -\n        this.nextControl.nativeElement.offsetWidth -\n        this.navListElement.scrollLeft >\n      this.navListElement.offsetWidth;\n    return isLeftSideHidden || isRightSideHidden;\n  }\n\n  private initClickListeners(): void {\n    fromEvent(this.navListElement, 'click')\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((e: MouseEvent) => {\n        this.updateCurrentIndex(e.target as HTMLElement);\n        this.updateActiveItem();\n      });\n\n    fromEvent(this.subMenuContainer.nativeElement, 'click')\n      .pipe(\n        filter(\n          (e: MouseEvent) =>\n            !(e.target as HTMLElement).nextElementSibling && e.target instanceof HTMLAnchorElement\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.updateActiveItem();\n      });\n  }\n\n  private initSubmenuObserver(): void {\n    const target = this.subMenuContainer.nativeElement;\n    const config = {\n      childList: true,\n    };\n    const callback = (mutations: MutationRecord[]) => {\n      mutations.forEach(() => {\n        this.openedItem = this.subMenuContainer.nativeElement.hasChildNodes()\n          ? this.model[this.currentMenuIndex]\n          : null;\n        this.cdr.markForCheck();\n      });\n    };\n    this.subMenuObserver = new MutationObserver(callback);\n    this.subMenuObserver.observe(target, config);\n  }\n\n  private updateActiveItem(): void {\n    this.activeItem = this.model[this.currentMenuIndex];\n    this.cdr.markForCheck();\n  }\n\n  private updateCurrentIndex(target: HTMLElement): void {\n    this.navLinks.forEach((value, key) => {\n      if (value === target.closest('a')) {\n        this.currentMenuIndex = key;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "accessors": {
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "model",
                        "type": "[]",
                        "returnType": "MenuItem[]",
                        "line": 44
                    }
                }
            },
            "templateData": "<div class=\"tab-container\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\n    </div>\n  </div>\n\n  <p-tabMenu [model]=\"model\" [activeItem]=\"activeItem\" [style]=\"style\" [styleClass]=\"styleClass\">\n    <ng-template pTemplate=\"item\" let-item let-i=\"index\">\n      <i *ngIf=\"item.icon\" class=\"p-menuitem-icon pi pi-fw {{ item.icon }}\"></i>\n      <span class=\"p-menuitem-text\">{{ item?.label }}</span>\n      <ng-container *ngIf=\"item.items && item.items\">\n        <i\n          class=\"menu-toggle-icon zyfra-icon {{\n            this.openedItem === item ? 'chevrons-dropdown' : 'chevrons-menu-right'\n          }}\"\n          (click)=\"toggleMenu($event, menu, i)\"\n        ></i>\n        <p-slideMenu\n          #menu\n          [model]=\"item.items\"\n          [popup]=\"true\"\n          [appendTo]=\"tabSubmenuContainer\"\n          [backLabel]=\"backLabel\"\n          (onShow)=\"initOutsideClickListener(menu)\"\n        ></p-slideMenu>\n      </ng-container>\n    </ng-template>\n  </p-tabMenu>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <div\n        *ngFor=\"let tab of model; let i = index\"\n        class=\"tab-list-item text-overflow\"\n        tooltipPosition=\"bottom\"\n        [pTooltip]=\"tab.label\"\n        (click)=\"selectTabFromList(i); op.hide()\"\n      >\n        {{ tab.label }}\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\n</div>\n<div #tabSubmenuContainer class=\"tab-submenu-container\"></div>\n"
        },
        {
            "name": "ZyfraTabPanelComponent",
            "id": "component-ZyfraTabPanelComponent-d477ee69df051c665f6349ff6dccfd52",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "headerStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "headerStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "leftIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "rightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "tooltip",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"right\" | \"left\" | \"top\" | \"bottom\""
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "propChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_leftIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_rightIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contentTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'header'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "implicitContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tab-panel',\n  templateUrl: './zyfra-tab-panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTabPanelComponent {\n  @ContentChild('header') public headerTemplate: TemplateRef<any>;\n  @ContentChild('content') public contentTemplate: TemplateRef<any>;\n\n  @ViewChild(TemplateRef) implicitContent: TemplateRef<any>;\n  @Input() selected: boolean = false;\n  @Input() closable: boolean = false;\n  @Input() headerStyle: string = null;\n  @Input() headerStyleClass: string = null;\n  @Input() cache: boolean = true;\n  @Input() tooltip: any = null;\n  @Input() tooltipStyleClass: string = null;\n  @Input() tooltipPosition: 'right' | 'left' | 'top' | 'bottom' = 'top';\n  @Input() tooltipPositionStyle: string = 'absolute';\n\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.propChange.emit();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @Input() set header(header: string) {\n    this._header = header;\n    this.propChange.emit();\n  }\n\n  get header(): string {\n    return this._header;\n  }\n\n  @Input() set leftIcon(leftIcon: string) {\n    this._leftIcon = leftIcon;\n    this.propChange.emit();\n  }\n\n  get leftIcon(): string {\n    return this._leftIcon;\n  }\n\n  @Input() set rightIcon(rightIcon: string) {\n    this._rightIcon = rightIcon;\n    this.propChange.emit();\n  }\n\n  get rightIcon(): string {\n    return this._rightIcon;\n  }\n\n  @Output() propChange: EventEmitter<void> = new EventEmitter();\n\n  private _header: string = null;\n  private _disabled: boolean = false;\n  private _leftIcon: string = null;\n  private _rightIcon: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "header",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "leftIcon": {
                    "name": "leftIcon",
                    "setSignature": {
                        "name": "leftIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "leftIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 55
                    }
                },
                "rightIcon": {
                    "name": "rightIcon",
                    "setSignature": {
                        "name": "rightIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "rightIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 64
                    }
                }
            },
            "templateData": "<ng-template><ng-content></ng-content></ng-template>\n"
        },
        {
            "name": "ZyfraTabViewComponent",
            "id": "component-ZyfraTabViewComponent-4741a04ee5c9a0607e7faa7f760061fc",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number | null"
                },
                {
                    "name": "controlClose",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | null"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string | null"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "keyDownHandler",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "lastFocused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navContentElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabClosed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTabPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTabPanelComponent"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTabPanelComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabsChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabView",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabView"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activeIndexChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFocus",
                    "args": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focusNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "focusPrev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialPrepare",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tabsInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { TabView } from 'primeng/tabview';\nimport { ZyfraTabPanelComponent } from '../zyfra-tab-panel/zyfra-tab-panel.component';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'zyfra-tab-view',\n  templateUrl: './zyfra-tab-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraTabViewComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\n  @ViewChild(TabView) public tabView: TabView;\n  @ViewChild('prevControl') public prevControl: ElementRef;\n  @ViewChild('nextControl') public nextControl: ElementRef;\n  @ContentChildren(ZyfraTabPanelComponent) tabPanels: QueryList<ZyfraTabPanelComponent>;\n  @Input() activeIndex: number | null = null;\n  @Input() controlClose = false;\n  @Input() style: string | null = null;\n  @Input() styleClass: string | null = null;\n\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  public tabs: ZyfraTabPanelComponent[] = [];\n  public tabList: { header: string; index: number; disabled: boolean }[] = [];\n\n  private tabsChanged = true;\n  private tabClosed = false;\n  private maxScrollDistance: number;\n  private navLinks: NodeListOf<HTMLElement>;\n  private lastFocused: Element;\n  private navContentElement: HTMLElement;\n  private destroyed$: Subject<any> = new Subject();\n  private tabsChanged$: Subject<any> = new Subject();\n  private keyDownHandler = (e: KeyboardEvent): void => {\n    // use an arrow function to access the context of the component\n    if (e.key !== 'ArrowRight' && e.key !== 'ArrowLeft') {\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowLeft':\n        this.focusPrev();\n        break;\n      case 'ArrowRight':\n        this.focusNext();\n        break;\n    }\n  };\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public ngAfterContentInit(): void {\n    this.tabsInit();\n    this.tabPanels.changes.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      this.tabsChanged$.next();\n      this.tabsInit();\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    this.navContentElement = this.tabView.content.nativeElement;\n    this.navContentElement.addEventListener('keydown', this.keyDownHandler);\n    fromEvent(this.navContentElement, 'scroll')\n      .pipe(debounceTime(50), takeUntil(this.destroyed$))\n      .subscribe(() => this.updateControlsState());\n  }\n\n  private initialPrepare(): void {\n    this.navLinks = this.navContentElement.querySelectorAll('a.p-tabview-nav-link');\n    const highlight = this.navContentElement.querySelector('li.p-highlight');\n    let focusPresent = false;\n    this.navLinks.forEach((value) => {\n      if (this.lastFocused === value) {\n        focusPresent = true;\n      }\n    });\n    if (!focusPresent) {\n      this.lastFocused = highlight ? highlight.firstElementChild : this.navLinks.item(0);\n    }\n    this.navLinks.forEach((link, index): void => {\n      if (this.lastFocused !== link) {\n        this.renderer.setAttribute(this.navLinks[index], 'tabindex', '-1');\n      }\n    });\n  }\n\n  public ngAfterViewChecked(): void {\n    if (this.tabsChanged || this.tabClosed) {\n      requestAnimationFrame(() => {\n        this.hasOverflow = this.navContentElement.scrollWidth > this.navContentElement.offsetWidth;\n        this.updateControlsState();\n        if (this.tabsChanged) {\n          this.initialPrepare();\n        }\n        this.tabsChanged = false;\n        this.tabClosed = false;\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.removeListeners();\n    this.tabsChanged$.next();\n    this.tabsChanged$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public activeIndexChangeHandler(event): void {\n    this.activeIndex = event;\n    this.activeIndexChange.emit(event);\n  }\n\n  public handleChange(event): void {\n    this.onChange.emit(event);\n    this.changeFocus(this.lastFocused, this.navLinks.item(event.index));\n  }\n\n  public handleClose(event): void {\n    const closedTab = event.originalEvent.target.offsetParent;\n    this.tabClosed = true;\n    this.tabList = this.tabList.filter(({ index }) => index !== event.index);\n    if (this.lastFocused === closedTab) {\n      this.changeFocus(this.lastFocused, this.navLinks.item(this.tabList[0].index));\n    }\n    this.onClose.emit(event);\n  }\n\n  public scrollPrevious(): void {\n    this.navContentElement.scrollLeft -= this.navContentElement.offsetWidth;\n  }\n\n  public scrollNext(): void {\n    this.navContentElement.scrollLeft += this.navContentElement.offsetWidth;\n  }\n\n  public selectTabFromList(event: MouseEvent, index: number): void {\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\n    if (!this.tabList[index].disabled && this.activeIndex !== index) {\n      this.activeIndex = index;\n      this.changeFocus(this.lastFocused, this.navLinks.item(index));\n      this.onChange.emit({ originalEvent: event, index });\n    }\n  }\n\n  private tabsInit(): void {\n    this.tabs = this.tabPanels.toArray();\n    this.tabList = this.tabs.map((value, index) => ({\n      header: value.header,\n      index,\n      disabled: value.disabled,\n    }));\n    this.tabsChanged = true;\n    merge(...this.tabs.map((value) => value.propChange))\n      .pipe(takeUntil(this.tabsChanged$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    this.cdr.markForCheck();\n  }\n\n  private updateControlsState(): void {\n    if (this.hasOverflow) {\n      this.maxScrollDistance = this.navContentElement.scrollWidth - this.navContentElement.offsetWidth;\n      this.disablePrevControl = this.navContentElement.scrollLeft === 0;\n      this.disableNextControl = this.maxScrollDistance - this.navContentElement.scrollLeft < 1;\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\n    }\n  }\n\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\n    if (isDisabled) {\n      this.renderer.addClass(el, 'disabled');\n    } else {\n      this.renderer.removeClass(el, 'disabled');\n    }\n  }\n\n  private removeListeners(): void {\n    this.navContentElement.removeEventListener('keydown', this.keyDownHandler);\n  }\n\n  private focusPrev(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.previousElementSibling) {\n      return;\n    }\n    const next = current.parentElement.previousElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(current, next);\n    next.focus();\n    if (next.offsetLeft < this.navContentElement.scrollLeft) {\n      this.navContentElement.scrollLeft =\n        next.offsetLeft + next.offsetWidth - this.navContentElement.offsetWidth;\n    }\n  }\n\n  private focusNext(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.nextElementSibling) {\n      return;\n    }\n    const next = current.parentElement.nextElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(current, next);\n    next.focus();\n    if (\n      next.offsetLeft + next.offsetWidth >\n      this.navContentElement.offsetWidth + this.navContentElement.scrollLeft\n    ) {\n      this.navContentElement.scrollLeft = next.offsetLeft;\n    }\n  }\n\n  private changeFocus(current: Element, next: Element): void {\n    this.renderer.setAttribute(current, 'tabindex', '-1');\n    this.renderer.setAttribute(next, 'tabindex', '0');\n    this.lastFocused = next;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "templateData": "<div class=\"tab-container\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\n    </div>\n  </div>\n  <p-tabView\n    [activeIndex]=\"activeIndex\"\n    [controlClose]=\"controlClose\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    (activeIndexChange)=\"activeIndexChangeHandler($event)\"\n    (onChange)=\"handleChange($event)\"\n    (onClose)=\"handleClose($event)\"\n  >\n    <ng-container *ngFor=\"let tab of tabs\">\n      <p-tabPanel\n        [header]=\"tab.header\"\n        [selected]=\"tab.selected\"\n        [disabled]=\"tab.disabled\"\n        [closable]=\"tab.closable\"\n        [leftIcon]=\"tab.leftIcon\"\n        [rightIcon]=\"tab.rightIcon\"\n        [headerStyle]=\"tab.headerStyle\"\n        [headerStyleClass]=\"tab.headerStyleClass\"\n        [cache]=\"tab.cache\"\n        [tooltip]=\"tab.tooltip\"\n        [tooltipPosition]=\"tab.tooltipPosition\"\n        [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n      >\n        <ng-template *ngIf=\"tab.headerTemplate\" pTemplate=\"header\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.headerTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-template *ngIf=\"tab.contentTemplate\" pTemplate=\"content\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.contentTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-container\n          [ngTemplateOutlet]=\"tab.implicitContent\"\n          [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n        ></ng-container>\n      </p-tabPanel>\n    </ng-container>\n  </p-tabView>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <div\n        *ngFor=\"let tab of tabList\"\n        class=\"tab-list-item text-overflow\"\n        [class.disabled]=\"tab.disabled\"\n        tooltipPosition=\"bottom\"\n        [pTooltip]=\"tab.header\"\n        (click)=\"selectTabFromList($event, tab.index); op.hide()\"\n      >\n        {{ tab.header }}\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\n</div>\n"
        },
        {
            "name": "ZyfraTextareaComponent",
            "id": "component-ZyfraTextareaComponent-8d75dd6930541ccb7382e89289ce122e",
            "file": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResize",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-textarea',\n  templateUrl: './zyfra-textarea.component.html',\n})\nexport class ZyfraTextareaComponent {\n  @Input() value: string;\n  @Input() rows: number;\n  @Input() cols: number;\n  @Input() autoResize: boolean;\n  @Input() id: string;\n  @Input() name: string;\n  @Input() placeholder: string;\n  @Input() class: string;\n  @Input() disabled: boolean;\n  @Input() maxlength: number;\n  @Input() minlength: number;\n  @Input() label = '';\n  @Input() required = false;\n\n  @Output() valueChange = new EventEmitter<string>();\n  @Output() onResize = new EventEmitter<unknown>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <textarea\n    pInputTextarea\n    [rows]=\"rows\"\n    [cols]=\"cols\"\n    [autoResize]=\"autoResize\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    [placeholder]=\"placeholder\"\n    [class]=\"class\"\n    [disabled]=\"disabled\"\n    [maxlength]=\"maxlength\"\n    [minlength]=\"minlength\"\n    [name]=\"name\"\n    (onResize)=\"onResize.emit($event)\"\n  ></textarea>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraToastComponent",
            "id": "component-ZyfraToastComponent-e0bd1070296cc9809256e0f3a40e514c",
            "file": "libs/components/src/lib/toast/zyfra-toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "customTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any"
                },
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "hideTransformOptions",
                    "defaultValue": "'translateY(-100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'250ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "any"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "life",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "position",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "preventDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "preventOpenDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "severity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "showTransformOptions",
                    "defaultValue": "'translateY(100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "sticky",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCloseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-toast',\n  templateUrl: './zyfra-toast.component.html',\n  styles: [],\n  providers: [MessageService],\n})\nexport class ZyfraToastComponent {\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() key: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() position: string = 'top-right';\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() showTransitionOptions: string = '300ms ease-out';\n  @Input() hideTransitionOptions: string = '250ms ease-in';\n  @Input() showTransformOptions: string = 'translateY(100%)';\n  @Input() hideTransformOptions: string = 'translateY(-100%)';\n  @Input() preventOpenDuplicates: boolean;\n  @Input() preventDuplicates: boolean;\n\n  // --- for message -----\n  @Input() severity: string;\n  @Input() summary: string;\n  @Input() detail: string;\n  @Input() id: any;\n  @Input() life: number = 3000;\n  @Input() sticky: boolean = false;\n  @Input() closable: boolean = true;\n  @Input() data: any;\n  // @Input() key:string;\n\n  /* onClose */\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\n    this.primengConfig.ripple = true;\n  }\n\n  showMessage() {\n    this.messageService.add({\n      severity: this.severity,\n      summary: this.summary,\n      detail: this.detail,\n      life: this.life,\n      id: this.id,\n      sticky: this.sticky,\n      closable: this.closable,\n      data: this.data,\n    });\n  }\n\n  onCloseHandler(event) {\n    this.onClose.emit(event);\n  }\n\n  // нужны ли кастомные методы?\n  onReject() {\n    this.messageService.clear('c');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-toast\n  [key]=\"key\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [position]=\"position\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n  [showTransformOptions]=\"showTransformOptions\"\n  [hideTransformOptions]=\"hideTransformOptions\"\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\n  [preventDuplicates]=\"preventDuplicates\"\n  (onClose)=\"onReject()\"\n>\n  <ng-template *ngIf=\"customTemplate\" let-message pTemplate=\"message\">\n    <div class='p-toast-message-custom'>\n      <ng-container *ngTemplateOutlet=\"customTemplate\"></ng-container>\n    </div>\n  </ng-template>\n</p-toast>\n"
        },
        {
            "name": "ZyfraToggleButtonComponent",
            "id": "component-ZyfraToggleButtonComponent-be09976d2e482f74fda68d2e0cfc5892",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-toggle-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toggle-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "model",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "offIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "offLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "onIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "onLabel",
                    "defaultValue": "'confirm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface TToggleButtonClick {\n  originalEvent: PointerEvent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'zyfra-toggle-button',\n  templateUrl: './zyfra-toggle-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraToggleButtonComponent {\n  @Input() model = true;\n  @Input() onLabel: string = 'confirm';\n  @Input() offLabel: string;\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\n  @Input() offIcon = 'zyfra-icon cancel-close';\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  handleChange(event: TToggleButtonClick): void {\n    this.model = event.checked;\n    this.onChange.emit(this.model);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-toggleButton\n  [(ngModel)]=\"model\"\n  [onLabel]=\"onLabel\"\n  [offLabel]=\"offLabel\"\n  [onIcon]=\"onIcon\"\n  [offIcon]=\"offIcon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  (onChange)=\"handleChange($event)\"\n>\n</p-toggleButton>\n"
        },
        {
            "name": "ZyfraTreeComponent",
            "id": "component-ZyfraTreeComponent-5632cf17d2947d13125fbcde2323c2d7",
            "file": "libs/components/src/lib/tree/zyfra-tree.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any"
                },
                {
                    "name": "draggableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "draggableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "droppableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "droppableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "any"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "enableFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string"
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "indentation",
                    "defaultValue": "1.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "number"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TreeNode[]"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "metaKeySelection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "number"
                },
                {
                    "name": "propagateSelectionDown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "propagateSelectionUp",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "trackBy",
                    "defaultValue": "(index: number, item: any) => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "(index: number, item: any) => any"
                },
                {
                    "name": "validateDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "virtualNodeHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeContextMenuSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeDrop",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onFilterHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeCollapseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeContextMenuSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeDropHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpandHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeUnselectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-tree',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './zyfra-tree.component.html',\n})\nexport class ZyfraTreeComponent {\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\n\n  @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n  @Input() items: TreeNode[];\n\n  @Input() selectionMode: string; // single | multipple | checkbox\n\n  @Input() selection: any;\n\n  @Input() style: any;\n\n  @Input() styleClass: string;\n\n  @Input() contextMenu: any;\n\n  @Input() layout = 'vertical';\n\n  @Input() draggableScope: any;\n\n  @Input() droppableScope: any;\n\n  @Input() draggableNodes: boolean;\n\n  @Input() droppableNodes: boolean;\n\n  @Input() metaKeySelection = true;\n\n  @Input() propagateSelectionUp = true;\n\n  @Input() propagateSelectionDown = true;\n\n  @Input() loading: boolean;\n\n  @Input() loadingIcon = 'pi pi-spinner';\n\n  @Input() emptyMessage = '';\n\n  @Input() ariaLabel: string;\n\n  @Input() ariaLabelledBy: string;\n\n  @Input() validateDrop: boolean;\n\n  @Input() enableFilter: boolean;\n\n  @Input() filterBy = 'label';\n\n  @Input() filterMode = 'lenient';\n\n  @Input() filterPlaceholder: string;\n\n  @Input() filterLocale: string;\n\n  @Input() scrollHeight: string;\n\n  @Input() virtualScroll: boolean;\n\n  @Input() virtualNodeHeight: string;\n\n  @Input() minBufferPx: number;\n\n  @Input() maxBufferPx: number;\n\n  @Input() indentation = 1.5;\n\n  @Input() trackBy = (index: number, item: any) => item;\n\n  onNodeSelectHandler(event: Event): void {\n    this.onNodeSelect.emit(event);\n  }\n\n  onNodeUnselectHandler(event: Event): void {\n    this.onNodeUnselect.emit(event);\n  }\n\n  onNodeExpandHandler(event: Event): void {\n    this.onNodeExpand.emit(event);\n  }\n\n  onNodeCollapseHandler(event: Event): void {\n    this.onNodeCollapse.emit(event);\n  }\n\n  onNodeContextMenuSelectHandler(event: Event): void {\n    this.onNodeContextMenuSelect.emit(event);\n  }\n\n  onNodeDropHandler(event: Event): void {\n    this.onNodeDrop.emit(event);\n  }\n\n  onFilterHandler(event: Event): void {\n    this.onFilter.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tree\n  [value]=\"items\"\n  [selectionMode]=\"selectionMode\"\n  [(selection)]=\"selection\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [contextMenu]=\"contextMenu\"\n  [layout]=\"layout\"\n  [draggableScope]=\"draggableScope\"\n  [droppableScope]=\"droppableScope\"\n  [draggableNodes]=\"draggableNodes\"\n  [droppableNodes]=\"droppableNodes\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [propagateSelectionUp]=\"propagateSelectionUp\"\n  [propagateSelectionDown]=\"propagateSelectionDown\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [emptyMessage]=\"emptyMessage\"\n  [ariaLabel]=\"ariaLabel\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [validateDrop]=\"validateDrop\"\n  [filter]=\"enableFilter\"\n  [filterBy]=\"filterBy\"\n  [filterMode]=\"filterMode\"\n  [filterPlaceholder]=\"filterPlaceholder\"\n  [filterLocale]=\"filterLocale\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualNodeHeight]=\"virtualNodeHeight\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [trackBy]=\"trackBy\"\n  [indentation]=\"indentation\"\n  (onNodeSelect)=\"onNodeSelectHandler($event)\"\n  (onNodeUnselect)=\"onNodeUnselectHandler($event)\"\n  (onNodeExpand)=\"onNodeExpandHandler($event)\"\n  (onNodeCollapse)=\"onNodeCollapseHandler($event)\"\n  (onNodeContextMenuSelect)=\"onNodeContextMenuSelectHandler($event)\"\n  (onNodeDrop)=\"onNodeDropHandler($event)\"\n  (onFilter)=\"onFilterHandler($event)\"\n></p-tree>\n"
        },
        {
            "name": "ZyfraTreeTableCellEditorComponent",
            "id": "component-ZyfraTreeTableCellEditorComponent-12ba40644b70502dcf5f9614ee5aac8a",
            "file": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: TTEditableColumn, useFactory: (treeTableEditableColumnDirective) => treeTableEditableColumnDirective, deps: [ZyfraTreeTableEditableColumnDirective],\n}",
                    "type": "directive"
                }
            ],
            "selector": "zyfra-tree-table-cell-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-cell-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTreeTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTreeTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { TTEditableColumn } from 'primeng/treetable';\nimport { ZyfraTreeTableEditableColumnDirective } from '../directives/tree-table-editable-column.directive';\nimport { ZyfraTreeTableTemplateDirective } from '../directives/tree-table-template.directive';\n\n@Component({\n  selector: 'zyfra-tree-table-cell-editor',\n  templateUrl: './tree-table-cell-editor.component.html',\n  providers: [\n    {\n      provide: TTEditableColumn,\n      useFactory: (treeTableEditableColumnDirective) => treeTableEditableColumnDirective,\n      deps: [ZyfraTreeTableEditableColumnDirective],\n    },\n  ],\n})\nexport class ZyfraTreeTableCellEditorComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTreeTableTemplateDirective) templates: QueryList<ZyfraTreeTableTemplateDirective>;\n\n  @Input() value = '';\n  @Output() valueChange = new EventEmitter<string>();\n\n  inputTemplate: TemplateRef<unknown>;\n\n  stopPropagation(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-treeTableCellEditor>\n  <ng-template pTemplate=\"input\">\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-template #defaultInputTemplate>\n      <input\n        type=\"text\"\n        [value]=\"value\"\n        (input)=\"valueChange.emit($any($event.target).value)\"\n        (click)=\"stopPropagation($event)\"\n      />\n    </ng-template>\n  </ng-template>\n\n  <ng-template pTemplate=\"output\">\n    <ng-content></ng-content>\n  </ng-template>\n</p-treeTableCellEditor>\n"
        },
        {
            "name": "ZyfraTreeTableCheckboxComponent",
            "id": "component-ZyfraTreeTableCheckboxComponent-5a54383fcc74b8c8ebeaf828894d4537",
            "file": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional } from '@angular/core';\nimport { ZyfraTreeTableSelectableRowDirective } from '../directives/tree-table-selectable-row.directive';\n\n@Component({\n  selector: 'zyfra-tree-table-checkbox',\n  templateUrl: './tree-table-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableCheckboxComponent {\n  @Input() disabled: boolean;\n  @Input('value') rowNode: any;\n\n  constructor(@Optional() private selectableRowDirective: ZyfraTreeTableSelectableRowDirective) {}\n\n  onClick(event: Event): void {\n    if (this.selectableRowDirective) {\n      event.stopPropagation();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "selectableRowDirective",
                        "type": "ZyfraTreeTableSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "selectableRowDirective",
                        "type": "ZyfraTreeTableSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-treeTableCheckbox\n  [value]=\"rowNode\"\n  [disabled]=\"disabled\"\n  (click)=\"onClick($event)\"\n></p-treeTableCheckbox>\n"
        },
        {
            "name": "ZyfraTreeTableComponent",
            "id": "component-ZyfraTreeTableComponent-92eb154aa2840ff0c343a7dcadbe0a0a",
            "file": "libs/components/src/lib/tree-table/tree-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TreeTableService"
                },
                {
                    "name": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent) => zyfraTable.table, deps: [ZyfraTreeTableComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent) => zyfraTable"
                }
            ],
            "selector": "zyfra-tree-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of FilterMetadata objects to provide external filters",
                    "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                    "line": 47,
                    "type": "literal type"
                },
                {
                    "name": "rowTrackBy",
                    "defaultValue": "(index: number, item: any) => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
                    "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
                    "line": 43,
                    "type": "function"
                },
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange active element\n",
                    "description": "<p>Change active element</p>\n",
                    "line": 54,
                    "type": "EventEmitter<T>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection of context menu selection is changed\n",
                    "description": "<p>Callback to invoke when selection of context menu selection is changed</p>\n",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is collapsed\n",
                    "description": "<p>Callback to invoke when a node is collapsed</p>\n",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is expanded\n",
                    "description": "<p>Callback to invoke when a node is expanded</p>\n",
                    "line": 58,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected\n",
                    "description": "<p>Callback to invoke when a node is selected</p>\n",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is unselected\n",
                    "description": "<p>Callback to invoke when a node is unselected</p>\n",
                    "line": 70,
                    "type": "EventEmitter"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown,  originalEvent: Event; }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeTable",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'table', {static: true}"
                        }
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTreeTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTreeTableTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 466,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeTable",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 484,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 453,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 457,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 461,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 356,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 436,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 432,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 428,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 468,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { FilterMetadata } from 'primeng/api';\nimport { TreeTable, TreeTableService } from 'primeng/treetable';\nimport { ZyfraBaseTableComponent } from '../@core/base-table';\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\nimport { ZyfraTreeTableTemplateDirective } from './directives/tree-table-template.directive';\n\n@Component({\n  selector: 'zyfra-tree-table',\n  templateUrl: './tree-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    TreeTableService,\n    {\n      provide: TreeTable,\n      useFactory: (zyfraTable: ZyfraTreeTableComponent) => zyfraTable.table,\n      deps: [ZyfraTreeTableComponent],\n    },\n  ],\n})\nexport class ZyfraTreeTableComponent<T = unknown>\n  extends ZyfraBaseTableComponent<T>\n  implements AfterContentInit, OnChanges\n{\n  @ViewChild('table', { static: true }) table: TreeTable;\n  @ContentChildren(ZyfraTreeTableTemplateDirective) templates: QueryList<ZyfraTreeTableTemplateDirective>;\n\n  //region Inputs\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\n   */\n  @Input() rowTrackBy: <K>(index: number, item: K) => K = (index: number, item: any) => item;\n  /**\n   * An array of FilterMetadata objects to provide external filters\n   */\n  @Input() filters: { [s: string]: FilterMetadata } = {};\n  //endregion\n\n  //region Outputs\n  /**\n   * Change active element\n   */\n  @Output() activeElementChange: EventEmitter<T> = new EventEmitter<T>();\n  /**\n   * Callback to invoke when a node is expanded\n   */\n  @Output() onNodeExpand = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is collapsed\n   */\n  @Output() onNodeCollapse = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is selected\n   */\n  @Output() onNodeSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is unselected\n   */\n  @Output() onNodeUnselect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when selection of context menu selection is changed\n   */\n  @Output() contextMenuSelectionChange = new EventEmitter<unknown>();\n  //endregion\n\n  //region Base class overrides\n  override getContentTemplate():QueryList<BaseTableTemplateDirective> {\n    return this.templates;\n  }\n\n  override getTable(): TreeTable {\n    return this.table\n  };\n\n  override initTemplateByType(item: BaseTableTemplateDirective) {\n    // do nothing\n  };\n  //endregion\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "ZyfraBaseTableComponent",
            "implements": [
                "AfterContentInit",
                "OnChanges"
            ],
            "templateData": "<p-treeTable\n  #table\n  [value]=\"value\"\n  [columns]=\"columns\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n  [tableStyle]=\"tableStyle\"\n  [tableStyleClass]=\"(paginator ? 'zyfra-table_paginator ' : '') + tableStyleClass\"\n  [autoLayout]=\"autoLayout\"\n  [lazy]=\"lazy\"\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\n  [paginator]=\"paginator\"\n  [rows]=\"rows\"\n  [first]=\"first\"\n  [pageLinks]=\"pageLinks\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\n  [paginatorPosition]=\"paginatorPosition\"\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [showPageLinks]=\"showPageLinks\"\n  [defaultSortOrder]=\"defaultSortOrder\"\n  [sortMode]=\"sortMode\"\n  [resetPageOnSort]=\"resetPageOnSort\"\n  [customSort]=\"customSort\"\n  [selectionMode]=\"selectionMode\"\n  [contextMenuSelection]=\"contextMenuSelection\"\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\n  [dataKey]=\"dataKey\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [compareSelectionBy]=\"compareSelectionBy\"\n  [rowHover]=\"rowHover\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [showLoader]=\"showLoader\"\n  [scrollable]=\"scrollable\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualRowHeight]=\"virtualRowHeight\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [frozenWidth]=\"frozenWidth\"\n  [frozenColumns]=\"frozenColumns\"\n  [resizableColumns]=\"resizableColumns\"\n  [columnResizeMode]=\"columnResizeMode\"\n  [reorderableColumns]=\"reorderableColumns\"\n  [contextMenu]=\"contextMenu\"\n  [rowTrackBy]=\"rowTrackBy\"\n  [filters]=\"filters\"\n  [globalFilterFields]=\"globalFilterFields\"\n  [filterDelay]=\"filterDelay\"\n  [filterMode]=\"filterMode\"\n  [filterLocale]=\"filterLocale\"\n  [totalRecords]=\"totalRecords\"\n  [sortField]=\"sortField\"\n  [sortOrder]=\"sortOrder\"\n  [multiSortMeta]=\"multiSortMeta\"\n  [selection]=\"selection\"\n  (onFilter)=\"onFilter.emit($event)\"\n  (onNodeExpand)=\"onNodeExpand.emit($event)\"\n  (onNodeCollapse)=\"onNodeCollapse.emit($event)\"\n  (onPage)=\"page.emit($event)\"\n  (onSort)=\"sort.emit($event)\"\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\n  (sortFunction)=\"sortFunction.emit($event)\"\n  (onColResize)=\"colResize.emit($event)\"\n  (onColReorder)=\"colReorder.emit($event)\"\n  (onNodeSelect)=\"onNodeSelect.emit($event)\"\n  (onNodeUnselect)=\"onNodeUnselect.emit($event)\"\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\n  (onEditInit)=\"editInit.emit($event)\"\n  (onEditComplete)=\"editComplete.emit($event)\"\n  (onEditCancel)=\"editCancel.emit($event)\"\n  (selectionChange)=\"selectionChange.emit($event)\"\n  (contextMenuSelectionChange)=\"contextMenuSelectionChange.emit($event)\"\n>\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\n    <div class=\"zyfra-table-title\" *ngIf=\"title\">{{title}}</div>\n    <ng-container *ngIf=\"captionTemplate\">\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\" let-columns *ngIf=\"headerTemplate\">\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: {\n      $implicit: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\" *ngIf=\"bodyTemplate\">\n    <ng-container *ngTemplateOutlet=\"bodyTemplate; context: {\n      $implicit: rowNode,\n      rowData: rowData,\n      columns: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" let-columns *ngIf=\"footerTemplate\">\n    <ng-container *ngTemplateOutlet=\"footerTemplate; context: {\n      $implicit: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"colgroup\" let-columns *ngIf=\"colGroupTemplate\">\n    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context: {\n      $implicit: columns\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatordropdownitem\" *ngIf=\"paginatorDropdownItemTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorDropdownItemTemplate\"></ng-container>\n  </ng-template>\n</p-treeTable>\n"
        },
        {
            "name": "ZyfraTreeTableHeaderCheckboxComponent",
            "id": "component-ZyfraTreeTableHeaderCheckboxComponent-895cb6208b7fffa5843d6f5d70561b68",
            "file": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-header-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-header-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-header-checkbox',\n  templateUrl: './tree-table-header-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableHeaderCheckboxComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\n"
        },
        {
            "name": "ZyfraTreeTableSortIconComponent",
            "id": "component-ZyfraTreeTableSortIconComponent-078832992b9a8b797ccb01e39665548f",
            "file": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-sort-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-sort-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelAsc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "ariaLabelDesc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-sort-icon',\n  templateUrl: './tree-table-sort-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableSortIconComponent {\n  @Input() field: string;\n  @Input() ariaLabelDesc: string;\n  @Input() ariaLabelAsc: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableSortIcon\n  [field]=\"field\"\n  [ariaLabelDesc]=\"ariaLabelDesc\"\n  [ariaLabelAsc]=\"ariaLabelAsc\"\n></p-treeTableSortIcon>\n"
        },
        {
            "name": "ZyfraTreeTableTogglerComponent",
            "id": "component-ZyfraTreeTableTogglerComponent-8eaedc4cfbc162a155e8ec7c6492cee5",
            "file": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-toggler",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-toggler.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rowNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-toggler',\n  templateUrl: './tree-table-toggler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableTogglerComponent {\n  @Input() rowNode: any;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n"
        },
        {
            "name": "ZyfraTriCheckboxComponent",
            "id": "component-ZyfraTriCheckboxComponent-7ac307e95f8a5f5bf52d049a3a660f2a",
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-tri-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tri-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "FormControl | null"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean | null"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onModelChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "onModelTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy, Provider, forwardRef, ChangeDetectorRef,\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'zyfra-tri-checkbox',\n  templateUrl: './zyfra-tri-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CHECKBOX_VALUE_ACCESSOR],\n  styles: [],\n})\nexport class ZyfraTriCheckboxComponent implements ControlValueAccessor {\n  @Input() name: string;\n  @Input() label: string;\n  @Input() disabled: boolean;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() readonly: boolean;\n  @Input() model: boolean | null;\n  @Input() formControl: FormControl | null;\n  @Output() modelChange = new EventEmitter<boolean | null>();\n  onModelChange: () => void = () => {};\n  onModelTouched: () => void = () => {};\n\n  constructor(private cd: ChangeDetectorRef) {\n  }\n\n  onChangeHandler(event: { value: true, originalEvent: PointerEvent }) {\n    if (this.formControl) {\n      this.formControl.setValue(event.value);\n    } else {\n      this.model = event.value;\n    }\n    this.modelChange.emit(this.model);\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onModelTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n    this.cd.markForCheck();\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n    this.cd.markForCheck();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-triStateCheckbox\n  [(ngModel)]=\"model\"\n  [name]=\"name\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [readonly]=\"readonly\"\n  (onChange)=\"onChangeHandler($event)\"\n></p-triStateCheckbox>\n"
        }
    ],
    "modules": [
        {
            "name": "ZyfraAccordionModule",
            "id": "module-ZyfraAccordionModule-28d0f0ffe0b6169d647e97027de04f02",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/accordion/zyfra-accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraAccordionComponent } from './zyfra-accordion/zyfra-accordion.component';\nimport { AccordionModule } from 'primeng/accordion';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\nimport { ZyfraAccordionTabComponent } from './zyfra-accordion-tab/zyfra-accordion-tab.component';\n\n@NgModule({\n  declarations: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\n  imports: [AccordionModule, CommonModule, ZyfraSharedModule],\n  exports: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\n})\nexport class ZyfraAccordionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraAutoCompleteModule",
            "id": "module-ZyfraAutoCompleteModule-169ad929da076883c645be700b0c2c50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraAutoCompleteComponent } from './zyfra-auto-complete.component';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\n\n@NgModule({\n  declarations: [ZyfraAutoCompleteComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AutoCompleteModule],\n  exports: [ZyfraAutoCompleteComponent],\n})\nexport class ZyfraAutoCompleteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraBreadcrumbModule",
            "id": "module-ZyfraBreadcrumbModule-dfc56fe49b841bd4b100bcf41b9cf805",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraBreadcrumbComponent } from './zyfra-breadcrumb.component';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\n\n@NgModule({\n  declarations: [ZyfraBreadcrumbComponent],\n  imports: [BreadcrumbModule],\n  exports: [ZyfraBreadcrumbComponent],\n})\nexport class ZyfraBreadcrumbModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraButtonModule",
            "id": "module-ZyfraButtonModule-20a48762081a65585ac80731af10bb9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/button/zyfra-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraButtonComponent } from './zyfra-button.component';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  declarations: [ZyfraButtonComponent],\n  imports: [ButtonModule],\n  exports: [ZyfraButtonComponent],\n})\nexport class ZyfraButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraCheckBoxModule",
            "id": "module-ZyfraCheckBoxModule-9e2b623d6bd40d1355e9043d3074f404",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ZyfraCheckboxComponent } from './zyfra-checkbox.component';\n\n@NgModule({\n  declarations: [ZyfraCheckboxComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, CheckboxModule],\n  exports: [ZyfraCheckboxComponent],\n})\nexport class ZyfraCheckBoxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraChipModule",
            "id": "module-ZyfraChipModule-5c72a675429fc3e130f8da29f29382a3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/chip/zyfra-chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraChipComponent } from './zyfra-chip.component';\nimport { ChipModule } from 'primeng/chip';\n\n@NgModule({\n  declarations: [ZyfraChipComponent],\n  imports: [ChipModule],\n  exports: [ZyfraChipComponent],\n})\nexport class ZyfraChipModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraConfirmDialogModule",
            "id": "module-ZyfraConfirmDialogModule-90c8eb5f81b0f70100d2b1283576b831",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { ButtonModule } from 'primeng/button';\nimport { ZyfraConfirmDialogComponent } from './zyfra-confirm-dialog.component';\n\n@NgModule({\n  declarations: [ZyfraConfirmDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfirmDialogModule,\n    MessagesModule,\n    ToastModule,\n    ButtonModule,\n  ],\n  exports: [ZyfraConfirmDialogComponent],\n})\nexport class ZyfraConfirmDialogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDatepickerModule",
            "id": "module-ZyfraDatepickerModule-04bf50a0296f8750d400ad6607d7b257",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraDatepickerComponent } from './zyfra-datepicker.component';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ZyfraDropdownModule } from '../dropdown';\nimport { ZyfraButtonModule } from '../button';\nimport { ZyfraRadioButtonModule } from '../radio-button';\nimport { ZyfraInputModule } from '../input';\n\n@NgModule({\n  declarations: [ZyfraDatepickerComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n    ZyfraButtonModule,\n    ZyfraRadioButtonModule,\n    ZyfraInputModule,\n    ZyfraDropdownModule\n  ],\n  exports: [ZyfraDatepickerComponent]\n})\nexport class ZyfraDatepickerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraDropdownModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraRadioButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDialogModule",
            "id": "module-ZyfraDialogModule-cb74f165fa4e9d82d80c6ac04665f020",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dialog/zyfra-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { ToastModule } from 'primeng/toast';\nimport { ZyfraDialogComponent } from './zyfra-dialog.component';\n\n@NgModule({\n  declarations: [ZyfraDialogComponent],\n  imports: [CommonModule, DialogModule, ToastModule],\n  exports: [ZyfraDialogComponent],\n})\nexport class ZyfraDialogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDropdownModule",
            "id": "module-ZyfraDropdownModule-cc521d53be7e1b65d0ec6bd45c19521f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraDropdownComponent } from './zyfra-dropdown.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\n@NgModule({\n  declarations: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule],\n  exports: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\n})\nexport class ZyfraDropdownModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDynamicDialogModule",
            "id": "module-ZyfraDynamicDialogModule-07ba88a6c16cb1a340038559f0023998",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicDialogModule\n  ]\n})\nexport class ZyfraDynamicDialogModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraHintModule",
            "id": "module-ZyfraHintModule-7487c7cd834553f127d949f8e42d426d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraHintDirective } from './zyfra-hint.directive';\nimport { ZyfraHintComponent } from './zyfra-hint.component';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\n\nconst EXPORTED_DECLARATIONS = [ZyfraHintDirective, ZyfraHintComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n  providers: [ZyfraHintOverlayManager],\n  entryComponents: [ZyfraHintComponent],\n})\nexport class ZyfraHintModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ZyfraHintOverlayManager"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraIconModule",
            "id": "module-ZyfraIconModule-a1121453d6349f877dcfd7af17be42b5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/icon/zyfra-icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraIconComponent } from './zyfra-icon.component';\n\n@NgModule({\n  declarations: [ZyfraIconComponent],\n  imports: [CommonModule],\n  exports: [ZyfraIconComponent],\n})\nexport class ZyfraIconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputMaskModule",
            "id": "module-ZyfraInputMaskModule-3de78c61f7710294206106d02ba27878",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport {InputMaskModule} from 'primeng/inputmask';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraInputMaskComponent } from './zyfra-input-mask.component';\n\n\n\n@NgModule({\n  declarations: [ZyfraInputMaskComponent],\n  imports: [\n    CommonModule,\n    FormsModule, \n    ReactiveFormsModule,\n    InputMaskModule\n  ],\n  exports: [ZyfraInputMaskComponent]\n})\nexport class ZyfraInputMaskModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputModule",
            "id": "module-ZyfraInputModule-64c13b25492ac87624b8cd29679e4d06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input/zyfra-input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraInputComponent } from './zyfra-input.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TooltipModule } from 'primeng/tooltip';\n\n@NgModule({\n  declarations: [ZyfraInputComponent],\n  imports: [CommonModule, InputTextModule, TooltipModule, FormsModule, ReactiveFormsModule],\n  exports: [ZyfraInputComponent],\n})\nexport class ZyfraInputModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputNumberModule",
            "id": "module-ZyfraInputNumberModule-960c538256d6aa1fce6d0c7b8f9f6bb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-number/zyfra-input-number.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraInputNumberComponent } from './zyfra-input-number.component';\nimport { InputNumberModule } from 'primeng/inputnumber';\n\n@NgModule({\n  declarations: [ZyfraInputNumberComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputNumberModule],\n  exports: [ZyfraInputNumberComponent],\n})\nexport class ZyfraInputNumberModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputSwitchModule",
            "id": "module-ZyfraInputSwitchModule-29fe3a5e7a35ccd6a5986aea867d3c87",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { ZyfraInputSwitchComponent } from './zyfra-input-switch.component';\n\n@NgModule({\n  declarations: [ZyfraInputSwitchComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule],\n  exports: [ZyfraInputSwitchComponent],\n})\nexport class ZyfraInputSwitchModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMenuApplicationsModule",
            "id": "module-ZyfraMenuApplicationsModule-4b620dc58b8ee92e5c30cd553a1b7b63",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraMenuApplicationsComponent } from './zyfra-menu-applications.component';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraMenuApplicationsItemComponent } from './zyfra-menu-applications-item/zyfra-menu-applications-item.component';\nimport { ZyfraHintModule, ZyfraIconModule, ZyfraSplitterModule } from '@digital-plant/zyfra-components';\n\n@NgModule({\n  declarations: [ZyfraMenuApplicationsComponent, ZyfraMenuApplicationsItemComponent],\n  imports: [CommonModule, ZyfraIconModule, ZyfraSplitterModule, ZyfraHintModule],\n  exports: [ZyfraMenuApplicationsComponent],\n})\nexport class ZyfraMenuApplicationsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        },
                        {
                            "name": "ZyfraMenuApplicationsItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraHintModule"
                        },
                        {
                            "name": "ZyfraIconModule"
                        },
                        {
                            "name": "ZyfraSplitterModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMessageModule",
            "id": "module-ZyfraMessageModule-e05170874c1db916f5ea23d35e448f58",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/message/zyfra-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ZyfraMessageComponent } from './zyfra-message.component';\n\n@NgModule({\n  declarations: [ZyfraMessageComponent],\n  imports: [MessagesModule, MessageModule],\n  exports: [ZyfraMessageComponent],\n})\nexport class ZyfraMessageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraNavMenuModule",
            "id": "module-ZyfraNavMenuModule-da489e5a4bc3797b18d337c676272082",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { MenuModule } from 'primeng/menu';\nimport { TreeModule } from 'primeng/tree';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraAutofocusDirective } from './directives/zyfra-autofocus.directives';\nimport { ZyfraNavMenuGroupDirective } from './directives/nav-menu-group.directive';\nimport { NavMenuService } from './service/selection.service';\nimport { ZyfraNavMenuItemComponent } from './components/zyfra-menu-item/zyfra-nav-menu-item.component';\nimport { ZyfraNavMenuGroupComponent } from './components/zyfra-nav-menu-group/zyfra-nav-menu-group.component';\nimport { ZyfraHintModule } from '../hint/zyfra-hint.module';\nimport { ZyfraAccordionModule } from '../accordion/zyfra-accordion.module';\nimport { ZyfraInputModule } from '../input/zyfra-input.module';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\nimport { ZyfraCheckBoxModule } from '../checkbox/zyfra-checkbox.module';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@NgModule({\n  declarations: [\n    ZyfraNavMenuComponent,\n    ZyfraAutofocusDirective,\n    ZyfraNavMenuGroupDirective,\n    ZyfraNavMenuGroupComponent,\n    ZyfraNavMenuItemComponent\n  ],\n  imports: [\n    PanelMenuModule,\n    MenuModule,\n    TreeModule,\n    ToggleButtonModule,\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n    CommonModule,\n    InputTextModule,\n    OverlayPanelModule,\n    RadioButtonModule,\n    TooltipModule,\n    ZyfraCheckBoxModule,\n    ZyfraButtonModule,\n    ZyfraInputModule,\n    ZyfraAccordionModule,\n    ZyfraSharedModule,\n    ZyfraHintModule\n  ],\n  providers: [NavMenuService],\n  exports: [\n    ZyfraNavMenuComponent,\n    ZyfraNavMenuGroupDirective\n  ]\n})\nexport class ZyfraNavMenuModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "NavMenuService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutofocusDirective"
                        },
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        },
                        {
                            "name": "ZyfraNavMenuItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionModule"
                        },
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraCheckBoxModule"
                        },
                        {
                            "name": "ZyfraHintModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPaginatorModule",
            "id": "module-ZyfraPaginatorModule-b2bc129d592fac8e2ebd30ac8a492751",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/paginator/zyfra-paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraPaginatorComponent } from './zyfra-paginator.component';\nimport { PaginatorModule } from 'primeng/paginator';\n\n@NgModule({\n  declarations: [ZyfraPaginatorComponent],\n  imports: [PaginatorModule],\n  exports: [ZyfraPaginatorComponent],\n})\nexport class ZyfraPaginatorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPasswordModule",
            "id": "module-ZyfraPasswordModule-3ef28a8629ff6507c9bf1bae84a220b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/password/zyfra-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PasswordModule } from 'primeng/password';\nimport { ZyfraPasswordComponent } from './zyfra-password.component';\n\n@NgModule({\n  declarations: [ZyfraPasswordComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PasswordModule],\n  exports: [ZyfraPasswordComponent],\n})\nexport class ZyfraPasswordModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraProgressBarModule",
            "id": "module-ZyfraProgressBarModule-a07d6ca7d938b248ebf7a781a4942301",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ZyfraProgressBarComponent } from './zyfra-progress-bar.component';\n\n@NgModule({\n  declarations: [ZyfraProgressBarComponent],\n  imports: [ProgressBarModule],\n  exports: [ZyfraProgressBarComponent],\n})\nexport class ZyfraProgressBarModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraRadioButtonModule",
            "id": "module-ZyfraRadioButtonModule-707e4fbbe87a90cd73b102ff50c5bcf3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraRadioButtonComponent } from './zyfra-radio-button.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ZyfraRadioButtonComponent],\n  imports: [RadioButtonModule, FormsModule, ReactiveFormsModule, CommonModule],\n  exports: [ZyfraRadioButtonComponent],\n})\nexport class ZyfraRadioButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSelectButtonModule",
            "id": "module-ZyfraSelectButtonModule-0f9934b56ab25fce81cd0e4c6cce78cb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/select-button/zyfra-select-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\nimport { SelectButtonModule } from 'primeng/selectbutton';\n\n@NgModule({\n  declarations: [ZyfraSelectButtonComponent],\n  imports: [SelectButtonModule],\n  exports: [ZyfraSelectButtonComponent],\n})\nexport class ZyfraSelectButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSharedModule",
            "id": "module-ZyfraSharedModule-862041899a22275f7f2620c2bb218563",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/@core/shared/zyfra-shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTemplateDirective } from './zyfra-template.directives';\n\n@NgModule({\n  declarations: [ZyfraTemplateDirective],\n  exports: [ZyfraTemplateDirective],\n})\nexport class ZyfraSharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSliderModule",
            "id": "module-ZyfraSliderModule-1fb6cb7d5877c5db0197f4be9d3cf67a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/slider/zyfra-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {SliderModule} from 'primeng/slider';\nimport { ZyfraSliderComponent } from './zyfra-slider.component';\n\n\n@NgModule({\n  declarations: [ZyfraSliderComponent],\n  imports: [\n    CommonModule,\n    FormsModule, \n    ReactiveFormsModule,\n    SliderModule,\n  ],\n  exports: [ZyfraSliderComponent]\n})\nexport class ZyfraSliderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSpinnerModule",
            "id": "module-ZyfraSpinnerModule-d559707838213510f8d4d829064eecea",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/spinner/zyfra-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSpinnerComponent } from './zyfra-spinner.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@NgModule({\n  declarations: [ZyfraSpinnerComponent],\n  imports: [ProgressSpinnerModule],\n  exports: [ZyfraSpinnerComponent],\n})\nexport class ZyfraSpinnerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitButtonModule",
            "id": "module-ZyfraSplitButtonModule-159a398b3322c731d3451cec6c90d477",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/split-button/zyfra-split-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSplitButtonComponent } from './zyfra-split-button.component';\nimport { SplitButtonModule } from 'primeng/splitbutton';\n\n@NgModule({\n  declarations: [ZyfraSplitButtonComponent],\n  imports: [SplitButtonModule],\n  exports: [ZyfraSplitButtonComponent],\n})\nexport class ZyfraSplitButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitterModule",
            "id": "module-ZyfraSplitterModule-90b73bea1a7d4621c07dc3dd7744bc6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/splitter/zyfra-splitter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSplitterComponent } from './zyfra-splitter.component';\nimport { SplitterModule } from 'primeng/splitter';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\n@NgModule({\n  declarations: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n  imports: [CommonModule, BrowserModule, BrowserAnimationsModule, SplitterModule],\n  exports: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n})\nexport class ZyfraSplitterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTableModule",
            "id": "module-ZyfraTableModule-50cd186166e9e42819bd3c3dc8161a5b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/table/zyfra-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { ZyfraTableComponent } from './zyfra-table.component';\nimport { ZyfraTableHeaderCheckboxComponent } from './table-header-checkbox/table-header-checkbox.component';\nimport { ZyfraTableCheckboxComponent } from './table-checkbox/zyfra-table-checkbox.component';\nimport { ZyfraSortableColumnDirective } from './directives/sortable-column.directive';\nimport { ZyfraSortIconComponent } from './sort-icon/sort-icon.component';\nimport { ZyfraTableColumnFilterComponent } from './table-column-filter/table-column-filter.component';\nimport { ZyfraEditableColumnDirective } from './directives/editable-column.directive';\nimport { ZyfraCellEditorComponent } from './cell-editor/cell-editor.component';\nimport { ZyfraEditableRowDirective } from './directives/editable-row.directive';\nimport { ZyfraInitEditableRowDirective } from './directives/init-editable-row.directive';\nimport { ZyfraSaveEditableRowDirective } from './directives/save-editable-row.directive';\nimport { ZyfraCancelEditableRowDirective } from './directives/cancel-editable-row.directive';\nimport { ZyfraFrozenColumnDirective } from './directives/frozen-column.directive';\nimport { ZyfraResizableColumnDirective } from './directives/resizable-column.directive';\nimport { ZyfraReordableRowDirective } from './directives/reordable-row.directive';\nimport { ZyfraReordableRowHandlerDirective } from './directives/reordable-row-handler.directive';\nimport { ZyfraSelectableRowDirective } from './directives/selectable-row.directive';\nimport { ZyfraRowGroupHeaderDirective } from './directives/row-group-header.directive';\nimport { ZyfraReordableColumnDirective } from './directives/reordable-column.directive';\nimport { ZyfraRowTogglerComponent } from './row-toggler/row-toggler.component';\nimport { ZyfraRowDirective } from './directives/row.directive';\nimport { ZyfraTableTemplateDirective } from './directives/table-template.directive';\nimport {ZyfraSearchCellComponent} from \"./search-cell/search-cell.component\";\n\n@NgModule({\n  declarations: [\n    ZyfraTableComponent,\n    ZyfraTableHeaderCheckboxComponent,\n    ZyfraTableCheckboxComponent,\n    ZyfraSortableColumnDirective,\n    ZyfraSortIconComponent,\n    ZyfraTableColumnFilterComponent,\n    ZyfraEditableColumnDirective,\n    ZyfraCellEditorComponent,\n    ZyfraEditableRowDirective,\n    ZyfraInitEditableRowDirective,\n    ZyfraSaveEditableRowDirective,\n    ZyfraCancelEditableRowDirective,\n    ZyfraFrozenColumnDirective,\n    ZyfraResizableColumnDirective,\n    ZyfraReordableRowDirective,\n    ZyfraReordableRowHandlerDirective,\n    ZyfraSelectableRowDirective,\n    ZyfraRowGroupHeaderDirective,\n    ZyfraReordableColumnDirective,\n    ZyfraTableTemplateDirective,\n    ZyfraRowTogglerComponent,\n    ZyfraRowDirective,\n    ZyfraSearchCellComponent\n  ],\n  imports: [\n    CommonModule,\n    TableModule,\n  ],\n  exports: [\n    ZyfraTableComponent,\n    ZyfraTableHeaderCheckboxComponent,\n    ZyfraTableCheckboxComponent,\n    ZyfraSortableColumnDirective,\n    ZyfraSortIconComponent,\n    ZyfraTableColumnFilterComponent,\n    ZyfraEditableColumnDirective,\n    ZyfraCellEditorComponent,\n    ZyfraEditableRowDirective,\n    ZyfraInitEditableRowDirective,\n    ZyfraSaveEditableRowDirective,\n    ZyfraCancelEditableRowDirective,\n    ZyfraFrozenColumnDirective,\n    ZyfraResizableColumnDirective,\n    ZyfraReordableRowDirective,\n    ZyfraReordableRowHandlerDirective,\n    ZyfraSelectableRowDirective,\n    ZyfraReordableColumnDirective,\n    ZyfraRowTogglerComponent,\n    ZyfraRowGroupHeaderDirective,\n    ZyfraTableTemplateDirective,\n    ZyfraRowDirective,\n    ZyfraSearchCellComponent\n  ]\n})\nexport class ZyfraTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCancelEditableRowDirective"
                        },
                        {
                            "name": "ZyfraCellEditorComponent"
                        },
                        {
                            "name": "ZyfraEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraEditableRowDirective"
                        },
                        {
                            "name": "ZyfraFrozenColumnDirective"
                        },
                        {
                            "name": "ZyfraInitEditableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableColumnDirective"
                        },
                        {
                            "name": "ZyfraReordableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableRowHandlerDirective"
                        },
                        {
                            "name": "ZyfraResizableColumnDirective"
                        },
                        {
                            "name": "ZyfraRowDirective"
                        },
                        {
                            "name": "ZyfraRowGroupHeaderDirective"
                        },
                        {
                            "name": "ZyfraRowTogglerComponent"
                        },
                        {
                            "name": "ZyfraSaveEditableRowDirective"
                        },
                        {
                            "name": "ZyfraSearchCellComponent"
                        },
                        {
                            "name": "ZyfraSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraSortIconComponent"
                        },
                        {
                            "name": "ZyfraSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableColumnFilterComponent"
                        },
                        {
                            "name": "ZyfraTableComponent"
                        },
                        {
                            "name": "ZyfraTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCancelEditableRowDirective"
                        },
                        {
                            "name": "ZyfraCellEditorComponent"
                        },
                        {
                            "name": "ZyfraEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraEditableRowDirective"
                        },
                        {
                            "name": "ZyfraFrozenColumnDirective"
                        },
                        {
                            "name": "ZyfraInitEditableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableColumnDirective"
                        },
                        {
                            "name": "ZyfraReordableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableRowHandlerDirective"
                        },
                        {
                            "name": "ZyfraResizableColumnDirective"
                        },
                        {
                            "name": "ZyfraRowDirective"
                        },
                        {
                            "name": "ZyfraRowGroupHeaderDirective"
                        },
                        {
                            "name": "ZyfraRowTogglerComponent"
                        },
                        {
                            "name": "ZyfraSaveEditableRowDirective"
                        },
                        {
                            "name": "ZyfraSearchCellComponent"
                        },
                        {
                            "name": "ZyfraSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraSortIconComponent"
                        },
                        {
                            "name": "ZyfraSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableColumnFilterComponent"
                        },
                        {
                            "name": "ZyfraTableComponent"
                        },
                        {
                            "name": "ZyfraTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabMenuModule",
            "id": "module-ZyfraTabMenuModule-26caa6282bf1d82275b8a099b84121f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { SlideMenuModule } from 'primeng/slidemenu';\nimport { ZyfraTabMenuComponent } from './zyfra-tab-menu.component';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\n\n@NgModule({\n  declarations: [ZyfraTabMenuComponent],\n  imports: [CommonModule, TooltipModule, TabMenuModule, OverlayPanelModule, SlideMenuModule],\n  exports: [ZyfraTabMenuComponent],\n})\nexport class ZyfraTabMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabViewModule",
            "id": "module-ZyfraTabViewModule-15d7978d26fed8109681b029a1f66829",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { TabViewModule } from 'primeng/tabview';\nimport { CommonModule } from '@angular/common';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraTabViewComponent } from './zyfra-tab-view/zyfra-tab-view.component';\nimport { ZyfraTabPanelComponent } from './zyfra-tab-panel/zyfra-tab-panel.component';\n\n@NgModule({\n  declarations: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n  imports: [CommonModule, OverlayPanelModule, TabViewModule, TooltipModule],\n  exports: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n})\nexport class ZyfraTabViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTextareaModule",
            "id": "module-ZyfraTextareaModule-7b57aa344af1cb9917640978884272b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/textarea/zyfra-textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraTextareaComponent } from './zyfra-textarea.component';\n\n@NgModule({\n  declarations: [ZyfraTextareaComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextareaModule],\n  exports: [ZyfraTextareaComponent],\n})\nexport class ZyfraTextareaModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToastModule",
            "id": "module-ZyfraToastModule-a950e2c1f132faec1ba17ac027588496",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toast/zyfra-toast.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ToastModule } from 'primeng/toast';\nimport { RippleModule } from 'primeng/ripple';\nimport { ZyfraToastComponent } from './zyfra-toast.component';\n\n@NgModule({\n  declarations: [ZyfraToastComponent],\n  imports: [CommonModule, ToastModule, RippleModule, FormsModule],\n  exports: [ZyfraToastComponent],\n})\nexport class ZyfraToastModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToggleButtonModule",
            "id": "module-ZyfraToggleButtonModule-dfbafc24fae96d513b9df44bebac00b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraToggleButtonComponent } from './zyfra-toggle-button.component';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ZyfraToggleButtonComponent],\n  imports: [FormsModule, CommonModule, ToggleButtonModule],\n  exports: [ZyfraToggleButtonComponent],\n})\nexport class ZyfraToggleButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeModule",
            "id": "module-ZyfraTreeModule-55b06e4b842f1e363847b7b43efa1e96",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree/zyfra-tree.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTreeComponent } from './zyfra-tree.component';\nimport { TreeModule } from 'primeng/tree';\n\n@NgModule({\n  declarations: [\n    ZyfraTreeComponent,\n  ],\n  imports: [\n    TreeModule,\n  ],\n  exports: [\n    ZyfraTreeComponent,\n  ]\n})\nexport class ZyfraTreeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeTableModule",
            "id": "module-ZyfraTreeTableModule-a32963b38165f02f6b2a9fabd8c33173",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree-table/zyfra-tree-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TreeTableModule } from 'primeng/treetable';\n\nimport { ZyfraTreeTableComponent } from './tree-table.component';\nimport { ZyfraTreeTableRowDirective } from './directives/tree-table-row.directive';\nimport { ZyfraTreeTableSelectableRowDirective } from './directives/tree-table-selectable-row.directive';\nimport { ZyfraTreeTableTogglerComponent } from './tree-table-toggler/tree-table-toggler.component';\nimport { ZyfraTreeTableCheckboxComponent } from './tree-table-checkbox/tree-table-checkbox.component';\nimport { ZyfraTreeTableHeaderCheckboxComponent } from './tree-table-header-checkbox/tree-table-header-checkbox.component';\nimport { ZyfraTreeTableSortableColumnDirective } from './directives/tree-table-sortable-column.directive';\nimport { ZyfraTreeTableSortIconComponent } from './tree-table-sort-icon/tree-table-sort-icon.component';\nimport { ZyfraTreeTableCellEditorComponent } from './tree-table-cell-editor/tree-table-cell-editor.component';\nimport { ZyfraTreeTableEditableColumnDirective } from './directives/tree-table-editable-column.directive';\nimport { ZyfraTreeTableReorderableColumnDirective } from './directives/tree-table-reorderable-column.directive';\nimport { ZyfraTreeTableTemplateDirective } from './directives/tree-table-template.directive';\n\n@NgModule({\n  declarations: [\n    ZyfraTreeTableComponent,\n    ZyfraTreeTableRowDirective,\n    ZyfraTreeTableSelectableRowDirective,\n    ZyfraTreeTableTogglerComponent,\n    ZyfraTreeTableCheckboxComponent,\n    ZyfraTreeTableHeaderCheckboxComponent,\n    ZyfraTreeTableSortableColumnDirective,\n    ZyfraTreeTableSortIconComponent,\n    ZyfraTreeTableCellEditorComponent,\n    ZyfraTreeTableEditableColumnDirective,\n    ZyfraTreeTableReorderableColumnDirective,\n    ZyfraTreeTableTemplateDirective,\n    ZyfraTreeTableRowDirective,\n  ],\n  imports: [CommonModule, TreeTableModule],\n  exports: [\n    ZyfraTreeTableComponent,\n    ZyfraTreeTableRowDirective,\n    ZyfraTreeTableSelectableRowDirective,\n    ZyfraTreeTableTogglerComponent,\n    ZyfraTreeTableCheckboxComponent,\n    ZyfraTreeTableHeaderCheckboxComponent,\n    ZyfraTreeTableSortableColumnDirective,\n    ZyfraTreeTableSortIconComponent,\n    ZyfraTreeTableCellEditorComponent,\n    ZyfraTreeTableEditableColumnDirective,\n    ZyfraTreeTableReorderableColumnDirective,\n    ZyfraTreeTableTemplateDirective,\n    ZyfraTreeTableRowDirective,\n  ],\n})\nexport class ZyfraTreeTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeTableCellEditorComponent"
                        },
                        {
                            "name": "ZyfraTreeTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableComponent"
                        },
                        {
                            "name": "ZyfraTreeTableEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableReorderableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSortIconComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTemplateDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTogglerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeTableCellEditorComponent"
                        },
                        {
                            "name": "ZyfraTreeTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableComponent"
                        },
                        {
                            "name": "ZyfraTreeTableEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableReorderableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSortIconComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTemplateDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTogglerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTriCheckBoxModule",
            "id": "module-ZyfraTriCheckBoxModule-9e230312c00a7d378a89240cdb898e9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraTriCheckboxComponent } from './zyfra-tri-checkbox.component';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\n\n@NgModule({\n  declarations: [ZyfraTriCheckboxComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TriStateCheckboxModule],\n  exports: [ZyfraTriCheckboxComponent],\n})\nexport class ZyfraTriCheckBoxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraUiRootModule",
            "id": "module-ZyfraUiRootModule-f8753356d0c284cf332d03130a7d3c08",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/root/zyfra-ui-root.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\n\n@NgModule({})\nexport class ZyfraUiRootModule {\n  // do nothing,\n  // override if need root providers for components\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Absolute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AbsoluteMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  rowExpand: action('rowExpand'),\n  rowCollapse: action('rowCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  rowSelect: action('rowSelect'),\n  rowUnselect: action('rowUnselect'),\n  selectionChange: action('selectionChange'),\n  headerCheckboxToggle: action('headerCheckboxToggle'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  elementChange: action('elementChange'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onFilter: action('onFilter')\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeSelect: action('onNodeSelect'),\n  onNodeUnselect: action('onNodeUnselect'),\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  selectionChange: action('selectionChange'),\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onSort: action('onSort'),\n}"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AnimationSpeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1'},\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\n  {label: 'Наименование ячейки 3 длиннее остальных'},\n  {label: 'Наименование ячейки 4'},\n  {label: 'Наименование ячейки 5'},\n]"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "basicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "BasicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Binary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "bottomMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\n  {\n    title: 'Избранное',\n    icon: 'social-star'\n  },\n  {\n    title: 'Поиск',\n    icon: 'sort-zoom-in'\n  },\n  {\n    title: 'Служба техподдежки',\n    icon: 'alerts-pulse'\n  },\n]"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n}"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\n  multi: true,\n}"
            },
            {
                "name": "CheckboxWithFormControlComponentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\n    <br>\n    <br>\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n    toggleStatus(): void {\n      if (this.fControl.disabled) {\n        this.fControl.enable();\n      } else {\n        this.fControl.disable();\n      }\n    },\n    toggleValue(): void {\n      this.fControl.setValue(!this.fControl.value);\n    },\n  },\n})"
            },
            {
                "name": "cities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryCity[]",
                "defaultValue": "[\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n]"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "convertToNode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\n  let children;\n  const node: TreeNode = {\n    label: item.label,\n    data: item,\n    key: generateKey(),\n    parent\n  };\n  if (item.items) {\n    children = item.items.map(childItem => {\n      return convertToNode(childItem, node);\n    });\n  }\n  node.children = children;\n  return node;\n}"
            },
            {
                "name": "Currency",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Customers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Customer[]",
                "defaultValue": "[\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n]"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplateWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CustomWithBadge.bind({})"
            },
            {
                "name": "CustomTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChangeHandler($event)\"\n              (onClose)=\"onCloseHandler($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Decimal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DEFAULT_SETTINGS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SettingsConfig",
                "defaultValue": "{\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n}"
            },
            {
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToolbarConfig",
                "defaultValue": "{\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}"
            },
            {
                "name": "DefaultDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  open: {\n    duration: 300,\n    delay: 500,\n    timingFunction: 'ease-in',\n  },\n  close: {\n    duration: 300,\n    delay: 300,\n    timingFunction: 'ease-out',\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "Edit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditCell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "en",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  \"dayNames\": [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  \"dayNamesShort\": [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ],\n  \"dayNamesMin\": [\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\"\n  ],\n  \"monthNames\": [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  \"monthNamesShort\": [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  \"dateFormat\": \"mm/dd/yy\",\n  \"today\": \"Today\",\n  \"weekHeader\": \"Wk\",\n  \"clear\": \"Clear\"\n}"
            },
            {
                "name": "EnlargedSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Expand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EXPORTED_DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
            },
            {
                "name": "ExtraItemTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "ExtraTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ExtraItemTemplate.bind({})"
            },
            {
                "name": "FileSystem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    data: {\n      name: 'Applications',\n      size: '200mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Angular',\n          size: '25mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'angular.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'cli.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'mobile.app',\n              size: '5mb',\n              type: 'Application'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'editor.app',\n          size: '25mb',\n          type: 'Application'\n        }\n      },\n      {\n        data: {\n          name: 'settings.app',\n          size: '50mb',\n          type: 'Application'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Cloud',\n      size: '20mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'backup-1.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      },\n      {\n        data: {\n          name: 'backup-2.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Desktop',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'note-meeting.txt',\n          size: '50kb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'note-todo.txt',\n          size: '100kb',\n          type: 'Text'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Documents',\n      size: '75kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Work',\n          size: '55kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Expenses.doc',\n              size: '30kb',\n              type: 'Document'\n            }\n          },\n          {\n            data: {\n              name: 'Resume.doc',\n              size: '25kb',\n              type: 'Resume'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Home',\n          size: '20kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Invoices',\n              size: '20kb',\n              type: 'Text'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Downloads',\n      size: '25mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Spanish',\n          size: '10mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'tutorial-a1.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          },\n          {\n            data: {\n              name: 'tutorial-a2.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Travel',\n          size: '15mb',\n          type: 'Text'\n        },\n        children: [\n          {\n            data: {\n              name: 'Hotel.pdf',\n              size: '10mb',\n              type: 'PDF'\n            }\n          },\n          {\n            data: {\n              name: 'Flight.pdf',\n              size: '5mb',\n              type: 'PDF'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Main',\n      size: '50mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'bin',\n          size: '50kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'etc',\n          size: '100kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'var',\n          size: '100kb',\n          type: 'Link'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Other',\n      size: '5mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'todo.txt',\n          size: '3mb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'logo.png',\n          size: '2mb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Pictures',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'barcelona.jpg',\n          size: '90kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'primeng.png',\n          size: '30kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'prime.jpg',\n          size: '30kb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Videos',\n      size: '1500mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'primefaces.mkv',\n          size: '1000mb',\n          type: 'Video'\n        }\n      },\n      {\n        data: {\n          name: 'intro.avi',\n          size: '500mb',\n          type: 'Video'\n        }\n      }\n    ]\n  }\n]"
            },
            {
                "name": "Filter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Filter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FilterSortSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "flatNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\n}"
            },
            {
                "name": "FolderMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "FormControlRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormControlTemplate.bind({})"
            },
            {
                "name": "FormControlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\n  props: {\n    ...args,\n    disabledPink: true,\n    ngModelChange: () => {},\n    control: new FormControl('red', [Validators.required]),\n  },\n})"
            },
            {
                "name": "formControlTemplateChunk",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\n    <br>\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\n`"
            },
            {
                "name": "fromRubricatorNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\n  const rubricatorNodes = [];\n  letters.forEach(letter => {\n    rubricatorNodes.push({\n      key: letter,\n      label: letter,\n      data: { label: letter },\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\n    });\n  });\n  return rubricatorNodes;\n}"
            },
            {
                "name": "FrozenRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "generateKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
            },
            {
                "name": "getPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\n  acc.push(node.parent);\n  return node.parent\n    ? getPath(node.parent, acc)\n    : acc.reverse();\n}"
            },
            {
                "name": "Group",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GroupPanels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "GroupPanelTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTextExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTitleExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "htmlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\n  <div>\n    <p>content</p>\n    <ul>\n      <li>item 1 (for example)</li>\n      <li><b>item 2</b></li>\n    </ul>\n  </div>\n`"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconDefs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-close-all\",\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-logo-green\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-history\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-mode\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
            },
            {
                "name": "IconsSet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectItem[]",
                "defaultValue": "[]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\n  { separator: true },\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder ',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
            },
            {
                "name": "ManyItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MiniRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "MultiMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultipleMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultipleSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "NoIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoValueDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OverflowTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Pagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "PaginationTemplate.bind({})"
            },
            {
                "name": "PaginationTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [paginator]=\"paginator\"\n      [rows]=\"rows\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      (page)=\"page($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: action('page'),\n  }\n})"
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PhoneExt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Products",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Product[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
            },
            {
                "name": "ProductsOrdersSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProductOrder[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n]"
            },
            {
                "name": "ProductsSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Product[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
            },
            {
                "name": "RADIO_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\n  multi: true,\n}"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Relative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Reorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Reorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Resize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RowGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ru",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  \"dayNames\": [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\"\n  ],\n  \"dayNamesShort\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"dayNamesMin\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"monthNames\": [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\"\n  ],\n  \"monthNamesShort\": [\n    \"Янв\",\n    \"Февр\",\n    \"Март\",\n    \"Апр\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Авг\",\n    \"Сент\",\n    \"Окт\",\n    \"Ноябрь\",\n    \"Дек\"\n  ],\n  \"dateFormat\": \"dd.mm.yyyy\",\n  \"today\": \"Сегодня\",\n  \"weekHeader\": \"Нд\",\n  \"clear\": \"Очистить\"\n}"
            },
            {
                "name": "RubricatorMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Sales",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Sale[]",
                "defaultValue": "[\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n]"
            },
            {
                "name": "Sales",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\n    expanded: true,\n    children: [\n      {\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\n        expanded: true,\n        children: [\n          {\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\n          },\n          {\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\n          }\n        ]\n      },\n      {\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\n    children: [\n      {\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\n      },\n      {\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\n    children: [\n      {\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\n      },\n      {\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\n    children: [\n      {\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\n      },\n      {\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\n    children: [\n      {\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\n    children: [\n      {\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\n    children: [\n      {\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\n      },\n      {\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\n    children: [\n      {\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\n      },\n      {\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\n    children: [\n      {\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\n      },\n      {\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\n      }\n    ]\n  },\n  {\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\n    children: [\n      {\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\n      },\n      {\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\n      }\n    ]\n  }\n]"
            },
            {
                "name": "Scroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollHorizontalAndVertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollVertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollVirtual",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SelectionTemplate.bind({})"
            },
            {
                "name": "Selection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectionTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [selectionMode]=\"selectionMode\"\n      [metaKeySelection]=\"metaKeySelection\"\n      [stripedMode]=\"stripedMode\"\n      (selectionChange)=\"selectionChange($event)\"\n      (rowSelect)=\"rowSelect($event)\"\n      (rowUnselect)=\"rowUnselect($event)\"\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 32px\">\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\n          </th>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\n          <td>\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\n          </td>\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    selectionChange: actions.selectionChange,\n    headerCheckboxToggle: actions.headerCheckboxToggle,\n    rowUnselect: event => actions.rowUnselect({ data: event.data, ...event }),\n    rowSelect: (event) => actions.rowSelect({ data: event.data, ...event }),\n  },\n})"
            },
            {
                "name": "SerialNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "simpleMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
            },
            {
                "name": "simpleMenuItemsWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
            },
            {
                "name": "SimpleMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "SimpleSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\n  template: template(`[(ngModel)]=\"model\"`),\n  props: {\n    ...args,\n    ngModelChange: () => {},\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n  },\n})"
            },
            {
                "name": "SimpleWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Simple.bind({})"
            },
            {
                "name": "SingleGroupPanel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sortByLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(a: TreeNode, b: TreeNode): number => {\n  if (a.label > b.label) {\n    return 1;\n  }\n  if (a.label < b.label) {\n    return -1;\n  }\n  return 0;\n}"
            },
            {
                "name": "SortMultiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SSN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "State",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/State.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Style",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "subItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    badge: 'warning',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1 длиннее остальных',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\n            icon: 'zyfra-icon files-file',\n            badge: 'danger',\n            badgeStyleClass: 'p-badge-dot',\n            routerLink: ['/page1']\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    badge: 'info',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2 длиннее остальных',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "SubItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "subItemsRubricator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'A-Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Д-Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Б-Ячейка третьего уровня 1',\n            icon: 'zyfra-icon files-file',\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'В-Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ц-Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Э-Ячейка пятого уровня 2',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ж-Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'М-Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'У-Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(str: string) => `\n    <div class=\"p-radiobutton-group\">\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"red\"\n      label=\"red\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"black\"\n      label=\"black\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"blue\"\n      label=\"blue\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"pink\"\n      label=\"pink\"\n      [disabled]=\"disabled || disabledPink\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      [value]=\"null\"\n      label=\"Не заполнено\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button>\n    </div>\n  `"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAutoCompleteComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraAutoCompleteComponent,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethod(event): void {\n      const filtered = [];\n      const query = event.query;\n\n      for (const country of this.countries) {\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filtered.push(country);\n        }\n      }\n\n      this.suggestions = filtered;\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraBreadcrumbComponent>",
                "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraCheckboxComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-checkbox\n      [(model)]=\"model\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [label]=\"label\"\n      [disabled]=\"disabled\"\n      [binary]=\"binary\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [labelStyleClass]=\"labelStyleClass\"\n      [checkboxIcon]=\"checkboxIcon\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n    ></zyfra-checkbox>\n    <br>\n    (Значение чекбокса: {{model === null ? 'null' : model}})\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraChipComponent>",
                "defaultValue": "(args: ZyfraChipComponent) => ({\n  component: ZyfraChipComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraConfirmDialogComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"confirmDialog.onClick($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-confirm-dialog\n      #confirmDialog\n      [message]=\"message\"\n      [icon]=\"icon\"\n      [header]=\"header\"\n      [acceptLabel]=\"acceptLabel\"\n      [rejectLabel]=\"rejectLabel\"\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n      [acceptMessages]=\"acceptMessages\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-confirm-dialog>\n  `,\n  props: {\n    ...args,\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDatepickerComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraDatepickerComponent,\n  template: `\n  <zyfra-datepicker\n  [ngModel]=\"model\"\n  (ngModelChange)=\"$event\"\n  [dateFormat]=\"dateFormat\"\n  [timeFormat]=\"timeFormat\"\n  [returnFormatValue]=\"returnFormatValue\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [required]=\"required\"\n  [label]=\"label\"\n  [spanClass]=\"spanClass\"\n  [timeMode]=\"timeMode\"\n  [locale]=\"locale\"\n  [showChangeMode]=\"showChangeMode\"\n  [showClear]=\"showClear\"\n  [showDate]=\"showDate\"\n  [showTime]=\"showTime\"\n  [monthNavigator]=\"monthNavigator\"\n  [yearNavigator]=\"yearNavigator\"\n  [yearRange]=\"yearRange\"\n  [showCalendarBtn]=\"showCalendarBtn\"\n  [calendarBtnLabel]=\"calendarBtnLabel\"\n  [numberOfMonths]=\"numberOfMonths\"\n  [selectionMode]=\"selectionMode\"\n  [disabledDates]=\"disabledDates\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  >\n  </zyfra-datepicker>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDialogComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"dialog.onInit($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-dialog\n      #dialog\n      [header]=\"header\"\n      [htmlTemplate]=\"htmlTemplate\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n      (onResizeInit)=\"onResizeInit($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n      (onDragEnd)=\"onDragEnd($event)\"\n      (onMaximize)=\"onMaximize($event)\"\n    ></zyfra-dialog>\n  `,\n  props: {\n    ...args,\n    onResizeInit: action('onResizeInit'),\n    onResizeEnd: action('onResizeEnd'),\n    onDragEnd: action('onDragEnd'),\n    onMaximize: action('onMaximize'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDropdownComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraDropdownComponent,\n  template: `\n    <zyfra-dropdown\n      [(value)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n    ></zyfra-dropdown>\n\n    <br>\n\n    <p>Selected value:</p>\n    <pre>{{value | json}}</pre>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDynamicDialogComponent>",
                "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraHintComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <div\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\n    >\n      <div *ngIf=\"hintTitle !== undefined\">\n        <div>\n          <ng-template #testHint>\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\n            <div>{{ hintText }}</div>\n          </ng-template>\n\n          <zyfra-button\n            [zyfraHint]=\"testHint\"\n            [position]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n      <div *ngIf=\"hintTitle == undefined\">\n        <div>\n          <zyfra-button\n            [zyfraHint]=\"hintText\"\n            [position]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n    </div>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponents>",
                "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputMaskComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputMaskComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputNumberComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputNumberComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputSwitchComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputSwitchComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <div>\n      <zyfra-button\n        label=\"Toggle\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.toggle()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Open\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.open()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Close\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.close()\"\n      ></zyfra-button>\n    </div>\n\n    <br>\n\n    <div style=\"height: 650px; display: flex; position: relative;\">\n      <zyfra-menu-applications\n        #menu\n        [transition]=\"transition\"\n        [hintDelay]=\"hintDelay\"\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\n        [topMenuItems]=\"topMenuItems\"\n        [bottomMenuItems]=\"bottomMenuItems\"\n        [activeItem]=\"activeItem\"\n        (selectItem)=\"selectItem($event); menu.close();\"\n        (toggleState)=\"toggleState($event)\"\n      ></zyfra-menu-applications>\n\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\n        <p>Some content</p>\n      </div>\n    </div>\n  `,\n  props: {\n    ...args,\n    activeItem: null,\n    toggleState: value => action('toggleState')({ value }),\n    selectItem(item: any): void {\n      action('selectItem')(item);\n\n      const isTopItem = this.topMenuItems.includes(item);\n\n      if (isTopItem) {\n        this.activeItem = item;\n      } else {\n        alert(JSON.stringify(item, null, 2));\n      }\n    }\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMessageComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraMessageComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPaginatorComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraPaginatorComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPasswordComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraPasswordComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraProgressBarComponent>",
                "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                "defaultValue": "(args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSliderComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSpinnerComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSplitButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitterComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabMenuComponent>",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTextareaComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraTextareaComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToastComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\n      label=\"for toast\"\n    ></zyfra-button>\n\n    <zyfra-toast\n      #toast\n      [position]=\"position\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\n      [preventDuplicates]=\"preventDuplicates\"\n      [severity]=\"severity\"\n      [summary]=\"summary\"\n      [detail]=\"detail\"\n      [life]=\"life\"\n      [closable]=\"closable\"\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\n      (onClose)=\"onClose($event)\"\n    ></zyfra-toast>\n\n    <ng-template #customTemplate>\n    <div>\n        <p>content</p>\n        <ul>\n          <li>item 1 (for example)</li>\n          <li><b>item 2</b></li>\n        </ul>\n    </div>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onClose: action('onClose'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToggleButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraToggleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTriCheckboxComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tri-checkbox\n      [label]=\"label\"\n      [name]=\"name\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [(model)]=\"model\"\n      (onChange)=\"onChangeHandler($event)\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\n    <br>\n    <br>\n    <br>\n    <zyfra-tri-checkbox\n      [formControl]=\"fControl\"\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\n    <br>\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px' }\"\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionComponent>",
                "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionTabComponent>",
                "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsItemComponent>",
                "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\n  component: ZyfraMenuApplicationsItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabPanelComponent>",
                "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChangeHandler($event)\"\n      (onClose)=\"onCloseHandler($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [stripedMode]=\"stripedMode\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Product</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\n        <tr [zyfraRow]=\"sale\">\n          <td>{{sale.product}}</td>\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    lastYearTotal: 3_283_772.00,\n    thisYearTotal: 1_541_925.00,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n               {{ product.code}}\n            </zyfra-cell-editor>\n          </td>\n\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [editMode]=\"editMode\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n      (rowsChange)=\"rowsChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n          <th style=\"width:8rem\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n              {{product.code}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: right;\">\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              <ng-template zyfraTableTemplate=\"input\">\n                <input type=\"text\" [(ngModel)]=\"product.price\">\n              </ng-template>\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: center; font-size: 16px;\">\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5;\">\n              <i class=\"zyfra-icon editor-mode\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65;\">\n              <i class=\"pi pi-check\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050;\">\n              <i class=\"pi pi-times\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n    statuses: [\n      { label: 'In Stock', value: 'INSTOCK' },\n      { label: 'Low Stock', value: 'LOWSTOCK' },\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' }\n    ],\n    clonedProducts: {} as { [s: string]: Product; },\n    onRowEditInit(product: Product): void {\n      this.clonedProducts[product.id] = { ...product };\n    },\n    onRowEditSave(product: Product): void {\n      if (product.price > 0) {\n        delete this.clonedProducts[product.id];\n      }\n    },\n    onRowEditCancel(product: Product, index: number): void {\n      this.value[index] = this.clonedProducts[product.id];\n      delete this.clonedProducts[product.id];\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      (rowExpand)=\"rowExpand($event)\"\n      (rowCollapse)=\"rowCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 38px\"></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th>Code</th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\n        <tr [zyfraRow]=\"product\">\n          <td>\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\n          </td>\n          <td>{{product.name}}</td>\n          <td>{{product.code}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.rating}}</td>\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\n        <tr>\n          <td colspan=\"7\">\n            <div class=\"p-p-3\">\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\n                <ng-template zyfraTableTemplate=\"header\">\n                  <tr>\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"body\" let-order>\n                  <tr>\n                    <td>{{order.id}}</td>\n                    <td>{{order.customer}}</td>\n                    <td style=\"text-align: right;\">{{order.date}}</td>\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"emptymessage\">\n                  <tr>\n                    <td colspan=\"6\">There are no order for this product yet.</td>\n                  </tr>\n                </ng-template>\n              </zyfra-table>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    rowExpand: event => actions.rowExpand({ data: event.data, ...event }),\n    rowCollapse: event => actions.rowCollapse({ data: event.data, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <zyfra-table-column-filter\n                field=\"representative\"\n                matchMode=\"in\"\n                display=\"menu\"\n                [showMatchModes]=\"false\"\n                [showOperator]=\"false\"\n                [showAddButton]=\"false\"\n              >\n                <ng-template zyfraTableTemplate=\"header\">\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                    <span class=\"p-text-bold\">Agent Picker</span>\n                  </div>\n                </ng-template>\n\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                   filter testing\n                </ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n            </div>\n          </th>\n          <th style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    page: action('page'),\n    onFilter: action('onFilter'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <div style=\"font-family: Inter, sans-serif;\">\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\n    </div>\n\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [lazy]=\"true\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"country.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"representative.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter\n                  field=\"representative\"\n                  matchMode=\"in\"\n                  display=\"menu\"\n                  [showMatchModes]=\"false\"\n                  [showOperator]=\"false\"\n                  [showAddButton]=\"false\"\n                >\n                  <ng-template zyfraTableTemplate=\"header\">\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                      <span class=\"p-text-bold\">Agent Picker</span>\n                    </div>\n                  </ng-template>\n\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                     filter testing\n                  </ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"date\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"balance\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"status\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"activity\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    page: action('page'),\n    onFilter: action('onFilter'),\n    valueChange: action('valueChange'),\n    sort: action('sort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [frozenValue]=\"frozenValue\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n          <th style=\"flex: 0 0 45px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\n              <i class=\"pi pi-lock-open\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\n              <i class=\"pi pi-lock\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    toggleLock(data, frozen, index): void {\n      if (frozen) {\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\n        this.value.push(data);\n      } else {\n        this.value = this.value.filter((c, i) => i !== index);\n        this.frozenValue.push(data);\n      }\n\n      this.value.sort((val1, val2) => {\n        return val1.id < val2.id ? -1 : 1;\n      });\n    }\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (rowReorder)=\"rowReorder($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th style=\"width: 32px\"></th>\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\n          <td>\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\n          </td>\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    colReorder: action('colReorder'),\n    rowReorder: action('rowReorder'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [resizableColumns]=\"resizableColumns\"\n      (colResize)=\"colResize($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraResizableColumn>Code</th>\n          <th zyfraResizableColumn>Name</th>\n          <th zyfraResizableColumn>Category</th>\n          <th zyfraResizableColumn>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    colResize: action('colResize')\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortField]=\"sortField\"\n      [sortMode]=\"sortMode\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [rowGroupMode]=\"rowGroupMode\"\n      [groupRowsBy]=\"groupRowsBy\"\n      [responsiveLayout]=\"responsiveLayout\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Status</th>\n          <th style=\"min-width:200px\">Date</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\n        <tr zyfraRowGroupHeader>\n          <td colspan=\"5\">\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\n        <tr class=\"p-rowgroup-footer\">\n          <td style=\"min-width: 80%\">\n            <div style=\"width: 100%\">Total Customers</div>\n          </td>\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\n            {{calculateCustomerTotal(value, customer.representative.name)}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">\n            {{customer.name}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td style=\"min-width:200px\">\n            {{customer.company}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\n            {{customer.date}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    calculateCustomerTotal(customers, name): number {\n      let total = 0;\n\n      if (customers) {\n        for (const customer of customers) {\n          if (customer.representative.name === name) {\n            total++;\n          }\n        }\n      }\n\n      return total;\n    }\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [scrollDirection]=\"scrollDirection\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\n          <th style=\"width:100px\">Id</th>\n          <th style=\"width:200px\">Country</th>\n          <th style=\"width:200px\">Date</th>\n          <th style=\"width:200px\">Balance</th>\n          <th style=\"width:200px\">Company</th>\n          <th style=\"width:200px\">Status</th>\n          <th style=\"width:200px\">Activity</th>\n          <th style=\"width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\n          <td style=\"width:100px\">{{customer.id}}</td>\n          <td style=\"width:200px\">{{customer.country.name}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\n          <td style=\"width:200px\">{{customer.company}}</td>\n          <td style=\"width:200px\">{{customer.status}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    formatCurrency(value): string {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    sort: action('sort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortMode]=\"sortMode\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    sort: action('sort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/State.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [selectionMode]=\"selectionMode\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rows]=\"rows\"\n      [paginator]=\"paginator\"\n      [stateStorage]=\"stateStorage\"\n      [stateKey]=\"stateKey\"\n      (stateSave)=\"stateSave($event)\"\n      (stateRestore)=\"stateRestore($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell field=\"name\"></th>\n          <th zyfra-search-cell field=\"country.name\"></th>\n          <th zyfra-search-cell field=\"representative.name\"></th>\n          <th zyfra-search-cell field=\"status\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span>{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span>{{customer.representative.name}}</span>\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"4\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    stateSave: action('stateSave'),\n    stateRestore: action('stateRestore'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [columns]=\"columns\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [rows]=\"rows\"\n      [scrollHeight]=\"scrollHeight\"\n      [virtualScroll]=\"virtualScroll\"\n      [virtualRowHeight]=\"virtualRowHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowIndex\">\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Status</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\n          <td>{{ item }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field ]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n    elementChange: actions.elementChange,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [paginator]=\"paginator\"\n      [rows]=\"7\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Brand</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\">\n          <td>\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\n            {{rowData.brand}}\n          </td>\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">$3,283,772</td>\n          <td style=\"text-align: right;\">$2,126,925</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: (event) => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event) => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      (onEditInit)=\"onEditInit($event)\"\n      (onEditComplete)=\"onEditComplete($event)\"\n      (onEditCancel)=\"onEditCancel($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td\n            *ngFor=\"let col of columns; let i = index\"\n            zyfraTTEditableColumn\n          >\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\n              {{ rowData[col.field] }}\n            </zyfra-tree-table-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onEditInit: action('onEditInit'),\n    onEditComplete: action('onEditComplete'),\n    onEditCancel: action('onEditCancel'),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      #tt\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onFilter)=\"onFilter($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [table]=\"tt\" [field]=\"col.field\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onFilter: actions.onFilter,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (onColReorder)=\"onColReorder($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onColReorder: action('onColReorder'),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [selectionMode]=\"selectionMode\"\n      [stripedMode]=\"stripedMode\"\n      [(selection)]=\"selection\"\n      (onNodeSelect)=\"onNodeSelect($event)\"\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\n      (selectionChange)=\"selectionChange($event)\"\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\n          <th>Размер</th>\n          <th>Тип</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTSelectableRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field] }}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeSelect: event => actions.onNodeSelect({ node: event.node, ...event }),\n    onNodeUnselect: event => actions.onNodeUnselect({ node: event.node, ...event }),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n    selectionChange: actions.selectionChange,\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onSort)=\"onSort($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\n            {{col.header}}\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <span>{{rowData[col.field]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onSort: actions.onSort,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "ToggleMask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "topMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\n  {\n    title: 'Z-QA — Zyfra Quality Assurance',\n    icon: 'shapes-cube',\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\n  },\n  {\n    title: 'Zyfra Document Explorer',\n    icon: 'view-dashboard',\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'charts-bar-stacked',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n  {\n    title: 'Z-PS — Zyfra Production Scheduling',\n    icon: 'tools-eyedropper',\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'vectors-difference-ab',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n]"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VirtualScroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithFormControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithoutLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithPageOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSubMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "cloneArrayOfObjects",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T[]",
                "jsdoctags": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "cloneArrayOfObjects",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T[]",
                "jsdoctags": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateCar",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "literal type"
            },
            {
                "name": "generateTimeArray",
                "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ZyfraTime[]",
                "jsdoctags": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getCustomers",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Customer[]"
            },
            {
                "name": "getFileSystem",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            },
            {
                "name": "getProducts",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Product[]"
            },
            {
                "name": "getProductsOrdersSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ProductOrder[]"
            },
            {
                "name": "getProductsSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Product[]"
            },
            {
                "name": "getSales",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            },
            {
                "name": "getSalesSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Sale[]"
            },
            {
                "name": "isIsoDate",
                "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "onSortColumnClick",
                "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "event",
                        "type": "MouseEvent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": "event",
                        "type": "MouseEvent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "DropdownTemplateType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "Filters",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<string | FilterMetadata | []>",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 176
            },
            {
                "name": "HeaderConfig",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "ItemClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "MenuItemSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"standard\" | \"enlarged\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "onResizeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "PageOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number | Record<string | >",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "RowSelectionEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "SelectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"single\" | \"checkbox\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SliderOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SortOrder",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": " | \"1\"",
                "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SpinnerColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TableSortEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SortEvent",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 176
            },
            {
                "name": "TableSortMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"single\" | \"multiple\"",
                "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TableTemplateType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
                "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TZyfraButtonIconPosision",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "ValueChangeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "ViewMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [
            {
                "name": "ZyfraDatePickerMode",
                "childs": [
                    {
                        "name": "absolute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "absolute"
                    },
                    {
                        "name": "relative",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "relative"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
            },
            {
                "name": "ZyfraDatePickerValueType",
                "childs": [
                    {
                        "name": "date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    },
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "string"
                    },
                    {
                        "name": "isoString",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "isoString"
                    },
                    {
                        "name": "timestamp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "timestamp"
                    },
                    {
                        "name": "null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
            },
            {
                "name": "ZyfraLocale",
                "childs": [
                    {
                        "name": "ru",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ru_RU"
                    },
                    {
                        "name": "en",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "en_US"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
            }
        ],
        "groupedVariables": {
            "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts": [
                {
                    "name": "Absolute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AbsoluteMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultipleMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Relative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDatepickerComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraDatepickerComponent,\n  template: `\n  <zyfra-datepicker\n  [ngModel]=\"model\"\n  (ngModelChange)=\"$event\"\n  [dateFormat]=\"dateFormat\"\n  [timeFormat]=\"timeFormat\"\n  [returnFormatValue]=\"returnFormatValue\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [required]=\"required\"\n  [label]=\"label\"\n  [spanClass]=\"spanClass\"\n  [timeMode]=\"timeMode\"\n  [locale]=\"locale\"\n  [showChangeMode]=\"showChangeMode\"\n  [showClear]=\"showClear\"\n  [showDate]=\"showDate\"\n  [showTime]=\"showTime\"\n  [monthNavigator]=\"monthNavigator\"\n  [yearNavigator]=\"yearNavigator\"\n  [yearRange]=\"yearRange\"\n  [showCalendarBtn]=\"showCalendarBtn\"\n  [calendarBtnLabel]=\"calendarBtnLabel\"\n  [numberOfMonths]=\"numberOfMonths\"\n  [selectionMode]=\"selectionMode\"\n  [disabledDates]=\"disabledDates\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  >\n  </zyfra-datepicker>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse($event)'),\n  nodeExpand: action('nodeExpand($event)'),\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "BasicTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "BasicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "EnlargedSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "ExtraItemTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "ExtraTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ExtraItemTemplate.bind({})"
                },
                {
                    "name": "FolderMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "GroupPanels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "GroupPanelTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "MultipleSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "RubricatorMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "SingleGroupPanel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "SubItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Expand.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  rowExpand: action('rowExpand'),\n  rowCollapse: action('rowCollapse'),\n}"
                },
                {
                    "name": "Expand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      (rowExpand)=\"rowExpand($event)\"\n      (rowCollapse)=\"rowCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 38px\"></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th>Code</th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\n        <tr [zyfraRow]=\"product\">\n          <td>\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\n          </td>\n          <td>{{product.name}}</td>\n          <td>{{product.code}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.rating}}</td>\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\n        <tr>\n          <td colspan=\"7\">\n            <div class=\"p-p-3\">\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\n                <ng-template zyfraTableTemplate=\"header\">\n                  <tr>\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"body\" let-order>\n                  <tr>\n                    <td>{{order.id}}</td>\n                    <td>{{order.customer}}</td>\n                    <td style=\"text-align: right;\">{{order.date}}</td>\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"emptymessage\">\n                  <tr>\n                    <td colspan=\"6\">There are no order for this product yet.</td>\n                  </tr>\n                </ng-template>\n              </zyfra-table>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    rowExpand: event => actions.rowExpand({ data: event.data, ...event }),\n    rowCollapse: event => actions.rowCollapse({ data: event.data, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Selection.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  rowSelect: action('rowSelect'),\n  rowUnselect: action('rowUnselect'),\n  selectionChange: action('selectionChange'),\n  headerCheckboxToggle: action('headerCheckboxToggle'),\n}"
                },
                {
                    "name": "Selection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SelectionTemplate.bind({})"
                },
                {
                    "name": "SelectionTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [selectionMode]=\"selectionMode\"\n      [metaKeySelection]=\"metaKeySelection\"\n      [stripedMode]=\"stripedMode\"\n      (selectionChange)=\"selectionChange($event)\"\n      (rowSelect)=\"rowSelect($event)\"\n      (rowUnselect)=\"rowUnselect($event)\"\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 32px\">\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\n          </th>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\n          <td>\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\n          </td>\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    selectionChange: actions.selectionChange,\n    headerCheckboxToggle: actions.headerCheckboxToggle,\n    rowUnselect: event => actions.rowUnselect({ data: event.data, ...event }),\n    rowSelect: (event) => actions.rowSelect({ data: event.data, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Basic.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  elementChange: action('elementChange'),\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field ]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n    elementChange: actions.elementChange,\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "ColGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [paginator]=\"paginator\"\n      [rows]=\"7\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Brand</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\">\n          <td>\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\n            {{rowData.brand}}\n          </td>\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">$3,283,772</td>\n          <td style=\"text-align: right;\">$2,126,925</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: (event) => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event) => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Edit.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Edit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      (onEditInit)=\"onEditInit($event)\"\n      (onEditComplete)=\"onEditComplete($event)\"\n      (onEditCancel)=\"onEditCancel($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td\n            *ngFor=\"let col of columns; let i = index\"\n            zyfraTTEditableColumn\n          >\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\n              {{ rowData[col.field] }}\n            </zyfra-tree-table-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onEditInit: action('onEditInit'),\n    onEditComplete: action('onEditComplete'),\n    onEditCancel: action('onEditCancel'),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Filter.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onFilter: action('onFilter')\n}"
                },
                {
                    "name": "Filter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      #tt\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onFilter)=\"onFilter($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [table]=\"tt\" [field]=\"col.field\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onFilter: actions.onFilter,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Reorder.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Reorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (onColReorder)=\"onColReorder($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onColReorder: action('onColReorder'),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Scroll.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Scroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Selection.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeSelect: action('onNodeSelect'),\n  onNodeUnselect: action('onNodeUnselect'),\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  selectionChange: action('selectionChange'),\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\n}"
                },
                {
                    "name": "Selection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [selectionMode]=\"selectionMode\"\n      [stripedMode]=\"stripedMode\"\n      [(selection)]=\"selection\"\n      (onNodeSelect)=\"onNodeSelect($event)\"\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\n      (selectionChange)=\"selectionChange($event)\"\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\n          <th>Размер</th>\n          <th>Тип</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTSelectableRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field] }}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onNodeSelect: event => actions.onNodeSelect({ node: event.node, ...event }),\n    onNodeUnselect: event => actions.onNodeUnselect({ node: event.node, ...event }),\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n    selectionChange: actions.selectionChange,\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Sort.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onSort: action('onSort'),\n}"
                },
                {
                    "name": "Sort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onSort)=\"onSort($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\n            {{col.header}}\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <span>{{rowData[col.field]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  component: ZyfraTreeTableComponent,\n  props: {\n    ...args,\n    onSort: actions.onSort,\n    onNodeExpand: event => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: event => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/message/zyfra-message.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMessageComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraMessageComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/toast/zyfra-toast.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToastComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\n      label=\"for toast\"\n    ></zyfra-button>\n\n    <zyfra-toast\n      #toast\n      [position]=\"position\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\n      [preventDuplicates]=\"preventDuplicates\"\n      [severity]=\"severity\"\n      [summary]=\"summary\"\n      [detail]=\"detail\"\n      [life]=\"life\"\n      [closable]=\"closable\"\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\n      (onClose)=\"onClose($event)\"\n    ></zyfra-toast>\n\n    <ng-template #customTemplate>\n    <div>\n        <p>content</p>\n        <ul>\n          <li>item 1 (for example)</li>\n          <li><b>item 2</b></li>\n        </ul>\n    </div>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onClose: action('onClose'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts": [
                {
                    "name": "AnimationSpeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\n  { separator: true },\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSplitButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "WarningWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/nav-menu/dataForStories.ts": [
                {
                    "name": "basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1'},\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\n  {label: 'Наименование ячейки 3 длиннее остальных'},\n  {label: 'Наименование ячейки 4'},\n  {label: 'Наименование ячейки 5'},\n]"
                },
                {
                    "name": "basicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                },
                {
                    "name": "subItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    badge: 'warning',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1 длиннее остальных',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\n            icon: 'zyfra-icon files-file',\n            badge: 'danger',\n            badgeStyleClass: 'p-badge-dot',\n            routerLink: ['/page1']\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    badge: 'info',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2 длиннее остальных',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                },
                {
                    "name": "subItemsRubricator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'A-Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Д-Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Б-Ячейка третьего уровня 1',\n            icon: 'zyfra-icon files-file',\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'В-Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ц-Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Э-Ячейка пятого уровня 2',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ж-Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'М-Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'У-Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckboxWithFormControlComponentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\n    <br>\n    <br>\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n    toggleStatus(): void {\n      if (this.fControl.disabled) {\n        this.fControl.enable();\n      } else {\n        this.fControl.disable();\n      }\n    },\n    toggleValue(): void {\n      this.fControl.setValue(!this.fControl.value);\n    },\n  },\n})"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-checkbox\n      [(model)]=\"model\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [label]=\"label\"\n      [disabled]=\"disabled\"\n      [binary]=\"binary\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [labelStyleClass]=\"labelStyleClass\"\n      [checkboxIcon]=\"checkboxIcon\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n    ></zyfra-checkbox>\n    <br>\n    (Значение чекбокса: {{model === null ? 'null' : model}})\n  `,\n  props: args,\n})"
                },
                {
                    "name": "WithFormControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PhoneExt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SerialNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SSN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputMaskComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputMaskComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Currency",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Decimal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputNumberComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputNumberComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputSwitchComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputSwitchComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPaginatorComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraPaginatorComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithPageOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Style",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSpinnerComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Basic.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [stripedMode]=\"stripedMode\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts": [
                {
                    "name": "Binary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTriCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tri-checkbox\n      [label]=\"label\"\n      [name]=\"name\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [(model)]=\"model\"\n      (onChange)=\"onChangeHandler($event)\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\n    <br>\n    <br>\n    <br>\n    <zyfra-tri-checkbox\n      [formControl]=\"fControl\"\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\n    <br>\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px' }\"\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n  },\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts": [
                {
                    "name": "bottomMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\n  {\n    title: 'Избранное',\n    icon: 'social-star'\n  },\n  {\n    title: 'Поиск',\n    icon: 'sort-zoom-in'\n  },\n  {\n    title: 'Служба техподдежки',\n    icon: 'alerts-pulse'\n  },\n]"
                },
                {
                    "name": "CustomTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  open: {\n    duration: 300,\n    delay: 500,\n    timingFunction: 'ease-in',\n  },\n  close: {\n    duration: 300,\n    delay: 300,\n    timingFunction: 'ease-out',\n  }\n}"
                },
                {
                    "name": "ManyItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <div>\n      <zyfra-button\n        label=\"Toggle\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.toggle()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Open\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.open()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Close\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.close()\"\n      ></zyfra-button>\n    </div>\n\n    <br>\n\n    <div style=\"height: 650px; display: flex; position: relative;\">\n      <zyfra-menu-applications\n        #menu\n        [transition]=\"transition\"\n        [hintDelay]=\"hintDelay\"\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\n        [topMenuItems]=\"topMenuItems\"\n        [bottomMenuItems]=\"bottomMenuItems\"\n        [activeItem]=\"activeItem\"\n        (selectItem)=\"selectItem($event); menu.close();\"\n        (toggleState)=\"toggleState($event)\"\n      ></zyfra-menu-applications>\n\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\n        <p>Some content</p>\n      </div>\n    </div>\n  `,\n  props: {\n    ...args,\n    activeItem: null,\n    toggleState: value => action('toggleState')({ value }),\n    selectItem(item: any): void {\n      action('selectItem')(item);\n\n      const isTopItem = this.topMenuItems.includes(item);\n\n      if (isTopItem) {\n        this.activeItem = item;\n      } else {\n        alert(JSON.stringify(item, null, 2));\n      }\n    }\n  },\n})"
                },
                {
                    "name": "topMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\n  {\n    title: 'Z-QA — Zyfra Quality Assurance',\n    icon: 'shapes-cube',\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\n  },\n  {\n    title: 'Zyfra Document Explorer',\n    icon: 'view-dashboard',\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'charts-bar-stacked',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n  {\n    title: 'Z-PS — Zyfra Production Scheduling',\n    icon: 'tools-eyedropper',\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'vectors-difference-ab',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n]"
                },
                {
                    "name": "WithLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithoutLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n}"
                }
            ],
            "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\n  multi: true,\n}"
                }
            ],
            "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts": [
                {
                    "name": "cities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryCity[]",
                    "defaultValue": "[\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n]"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts": [
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplateWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CustomWithBadge.bind({})"
                },
                {
                    "name": "CustomWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChangeHandler($event)\"\n              (onClose)=\"onCloseHandler($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
                },
                {
                    "name": "OverflowTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Simple.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChangeHandler($event)\"\n      (onClose)=\"onCloseHandler($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ColGroup.ts": [
                {
                    "name": "ColGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Product</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\n        <tr [zyfraRow]=\"sale\">\n          <td>{{sale.product}}</td>\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    lastYearTotal: 3_283_772.00,\n    thisYearTotal: 1_541_925.00,\n  },\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts": [
                {
                    "name": "convertToNode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\n  let children;\n  const node: TreeNode = {\n    label: item.label,\n    data: item,\n    key: generateKey(),\n    parent\n  };\n  if (item.items) {\n    children = item.items.map(childItem => {\n      return convertToNode(childItem, node);\n    });\n  }\n  node.children = children;\n  return node;\n}"
                },
                {
                    "name": "flatNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\n}"
                },
                {
                    "name": "fromRubricatorNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\n  const rubricatorNodes = [];\n  letters.forEach(letter => {\n    rubricatorNodes.push({\n      key: letter,\n      label: letter,\n      data: { label: letter },\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\n    });\n  });\n  return rubricatorNodes;\n}"
                },
                {
                    "name": "getPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\n  acc.push(node.parent);\n  return node.parent\n    ? getPath(node.parent, acc)\n    : acc.reverse();\n}"
                },
                {
                    "name": "sortByLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(a: TreeNode, b: TreeNode): number => {\n  if (a.label > b.label) {\n    return 1;\n  }\n  if (a.label < b.label) {\n    return -1;\n  }\n  return 0;\n}"
                }
            ],
            "libs/components/src/lib/table/_story/data.ts": [
                {
                    "name": "Customers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "defaultValue": "[\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n]"
                },
                {
                    "name": "Products",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
                },
                {
                    "name": "ProductsOrdersSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductOrder[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n]"
                },
                {
                    "name": "ProductsSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
                },
                {
                    "name": "Sales",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sale[]",
                    "defaultValue": "[\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n]"
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Mini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoValueDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraProgressBarComponent>",
                    "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts": [
                {
                    "name": "DangerMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToggleButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraToggleButtonComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "DEFAULT_SETTINGS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "defaultValue": "{\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n}"
                },
                {
                    "name": "DEFAULT_TOOLBAR_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "defaultValue": "{\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts": [
                {
                    "name": "DisabledRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "FormControlRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormControlTemplate.bind({})"
                },
                {
                    "name": "FormControlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\n  props: {\n    ...args,\n    disabledPink: true,\n    ngModelChange: () => {},\n    control: new FormControl('red', [Validators.required]),\n  },\n})"
                },
                {
                    "name": "formControlTemplateChunk",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\n    <br>\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\n`"
                },
                {
                    "name": "MiniRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\n  template: template(`[(ngModel)]=\"model\"`),\n  props: {\n    ...args,\n    ngModelChange: () => {},\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n  },\n})"
                },
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(str: string) => `\n    <div class=\"p-radiobutton-group\">\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"red\"\n      label=\"red\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"black\"\n      label=\"black\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"blue\"\n      label=\"blue\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      value=\"pink\"\n      label=\"pink\"\n      [disabled]=\"disabled || disabledPink\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button><br>\n    <zyfra-radio-button\n      [name]=\"name\"\n      [styleClass]=\"styleClass\"\n      [value]=\"null\"\n      label=\"Не заполнено\"\n      [disabled]=\"disabled\"\n      ${str}\n      (onClick)=\"onClick($event)\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n    ></zyfra-radio-button>\n    </div>\n  `"
                }
            ],
            "libs/components/src/lib/table/_story/stories/EditCell.ts": [
                {
                    "name": "EditCell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n               {{ product.code}}\n            </zyfra-cell-editor>\n          </td>\n\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/EditRow.ts": [
                {
                    "name": "EditRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [editMode]=\"editMode\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n      (rowsChange)=\"rowsChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n          <th style=\"width:8rem\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n              {{product.code}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: right;\">\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              <ng-template zyfraTableTemplate=\"input\">\n                <input type=\"text\" [(ngModel)]=\"product.price\">\n              </ng-template>\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: center; font-size: 16px;\">\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5;\">\n              <i class=\"zyfra-icon editor-mode\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65;\">\n              <i class=\"pi pi-check\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050;\">\n              <i class=\"pi pi-times\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n    statuses: [\n      { label: 'In Stock', value: 'INSTOCK' },\n      { label: 'Low Stock', value: 'LOWSTOCK' },\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' }\n    ],\n    clonedProducts: {} as { [s: string]: Product; },\n    onRowEditInit(product: Product): void {\n      this.clonedProducts[product.id] = { ...product };\n    },\n    onRowEditSave(product: Product): void {\n      if (product.price > 0) {\n        delete this.clonedProducts[product.id];\n      }\n    },\n    onRowEditCancel(product: Product, index: number): void {\n      this.value[index] = this.clonedProducts[product.id];\n      delete this.clonedProducts[product.id];\n    },\n  },\n})"
                }
            ],
            "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraConfirmDialogComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"confirmDialog.onClick($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-confirm-dialog\n      #confirmDialog\n      [message]=\"message\"\n      [icon]=\"icon\"\n      [header]=\"header\"\n      [acceptLabel]=\"acceptLabel\"\n      [rejectLabel]=\"rejectLabel\"\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n      [acceptMessages]=\"acceptMessages\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-confirm-dialog>\n  `,\n  props: {\n    ...args,\n    onHide: action('onHide'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/en_US.ts": [
                {
                    "name": "en",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  \"dayNames\": [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  \"dayNamesShort\": [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ],\n  \"dayNamesMin\": [\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\"\n  ],\n  \"monthNames\": [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  \"monthNamesShort\": [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  \"dateFormat\": \"mm/dd/yy\",\n  \"today\": \"Today\",\n  \"weekHeader\": \"Wk\",\n  \"clear\": \"Clear\"\n}"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.module.ts": [
                {
                    "name": "EXPORTED_DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
                }
            ],
            "libs/components/src/lib/tree-table/_story/data.ts": [
                {
                    "name": "FileSystem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    data: {\n      name: 'Applications',\n      size: '200mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Angular',\n          size: '25mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'angular.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'cli.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'mobile.app',\n              size: '5mb',\n              type: 'Application'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'editor.app',\n          size: '25mb',\n          type: 'Application'\n        }\n      },\n      {\n        data: {\n          name: 'settings.app',\n          size: '50mb',\n          type: 'Application'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Cloud',\n      size: '20mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'backup-1.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      },\n      {\n        data: {\n          name: 'backup-2.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Desktop',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'note-meeting.txt',\n          size: '50kb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'note-todo.txt',\n          size: '100kb',\n          type: 'Text'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Documents',\n      size: '75kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Work',\n          size: '55kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Expenses.doc',\n              size: '30kb',\n              type: 'Document'\n            }\n          },\n          {\n            data: {\n              name: 'Resume.doc',\n              size: '25kb',\n              type: 'Resume'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Home',\n          size: '20kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Invoices',\n              size: '20kb',\n              type: 'Text'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Downloads',\n      size: '25mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Spanish',\n          size: '10mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'tutorial-a1.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          },\n          {\n            data: {\n              name: 'tutorial-a2.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Travel',\n          size: '15mb',\n          type: 'Text'\n        },\n        children: [\n          {\n            data: {\n              name: 'Hotel.pdf',\n              size: '10mb',\n              type: 'PDF'\n            }\n          },\n          {\n            data: {\n              name: 'Flight.pdf',\n              size: '5mb',\n              type: 'PDF'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Main',\n      size: '50mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'bin',\n          size: '50kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'etc',\n          size: '100kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'var',\n          size: '100kb',\n          type: 'Link'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Other',\n      size: '5mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'todo.txt',\n          size: '3mb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'logo.png',\n          size: '2mb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Pictures',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'barcelona.jpg',\n          size: '90kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'primeng.png',\n          size: '30kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'prime.jpg',\n          size: '30kb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Videos',\n      size: '1500mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'primefaces.mkv',\n          size: '1000mb',\n          type: 'Video'\n        }\n      },\n      {\n        data: {\n          name: 'intro.avi',\n          size: '500mb',\n          type: 'Video'\n        }\n      }\n    ]\n  }\n]"
                },
                {
                    "name": "Sales",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\n    expanded: true,\n    children: [\n      {\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\n        expanded: true,\n        children: [\n          {\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\n          },\n          {\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\n          }\n        ]\n      },\n      {\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\n    children: [\n      {\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\n      },\n      {\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\n    children: [\n      {\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\n      },\n      {\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\n    children: [\n      {\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\n      },\n      {\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\n    children: [\n      {\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\n    children: [\n      {\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\n    children: [\n      {\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\n      },\n      {\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\n    children: [\n      {\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\n      },\n      {\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\n    children: [\n      {\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\n      },\n      {\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\n      }\n    ]\n  },\n  {\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\n    children: [\n      {\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\n      },\n      {\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\n      }\n    ]\n  }\n]"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Filter.ts": [
                {
                    "name": "Filter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <zyfra-table-column-filter\n                field=\"representative\"\n                matchMode=\"in\"\n                display=\"menu\"\n                [showMatchModes]=\"false\"\n                [showOperator]=\"false\"\n                [showAddButton]=\"false\"\n              >\n                <ng-template zyfraTableTemplate=\"header\">\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                    <span class=\"p-text-bold\">Agent Picker</span>\n                  </div>\n                </ng-template>\n\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                   filter testing\n                </ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n            </div>\n          </th>\n          <th style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    page: action('page'),\n    onFilter: action('onFilter'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts": [
                {
                    "name": "FilterSortSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <div style=\"font-family: Inter, sans-serif;\">\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\n    </div>\n\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [lazy]=\"true\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"country.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"representative.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter\n                  field=\"representative\"\n                  matchMode=\"in\"\n                  display=\"menu\"\n                  [showMatchModes]=\"false\"\n                  [showOperator]=\"false\"\n                  [showAddButton]=\"false\"\n                >\n                  <ng-template zyfraTableTemplate=\"header\">\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                      <span class=\"p-text-bold\">Agent Picker</span>\n                    </div>\n                  </ng-template>\n\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                     filter testing\n                  </ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"date\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"balance\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"status\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"activity\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    page: action('page'),\n    onFilter: action('onFilter'),\n    valueChange: action('valueChange'),\n    sort: action('sort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/FrozenRows.ts": [
                {
                    "name": "FrozenRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [frozenValue]=\"frozenValue\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n          <th style=\"flex: 0 0 45px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\n              <i class=\"pi pi-lock-open\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\n              <i class=\"pi pi-lock\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    toggleLock(data, frozen, index): void {\n      if (frozen) {\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\n        this.value.push(data);\n      } else {\n        this.value = this.value.filter((c, i) => i !== index);\n        this.frozenValue.push(data);\n      }\n\n      this.value.sort((val1, val2) => {\n        return val1.id < val2.id ? -1 : 1;\n      });\n    }\n  },\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/generateKey.ts": [
                {
                    "name": "generateKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
                }
            ],
            "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts": [
                {
                    "name": "Group",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDropdownComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraDropdownComponent,\n  template: `\n    <zyfra-dropdown\n      [(value)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n    ></zyfra-dropdown>\n\n    <br>\n\n    <p>Selected value:</p>\n    <pre>{{value | json}}</pre>\n  `,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "VirtualScroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "simpleMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
                },
                {
                    "name": "simpleMenuItemsWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabMenuComponent>",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSubMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.component.stories.ts": [
                {
                    "name": "HintTextExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HintTitleExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraHintComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <div\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\n    >\n      <div *ngIf=\"hintTitle !== undefined\">\n        <div>\n          <ng-template #testHint>\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\n            <div>{{ hintText }}</div>\n          </ng-template>\n\n          <zyfra-button\n            [zyfraHint]=\"testHint\"\n            [position]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n      <div *ngIf=\"hintTitle == undefined\">\n        <div>\n          <zyfra-button\n            [zyfraHint]=\"hintText\"\n            [position]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n    </div>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts": [
                {
                    "name": "htmlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\n  <div>\n    <p>content</p>\n    <ul>\n      <li>item 1 (for example)</li>\n      <li><b>item 2</b></li>\n    </ul>\n  </div>\n`"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDialogComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"dialog.onInit($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-dialog\n      #dialog\n      [header]=\"header\"\n      [htmlTemplate]=\"htmlTemplate\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n      (onResizeInit)=\"onResizeInit($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n      (onDragEnd)=\"onDragEnd($event)\"\n      (onMaximize)=\"onMaximize($event)\"\n    ></zyfra-dialog>\n  `,\n  props: {\n    ...args,\n    onResizeInit: action('onResizeInit'),\n    onResizeEnd: action('onResizeEnd'),\n    onDragEnd: action('onDragEnd'),\n    onMaximize: action('onMaximize'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/chip/zyfra-chip.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraChipComponent>",
                    "defaultValue": "(args: ZyfraChipComponent) => ({\n  component: ZyfraChipComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/icon/story/icon-definitions.ts": [
                {
                    "name": "IconDefs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-close-all\",\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-logo-green\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-history\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-mode\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
                }
            ],
            "libs/components/src/lib/icon/zyfra-icon.component.stories.ts": [
                {
                    "name": "IconsSet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponents>",
                    "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraBreadcrumbComponent>",
                    "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
                }
            ],
            "libs/components/src/lib/tree/zyfra-tree.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder ',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Pagination.ts": [
                {
                    "name": "Pagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "PaginationTemplate.bind({})"
                },
                {
                    "name": "PaginationTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [paginator]=\"paginator\"\n      [rows]=\"rows\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      (page)=\"page($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: action('page'),\n  }\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionTabComponent>",
                    "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsItemComponent>",
                    "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\n  component: ZyfraMenuApplicationsItemComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabPanelComponent>",
                    "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts": [
                {
                    "name": "RADIO_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\n  multi: true,\n}"
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.stories.ts": [
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSliderComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  props: args,\n})"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Reorder.ts": [
                {
                    "name": "Reorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (rowReorder)=\"rowReorder($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th style=\"width: 32px\"></th>\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\n          <td>\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\n          </td>\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    colReorder: action('colReorder'),\n    rowReorder: action('rowReorder'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Resize.ts": [
                {
                    "name": "Resize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [resizableColumns]=\"resizableColumns\"\n      (colResize)=\"colResize($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraResizableColumn>Code</th>\n          <th zyfraResizableColumn>Name</th>\n          <th zyfraResizableColumn>Category</th>\n          <th zyfraResizableColumn>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    colResize: action('colResize')\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/RowGroup.ts": [
                {
                    "name": "RowGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortField]=\"sortField\"\n      [sortMode]=\"sortMode\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [rowGroupMode]=\"rowGroupMode\"\n      [groupRowsBy]=\"groupRowsBy\"\n      [responsiveLayout]=\"responsiveLayout\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Status</th>\n          <th style=\"min-width:200px\">Date</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\n        <tr zyfraRowGroupHeader>\n          <td colspan=\"5\">\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\n        <tr class=\"p-rowgroup-footer\">\n          <td style=\"min-width: 80%\">\n            <div style=\"width: 100%\">Total Customers</div>\n          </td>\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\n            {{calculateCustomerTotal(value, customer.representative.name)}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">\n            {{customer.name}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td style=\"min-width:200px\">\n            {{customer.company}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\n            {{customer.date}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    calculateCustomerTotal(customers, name): number {\n      let total = 0;\n\n      if (customers) {\n        for (const customer of customers) {\n          if (customer.representative.name === name) {\n            total++;\n          }\n        }\n      }\n\n      return total;\n    }\n  },\n})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/ru_RU.ts": [
                {
                    "name": "ru",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  \"dayNames\": [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\"\n  ],\n  \"dayNamesShort\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"dayNamesMin\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"monthNames\": [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\"\n  ],\n  \"monthNamesShort\": [\n    \"Янв\",\n    \"Февр\",\n    \"Март\",\n    \"Апр\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Авг\",\n    \"Сент\",\n    \"Окт\",\n    \"Ноябрь\",\n    \"Дек\"\n  ],\n  \"dateFormat\": \"dd.mm.yyyy\",\n  \"today\": \"Сегодня\",\n  \"weekHeader\": \"Нд\",\n  \"clear\": \"Очистить\"\n}"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts": [
                {
                    "name": "ScrollHorizontalAndVertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [scrollDirection]=\"scrollDirection\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\n          <th style=\"width:100px\">Id</th>\n          <th style=\"width:200px\">Country</th>\n          <th style=\"width:200px\">Date</th>\n          <th style=\"width:200px\">Balance</th>\n          <th style=\"width:200px\">Company</th>\n          <th style=\"width:200px\">Status</th>\n          <th style=\"width:200px\">Activity</th>\n          <th style=\"width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\n          <td style=\"width:100px\">{{customer.id}}</td>\n          <td style=\"width:200px\">{{customer.country.name}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\n          <td style=\"width:200px\">{{customer.company}}</td>\n          <td style=\"width:200px\">{{customer.status}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    formatCurrency(value): string {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVertical.ts": [
                {
                    "name": "ScrollVertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts": [
                {
                    "name": "ScrollVirtual",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [columns]=\"columns\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [rows]=\"rows\"\n      [scrollHeight]=\"scrollHeight\"\n      [virtualScroll]=\"virtualScroll\"\n      [virtualRowHeight]=\"virtualRowHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowIndex\">\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAutoCompleteComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraAutoCompleteComponent,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethod(event): void {\n      const filtered = [];\n      const query = event.query;\n\n      for (const country of this.countries) {\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filtered.push(country);\n        }\n      }\n\n      this.suggestions = filtered;\n    },\n  },\n})"
                },
                {
                    "name": "withDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDynamicDialogComponent>",
                    "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/input/zyfra-input.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputComponent,\n  props: args,\n})"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/password/zyfra-password.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPasswordComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraPasswordComponent,\n  props: args,\n})"
                },
                {
                    "name": "ToggleMask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitterComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTextareaComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraTextareaComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionComponent>",
                    "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Sort.ts": [
                {
                    "name": "Sort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    sort: action('sort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/SortMultiple.ts": [
                {
                    "name": "SortMultiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortMode]=\"sortMode\"\n      (sort)=\"sort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    sort: action('sort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/State.ts": [
                {
                    "name": "State",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/State.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/State.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [selectionMode]=\"selectionMode\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rows]=\"rows\"\n      [paginator]=\"paginator\"\n      [stateStorage]=\"stateStorage\"\n      [stateKey]=\"stateKey\"\n      (stateSave)=\"stateSave($event)\"\n      (stateRestore)=\"stateRestore($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell field=\"name\"></th>\n          <th zyfra-search-cell field=\"country.name\"></th>\n          <th zyfra-search-cell field=\"representative.name\"></th>\n          <th zyfra-search-cell field=\"status\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span>{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span>{{customer.representative.name}}</span>\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"4\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    stateSave: action('stateSave'),\n    stateRestore: action('stateRestore'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Status.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Status</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\n          <td>{{ item }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  component: ZyfraTableComponent,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
                }
            ]
        },
        "groupedFunctions": {
            "libs/components/src/lib/table/_story/data.ts": [
                {
                    "name": "cloneArrayOfObjects",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T[]",
                    "jsdoctags": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCustomers",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Customer[]"
                },
                {
                    "name": "getProducts",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Product[]"
                },
                {
                    "name": "getProductsOrdersSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ProductOrder[]"
                },
                {
                    "name": "getProductsSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Product[]"
                },
                {
                    "name": "getSalesSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Sale[]"
                }
            ],
            "libs/components/src/lib/tree-table/_story/data.ts": [
                {
                    "name": "cloneArrayOfObjects",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T[]",
                    "jsdoctags": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFileSystem",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                },
                {
                    "name": "getSales",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts": [
                {
                    "name": "generateCar",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "literal type"
                }
            ],
            "libs/components/src/lib/datepicker/utils/generate-time-array.ts": [
                {
                    "name": "generateTimeArray",
                    "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ZyfraTime[]",
                    "jsdoctags": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/datepicker/utils/is-iso-date.ts": [
                {
                    "name": "isIsoDate",
                    "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts": [
                {
                    "name": "onSortColumnClick",
                    "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts": [
                {
                    "name": "ZyfraDatePickerMode",
                    "childs": [
                        {
                            "name": "absolute",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "absolute"
                        },
                        {
                            "name": "relative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "relative"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts": [
                {
                    "name": "ZyfraDatePickerValueType",
                    "childs": [
                        {
                            "name": "date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        },
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "string"
                        },
                        {
                            "name": "isoString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "isoString"
                        },
                        {
                            "name": "timestamp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "timestamp"
                        },
                        {
                            "name": "null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts": [
                {
                    "name": "ZyfraLocale",
                    "childs": [
                        {
                            "name": "ru",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ru_RU"
                        },
                        {
                            "name": "en",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "en_US"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts": [
                {
                    "name": "DropdownTemplateType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/table/zyfra-table.types.ts": [
                {
                    "name": "Filters",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<string | FilterMetadata | []>",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 176
                },
                {
                    "name": "RowSelectionEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "TableSortEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SortEvent",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 176
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "HeaderConfig",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "MenuItemSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"standard\" | \"enlarged\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "SelectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"single\" | \"checkbox\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "ViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts": [
                {
                    "name": "ItemClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.ts": [
                {
                    "name": "onResizeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.ts": [
                {
                    "name": "PageOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number | Record<string | >",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.ts": [
                {
                    "name": "SliderOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/shared-table.types.ts": [
                {
                    "name": "SortOrder",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": " | \"1\"",
                    "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.ts": [
                {
                    "name": "SpinnerColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/tree-table/tree-table.types.ts": [
                {
                    "name": "TableSortMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"single\" | \"multiple\"",
                    "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts": [
                {
                    "name": "TableTemplateType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
                    "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.ts": [
                {
                    "name": "TZyfraButtonIconPosision",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts": [
                {
                    "name": "ValueChangeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BaseTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "onSortColumnClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowBaseDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraBaseSearchCellComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraBaseTableComponent",
                "coveragePercent": 67,
                "coverageCount": "72/106",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/@core/shared/zyfra-template.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionTabComponent",
                "coveragePercent": 40,
                "coverageCount": "6/15",
                "status": "medium"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionComponent",
                "coveragePercent": 66,
                "coverageCount": "10/15",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraAccordionOpenClose",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAutoCompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/61",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxWithFormControlComponentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "en",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ru",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraDatePickerLocaleInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraTime",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateTimeArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isIsoDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Absolute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AbsoluteMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Relative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/84",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraDropdownTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/69",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogRef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraDynamicDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraHintOverlayManager",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTextExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTitleExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraHintComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraHintDirective",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraHintOptionsModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPORTED_DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconDefs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponents",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconsSet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Phone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneExt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SerialNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SSN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputMaskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Currency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Decimal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bottomMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManyItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "topMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransition",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransitionSettings",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItemsRubricator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraNavMenuGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraAutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuSelectionEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SETTINGS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/service/selection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "convertToNode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flatNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fromRubricatorNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortByLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page1Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page2Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page3Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "WrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnlargedSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraItemTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FolderMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanelTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RubricatorMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleGroupPanel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPaginatorComponent",
                "coveragePercent": 85,
                "coverageCount": "18/21",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ToggleMask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoValueDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formControlTemplateChunk",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiniRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RADIO_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryCity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSelectButtonComponent",
                "coveragePercent": 25,
                "coverageCount": "4/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonChange",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonOptionClick",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Style",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationSpeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitterComponent",
                "coveragePercent": 76,
                "coverageCount": "13/17",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSplitterTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItemsWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplateWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OverflowTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductOrder",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Sale",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cloneArrayOfObjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCustomers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProductsOrdersSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProductsSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSalesSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Customers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Products",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsOrdersSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilterSortSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FrozenRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PaginationTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Resize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RowGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollHorizontalAndVertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollVertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateCar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollVirtual",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectionTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SortMultiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/State.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/State.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Status.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Status.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCellEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraCancelEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/editable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraEditableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraFrozenColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraInitEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableRowHandlerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraResizableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowGroupHeaderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSaveEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSelectableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSortableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRowTogglerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSearchCellComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSortIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableColumnFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableHeaderCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/zyfra-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableComponent",
                "coveragePercent": 68,
                "coverageCount": "103/150",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToggleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TToggleButtonClick",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cloneArrayOfObjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getFileSystem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FileSystem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableEditableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableReorderableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableSelectableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableSortableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableCellEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableHeaderCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableSortIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableTogglerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableComponent",
                "coveragePercent": 69,
                "coverageCount": "80/115",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Binary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTriCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}