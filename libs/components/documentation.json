{
    "pipes": [],
    "interfaces": [
        {
            "name": "DropdownChangeEvent",
            "id": "interface-DropdownChangeEvent-a33b05160b860f52f5b0b649c4e0013c",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\ntype FilterMatchModeType =\n  | 'contains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'equals'\n  | 'notEquals'\n  | 'in'\n  | 'lt'\n  | 'lte'\n  | 'gt'\n  | 'gte';\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown> {\n  @Input() value: T;\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode: FilterMatchModeType = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: string;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n  @Output() valueChange = new EventEmitter<T>();\n}\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "InputEvent",
            "id": "interface-InputEvent-8f2049cbf3e1172adc3618bb89f2b27b",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nexport interface InputEvent {\r\n  originalEvent: KeyboardEvent;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-input-number',\r\n  templateUrl: './zyfra-input-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputNumberComponent {\r\n  @Input() value: number;\r\n  @Input() format = true;\r\n  @Input() showButtons: boolean;\r\n  @Input() buttonLayout = 'stacked';\r\n  @Input() spanClass: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() incrementButtonClass: string;\r\n  @Input() decrementButtonClass: string;\r\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\r\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\r\n  @Input() locale: string;\r\n  @Input() localeMatcher = 'best fit';\r\n  @Input() mode = 'decimal';\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay = 'symbol';\r\n  @Input() useGrouping = true;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() step = 1;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() inputStyle: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: number;\r\n  @Input() disabled: boolean;\r\n  @Input() title: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() name: string;\r\n  @Input() autocomplete: string;\r\n\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onInput = new EventEmitter<InputEvent>();\r\n}\r\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyboardEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "PageChangeEvent",
            "id": "interface-PageChangeEvent-db0022d74ec09487d989ed7c8cf2d9fe",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonChange",
            "id": "interface-SelectButtonChange-1aae9ab37837c6e88a69b7e12ab6d1eb",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonOptionClick",
            "id": "interface-SelectButtonOptionClick-1aae9ab37837c6e88a69b7e12ab6d1eb",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "option",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "StoryCity",
            "id": "interface-StoryCity-5122b97e5336cc17979c7c8ef36d1bf7",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { Meta, Story } from '@storybook/angular/types-6-0';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { ZyfraSelectButtonModule } from './zyfra-select-button.module';\r\n\r\nexport default {\r\n  moduleId: module.id,\r\n  title: 'Buttons/SelectButton',\r\n  component: ZyfraSelectButtonComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, ZyfraSelectButtonModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-select-button.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\ninterface StoryCity {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nconst cities: StoryCity[] = [\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n];\r\n\r\nconst Template: Story<ZyfraSelectButtonComponent<StoryCity, string>> = (args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  options: cities,\r\n  optionLabel: 'name',\r\n  optionDisabled: 'inactive',\r\n  multiple: true,\r\n  optionValue: 'code',\r\n  disabled: false,\r\n  styleClass: 'selectbutton-default',\r\n};\r\n\r\nexport const DefaultMini = Template.bind({});\r\nDefaultMini.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-default p-selectbutton-mini',\r\n};\r\n\r\nexport const Danger = Template.bind({});\r\nDanger.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-danger',\r\n};\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "TToggleButtonClick",
            "id": "interface-TToggleButtonClick-1bc46a670474ca731780ab56204d3807",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraAccordionOpenClose",
            "id": "interface-ZyfraAccordionOpenClose-96877d4851f8752e11925f87ce51eaf5",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n  //styleUrls: ['./zyfra-accordion.component.less'],\n  //encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ZyfraHintOverlayManager",
            "id": "injectable-ZyfraHintOverlayManager-dae4cd347d58deb7c0cd28ef645f4520",
            "file": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
            "properties": [
                {
                    "name": "className",
                    "defaultValue": "'zyfra-hint-overlay-container'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        143
                    ]
                },
                {
                    "name": "innerContainer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "append",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ZyfraHintOverlayManager {\r\n  private innerContainer: HTMLElement = null;\r\n  private readonly className = 'zyfra-hint-overlay-container';\r\n  private renderer: Renderer2;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, rendererFactory: RendererFactory2) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  private get container(): HTMLElement {\r\n    if (!this.innerContainer) {\r\n      this.innerContainer = this.document.querySelector(`.${this.className}`);\r\n      if (!this.innerContainer) {\r\n        this.innerContainer = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.innerContainer, this.className);\r\n        this.renderer.setStyle(\r\n          this.innerContainer,\r\n          'cssText',\r\n          'position:fixed; top:0; left:0; width:100%; height:100%; pointer-events:none; z-index:99999;'\r\n        );\r\n        this.document.body.appendChild(this.innerContainer);\r\n      }\r\n    }\r\n    return this.innerContainer;\r\n  }\r\n\r\n  public create(): void {}\r\n\r\n  public append(element: HTMLElement): void {\r\n    this.container.appendChild(element);\r\n  }\r\n\r\n  public remove(element: HTMLElement): void {\r\n    this.container.removeChild(element);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "container": {
                    "name": "container",
                    "getSignature": {
                        "name": "container",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 16
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ZyfraHintOptionsModel",
            "id": "class-ZyfraHintOptionsModel-5e3ef5c8d53f0ea380d6ef50a806c324",
            "file": "libs/components/src/lib/hint/zyfra-hint.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TemplateRef } from '@angular/core';\r\n\r\nexport class ZyfraHintOptionsModel {\r\n  left?: number;\r\n  top?: number;\r\n  className?: string;\r\n  content?: string | TemplateRef<any>;\r\n  context: Record<string, unknown>;\r\n}\r\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ZyfraHintDirective",
            "id": "directive-ZyfraHintDirective-cf2873d603af8a3adcd1703632add4f7",
            "file": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Inject,\r\n  ComponentFactoryResolver,\r\n  Input,\r\n  ElementRef,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  HostListener,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { ZyfraHintComponent } from './zyfra-hint.component';\r\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\r\n\r\n@Directive({\r\n  selector: '[zyfraHint]',\r\n  exportAs: 'zyfraHint',\r\n})\r\nexport class ZyfraHintDirective implements OnDestroy, OnChanges, AfterViewInit {\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    @Inject(ComponentFactoryResolver)\r\n    private resolver: ComponentFactoryResolver,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zyfraHintOverlayManager: ZyfraHintOverlayManager,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  @Input() zyfraHint: string | TemplateRef<any> = null;\r\n  @Input() zyfraHintContext: Record<string, unknown>;\r\n  @Input() zyfraHintDelay = 400;\r\n  @Input() hintClass: string | string[] = '';\r\n  @Input() zyfraShowHint = false;\r\n  @Input() position: 'left' | 'right' | 'above' | 'below' = 'right';\r\n  @Input() hasOverflowText: HTMLElement;\r\n\r\n  private hintStyle: string;\r\n  private mutationObserver: MutationObserver;\r\n  private componentFactory = this.resolver.resolveComponentFactory(ZyfraHintComponent);\r\n  private hintCmpRef: ComponentRef<ZyfraHintComponent> = null;\r\n  private hintElement: HTMLElement = null;\r\n  private coordinates = { left: 0, top: 0 };\r\n  private hintTimerId = null;\r\n\r\n  @HostListener('click', ['$event']) clickEvent(event: MouseEvent): void {\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener('mouseenter', ['$event']) mouseenter(event: MouseEvent): void {\r\n    if (!this.zyfraShowHint) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) mouseleave(event: MouseEvent): void {\r\n    if (!this.hintCmpRef) {\r\n      clearTimeout(this.hintTimerId);\r\n      this.zyfraShowHint = false;\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.zyfraShowHint) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.hintCmpRef) {\r\n      let wereChanges = false;\r\n\r\n      if (changes.position) {\r\n        const change = changes.position;\r\n\r\n        if (!change.firstChange) {\r\n          this._setHintClasses();\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (changes.zyfraHint) {\r\n        const change = changes.zyfraHint;\r\n        if (!change.firstChange) {\r\n          this.hintCmpRef.instance.options.content = change.currentValue;\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (wereChanges) {\r\n        this.hintCmpRef.changeDetectorRef.detectChanges();\r\n        this._setOptions();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setHintClasses(): void {\r\n    this.hintCmpRef.instance.hostClasses = `zyfra_hint ${this.position} ${this.hintClass} ${this.hintStyle}`;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.hintCmpRef) {\r\n      this.hintCmpRef.destroy();\r\n      this.hintCmpRef = null;\r\n    }\r\n    if (this.mutationObserver) {\r\n      this.mutationObserver.disconnect();\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.zyfraShowHint) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  public hintForOveflowText(): boolean {\r\n    return this.hasOverflowText ? this.hasOverflowText.offsetWidth < this.hasOverflowText.scrollWidth : true;\r\n  }\r\n\r\n  public show(): void {\r\n    if (this.zyfraHint && this.hintForOveflowText()) {\r\n      this._showHint();\r\n      this.zyfraShowHint = true;\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    clearTimeout(this.hintTimerId);\r\n    if (this.hintCmpRef) {\r\n      this.renderer.setStyle(this.hintCmpRef.location.nativeElement, 'animation', 'hintOut 0.3s');\r\n    }\r\n    this.zyfraShowHint = false;\r\n  }\r\n\r\n  private _setOptions(): void {\r\n    const viewPort: DOMRect = this.elementRef.nativeElement.getBoundingClientRect();\r\n    const elementHeight: number = viewPort.height;\r\n    const elementWidth: number = viewPort.width;\r\n    const hintBoundingClientRect: DOMRect = this.hintElement.getBoundingClientRect();\r\n    const hintHeight = hintBoundingClientRect.height;\r\n    const hintWidth = hintBoundingClientRect.width;\r\n    const margin = 12;\r\n\r\n    this._setPosition(hintHeight, elementHeight, viewPort, margin, hintWidth);\r\n\r\n    this._setCoordinatesLeftAndTop(hintHeight, elementHeight, viewPort, margin, hintWidth, elementWidth);\r\n\r\n    this.hintCmpRef.instance.options.left = this.coordinates.left;\r\n    this.hintCmpRef.instance.options.top = this.coordinates.top;\r\n    this._setHintClasses();\r\n    this.hintCmpRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  private _setPosition(\r\n    hintHeight: number,\r\n    elementHeight: number,\r\n    viewPort: DOMRect,\r\n    margin: number,\r\n    hintWidth: number\r\n  ): void {\r\n    switch (this.position) {\r\n      case 'left':\r\n        if (viewPort.left < hintWidth + margin) {\r\n          this.position = 'right';\r\n        }\r\n        break;\r\n      case 'right':\r\n        if (window.innerWidth - viewPort.right < hintWidth + margin) {\r\n          this.position = 'left';\r\n        }\r\n        break;\r\n      case 'above':\r\n        if (viewPort.top < hintHeight + margin) {\r\n          this.position = 'below';\r\n        }\r\n        break;\r\n      case 'below':\r\n        if (window.innerHeight - (viewPort.top + elementHeight) < hintHeight + margin) {\r\n          this.position = 'above';\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _setCoordinatesLeftAndTop(\r\n    hintHeight: number,\r\n    elementHeight: number,\r\n    viewPort: DOMRect,\r\n    margin: number,\r\n    hintWidth: number,\r\n    elementWidth: number\r\n  ): void {\r\n    switch (this.position) {\r\n      case 'right': {\r\n        if (hintHeight <= elementHeight) {\r\n          this.coordinates.top = viewPort.top;\r\n        } else {\r\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\r\n        }\r\n        this.coordinates.left = viewPort.right + margin;\r\n        break;\r\n      }\r\n      case 'left': {\r\n        if (hintHeight <= elementHeight) {\r\n          this.coordinates.top = viewPort.top;\r\n        } else {\r\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\r\n        }\r\n        this.coordinates.left = viewPort.left - hintWidth - margin;\r\n        break;\r\n      }\r\n      case 'above': {\r\n        if (elementWidth >= hintWidth) {\r\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\r\n        } else if (viewPort.left < hintWidth / 2) {\r\n          this.coordinates.left = viewPort.left;\r\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\r\n          this.coordinates.left = viewPort.left - hintWidth / 2;\r\n        } else {\r\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\r\n        }\r\n\r\n        this.coordinates.top = viewPort.top - hintHeight - margin;\r\n        break;\r\n      }\r\n      case 'below': {\r\n        if (elementWidth >= hintWidth) {\r\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\r\n        } else if (viewPort.left < hintWidth / 2) {\r\n          this.coordinates.left = viewPort.left;\r\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\r\n          this.coordinates.left = viewPort.left - hintWidth / 2;\r\n        } else {\r\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\r\n        }\r\n        this.coordinates.top = viewPort.bottom + margin;\r\n        break;\r\n      }\r\n      default: {\r\n        this.coordinates.left = viewPort.right + margin;\r\n        this.coordinates.top = viewPort.top;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _showHint(): void {\r\n    this.hintTimerId = setTimeout(() => {\r\n      this.zyfraHintOverlayManager.create();\r\n\r\n      this.hintCmpRef = this.viewContainerRef.createComponent(this.componentFactory);\r\n      this.hintStyle = '';\r\n      this.hintCmpRef.instance.options = {\r\n        left: -1000,\r\n        top: -1000,\r\n        content: this.zyfraHint,\r\n        context: this.zyfraHintContext,\r\n      };\r\n      this._setHintClasses();\r\n      this.hintElement = this.hintCmpRef.location.nativeElement;\r\n      this.zyfraHintOverlayManager.append(this.hintElement);\r\n\r\n      this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n        mutations.forEach((mutation: MutationRecord) => {\r\n          if (mutation.type === 'childList') {\r\n            this._setOptions();\r\n          }\r\n        });\r\n      });\r\n\r\n      this.mutationObserver.observe(this.hintElement, {\r\n        childList: true,\r\n      });\r\n\r\n      this.hintCmpRef.instance.close.subscribe(() => {\r\n        this.hintCmpRef.destroy();\r\n        this.hintCmpRef = null;\r\n\r\n        if (this.mutationObserver) {\r\n          this.mutationObserver.disconnect();\r\n        }\r\n      });\r\n      this._setOptions();\r\n      this.hintCmpRef.changeDetectorRef.detectChanges();\r\n    }, this.zyfraHintDelay);\r\n  }\r\n}\r\n",
            "selector": "[zyfraHint]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "hasOverflowText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "HTMLElement"
                },
                {
                    "name": "hintClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | string[]"
                },
                {
                    "name": "position",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\""
                },
                {
                    "name": "zyfraHint",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | TemplateRef<any>"
                },
                {
                    "name": "zyfraHintContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Record<string | >"
                },
                {
                    "name": "zyfraHintDelay",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "zyfraShowHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentFactory",
                    "defaultValue": "this.resolver.resolveComponentFactory(ZyfraHintComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinates",
                    "defaultValue": "{ left: 0, top: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintCmpRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<ZyfraHintComponent>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintTimerId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "mutationObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_setCoordinatesLeftAndTop",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setHintClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setPosition",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_showHint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hintForOveflowText",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnDestroy",
                "OnChanges",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraSplitterTemplateDirective",
            "id": "directive-ZyfraSplitterTemplateDirective-5bd86f6200c6f62cf387f3733632a0f2",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraSplitterTemplate]',\n})\nexport class ZyfraSplitterTemplateDirective {\n  @Input() type: string;\n\n  constructor(public template: TemplateRef<any>) {}\n}\n",
            "selector": "[zyfraSplitterTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTemplateDirective",
            "id": "directive-ZyfraTemplateDirective-6c8d02ea9929f9ee57a6a104afb3bd5c",
            "file": "libs/components/src/lib/@shared/zyfra-template.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraTemplate]',\n})\nexport class ZyfraTemplateDirective {\n  @Input() zyfraTemplate: string;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n",
            "selector": "[zyfraTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "IconComponent",
            "id": "component-IconComponent-8423cc70bd53604189de75e9463e3a7d",
            "file": "libs/components/src/lib/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-icon",
            "styleUrls": [
                "./icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class IconComponent {\r\n  @Input() iconClass: string = null;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .zyfra-icon-color {\r\n        fill: none;\r\n    }\r\n}",
                    "styleUrl": "./icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"zyfra-icon\" [ngClass]=\"iconClass\"></span>"
        },
        {
            "name": "IconComponents",
            "id": "component-IconComponents-5c9adac2d7af2625412de36da0ba34c2",
            "file": "libs/components/src/lib/icon/icon.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    "
            ],
            "template": "<div *ngFor=\"let def of defs\">\n  <h4>{{ def.dir }}</h4>\n\n  <div class=\"icons\">\n    <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n      <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n      <div class=\"name\">{{ name }}</div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defs",
                    "defaultValue": "IconDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { IconComponent } from './icon.component';\nimport { IconDefs } from './story/icon-definitions';\n\n//@ts-ignore\nimport doc from './icon.component.story.doc.mdx';\n\n@Component({\n  template: `\n    <div *ngFor=\"let def of defs\">\n      <h4>{{ def.dir }}</h4>\n\n      <div class=\"icons\">\n        <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n          <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n          <div class=\"name\">{{ name }}</div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    `,\n  ],\n})\nclass IconComponents {\n  defs = IconDefs;\n}\n\nexport default {\n  title: 'Icons/IconComponent',\n  component: IconComponents,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n      declarations: [IconComponent],\n    }),\n  ],\n  parameters: {\n    docs: {\n      page: doc,\n    },\n  },\n} as Meta<IconComponent>;\n\nconst Template: Story<IconComponents> = (args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n});\n\nexport const IconsSet = Template.bind({});\nIconsSet.args = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    \n"
        },
        {
            "name": "ZyfraAccordionComponent",
            "id": "component-ZyfraAccordionComponent-96877d4851f8752e11925f87ce51eaf5",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion, deps: [ZyfraAccordionComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion"
                }
            ],
            "selector": "zyfra-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collapseIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "collapse icon class",
                    "description": "<p>collapse icon class</p>\n",
                    "line": 47,
                    "type": "string"
                },
                {
                    "name": "expandIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "expand icon class",
                    "description": "<p>expand icon class</p>\n",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "allow multiple tabs be active at the same time.",
                    "description": "<p>allow multiple tabs be active at the same time.</p>\n",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "inline style",
                    "description": "<p>inline style</p>\n",
                    "line": 41,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "css class",
                    "description": "<p>css class</p>\n",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter",
                    "description": "<p>EventEmitter</p>\n",
                    "line": 50,
                    "type": "EventEmitter<number | []>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on closing tab",
                    "description": "<p>EventEmitter on closing tab</p>\n",
                    "line": 52,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                },
                {
                    "name": "onOpen",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on opening tab",
                    "description": "<p>EventEmitter on opening tab</p>\n",
                    "line": 54,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Accordion",
                    "optional": false,
                    "description": "<p>primeng Accordion component</p>\n",
                    "line": 57,
                    "rawdescription": "\nprimeng Accordion component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Accordion, {static: true}"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraAccordionTabComponent>",
                    "optional": false,
                    "description": "<p>zyfra AccordionTab component</p>\n",
                    "line": 59,
                    "rawdescription": "\nzyfra AccordionTab component",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "name": "tabs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reInitTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n  //styleUrls: ['./zyfra-accordion.component.less'],\n  //encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<p-accordion\n  [multiple]=\"multiple\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [expandIcon]=\"expandIcon\"\n  [collapseIcon]=\"collapseIcon\"\n  (activeIndexChange)=\"activeIndexChange.emit($event)\"\n  (onOpen)=\"onOpen.emit($event)\"\n  (onClose)=\"onClose.emit($event)\"\n>\n  <ng-content></ng-content>\n</p-accordion>\n"
        },
        {
            "name": "ZyfraAccordionTabComponent",
            "id": "component-ZyfraAccordionTabComponent-d04f7db880a573f7885d45558532f0d0",
            "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-accordion-tab",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: contents;\n      }\n    "
            ],
            "templateUrl": [
                "./zyfra-accordion-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether a lazy loaded panel should avoid getting loaded again on reselection",
                    "description": "<p>Whether a lazy loaded panel should avoid getting loaded again on reselection</p>\n",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the tab can be selected",
                    "description": "<p>Defines whether the tab can be selected</p>\n",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Title of the tab",
                    "description": "<p>Title of the tab</p>\n",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if the tab is active",
                    "description": "<p>Defines if the tab is active</p>\n",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Transition options of the animation",
                    "description": "<p>Transition options of the animation</p>\n",
                    "line": 37,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ntab activeness",
                    "description": "<p>tab activeness</p>\n",
                    "line": 41,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "headerFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "iconsFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionTab",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AccordionTab"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ZyfraTemplateDirective } from '../../@shared/zyfra-template.directives';\nimport { AccordionTab } from 'primeng/accordion';\n\n@Component({\n  selector: 'zyfra-accordion-tab',\n  templateUrl: './zyfra-accordion-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: contents;\n      }\n    `,\n  ],\n})\nexport class ZyfraAccordionTabComponent implements AfterContentInit, AfterViewInit {\n  /** Title of the tab */\n  @Input() header: string;\n  /** Defines whether the tab can be selected */\n  @Input() disabled: boolean;\n  /** Whether a lazy loaded panel should avoid getting loaded again on reselection */\n  @Input() cache = true;\n  /** Transition options of the animation */\n  @Input() transitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /** Defines if the tab is active */\n  @Input() selected: boolean;\n  /** tab activeness */\n  @Output() selectedChange: EventEmitter<boolean> = new EventEmitter();\n\n  @ContentChildren(ZyfraTemplateDirective) tmpl: ZyfraTemplateDirective[];\n  @ViewChild(AccordionTab) tab: AccordionTab;\n\n  headerFacet: TemplateRef<any>;\n  contentFacet: TemplateRef<any>;\n  iconsFacet: TemplateRef<any>;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this.tmpl.forEach((t) => {\n      if (t.zyfraTemplate === 'header') {\n        this.headerFacet = t.templateRef;\n      } else if (t.zyfraTemplate === 'icons') {\n        this.iconsFacet = t.templateRef;\n      } else {\n        this.contentFacet = t.templateRef;\n      }\n    });\n    if (!!this.iconsFacet && !this.headerFacet) {\n      throw new Error('icon template can only be used with header template');\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.cd.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: contents;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit"
            ],
            "templateData": "<p-accordionTab\n  [disabled]=\"disabled\"\n  [header]=\"header\"\n  [cache]=\"cache\"\n  [selected]=\"selected\"\n  [transitionOptions]=\"transitionOptions\"\n  (selectedChange)=\"selectedChange.emit($event)\"\n>\n  <ng-template pTemplate=\"header\" *ngIf=\"!!headerFacet\">\n    <div [class.zyfra-accordion-header__left]=\"!!iconsFacet\">\n      <ng-container *ngTemplateOutlet=\"headerFacet\"></ng-container>\n      <div class=\"zyfra-accordion-header-extra-icons\" *ngIf=\"!!iconsFacet\">\n        <ng-container *ngTemplateOutlet=\"iconsFacet\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"content\" *ngIf=\"!!contentFacet; else noContentFacet\">\n    <ng-container *ngTemplateOutlet=\"contentFacet\"></ng-container>\n  </ng-template>\n  <ng-template #noContentFacet>\n    <ng-content></ng-content>\n  </ng-template>\n</p-accordionTab>\n"
        },
        {
            "name": "ZyfraAutoCompleteComponent",
            "id": "component-ZyfraAutoCompleteComponent-4cfa6b705c22d7bd90d13d3d84953563",
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-auto-complete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-auto-complete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any"
                },
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "autoHighlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number"
                },
                {
                    "name": "completeOnFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "delay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "dropdownMode",
                    "defaultValue": "'blank'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any"
                },
                {
                    "name": "forceSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "immutable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "minLength",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "showEmptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "suggestions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "unique",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "completeMethod",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClear",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeyUp",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\n\n@Component({\n  selector: 'zyfra-auto-complete',\n  templateUrl: './zyfra-auto-complete.component.html',\n})\nexport class ZyfraAutoCompleteComponent<T = unknown> {\n  @Input() value: any;\n  @Input() suggestions: any[];\n  @Input() field: any;\n  @Input() scrollHeight = '200px';\n  @Input() dropdown: boolean;\n  @Input() multiple: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() minLength = 1;\n  @Input() delay = 300;\n  @Input() completeOnFocus: boolean;\n  @Input() style: string;\n  @Input() inputStyle: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() inputStyleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() optionGroupLabel: string;\n  @Input() group: boolean;\n  @Input() optionGroupChildren = 'items';\n  @Input() placeholder: string;\n  @Input() readonly: boolean;\n  @Input() disabled: boolean;\n  @Input() maxlength: number;\n  @Input() size: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() dataKey: string;\n  @Input() autoHighlight: boolean;\n  @Input() type = 'text';\n  @Input() showEmptyMessage: boolean;\n  @Input() emptyMessage = 'No records found.';\n  @Input() immutable = true;\n  @Input() required: boolean;\n  @Input() autofocus: boolean;\n  @Input() forceSelection: boolean;\n  @Input() dropdownMode = 'blank';\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledBy: string;\n  @Input() unique = true;\n  @Input() autocomplete: string;\n  @Input() virtualScroll: boolean;\n  @Input() itemSize: number;\n  @Input() label = '';\n\n  @Output() completeMethod = new EventEmitter<unknown>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onKeyUp = new EventEmitter<KeyboardEvent>();\n  @Output() onSelect = new EventEmitter<T>();\n  @Output() onUnselect = new EventEmitter<unknown>();\n  @Output() onDropdownClick = new EventEmitter<PointerEvent>();\n  @Output() onClear = new EventEmitter<InputEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<void>();\n  @Output() valueChange = new EventEmitter<T>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-autoComplete\n    [(ngModel)]=\"value\"\n    [suggestions]=\"suggestions\"\n    [field]=\"field\"\n    [scrollHeight]=\"scrollHeight\"\n    [dropdown]=\"dropdown\"\n    [multiple]=\"multiple\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [minLength]=\"minLength\"\n    [delay]=\"delay\"\n    [completeOnFocus]=\"completeOnFocus\"\n    [style]=\"style\"\n    [inputStyle]=\"inputStyle\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [inputId]=\"inputId\"\n    [name]=\"name\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [group]=\"group\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [placeholder]=\"placeholder\"\n    [readonly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [maxlength]=\"maxlength\"\n    [size]=\"size\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [dataKey]=\"dataKey\"\n    [autoHighlight]=\"autoHighlight\"\n    [type]=\"type\"\n    [showEmptyMessage]=\"showEmptyMessage\"\n    [emptyMessage]=\"emptyMessage\"\n    [required]=\"required\"\n    [autofocus]=\"autofocus\"\n    [forceSelection]=\"forceSelection\"\n    [dropdownMode]=\"dropdownMode\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [unique]=\"unique\"\n    [autocomplete]=\"autocomplete\"\n    [virtualScroll]=\"virtualScroll\"\n    [itemSize]=\"itemSize\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    (completeMethod)=\"completeMethod.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onKeyUp)=\"onKeyUp.emit($event)\"\n    (onSelect)=\"onSelect.emit($event)\"\n    (onUnselect)=\"onUnselect.emit($event)\"\n    (onDropdownClick)=\"onDropdownClick.emit($event)\"\n    (onClear)=\"onClear.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n  >\n    <div *ngIf=\"dropdown\">\n      <ng-template let-obj pTemplate=\"item\">\n        <div>{{ obj[field] }}</div>\n      </ng-template>\n    </div>\n  </p-autoComplete>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraBreadcrumbComponent",
            "id": "component-ZyfraBreadcrumbComponent-4f0196dddf39d37818d40509c3c4a474",
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "home",
                    "defaultValue": "{ icon: 'zyfra-icon social-home-breadcrumbs' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MenuItem"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MenuItem[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<ItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\ntype ItemClickEvent = { originalEvent: Event; item: MenuItem };\n\n@Component({\n  selector: 'zyfra-breadcrumb',\n  templateUrl: './zyfra-breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraBreadcrumbComponent {\n  @Input() items: MenuItem[] = [];\n  @Input() home: MenuItem = { icon: 'zyfra-icon social-home-breadcrumbs' };\n  @Input() style: string = null;\n  @Input() styleClass: string = null;\n\n  @Output() onItemClick = new EventEmitter<ItemClickEvent>();\n\n  onItemClickHandler(event: ItemClickEvent): void {\n    this.onItemClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-breadcrumb\n  [model]=\"items\"\n  [home]=\"home\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  (onItemClick)=\"onItemClickHandler($event)\"\n></p-breadcrumb>\n"
        },
        {
            "name": "ZyfraButtonComponent",
            "id": "component-ZyfraButtonComponent-d466b13789a813be2bbcd84f796ec529",
            "file": "libs/components/src/lib/button/zyfra-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TZyfraButtonIconPosision"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "blur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\n\r\nexport type TZyfraButtonIconPosision = 'left' | 'right' | 'top' | 'bottom';\r\n\r\n@Component({\r\n  selector: 'zyfra-button',\r\n  templateUrl: './zyfra-button.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraButtonComponent {\r\n  @Input() label: string;\r\n  @Input() type = 'button';\r\n  @Input() icon: string;\r\n  @Input() iconPos: TZyfraButtonIconPosision = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() badge: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n\r\n  // останавливаю всплытие клика (именно так. через HostListener не работает)\r\n  nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  click(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  focus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  blur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-button\r\n  [type]=\"type\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [badge]=\"badge\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"click($event)\"\r\n  (onFocus)=\"focus($event)\"\r\n  (onBlur)=\"blur($event)\"\r\n></p-button>\r\n"
        },
        {
            "name": "ZyfraCheckboxComponent",
            "id": "component-ZyfraCheckboxComponent-8b6ff8772689046d9ed1224aa1c78bcd",
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "binary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "checkboxIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  forwardRef,\r\n  Provider,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { Checkbox } from 'primeng/checkbox';\r\n\r\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'zyfra-checkbox',\r\n  templateUrl: './zyfra-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [CHECKBOX_VALUE_ACCESSOR],\r\n  styles: [],\r\n})\r\nexport class ZyfraCheckboxComponent extends Checkbox implements ControlValueAccessor {\r\n  @Input() binary = true;\r\n  @Input() checkboxIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() model: boolean;\r\n  @Output() modelChange = new EventEmitter<boolean | null>();\r\n\r\n  constructor(cd: ChangeDetectorRef) {\r\n    super(cd);\r\n  }\r\n\r\n  onChangeHandler(event: { checked: boolean; originalEvent: PointerEvent }) {\r\n    if (this.formControl) {\r\n      this.formControl.setValue(event.checked);\r\n    } else {\r\n      this.model = event.checked;\r\n    }\r\n    this.modelChange.emit(this.model);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Checkbox",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-checkbox\r\n  [(ngModel)]=\"model\"\r\n  [name]=\"name\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [binary]=\"binary\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  [checkboxIcon]=\"checkboxIcon\"\r\n  [readonly]=\"readonly\"\r\n  [required]=\"required\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n></p-checkbox>\r\n"
        },
        {
            "name": "ZyfraChipComponent",
            "id": "component-ZyfraChipComponent-4aca4a47caf6cbaf67e1a5da7c322abc",
            "file": "libs/components/src/lib/chip/zyfra-chip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "removeIcon",
                    "defaultValue": "'zyfra-icon cancel-close-circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onRemove",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRemoveHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-chip',\r\n  templateUrl: './zyfra-chip.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraChipComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() image: string;\r\n  @Input() removable: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() removeIcon: string = 'zyfra-icon cancel-close-circle';\r\n\r\n  /* onRemove */\r\n  @Output() onRemove: EventEmitter<any> = new EventEmitter();\r\n\r\n  onRemoveHandler(event) {\r\n    this.onRemove.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-chip\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [image]=\"image\"\r\n  [removable]=\"removable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [removeIcon]=\"removeIcon\"\r\n  (onRemove)=\"onRemoveHandler($event)\"\r\n></p-chip>\r\n"
        },
        {
            "name": "ZyfraConfirmDialogComponent",
            "id": "component-ZyfraConfirmDialogComponent-9981eb6206bbdf9e372c35b8f595d361",
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                }
            ],
            "selector": "zyfra-confirm-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-confirm-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Function"
                },
                {
                    "name": "acceptButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "acceptIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "acceptLabel",
                    "defaultValue": "'yes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "acceptMessages",
                    "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type[]"
                },
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "closeOnEscape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "defaultFocus",
                    "defaultValue": "'accept'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "reject",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Function"
                },
                {
                    "name": "rejectButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "rejectIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "rejectLabel",
                    "defaultValue": "'no'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "rejectMessages",
                    "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]"
                },
                {
                    "name": "rejectVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'400ms cubic-bezier(0.25, 0.8, 0.25, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHindler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Message } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-confirm-dialog',\r\n  templateUrl: './zyfra-confirm-dialog.component.html',\r\n  styles: [],\r\n  providers: [ConfirmationService],\r\n})\r\nexport class ZyfraConfirmDialogComponent implements OnInit {\r\n  @Input() message: any = '';\r\n  @Input() key: string;\r\n  @Input() icon: string;\r\n  @Input() header: string = '';\r\n  @Input() accept: Function = () => {};\r\n  @Input() reject: Function = () => {};\r\n  @Input() acceptMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() rejectMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() acceptLabel: string = 'yes';\r\n  @Input() rejectLabel: string = 'no';\r\n  @Input() acceptIcon: string;\r\n  @Input() rejectIcon: string;\r\n  @Input() acceptButtonStyleClass: string;\r\n  @Input() rejectButtonStyleClass: string;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() rejectVisible: boolean = true;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() blockScroll: boolean = true;\r\n  @Input() closeOnEscape: boolean = true;\r\n  @Input() closable: boolean = true;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n  @Input() defaultFocus: string = 'accept';\r\n\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private confirmationService: ConfirmationService, private primengConfig: PrimeNGConfig) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClick(e) {\r\n    this.confirmationService.confirm({\r\n      message: this.message,\r\n      header: this.header,\r\n      icon: this.icon,\r\n      accept: () => {\r\n        this.msgs = this.acceptMessages;\r\n        this.accept();\r\n      },\r\n      reject: () => {\r\n        this.msgs = this.rejectMessages;\r\n        this.reject();\r\n      },\r\n    });\r\n  }\r\n\r\n  /* onHide */\r\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n  onHideHindler(event) {\r\n    this.onHide.emit(event);\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-confirmDialog\r\n  [message]=\"message\"\r\n  [key]=\"key\"\r\n  [icon]=\"icon\"\r\n  [header]=\"header\"\r\n  [acceptLabel]=\"acceptLabel\"\r\n  [rejectLabel]=\"rejectLabel\"\r\n  [acceptIcon]=\"acceptIcon\"\r\n  [rejectIcon]=\"rejectIcon\"\r\n  [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n  [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n  [acceptVisible]=\"acceptVisible\"\r\n  [rejectVisible]=\"rejectVisible\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [closable]=\"closable\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [appendTo]=\"appendTo\"\r\n  [defaultFocus]=\"defaultFocus\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  (onHide)=\"onHideHindler($event)\"\r\n></p-confirmDialog>\r\n"
        },
        {
            "name": "ZyfraDialogComponent",
            "id": "component-ZyfraDialogComponent-694cc684b7770c6698dd8fe6349325bc",
            "file": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "object"
                },
                {
                    "name": "contentStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "focusOnShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "htmlTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "SafeHtml"
                },
                {
                    "name": "keepInViewport",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "maximizable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "maximizeIcon",
                    "defaultValue": "'zyfra-icon arrows-expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "minimizeIcon",
                    "defaultValue": "'zyfra-icon arrows-collapse'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "minX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "minY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "position",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "resizable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'150ms cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onDragEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMaximize",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeInit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDragEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMaximizeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeInitHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'zyfra-dialog',\r\n  templateUrl: './zyfra-dialog.component.html',\r\n  styles: [],\r\n})\r\nexport class ZyfraDialogComponent {\r\n  @Input() htmlTemplate: SafeHtml;\r\n\r\n  @Input() header: string;\r\n  @Input() draggable: boolean = true;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() keepInViewport: boolean = true;\r\n  @Input() resizable: boolean = true;\r\n  @Input() contentStyle: object;\r\n  @Input() visible: boolean;\r\n  @Input() modal: boolean;\r\n  @Input() position: string = 'center';\r\n  @Input() blockScroll: boolean;\r\n  @Input() closeOnEscape: boolean;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() rtl: boolean;\r\n  @Input() closable: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() contentStyleClass: string;\r\n  @Input() showHeader: boolean = true;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() minX: number = 0;\r\n  @Input() minY: number = 0;\r\n  @Input() focusOnShow: boolean = true;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() maximizable: boolean;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() closeIcon: string = 'zyfra-icon selection-check-simple';\r\n  @Input() minimizeIcon: string = 'zyfra-icon arrows-collapse';\r\n  @Input() maximizeIcon: string = 'zyfra-icon arrows-expand';\r\n\r\n  /* onHide */\r\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n  onHideHandler(event) {\r\n    this.visible = false;\r\n    this.onHide.emit(this.visible);\r\n  }\r\n\r\n  /* onShow */\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n  onShowHandler(event) {\r\n    this.visible = true;\r\n    this.onShow.emit(this.visible);\r\n  }\r\n\r\n  /* onResizeInit */\r\n  @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\r\n\r\n  onResizeInitHandler(event) {\r\n    this.onResizeInit.emit(event);\r\n  }\r\n\r\n  /* onResizeEnd */\r\n  @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  onResizeEndHandler(event) {\r\n    this.onResizeEnd.emit(event);\r\n  }\r\n\r\n  /* onDragEnd */\r\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  onDragEndHandler(event) {\r\n    this.onDragEnd.emit(event);\r\n  }\r\n\r\n  /* onMaximize */\r\n  @Output() onMaximize: EventEmitter<any> = new EventEmitter();\r\n\r\n  onInit() {\r\n    this.visible = true;\r\n  }\r\n\r\n  onMaximizeHandler(event) {\r\n    this.onMaximize.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-dialog\r\n  [header]=\"header\"\r\n  [draggable]=\"draggable\"\r\n  [keepInViewport]=\"keepInViewport\"\r\n  [resizable]=\"resizable\"\r\n  [contentStyle]=\"contentStyle\"\r\n  [(visible)]=\"visible\"\r\n  [modal]=\"modal\"\r\n  [position]=\"position\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [rtl]=\"rtl\"\r\n  [closable]=\"closable\"\r\n  [appendTo]=\"appendTo\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [contentStyleClass]=\"contentStyleClass\"\r\n  [showHeader]=\"showHeader\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [minX]=\"minX\"\r\n  [minY]=\"minY\"\r\n  [focusOnShow]=\"focusOnShow\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [maximizable]=\"maximizable\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  [closeIcon]=\"closeIcon\"\r\n  [minimizeIcon]=\"minimizeIcon\"\r\n  [maximizeIcon]=\"maximizeIcon\"\r\n  (onShow)=\"onShowHandler($event)\"\r\n  (onHide)=\"onHideHandler($event)\"\r\n  (onResizeInit)=\"onResizeInitHandler($event)\"\r\n  (onResizeEnd)=\"onResizeEndHandler($event)\"\r\n  (onDragEnd)=\"onDragEndHandler($event)\"\r\n  (onMaximize)=\"onMaximizeHandler($event)\"\r\n>\r\n  <div [innerHTML]=\"htmlTemplate\"></div>\r\n</p-dialog>\r\n"
        },
        {
            "name": "ZyfraDropdownComponent",
            "id": "component-ZyfraDropdownComponent-a33b05160b860f52f5b0b649c4e0013c",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "any"
                },
                {
                    "name": "ariaFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "autoDisplayFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean"
                },
                {
                    "name": "autofocusFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "number"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "emptyFilterMessage",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "filterMatchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "FilterMatchModeType"
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "groupTemplateClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "optionDisabled",
                    "defaultValue": "'disabled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "T[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "resetFilterOnHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "number"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string"
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "T"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<DropdownChangeEvent<T>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\ntype FilterMatchModeType =\n  | 'contains'\n  | 'startsWith'\n  | 'endsWith'\n  | 'equals'\n  | 'notEquals'\n  | 'in'\n  | 'lt'\n  | 'lte'\n  | 'gt'\n  | 'gte';\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown> {\n  @Input() value: T;\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode: FilterMatchModeType = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: string;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n  @Output() valueChange = new EventEmitter<T>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-dropdown\n    [(ngModel)]=\"value\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [name]=\"name\"\n    [scrollHeight]=\"scrollHeight\"\n    [virtualScroll]=\"virtualScroll\"\n    [style]=\"style\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [filter]=\"filter\"\n    [filterValue]=\"filterValue\"\n    [filterBy]=\"filterBy\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterPlaceholder]=\"filterPlaceholder\"\n    [filterLocale]=\"filterLocale\"\n    [required]=\"required\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [editable]=\"editable\"\n    [maxlength]=\"maxlength\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [placeholder]=\"placeholder\"\n    [inputId]=\"inputId\"\n    [dataKey]=\"dataKey\"\n    [autofocus]=\"autofocus\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [autoDisplayFirst]=\"autoDisplayFirst\"\n    [group]=\"group\"\n    [showClear]=\"showClear\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaFilterLabel]=\"ariaFilterLabel\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    (onChange)=\"onChange.emit($event)\"\n    (onClick)=\"onClick.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n  >\n    <ng-template *ngIf=\"group\" let-group pTemplate=\"group\">\n      <div class=\"groupTemplateClass\">\n        <span>{{ group.label }}</span>\n      </div>\n    </ng-template>\n  </p-dropdown>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraHintComponent",
            "id": "component-ZyfraHintComponent-bfd3b3baa6f2f2c8ebea8823ef4263ac",
            "file": "libs/components/src/lib/hint/zyfra-hint.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-hint",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-hint.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraHintOptionsModel",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hostClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'animationend', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "style.left.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                },
                {
                    "name": "style.top.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "hostListeners": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  Output,\r\n  TemplateRef,\r\n  HostBinding,\r\n  ChangeDetectionStrategy,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { ZyfraHintOptionsModel } from './zyfra-hint.model';\r\n\r\n@Component({\r\n  selector: 'zyfra-hint',\r\n  templateUrl: './zyfra-hint.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraHintComponent {\r\n  @HostBinding('style.top.px') get topParam(): number {\r\n    return this.options.top;\r\n  }\r\n  @HostBinding('style.left.px') get leftParam(): number {\r\n    return this.options.left;\r\n  }\r\n\r\n  set options(op: ZyfraHintOptionsModel) {\r\n    this._options = op;\r\n    this.hostClasses = op.className;\r\n  }\r\n  get options(): ZyfraHintOptionsModel {\r\n    return this._options;\r\n  }\r\n\r\n  get hasTemplateRef(): boolean {\r\n    return this._options.content instanceof TemplateRef;\r\n  }\r\n  @HostBinding('class') hostClasses = '';\r\n\r\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  private _options: ZyfraHintOptionsModel;\r\n  @HostListener('animationend', ['$event']) animationend(event: AnimationEvent): void {\r\n    if (event.animationName === 'hintOut') {\r\n      this.close.emit(true);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "topParam": {
                    "name": "topParam",
                    "getSignature": {
                        "name": "topParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 20
                    }
                },
                "leftParam": {
                    "name": "leftParam",
                    "getSignature": {
                        "name": "leftParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 23
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "ZyfraHintOptionsModel",
                        "line": 31
                    }
                },
                "hasTemplateRef": {
                    "name": "hasTemplateRef",
                    "getSignature": {
                        "name": "hasTemplateRef",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 35
                    }
                }
            },
            "templateData": "<ng-template [ngIf]=\"hasTemplateRef\" [ngIfElse]=\"string\">\r\n  <ng-container *ngTemplateOutlet=\"options.content; context: { $implicit: options.context }\"> </ng-container>\r\n</ng-template>\r\n<ng-template #string>\r\n  {{ options.content }}\r\n</ng-template>\r\n"
        },
        {
            "name": "ZyfraInputComponent",
            "id": "component-ZyfraInputComponent-b30358e89b8ea3ad4f5d66e1d70381d0",
            "file": "libs/components/src/lib/input/zyfra-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "inputClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-input',\r\n  templateUrl: './zyfra-input.component.html',\r\n})\r\nexport class ZyfraInputComponent {\r\n  @Input() value: string;\r\n  @Input() type: string;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() spanClass: string;\r\n  @Input() inputClass: string;\r\n  @Input() disabled: boolean;\r\n  @Input() required: boolean;\r\n  @Input() tooltip: string;\r\n  @Input() tooltipPosition = 'right';\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\r\n\r\n  <input\r\n    pInputText\r\n    [type]=\"type\"\r\n    [id]=\"id\"\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [placeholder]=\"placeholder\"\r\n    [class]=\"inputClass\"\r\n    [disabled]=\"disabled\"\r\n    [required]=\"required\"\r\n    [pTooltip]=\"tooltip ? tooltip : null\"\r\n    [tooltipPosition]=\"tooltipPosition\"\r\n  />\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputMaskComponent",
            "id": "component-ZyfraInputMaskComponent-ff8d786bc492ba29607436fa0720ef7f",
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-mask",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-mask.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "autoClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "autoFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "characterPattern",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "mask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "slotChar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "unmask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "onComplete",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeydown",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-mask',\r\n  templateUrl: './zyfra-input-mask.component.html',\r\n})\r\nexport class ZyfraInputMaskComponent {\r\n  @Input() value: string;\r\n  @Input() mask: string;\r\n  @Input() type: string;\r\n  @Input() slotChar: string;\r\n  @Input() autoClear: boolean;\r\n  @Input() unmask: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: number;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n  @Input() name: string;\r\n  @Input() inputId: string;\r\n  @Input() required: boolean;\r\n  @Input() characterPattern: string;\r\n  @Input() autoFocus: boolean;\r\n  @Input() autocomplete: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() title: string;\r\n  @Input() label = '';\r\n\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onComplete = new EventEmitter<void>();\r\n  @Output() onKeydown = new EventEmitter<KeyboardEvent>();\r\n  @Output() onInput = new EventEmitter<KeyboardEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span\r\n  class=\"zyfra-input\"\r\n  [class.zyfra-input_disabled]=\"disabled\"\r\n  [class.p-float-label]=\"label\"\r\n>\r\n  <p-inputMask\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [mask]=\"mask\"\r\n    [type]=\"type\"\r\n    [slotChar]=\"slotChar\"\r\n    [autoClear]=\"autoClear\"\r\n    [unmask]=\"unmask\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [placeholder]=\"placeholder\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [disabled]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [name]=\"name\"\r\n    [inputId]=\"inputId\"\r\n    [required]=\"required\"\r\n    [characterPattern]=\"characterPattern\"\r\n    [autoFocus]=\"autoFocus\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [title]=\"title\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onComplete)=\"onComplete.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n    (onKeydown)=\"onKeydown.emit($event)\"\r\n  ></p-inputMask>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{label}}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputNumberComponent",
            "id": "component-ZyfraInputNumberComponent-8f2049cbf3e1172adc3618bb89f2b27b",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-number",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "buttonLayout",
                    "defaultValue": "'stacked'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "currencyDisplay",
                    "defaultValue": "'symbol'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "decrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "decrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "format",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "incrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "incrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "localeMatcher",
                    "defaultValue": "'best fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number"
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "mode",
                    "defaultValue": "'decimal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "showButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "number"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nexport interface InputEvent {\r\n  originalEvent: KeyboardEvent;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-input-number',\r\n  templateUrl: './zyfra-input-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputNumberComponent {\r\n  @Input() value: number;\r\n  @Input() format = true;\r\n  @Input() showButtons: boolean;\r\n  @Input() buttonLayout = 'stacked';\r\n  @Input() spanClass: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() incrementButtonClass: string;\r\n  @Input() decrementButtonClass: string;\r\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\r\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\r\n  @Input() locale: string;\r\n  @Input() localeMatcher = 'best fit';\r\n  @Input() mode = 'decimal';\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay = 'symbol';\r\n  @Input() useGrouping = true;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() step = 1;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() inputStyle: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: number;\r\n  @Input() disabled: boolean;\r\n  @Input() title: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() name: string;\r\n  @Input() autocomplete: string;\r\n\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onInput = new EventEmitter<InputEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\r\n\r\n  <p-inputNumber\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [format]=\"format\"\r\n    [showButtons]=\"showButtons\"\r\n    [buttonLayout]=\"buttonLayout\"\r\n    [incrementButtonClass]=\"incrementButtonClass\"\r\n    [decrementButtonClass]=\"decrementButtonClass\"\r\n    [incrementButtonIcon]=\"incrementButtonIcon\"\r\n    [decrementButtonIcon]=\"decrementButtonIcon\"\r\n    [locale]=\"locale\"\r\n    [localeMatcher]=\"localeMatcher\"\r\n    [mode]=\"mode\"\r\n    [prefix]=\"prefix\"\r\n    [suffix]=\"suffix\"\r\n    [placeholder]=\"placeholder\"\r\n    [currency]=\"currency\"\r\n    [currencyDisplay]=\"currencyDisplay\"\r\n    [useGrouping]=\"useGrouping\"\r\n    [minFractionDigits]=\"minFractionDigits\"\r\n    [maxFractionDigits]=\"maxFractionDigits\"\r\n    [min]=\"min\"\r\n    [max]=\"max\"\r\n    [step]=\"step\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputId]=\"inputId\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [disabled]=\"disabled\"\r\n    [title]=\"title\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [name]=\"name\"\r\n    [autocomplete]=\"autocomplete\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n  >\r\n  </p-inputNumber>\r\n\r\n  <label\r\n    *ngIf=\"label\"\r\n    [class.label-required]=\"ariaRequired\"\r\n    [style.padding-left]=\"showButtons && buttonLayout === 'horizontal' ? '38px' : ''\"\r\n    >{{ label }}</label\r\n  >\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputSwitchComponent",
            "id": "component-ZyfraInputSwitchComponent-19f73139bbb0349abdfd0ae377905608",
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-switch',\r\n  templateUrl: './zyfra-input-switch.component.html',\r\n  styles: [],\r\n})\r\nexport class ZyfraInputSwitchComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Input() checked: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n\r\n  /* onChange */\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  onChangeHandler(event) {\r\n    this.checked = event.checked;\r\n    this.onChange.emit(this.checked);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-inputSwitch\r\n  [(ngModel)]=\"checked\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [name]=\"name\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [disabled]=\"disabled\"\r\n  [readonly]=\"readonly\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n></p-inputSwitch>\r\n"
        },
        {
            "name": "ZyfraMessageComponent",
            "id": "component-ZyfraMessageComponent-af15a852408f9510cead7352be549ae8",
            "file": "libs/components/src/lib/message/zyfra-message.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "enableService",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "escape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "style",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-message',\r\n  templateUrl: './zyfra-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [],\r\n  providers: [MessageService],\r\n})\r\nexport class ZyfraMessageComponent implements OnInit {\r\n  //---- message component --------\r\n  @Input() value: any[];\r\n  @Input() closable: boolean = true;\r\n  @Input() style: string = '';\r\n  @Input() styleClass: string = '';\r\n  @Input() enableService: boolean = true;\r\n  @Input() escape: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n\r\n  // --- for message service -----\r\n  // @Input() severity:string;\r\n  // @Input() summary:string;\r\n  // @Input() detail:string;\r\n  // @Input() id:any;\r\n  // @Input() life:number    = 3000;\r\n  // @Input() sticky:boolean = false;\r\n  // @Input() data:any;\r\n\r\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  clear() {\r\n    this.value = [];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-messages\r\n  [(value)]=\"value\"\r\n  [closable]=\"closable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [enableService]=\"enableService\"\r\n  [escape]=\"escape\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n></p-messages>\r\n"
        },
        {
            "name": "ZyfraPaginatorComponent",
            "id": "component-ZyfraPaginatorComponent-db0022d74ec09487d989ed7c8cf2d9fe",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alwaysShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page.",
                    "description": "<p>Whether to show it even there is only one page.</p>\n",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "currentPageReportTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\r\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "dropdownAppendTo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).",
                    "description": "<p>Target element to attach the dropdown overlay, valid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name).</p>\n",
                    "line": 71,
                    "type": "any"
                },
                {
                    "name": "dropdownItemTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the dropdown item inside in the paginator.",
                    "description": "<p>Template instance to inject into the dropdown item inside in the paginator.</p>\n",
                    "line": 66,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "dropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.",
                    "description": "<p>Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</p>\n",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Zero-relative number of the first row to be displayed.",
                    "description": "<p>Zero-relative number of the first row to be displayed.</p>\n",
                    "line": 29,
                    "type": "number"
                },
                {
                    "name": "pageLinkSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display.",
                    "description": "<p>Number of page links to display.</p>\n",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Data count to display per page.",
                    "description": "<p>Data count to display per page.</p>\n",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Array of integer/object values to display inside rows per page dropdown.\r\nA object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]",
                    "description": "<p>Array of integer/object values to display inside rows per page dropdown.\nA object that have &#39;showAll&#39; key can be added to it to show all data. Exp; [10,20,30,{showAll:&#39;All&#39;}]</p>\n",
                    "line": 38,
                    "type": "PageOption[]"
                },
                {
                    "name": "showCurrentPageReport",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report.",
                    "description": "<p>Whether to display current page report.</p>\n",
                    "line": 84,
                    "type": "boolean"
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page.",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page.</p>\n",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "showJumpToPageDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page.",
                    "description": "<p>Whether to display a dropdown to navigate to any page.</p>\n",
                    "line": 88,
                    "type": "boolean"
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links.",
                    "description": "<p>Whether to show page links.</p>\n",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "templateLeft",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the left side of the paginator.",
                    "description": "<p>Template instance to inject into the left side of the paginator.</p>\n",
                    "line": 58,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "templateRight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the right side of the paginator.",
                    "description": "<p>Template instance to inject into the right side of the paginator.</p>\n",
                    "line": 62,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records.",
                    "description": "<p>Number of total records.</p>\n",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-paginator\r\n  class=\"zyfra-paginator\"\r\n  [rows]=\"rows\"\r\n  [totalRecords]=\"totalRecords\"\r\n  [pageLinkSize]=\"pageLinkSize\"\r\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [alwaysShow]=\"alwaysShow\"\r\n  [showFirstLastIcon]=\"showFirstLastIcon\"\r\n  [templateLeft]=\"templateLeft\"\r\n  [templateRight]=\"templateRight\"\r\n  [dropdownItemTemplate]=\"dropdownItemTemplate\"\r\n  [dropdownAppendTo]=\"dropdownAppendTo\"\r\n  [dropdownScrollHeight]=\"dropdownScrollHeight\"\r\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n  [showCurrentPageReport]=\"showCurrentPageReport\"\r\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n  [showPageLinks]=\"showPageLinks\"\r\n  (onPageChange)=\"onPageChange($event)\"\r\n></p-paginator>\r\n"
        },
        {
            "name": "ZyfraPasswordComponent",
            "id": "component-ZyfraPasswordComponent-2a4802d3b9b8500109f6d4eadf1f0fed",
            "file": "libs/components/src/lib/password/zyfra-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "feedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "mediumLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "mediumRegex",
                    "defaultValue": "'Regex for a medium level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "promptLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "required",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "strongLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "strongRegex",
                    "defaultValue": "'Regex for a strong level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "toggleMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                },
                {
                    "name": "weakLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-password',\r\n  templateUrl: './zyfra-password.component.html',\r\n})\r\nexport class ZyfraPasswordComponent {\r\n  @Input() value: string;\r\n  @Input() promptLabel: string;\r\n  @Input() mediumRegex = 'Regex for a medium level password.';\r\n  @Input() strongRegex = 'Regex for a strong level password.';\r\n  @Input() weakLabel: string;\r\n  @Input() mediumLabel: string;\r\n  @Input() strongLabel: string;\r\n  @Input() feedback = true;\r\n  @Input() toggleMask: boolean;\r\n  @Input() appendTo: string;\r\n  @Input() inputStyle: any;\r\n  @Input() inputStyleClass: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() disabled: boolean;\r\n  @Input() label = '';\r\n  @Input() required = '';\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-password\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [promptLabel]=\"promptLabel\"\r\n    [mediumRegex]=\"mediumRegex\"\r\n    [strongRegex]=\"strongRegex\"\r\n    [weakLabel]=\"weakLabel\"\r\n    [disabled]=\"disabled\"\r\n    [mediumLabel]=\"mediumLabel\"\r\n    [strongLabel]=\"strongLabel\"\r\n    [feedback]=\"feedback\"\r\n    [toggleMask]=\"toggleMask\"\r\n    [appendTo]=\"appendTo\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n  ></p-password>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraProgressBarComponent",
            "id": "component-ZyfraProgressBarComponent-3fde80e7da63a9823a6db6412b700133",
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "defaultValue": "'determinate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"determinate\" | \"indeterminate\""
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "unit",
                    "defaultValue": "'%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-progress-bar',\n  templateUrl: './zyfra-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraProgressBarComponent {\n  @Input() value: number = null;\n  @Input() showValue: boolean = true;\n  @Input() unit: string = '%';\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\n  @Input() style: { [key: string]: string | null } = null;\n  @Input() styleClass: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-progressBar\n  [value]=\"value\"\n  [showValue]=\"showValue\"\n  [unit]=\"unit\"\n  [mode]=\"mode\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n>\n</p-progressBar>\n"
        },
        {
            "name": "ZyfraRadioButtonComponent",
            "id": "component-ZyfraRadioButtonComponent-108cbeb9c1cd7e285a58c389dbbbd7b7",
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RADIO_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-radio-button",
            "styleUrls": [
                "./zyfra-radio-button.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "FormControl"
                },
                {
                    "name": "formControlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "labelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "ngModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "T"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "T"
                }
            ],
            "outputsClass": [
                {
                    "name": "ngModelChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<T>"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<FocusEvent>"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<FocusEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "modelChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  forwardRef,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nexport const RADIO_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'zyfra-radio-button',\r\n  templateUrl: './zyfra-radio-button.component.html',\r\n  styleUrls: ['./zyfra-radio-button.component.less'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [RADIO_VALUE_ACCESSOR],\r\n})\r\nexport class ZyfraRadioButtonComponent<T> implements ControlValueAccessor {\r\n  @Input() name: string;\r\n  @Input() value: T;\r\n  @Input() label: string;\r\n  @Input() disabled: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() labelStyleClass: string;\r\n  @Input() formControlName: string;\r\n  @Input() formControl: FormControl;\r\n  @Input() ngModel: T;\r\n\r\n  @Output() ngModelChange: EventEmitter<T> = new EventEmitter();\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onFocus: EventEmitter<FocusEvent> = new EventEmitter();\r\n  @Output() onBlur: EventEmitter<FocusEvent> = new EventEmitter();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  modelChange(value: T): void {\r\n    if (this.formControl) {\r\n      this.formControl.setValue(value);\r\n    }\r\n    this.ngModelChange.emit(this.ngModel);\r\n  }\r\n\r\n  handleClick(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  handleFocus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  handleBlur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {}\r\n\r\n  registerOnTouched(fn: () => void): void {}\r\n\r\n  writeValue(value: T): void {\r\n    this.ngModel = value;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@radioButtonSize: 20px;\r\n@radioButtonCoreSize: 8px;\r\n@radioButtonMiniSize: 16px;\r\n@radioButtonMiniCoreSize: 4px;\r\n@radioBorderAccent: 2px solid var(--radioButtonHover);\r\n\r\n.radio-disabled() {\r\n  background: var(--radioButtonDisabledBg);\r\n  border-color: var(--radioButtonDisabled);\r\n}\r\n\r\n.p-radiobutton {\r\n  width: @radioButtonSize;\r\n  height: @radioButtonSize;\r\n\r\n  &-mini {\r\n    width: @radioButtonMiniSize;\r\n    height: @radioButtonMiniSize;\r\n  }\r\n\r\n  &-group p-radiobutton {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &-disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  .p-disabled.p-disabled {\r\n    opacity: initial;\r\n    .radio-disabled();\r\n  }\r\n\r\n  .p-radiobutton-box {\r\n    border: @radioBorderAccent;\r\n    background: var(--radioButtonBg);\r\n    width: @radioButtonSize;\r\n    height: @radioButtonSize;\r\n\r\n    &:not(:hover):not(.p-disabled) {\r\n      border-color: var(--radioButton);\r\n    }\r\n\r\n    .p-radiobutton-mini& {\r\n      width: @radioButtonMiniSize;\r\n      height: @radioButtonMiniSize;\r\n    }\r\n\r\n    .p-radiobutton-icon {\r\n      background-color: var(--radioButtonBg);\r\n      border: @radioBorderAccent;\r\n      width: @radioButtonCoreSize;\r\n      height: @radioButtonCoreSize;\r\n      .p-radiobutton-mini& {\r\n        width: @radioButtonMiniCoreSize;\r\n        height: @radioButtonMiniCoreSize;\r\n      }\r\n    }\r\n\r\n    &:not(.p-disabled) {\r\n      &.p-focus {\r\n        border-color: var(--radioButtonActive);\r\n      }\r\n\r\n      &:not(.p-highlight):hover {\r\n        border-color: var(--radioButtonHover);\r\n      }\r\n    }\r\n\r\n    &.p-highlight {\r\n      &.p-disabled {\r\n        &,\r\n        .p-radiobutton-icon {\r\n          .radio-disabled();\r\n        }\r\n      }\r\n      &:not(.p-disabled),\r\n      &:not(.p-disabled):hover {\r\n        background: var(--radioButtonBg);\r\n        border: @radioBorderAccent;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./zyfra-radio-button.component.less"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-radioButton\r\n  [name]=\"name\"\r\n  [(ngModel)]=\"ngModel\"\r\n  (ngModelChange)=\"modelChange($event)\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  (onClick)=\"handleClick($event)\"\r\n  (onFocus)=\"handleFocus($event)\"\r\n  (onBlur)=\"handleBlur($event)\"\r\n></p-radioButton>\r\n"
        },
        {
            "name": "ZyfraSelectButtonComponent",
            "id": "component-ZyfraSelectButtonComponent-1aae9ab37837c6e88a69b7e12ab6d1eb",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-select-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-select-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "optionDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "OPTION[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change emitter\n",
                    "description": "<p>Optional Change emitter</p>\n",
                    "line": 35,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "onOptionClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick emitter\n",
                    "description": "<p>Optional OptionClick emitter</p>\n",
                    "line": 40,
                    "type": "EventEmitter<SelectButtonOptionClick<OPTION>>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change handler\n",
                    "description": "<p>Optional Change handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOptionClick",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick handler\n",
                    "description": "<p>Optional OptionClick handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-selectButton\r\n  [options]=\"options\"\r\n  [optionLabel]=\"optionLabel\"\r\n  [optionValue]=\"optionValue\"\r\n  [optionDisabled]=\"optionDisabled\"\r\n  [multiple]=\"multiple\"\r\n  [tabindex]=\"tabindex\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [disabled]=\"disabled\"\r\n  [dataKey]=\"dataKey\"\r\n  (onChange)=\"handleChange($event)\"\r\n  (onOptionClick)=\"handleOptionClick($event)\"\r\n></p-selectButton>\r\n"
        },
        {
            "name": "ZyfraSliderComponent",
            "id": "component-ZyfraSliderComponent-cd50db376d1be8c2a25cef3b2fdb8440",
            "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | number[]"
                },
                {
                    "name": "orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "SliderOrientation"
                },
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSlideEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSlideEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\ntype SliderOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'zyfra-slider',\n  templateUrl: './zyfra-slider.component.html',\n})\nexport class ZyfraSliderComponent {\n  @Input() model: number | number[];\n  @Input() animate: boolean;\n  @Input() disabled: boolean;\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() orientation: SliderOrientation = 'horizontal'; //| \"vertical\"\n  @Input() step: number = 1;\n  @Input() range: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() ariaLabelledBy: string;\n\n  /* onChange */\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  /* onSlideEnd */\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\n\n  onChangeHandler(event) {\n    //console.log(event, 'event');\n    if (event.value) this.model = event.value;\n    if (event.values) this.model = event.values;\n    this.onChange.emit(this.model);\n  }\n\n  onSlideEndHandler(event) {\n    this.onSlideEnd.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-slider\n  [(ngModel)]=\"model\"\n  [animate]=\"animate\"\n  [disabled]=\"disabled\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [orientation]=\"orientation\"\n  [step]=\"step\"\n  [range]=\"range\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  (onChange)=\"onChangeHandler($event)\"\n  (onSlideEnd)=\"onSlideEndHandler($event)\"\n></p-slider>\n"
        },
        {
            "name": "ZyfraSpinnerComponent",
            "id": "component-ZyfraSpinnerComponent-9ad3adba298ff8f6095209b92e42092f",
            "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animationDuration",
                    "defaultValue": "'2s'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SpinnerColor"
                },
                {
                    "name": "fill",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Record<string | string | number>"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\ntype SpinnerColor = 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success';\n\n@Component({\n  selector: 'zyfra-spinner',\n  templateUrl: './zyfra-spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSpinnerComponent {\n  @Input() size = '100px';\n  @Input() style: Record<string, string | number>;\n  @Input() styleClass: string;\n  @Input() strokeWidth = '2';\n  @Input() fill = 'none';\n  @Input() animationDuration = '2s';\n  @Input() color: SpinnerColor = 'primary';\n\n  get spinnerStyle(): Record<string, string | number> {\n    return {\n      ...this.style,\n      width: this.size,\n      height: this.size,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "spinnerStyle": {
                    "name": "spinnerStyle",
                    "getSignature": {
                        "name": "spinnerStyle",
                        "type": "",
                        "returnType": "Record<string, string | number>",
                        "line": 19
                    }
                }
            },
            "templateData": "<p-progressSpinner\n  [class]=\"'zyfra-spinner zyfra-spinner_color-' + color\"\n  [style]=\"spinnerStyle\"\n  [styleClass]=\"styleClass\"\n  [strokeWidth]=\"strokeWidth\"\n  [fill]=\"fill\"\n  [animationDuration]=\"animationDuration\"\n></p-progressSpinner>\n"
        },
        {
            "name": "ZyfraSplitButtonComponent",
            "id": "component-ZyfraSplitButtonComponent-af757c0c0530a1773f1d25a580b40582",
            "file": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-split-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any"
                },
                {
                    "name": "dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'195ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "menuStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "menuStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "MenuItem[]"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'225ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<PointerEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDropdownClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-split-button',\r\n  templateUrl: './zyfra-split-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSplitButtonComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() menuStyle: string;\r\n  @Input() menuStyleClass: string;\r\n  @Input() styleClass: string;\r\n  @Input() appendTo: any;\r\n  @Input() dir: string;\r\n  @Input() tabindex: number;\r\n  @Input() model: MenuItem[];\r\n  @Input() showTransitionOptions = '225ms ease-out';\r\n  @Input() hideTransitionOptions = '195ms ease-in';\r\n\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onDropdownClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n\r\n  nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  onClickHandler(event: PointerEvent) {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  onDropdownClickHandler(event: PointerEvent) {\r\n    this.onDropdownClick.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-splitButton\r\n  [model]=\"model\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [menuStyle]=\"menuStyle\"\r\n  [menuStyleClass]=\"menuStyleClass\"\r\n  [appendTo]=\"appendTo\"\r\n  [tabindex]=\"tabindex\"\r\n  [dir]=\"dir\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"onClickHandler($event)\"\r\n  (onDropdownClick)=\"onDropdownClickHandler($event)\"\r\n></p-splitButton>\r\n"
        },
        {
            "name": "ZyfraSplitterComponent",
            "id": "component-ZyfraSplitterComponent-afe58619a945d149cab3bec12764f771",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-splitter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "gutterSize",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the divider in pixels.",
                    "description": "<p>Size of the divider in pixels.</p>\n",
                    "line": 41,
                    "type": "number"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Orientation of the panels, valid values are \"horizontal\" and \"vertical\".",
                    "description": "<p>Orientation of the panels, valid values are &quot;horizontal&quot; and &quot;vertical&quot;.</p>\n",
                    "line": 36,
                    "type": "\"horizontal\" | \"vertical\""
                },
                {
                    "name": "minSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum size of the elements relative to 100%.",
                    "description": "<p>Minimum size of the elements relative to 100%.</p>\n",
                    "line": 31,
                    "type": "number[]"
                },
                {
                    "name": "panelSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the elements relative to 100%.",
                    "description": "<p>Size of the elements relative to 100%.</p>\n",
                    "line": 26,
                    "type": "number[]"
                },
                {
                    "name": "panelStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the pnanel.",
                    "description": "<p>Inline style of the pnanel.</p>\n",
                    "line": 71,
                    "type": "literal type"
                },
                {
                    "name": "panelStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the panel.",
                    "description": "<p>Style class of the panel.</p>\n",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "stateKey",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Storage identifier of a stateful Splitter.",
                    "description": "<p>Storage identifier of a stateful Splitter.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.",
                    "description": "<p>Defines where a stateful splitter keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage.</p>\n",
                    "line": 51,
                    "type": "\"session\" | \"local\""
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 56,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 61,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize ends.\n\n",
                    "description": "<p>Callback to invoke when resize ends.</p>\n",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onResizeStart",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize starts.\n\n",
                    "description": "<p>Callback to invoke when resize starts.</p>\n",
                    "line": 84,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraSplitterTemplateDirective>",
                    "optional": false,
                    "description": "<p>Template html.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nTemplate html.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResizeStartHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\ntype onResizeEvent = { originalEvent: MouseEvent; sizes: [number, number] };\n\n@Component({\n  selector: 'zyfra-splitter',\n  templateUrl: './zyfra-splitter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSplitterComponent implements AfterContentInit {\n  // Вся информация о методах и свойствах хранится тут import { Splitter } from 'primeng/splitter';\n  /**\n   * Size of the elements relative to 100%.\n   *\n   */\n  @Input() panelSizes: number[] = [];\n  /**\n   * Minimum size of the elements relative to 100%.\n   *\n   */\n  @Input() minSizes: number[] = [];\n  /**\n   * Orientation of the panels, valid values are \"horizontal\" and \"vertical\".\n   *\n   */\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\n  /**\n   * Size of the divider in pixels.\n   *\n   */\n  @Input() gutterSize = 8;\n  /**\n   * Storage identifier of a stateful Splitter.\n   *\n   */\n  @Input() stateKey: string = null;\n  /**\n   * Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\n   *\n   */\n  @Input() stateStorage: 'session' | 'local' = 'session';\n  /**\n   * Inline style of the component.\n   *\n   */\n  @Input() style: { [key: string]: string | null } = null;\n  /**\n   * Style class of the component.\n   *\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Style class of the panel.\n   *\n   */\n  @Input() panelStyleClass: string = null;\n  /**\n   * Inline style of the pnanel.\n   *\n   */\n  @Input() panelStyle: { [key: string]: string | null } = null;\n\n  /**\n   * Template html.\n   *\n   */\n  @ContentChildren(ZyfraSplitterTemplateDirective)\n  templates: QueryList<ZyfraSplitterTemplateDirective>;\n\n  /**\n   * Callback to invoke when resize starts.\n   *\n   */\n  @Output() onResizeStart = new EventEmitter<onResizeEvent>();\n\n  /**\n   * Callback to invoke when resize ends.\n   *\n   */\n  @Output() onResizeEnd = new EventEmitter<onResizeEvent>();\n\n  panels = [];\n\n  // tslint:disable-next-line: typedef\n  ngAfterContentInit() {\n    this.templates.forEach((item) => {\n      this.panels.push(item.template);\n    });\n  }\n\n  onResizeStartHandler(event) {\n    this.onResizeStart.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-splitter\n  [panelSizes]=\"panelSizes\"\n  [minSizes]=\"minSizes\"\n  [layout]=\"layout\"\n  [gutterSize]=\"gutterSize\"\n  [stateKey]=\"stateKey\"\n  [stateStorage]=\"stateStorage\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [panelStyleClass]=\"panelStyleClass\"\n  [panelStyle]=\"panelStyle\"\n  (onResizeStart)=\"onResizeStartHandler($event)\"\n  (onResizeEnd)=\"onResizeEnd.emit($event)\"\n>\n  <ng-template pTemplate *ngFor=\"let item of panels; let i = index\">\n    <ng-container *ngTemplateOutlet=\"item\"></ng-container>\n  </ng-template>\n</p-splitter>\n"
        },
        {
            "name": "ZyfraTabMenuComponent",
            "id": "component-ZyfraTabMenuComponent-9c0ea3419a2a82c7e2d1315637108e59",
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "MenuItem"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_model",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backLabel",
                    "defaultValue": "'Вернуться'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentMenu",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentMenuIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<Element>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navListElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scroll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Event>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "stopOutsideClickListener$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subMenuContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabSubmenuContainer'"
                        }
                    ]
                },
                {
                    "name": "subMenuObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabMenu",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabMenu"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initClickListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initOutsideClickListener",
                    "args": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initSubmenuObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isPartlyVisible",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentIndex",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  HostBinding,\n  AfterViewChecked,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { TabMenu } from 'primeng/tabmenu';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { debounceTime, filter, first, takeUntil } from 'rxjs/operators';\nimport { SlideMenu } from 'primeng/slidemenu';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'zyfra-tab-menu',\n  templateUrl: './zyfra-tab-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraTabMenuComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\n  @ViewChild(TabMenu) public tabMenu: TabMenu;\n  @ViewChild('tabSubmenuContainer') subMenuContainer: ElementRef;\n  @ViewChild('prevControl') public prevControl: ElementRef;\n  @ViewChild('nextControl') public nextControl: ElementRef;\n  @Input() activeItem: MenuItem = null;\n  @Input() style: string = null;\n  @Input() styleClass: string = null;\n  @Input() set model(items: MenuItem[]) {\n    this._model = items;\n    this.tabsChanged = true;\n  }\n  get model(): MenuItem[] {\n    return this._model;\n  }\n  public backLabel = 'Вернуться';\n  public openedItem: MenuItem;\n\n  private _model: MenuItem[] = null;\n  private tabsChanged: boolean;\n  private maxScrollDistance: number;\n  private navLinks: NodeListOf<Element>;\n  private navListElement: HTMLElement;\n  private currentMenu = null;\n  private currentMenuIndex: number;\n  private subMenuObserver: MutationObserver;\n  private destroyed$ = new Subject();\n  private scroll$: Observable<Event>;\n  private stopOutsideClickListener$ = new Subject();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public ngAfterViewInit(): void {\n    this.navListElement = this.tabMenu.navbar.nativeElement;\n    this.navLinks = this.navListElement.querySelectorAll('a.p-menuitem-link');\n    this.initClickListeners();\n    this.scroll$ = fromEvent(this.navListElement, 'scroll').pipe(debounceTime(50));\n    this.scroll$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.updateControlsState());\n    this.initSubmenuObserver();\n  }\n\n  public ngAfterViewChecked(): void {\n    if (this.tabsChanged) {\n      this.tabsChanged = false;\n      requestAnimationFrame(() => {\n        this.hasOverflow = this.navListElement.scrollWidth > this.navListElement.offsetWidth;\n        this.updateControlsState();\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.subMenuObserver.disconnect();\n    this.stopOutsideClickListener$.next();\n    this.stopOutsideClickListener$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public toggleMenu(event: MouseEvent, menu: SlideMenu, index: number): void {\n    const currentTarget = (event.target as HTMLElement).closest('li');\n    if (this.currentMenu && this.currentMenu !== menu) {\n      this.currentMenu.hide();\n    }\n    const toggleMenu = () => {\n      menu.toggle({ currentTarget });\n      this.currentMenu = menu;\n      this.currentMenuIndex = index;\n    };\n\n    if (this.isPartlyVisible(event.target as HTMLElement)) {\n      currentTarget.scrollIntoView({ inline: 'nearest' });\n      this.scroll$.pipe(first(), takeUntil(this.destroyed$)).subscribe(() => toggleMenu());\n    } else {\n      toggleMenu();\n    }\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n\n  initOutsideClickListener(menu): void {\n    this.stopOutsideClickListener$.next();\n    fromEvent(this.document, 'click')\n      .pipe(takeUntil(this.stopOutsideClickListener$))\n      .subscribe((e: PointerEvent) => {\n        const clickInside = e.composedPath().includes(this.subMenuContainer.nativeElement);\n        if (!clickInside) {\n          menu.hide();\n          this.stopOutsideClickListener$.next();\n        }\n      });\n  }\n\n  public selectTabFromList(index: number): void {\n    this.activeItem = this.model[index];\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\n    (this.navLinks.item(index) as HTMLElement).click();\n  }\n\n  public scrollPrevious(): void {\n    this.navListElement.scrollLeft -= this.navListElement.offsetWidth;\n  }\n\n  public scrollNext(): void {\n    this.navListElement.scrollLeft += this.navListElement.offsetWidth;\n  }\n\n  private updateControlsState(): void {\n    if (this.hasOverflow) {\n      this.maxScrollDistance = this.navListElement.scrollWidth - this.navListElement.offsetWidth;\n      this.disablePrevControl = this.navListElement.scrollLeft === 0;\n      this.disableNextControl = this.maxScrollDistance - this.navListElement.scrollLeft < 1;\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\n    }\n  }\n\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\n    if (isDisabled) {\n      this.renderer.addClass(el, 'disabled');\n    } else {\n      this.renderer.removeClass(el, 'disabled');\n    }\n  }\n\n  private isPartlyVisible(target: HTMLElement): boolean {\n    const offsetParent = target.offsetParent as HTMLElement;\n    const isLeftSideHidden =\n      offsetParent.offsetLeft - this.navListElement.scrollLeft < this.nextControl.nativeElement.offsetWidth;\n    const isRightSideHidden =\n      offsetParent.offsetLeft +\n        offsetParent.offsetWidth -\n        this.nextControl.nativeElement.offsetWidth -\n        this.navListElement.scrollLeft >\n      this.navListElement.offsetWidth;\n    return isLeftSideHidden || isRightSideHidden;\n  }\n\n  private initClickListeners(): void {\n    fromEvent(this.navListElement, 'click')\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((e: MouseEvent) => {\n        this.updateCurrentIndex(e.target as HTMLElement);\n        this.updateActiveItem();\n      });\n\n    fromEvent(this.subMenuContainer.nativeElement, 'click')\n      .pipe(\n        filter(\n          (e: MouseEvent) =>\n            !(e.target as HTMLElement).nextElementSibling && e.target instanceof HTMLAnchorElement\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => {\n        this.updateActiveItem();\n      });\n  }\n\n  private initSubmenuObserver(): void {\n    const target = this.subMenuContainer.nativeElement;\n    const config = {\n      childList: true,\n    };\n    const callback = (mutations: MutationRecord[]) => {\n      mutations.forEach(() => {\n        this.openedItem = this.subMenuContainer.nativeElement.hasChildNodes()\n          ? this.model[this.currentMenuIndex]\n          : null;\n        this.cdr.markForCheck();\n      });\n    };\n    this.subMenuObserver = new MutationObserver(callback);\n    this.subMenuObserver.observe(target, config);\n  }\n\n  private updateActiveItem(): void {\n    this.activeItem = this.model[this.currentMenuIndex];\n    this.cdr.markForCheck();\n  }\n\n  private updateCurrentIndex(target: HTMLElement): void {\n    this.navLinks.forEach((value, key) => {\n      if (value === target.closest('a')) {\n        this.currentMenuIndex = key;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "accessors": {
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "model",
                        "type": "[]",
                        "returnType": "MenuItem[]",
                        "line": 44
                    }
                }
            },
            "templateData": "<div class=\"tab-container\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\n    </div>\n  </div>\n\n  <p-tabMenu [model]=\"model\" [activeItem]=\"activeItem\" [style]=\"style\" [styleClass]=\"styleClass\">\n    <ng-template pTemplate=\"item\" let-item let-i=\"index\">\n      <i *ngIf=\"item.icon\" class=\"p-menuitem-icon pi pi-fw {{ item.icon }}\"></i>\n      <span class=\"p-menuitem-text\">{{ item?.label }}</span>\n      <ng-container *ngIf=\"item.items && item.items\">\n        <i\n          class=\"menu-toggle-icon zyfra-icon {{\n            this.openedItem === item ? 'chevrons-dropdown' : 'chevrons-menu-right'\n          }}\"\n          (click)=\"toggleMenu($event, menu, i)\"\n        ></i>\n        <p-slideMenu\n          #menu\n          [model]=\"item.items\"\n          [popup]=\"true\"\n          [appendTo]=\"tabSubmenuContainer\"\n          [backLabel]=\"backLabel\"\n          (onShow)=\"initOutsideClickListener(menu)\"\n        ></p-slideMenu>\n      </ng-container>\n    </ng-template>\n  </p-tabMenu>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <div\n        *ngFor=\"let tab of model; let i = index\"\n        class=\"tab-list-item text-overflow\"\n        tooltipPosition=\"bottom\"\n        [pTooltip]=\"tab.label\"\n        (click)=\"selectTabFromList(i); op.hide()\"\n      >\n        {{ tab.label }}\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\n</div>\n<div #tabSubmenuContainer class=\"tab-submenu-container\"></div>\n"
        },
        {
            "name": "ZyfraTabPanelComponent",
            "id": "component-ZyfraTabPanelComponent-d477ee69df051c665f6349ff6dccfd52",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "headerStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "headerStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "leftIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "rightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "tooltip",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"right\" | \"left\" | \"top\" | \"bottom\""
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "propChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_leftIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_rightIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contentTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'header'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "implicitContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tab-panel',\n  templateUrl: './zyfra-tab-panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTabPanelComponent {\n  @ContentChild('header') public headerTemplate: TemplateRef<any>;\n  @ContentChild('content') public contentTemplate: TemplateRef<any>;\n\n  @ViewChild(TemplateRef) implicitContent: TemplateRef<any>;\n  @Input() selected: boolean = false;\n  @Input() closable: boolean = false;\n  @Input() headerStyle: string = null;\n  @Input() headerStyleClass: string = null;\n  @Input() cache: boolean = true;\n  @Input() tooltip: any = null;\n  @Input() tooltipStyleClass: string = null;\n  @Input() tooltipPosition: 'right' | 'left' | 'top' | 'bottom' = 'top';\n  @Input() tooltipPositionStyle: string = 'absolute';\n\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.propChange.emit();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @Input() set header(header: string) {\n    this._header = header;\n    this.propChange.emit();\n  }\n\n  get header(): string {\n    return this._header;\n  }\n\n  @Input() set leftIcon(leftIcon: string) {\n    this._leftIcon = leftIcon;\n    this.propChange.emit();\n  }\n\n  get leftIcon(): string {\n    return this._leftIcon;\n  }\n\n  @Input() set rightIcon(rightIcon: string) {\n    this._rightIcon = rightIcon;\n    this.propChange.emit();\n  }\n\n  get rightIcon(): string {\n    return this._rightIcon;\n  }\n\n  @Output() propChange: EventEmitter<void> = new EventEmitter();\n\n  private _header: string = null;\n  private _disabled: boolean = false;\n  private _leftIcon: string = null;\n  private _rightIcon: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "header",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "leftIcon": {
                    "name": "leftIcon",
                    "setSignature": {
                        "name": "leftIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "leftIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 55
                    }
                },
                "rightIcon": {
                    "name": "rightIcon",
                    "setSignature": {
                        "name": "rightIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "rightIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 64
                    }
                }
            },
            "templateData": "<ng-template><ng-content></ng-content></ng-template>\n"
        },
        {
            "name": "ZyfraTabViewComponent",
            "id": "component-ZyfraTabViewComponent-4741a04ee5c9a0607e7faa7f760061fc",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number | null"
                },
                {
                    "name": "controlClose",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | null"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string | null"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "keyDownHandler",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "lastFocused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navContentElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabClosed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTabPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTabPanelComponent"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTabPanelComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabsChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabView",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabView"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activeIndexChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFocus",
                    "args": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focusNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "focusPrev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialPrepare",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tabsInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { TabView } from 'primeng/tabview';\nimport { ZyfraTabPanelComponent } from '../zyfra-tab-panel/zyfra-tab-panel.component';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'zyfra-tab-view',\n  templateUrl: './zyfra-tab-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraTabViewComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\n  @ViewChild(TabView) public tabView: TabView;\n  @ViewChild('prevControl') public prevControl: ElementRef;\n  @ViewChild('nextControl') public nextControl: ElementRef;\n  @ContentChildren(ZyfraTabPanelComponent) tabPanels: QueryList<ZyfraTabPanelComponent>;\n  @Input() activeIndex: number | null = null;\n  @Input() controlClose = false;\n  @Input() style: string | null = null;\n  @Input() styleClass: string | null = null;\n\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  public tabs: ZyfraTabPanelComponent[] = [];\n  public tabList: { header: string; index: number; disabled: boolean }[] = [];\n\n  private tabsChanged = true;\n  private tabClosed = false;\n  private maxScrollDistance: number;\n  private navLinks: NodeListOf<HTMLElement>;\n  private lastFocused: Element;\n  private navContentElement: HTMLElement;\n  private destroyed$: Subject<any> = new Subject();\n  private tabsChanged$: Subject<any> = new Subject();\n  private keyDownHandler = (e: KeyboardEvent): void => {\n    // use an arrow function to access the context of the component\n    if (e.key !== 'ArrowRight' && e.key !== 'ArrowLeft') {\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowLeft':\n        this.focusPrev();\n        break;\n      case 'ArrowRight':\n        this.focusNext();\n        break;\n    }\n  };\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public ngAfterContentInit(): void {\n    this.tabsInit();\n    this.tabPanels.changes.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      this.tabsChanged$.next();\n      this.tabsInit();\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    this.navContentElement = this.tabView.content.nativeElement;\n    this.navContentElement.addEventListener('keydown', this.keyDownHandler);\n    fromEvent(this.navContentElement, 'scroll')\n      .pipe(debounceTime(50), takeUntil(this.destroyed$))\n      .subscribe(() => this.updateControlsState());\n  }\n\n  private initialPrepare(): void {\n    this.navLinks = this.navContentElement.querySelectorAll('a.p-tabview-nav-link');\n    const highlight = this.navContentElement.querySelector('li.p-highlight');\n    let focusPresent = false;\n    this.navLinks.forEach((value) => {\n      if (this.lastFocused === value) {\n        focusPresent = true;\n      }\n    });\n    if (!focusPresent) {\n      this.lastFocused = highlight ? highlight.firstElementChild : this.navLinks.item(0);\n    }\n    this.navLinks.forEach((link, index): void => {\n      if (this.lastFocused !== link) {\n        this.renderer.setAttribute(this.navLinks[index], 'tabindex', '-1');\n      }\n    });\n  }\n\n  public ngAfterViewChecked(): void {\n    if (this.tabsChanged || this.tabClosed) {\n      requestAnimationFrame(() => {\n        this.hasOverflow = this.navContentElement.scrollWidth > this.navContentElement.offsetWidth;\n        this.updateControlsState();\n        if (this.tabsChanged) {\n          this.initialPrepare();\n        }\n        this.tabsChanged = false;\n        this.tabClosed = false;\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.removeListeners();\n    this.tabsChanged$.next();\n    this.tabsChanged$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public activeIndexChangeHandler(event): void {\n    this.activeIndex = event;\n    this.activeIndexChange.emit(event);\n  }\n\n  public handleChange(event): void {\n    this.onChange.emit(event);\n    this.changeFocus(this.lastFocused, this.navLinks.item(event.index));\n  }\n\n  public handleClose(event): void {\n    const closedTab = event.originalEvent.target.offsetParent;\n    this.tabClosed = true;\n    this.tabList = this.tabList.filter(({ index }) => index !== event.index);\n    if (this.lastFocused === closedTab) {\n      this.changeFocus(this.lastFocused, this.navLinks.item(this.tabList[0].index));\n    }\n    this.onClose.emit(event);\n  }\n\n  public scrollPrevious(): void {\n    this.navContentElement.scrollLeft -= this.navContentElement.offsetWidth;\n  }\n\n  public scrollNext(): void {\n    this.navContentElement.scrollLeft += this.navContentElement.offsetWidth;\n  }\n\n  public selectTabFromList(event: MouseEvent, index: number): void {\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\n    if (!this.tabList[index].disabled && this.activeIndex !== index) {\n      this.activeIndex = index;\n      this.changeFocus(this.lastFocused, this.navLinks.item(index));\n      this.onChange.emit({ originalEvent: event, index });\n    }\n  }\n\n  private tabsInit(): void {\n    this.tabs = this.tabPanels.toArray();\n    this.tabList = this.tabs.map((value, index) => ({\n      header: value.header,\n      index,\n      disabled: value.disabled,\n    }));\n    this.tabsChanged = true;\n    merge(...this.tabs.map((value) => value.propChange))\n      .pipe(takeUntil(this.tabsChanged$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    this.cdr.markForCheck();\n  }\n\n  private updateControlsState(): void {\n    if (this.hasOverflow) {\n      this.maxScrollDistance = this.navContentElement.scrollWidth - this.navContentElement.offsetWidth;\n      this.disablePrevControl = this.navContentElement.scrollLeft === 0;\n      this.disableNextControl = this.maxScrollDistance - this.navContentElement.scrollLeft < 1;\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\n    }\n  }\n\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\n    if (isDisabled) {\n      this.renderer.addClass(el, 'disabled');\n    } else {\n      this.renderer.removeClass(el, 'disabled');\n    }\n  }\n\n  private removeListeners(): void {\n    this.navContentElement.removeEventListener('keydown', this.keyDownHandler);\n  }\n\n  private focusPrev(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.previousElementSibling) {\n      return;\n    }\n    const next = current.parentElement.previousElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(current, next);\n    next.focus();\n    if (next.offsetLeft < this.navContentElement.scrollLeft) {\n      this.navContentElement.scrollLeft =\n        next.offsetLeft + next.offsetWidth - this.navContentElement.offsetWidth;\n    }\n  }\n\n  private focusNext(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.nextElementSibling) {\n      return;\n    }\n    const next = current.parentElement.nextElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(current, next);\n    next.focus();\n    if (\n      next.offsetLeft + next.offsetWidth >\n      this.navContentElement.offsetWidth + this.navContentElement.scrollLeft\n    ) {\n      this.navContentElement.scrollLeft = next.offsetLeft;\n    }\n  }\n\n  private changeFocus(current: Element, next: Element): void {\n    this.renderer.setAttribute(current, 'tabindex', '-1');\n    this.renderer.setAttribute(next, 'tabindex', '0');\n    this.lastFocused = next;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "templateData": "<div class=\"tab-container\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\n    </div>\n  </div>\n  <p-tabView\n    [activeIndex]=\"activeIndex\"\n    [controlClose]=\"controlClose\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    (activeIndexChange)=\"activeIndexChangeHandler($event)\"\n    (onChange)=\"handleChange($event)\"\n    (onClose)=\"handleClose($event)\"\n  >\n    <ng-container *ngFor=\"let tab of tabs\">\n      <p-tabPanel\n        [header]=\"tab.header\"\n        [selected]=\"tab.selected\"\n        [disabled]=\"tab.disabled\"\n        [closable]=\"tab.closable\"\n        [leftIcon]=\"tab.leftIcon\"\n        [rightIcon]=\"tab.rightIcon\"\n        [headerStyle]=\"tab.headerStyle\"\n        [headerStyleClass]=\"tab.headerStyleClass\"\n        [cache]=\"tab.cache\"\n        [tooltip]=\"tab.tooltip\"\n        [tooltipPosition]=\"tab.tooltipPosition\"\n        [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n      >\n        <ng-template *ngIf=\"tab.headerTemplate\" pTemplate=\"header\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.headerTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-template *ngIf=\"tab.contentTemplate\" pTemplate=\"content\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.contentTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-container\n          [ngTemplateOutlet]=\"tab.implicitContent\"\n          [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n        ></ng-container>\n      </p-tabPanel>\n    </ng-container>\n  </p-tabView>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <div\n        *ngFor=\"let tab of tabList\"\n        class=\"tab-list-item text-overflow\"\n        [class.disabled]=\"tab.disabled\"\n        tooltipPosition=\"bottom\"\n        [pTooltip]=\"tab.header\"\n        (click)=\"selectTabFromList($event, tab.index); op.hide()\"\n      >\n        {{ tab.header }}\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\n</div>\n"
        },
        {
            "name": "ZyfraTextareaComponent",
            "id": "component-ZyfraTextareaComponent-917472a6988673a79dc182d3db0c5e1b",
            "file": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResize",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-textarea',\r\n  templateUrl: './zyfra-textarea.component.html',\r\n})\r\nexport class ZyfraTextareaComponent {\r\n  @Input() value: string;\r\n  @Input() rows: number;\r\n  @Input() cols: number;\r\n  @Input() autoResize: boolean;\r\n  @Input() id: string;\r\n  @Input() name: string;\r\n  @Input() placeholder: string;\r\n  @Input() class: string;\r\n  @Input() disabled: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() minlength: number;\r\n  @Input() label = '';\r\n  @Input() required = false;\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onResize = new EventEmitter<unknown>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <textarea\r\n    pInputTextarea\r\n    [rows]=\"rows\"\r\n    [cols]=\"cols\"\r\n    [autoResize]=\"autoResize\"\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [placeholder]=\"placeholder\"\r\n    [class]=\"class\"\r\n    [disabled]=\"disabled\"\r\n    [maxlength]=\"maxlength\"\r\n    [minlength]=\"minlength\"\r\n    [name]=\"name\"\r\n    (onResize)=\"onResize.emit($event)\"\r\n  ></textarea>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraToastComponent",
            "id": "component-ZyfraToastComponent-15ad05f3d8487a9558820d4e916df45d",
            "file": "libs/components/src/lib/toast/zyfra-toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any"
                },
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "hideTransformOptions",
                    "defaultValue": "'translateY(-100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'250ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "htmlTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "SafeHtml"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "life",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "position",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "preventDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "preventOpenDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "severity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "showTransformOptions",
                    "defaultValue": "'translateY(100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "sticky",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCloseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { MessageService } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-toast',\r\n  templateUrl: './zyfra-toast.component.html',\r\n  styles: [],\r\n  providers: [MessageService],\r\n})\r\nexport class ZyfraToastComponent {\r\n  @Input() htmlTemplate: SafeHtml;\r\n\r\n  @Input() key: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() position: string = 'top-right';\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '250ms ease-in';\r\n  @Input() showTransformOptions: string = 'translateY(100%)';\r\n  @Input() hideTransformOptions: string = 'translateY(-100%)';\r\n  @Input() preventOpenDuplicates: boolean;\r\n  @Input() preventDuplicates: boolean;\r\n\r\n  // --- for message -----\r\n  @Input() severity: string;\r\n  @Input() summary: string;\r\n  @Input() detail: string;\r\n  @Input() id: any;\r\n  @Input() life: number = 3000;\r\n  @Input() sticky: boolean = false;\r\n  @Input() closable: boolean = true;\r\n  @Input() data: any;\r\n  // @Input() key:string;\r\n\r\n  /* onClose */\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  showMessage() {\r\n    this.messageService.add({\r\n      severity: this.severity,\r\n      summary: this.summary,\r\n      detail: this.detail,\r\n      life: this.life,\r\n      id: this.id,\r\n      sticky: this.sticky,\r\n      closable: this.closable,\r\n      data: this.data,\r\n    });\r\n  }\r\n\r\n  onCloseHandler(event) {\r\n    this.onClose.emit(event);\r\n  }\r\n\r\n  // нужны ли кастомные методы?\r\n  onReject() {\r\n    this.messageService.clear('c');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-toast\r\n  [position]=\"position\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [key]=\"key\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [position]=\"position\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  [showTransformOptions]=\"showTransformOptions\"\r\n  [hideTransformOptions]=\"hideTransformOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  (onClose)=\"onReject()\"\r\n>\r\n  <ng-template *ngIf=\"htmlTemplate\" let-message pTemplate=\"message\">\r\n    <div [innerHTML]=\"htmlTemplate\"></div>\r\n  </ng-template>\r\n</p-toast>\r\n"
        },
        {
            "name": "ZyfraToggleButtonComponent",
            "id": "component-ZyfraToggleButtonComponent-1bc46a670474ca731780ab56204d3807",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-toggle-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toggle-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "model",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "offIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "offLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "onIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "onLabel",
                    "defaultValue": "'confirm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-toggleButton\r\n  [(ngModel)]=\"model\"\r\n  [onLabel]=\"onLabel\"\r\n  [offLabel]=\"offLabel\"\r\n  [onIcon]=\"onIcon\"\r\n  [offIcon]=\"offIcon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  (onChange)=\"handleChange($event)\"\r\n>\r\n</p-toggleButton>\r\n"
        },
        {
            "name": "ZyfraTreeComponent",
            "id": "component-ZyfraTreeComponent-5632cf17d2947d13125fbcde2323c2d7",
            "file": "libs/components/src/lib/tree/zyfra-tree.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any"
                },
                {
                    "name": "draggableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "draggableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "droppableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "droppableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "any"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "enableFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string"
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "indentation",
                    "defaultValue": "1.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "number"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TreeNode[]"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "metaKeySelection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "number"
                },
                {
                    "name": "propagateSelectionDown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "propagateSelectionUp",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "trackBy",
                    "defaultValue": "(index: number, item: any) => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "(index: number, item: any) => any"
                },
                {
                    "name": "validateDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "virtualNodeHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeContextMenuSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeDrop",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onFilterHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeCollapseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeContextMenuSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeDropHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpandHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeUnselectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-tree',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './zyfra-tree.component.html',\n})\nexport class ZyfraTreeComponent {\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\n\n  @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n  @Input() items: TreeNode[];\n\n  @Input() selectionMode: string; // single | multipple | checkbox\n\n  @Input() selection: any;\n\n  @Input() style: any;\n\n  @Input() styleClass: string;\n\n  @Input() contextMenu: any;\n\n  @Input() layout = 'vertical';\n\n  @Input() draggableScope: any;\n\n  @Input() droppableScope: any;\n\n  @Input() draggableNodes: boolean;\n\n  @Input() droppableNodes: boolean;\n\n  @Input() metaKeySelection = true;\n\n  @Input() propagateSelectionUp = true;\n\n  @Input() propagateSelectionDown = true;\n\n  @Input() loading: boolean;\n\n  @Input() loadingIcon = 'pi pi-spinner';\n\n  @Input() emptyMessage = '';\n\n  @Input() ariaLabel: string;\n\n  @Input() ariaLabelledBy: string;\n\n  @Input() validateDrop: boolean;\n\n  @Input() enableFilter: boolean;\n\n  @Input() filterBy = 'label';\n\n  @Input() filterMode = 'lenient';\n\n  @Input() filterPlaceholder: string;\n\n  @Input() filterLocale: string;\n\n  @Input() scrollHeight: string;\n\n  @Input() virtualScroll: boolean;\n\n  @Input() virtualNodeHeight: string;\n\n  @Input() minBufferPx: number;\n\n  @Input() maxBufferPx: number;\n\n  @Input() indentation = 1.5;\n\n  @Input() trackBy = (index: number, item: any) => item;\n\n  onNodeSelectHandler(event: Event): void {\n    this.onNodeSelect.emit(event);\n  }\n\n  onNodeUnselectHandler(event: Event): void {\n    this.onNodeUnselect.emit(event);\n  }\n\n  onNodeExpandHandler(event: Event): void {\n    this.onNodeExpand.emit(event);\n  }\n\n  onNodeCollapseHandler(event: Event): void {\n    this.onNodeCollapse.emit(event);\n  }\n\n  onNodeContextMenuSelectHandler(event: Event): void {\n    this.onNodeContextMenuSelect.emit(event);\n  }\n\n  onNodeDropHandler(event: Event): void {\n    this.onNodeDrop.emit(event);\n  }\n\n  onFilterHandler(event: Event): void {\n    this.onFilter.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tree\n  [value]=\"items\"\n  [selectionMode]=\"selectionMode\"\n  [(selection)]=\"selection\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [contextMenu]=\"contextMenu\"\n  [layout]=\"layout\"\n  [draggableScope]=\"draggableScope\"\n  [droppableScope]=\"droppableScope\"\n  [draggableNodes]=\"draggableNodes\"\n  [droppableNodes]=\"droppableNodes\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [propagateSelectionUp]=\"propagateSelectionUp\"\n  [propagateSelectionDown]=\"propagateSelectionDown\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [emptyMessage]=\"emptyMessage\"\n  [ariaLabel]=\"ariaLabel\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [validateDrop]=\"validateDrop\"\n  [filter]=\"enableFilter\"\n  [filterBy]=\"filterBy\"\n  [filterMode]=\"filterMode\"\n  [filterPlaceholder]=\"filterPlaceholder\"\n  [filterLocale]=\"filterLocale\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualNodeHeight]=\"virtualNodeHeight\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [trackBy]=\"trackBy\"\n  [indentation]=\"indentation\"\n  (onNodeSelect)=\"onNodeSelectHandler($event)\"\n  (onNodeUnselect)=\"onNodeUnselectHandler($event)\"\n  (onNodeExpand)=\"onNodeExpandHandler($event)\"\n  (onNodeCollapse)=\"onNodeCollapseHandler($event)\"\n  (onNodeContextMenuSelect)=\"onNodeContextMenuSelectHandler($event)\"\n  (onNodeDrop)=\"onNodeDropHandler($event)\"\n  (onFilter)=\"onFilterHandler($event)\"\n></p-tree>\n"
        }
    ],
    "modules": [
        {
            "name": "IconModule",
            "id": "module-IconModule-f242a6081953dcb0332029efa7d2c36d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/icon/icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IconComponent } from './icon.component';\r\n\r\n@NgModule({\r\n  declarations: [IconComponent],\r\n  imports: [CommonModule],\r\n  exports: [IconComponent],\r\n})\r\nexport class IconModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraAccordionModule",
            "id": "module-ZyfraAccordionModule-f2a318e294a9f4e7bc3090006cc32946",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/accordion/zyfra-accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraAccordionComponent } from './zyfra-accordion/zyfra-accordion.component';\nimport { AccordionModule } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from './zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\nimport { ZyfraTemplateDirective } from '../@shared/zyfra-template.directives';\n\n@NgModule({\n  declarations: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\n  imports: [AccordionModule, CommonModule, ZyfraSharedModule],\n  exports: [ZyfraAccordionComponent, ZyfraAccordionTabComponent, ZyfraTemplateDirective],\n})\nexport class ZyfraAccordionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        },
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraAutoCompleteModule",
            "id": "module-ZyfraAutoCompleteModule-169ad929da076883c645be700b0c2c50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraAutoCompleteComponent } from './zyfra-auto-complete.component';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\n\n@NgModule({\n  declarations: [ZyfraAutoCompleteComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AutoCompleteModule],\n  exports: [ZyfraAutoCompleteComponent],\n})\nexport class ZyfraAutoCompleteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraBreadcrumbModule",
            "id": "module-ZyfraBreadcrumbModule-dfc56fe49b841bd4b100bcf41b9cf805",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraBreadcrumbComponent } from './zyfra-breadcrumb.component';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\n\n@NgModule({\n  declarations: [ZyfraBreadcrumbComponent],\n  imports: [BreadcrumbModule],\n  exports: [ZyfraBreadcrumbComponent],\n})\nexport class ZyfraBreadcrumbModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraButtonModule",
            "id": "module-ZyfraButtonModule-6d1501e8fb5cacb48c11e0b459b4daea",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/button/zyfra-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraButtonComponent } from './zyfra-button.component';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraButtonComponent],\r\n  imports: [ButtonModule],\r\n  exports: [ZyfraButtonComponent],\r\n})\r\nexport class ZyfraButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraCheckBoxModule",
            "id": "module-ZyfraCheckBoxModule-41fec5632a837da26d632973ce8715d6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ZyfraCheckboxComponent } from './zyfra-checkbox.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraCheckboxComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, CheckboxModule],\r\n  exports: [ZyfraCheckboxComponent],\r\n})\r\nexport class ZyfraCheckBoxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraChipModule",
            "id": "module-ZyfraChipModule-f78bcef2cc2af418c1b2b916192e707b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/chip/zyfra-chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraChipComponent } from './zyfra-chip.component';\r\nimport { ChipModule } from 'primeng/chip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraChipComponent],\r\n  imports: [ChipModule],\r\n  exports: [ZyfraChipComponent],\r\n})\r\nexport class ZyfraChipModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraConfirmDialogModule",
            "id": "module-ZyfraConfirmDialogModule-7cf9a38292ac0e2c5fc5ea60333086e7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ZyfraConfirmDialogComponent } from './zyfra-confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraConfirmDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ConfirmDialogModule,\r\n    MessagesModule,\r\n    ToastModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [ZyfraConfirmDialogComponent],\r\n})\r\nexport class ZyfraConfirmDialogModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDialogModule",
            "id": "module-ZyfraDialogModule-808e5696a4e1d02e82123d9a01cef53c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dialog/zyfra-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ZyfraDialogComponent } from './zyfra-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDialogComponent],\r\n  imports: [CommonModule, DialogModule, ToastModule],\r\n  exports: [ZyfraDialogComponent],\r\n})\r\nexport class ZyfraDialogModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDropdownModule",
            "id": "module-ZyfraDropdownModule-07c55a689b9333575590db215001051c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraDropdownComponent } from './zyfra-dropdown.component';\nimport { DropdownModule } from 'primeng/dropdown';\n\n@NgModule({\n  declarations: [ZyfraDropdownComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule],\n  exports: [ZyfraDropdownComponent],\n})\nexport class ZyfraDropdownModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraHintModule",
            "id": "module-ZyfraHintModule-cffd1ac01d08619614d6e70f0deda51d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraHintDirective } from './zyfra-hint.directive';\r\nimport { ZyfraHintComponent } from './zyfra-hint.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\r\n\r\nconst EXPORTED_DECLARATIONS = [ZyfraHintDirective, ZyfraHintComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: EXPORTED_DECLARATIONS,\r\n  declarations: EXPORTED_DECLARATIONS,\r\n  providers: [ZyfraHintOverlayManager],\r\n  entryComponents: [ZyfraHintComponent],\r\n})\r\nexport class ZyfraHintModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ZyfraHintOverlayManager"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputMaskModule",
            "id": "module-ZyfraInputMaskModule-9d62a4f08323dc374de167208d212fac",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraInputMaskComponent } from './zyfra-input-mask.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputMaskComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    InputMaskModule\r\n  ],\r\n  exports: [ZyfraInputMaskComponent]\r\n})\r\nexport class ZyfraInputMaskModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputModule",
            "id": "module-ZyfraInputModule-6ebe2ad7742cbda0f1f1a5efd703a649",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input/zyfra-input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraInputComponent } from './zyfra-input.component';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputComponent],\r\n  imports: [CommonModule, InputTextModule, TooltipModule, FormsModule, ReactiveFormsModule],\r\n  exports: [ZyfraInputComponent],\r\n})\r\nexport class ZyfraInputModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputNumberModule",
            "id": "module-ZyfraInputNumberModule-8d2374c49f7ba2b165e04e2aab90578d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-number/zyfra-input-number.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraInputNumberComponent } from './zyfra-input-number.component';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputNumberComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputNumberModule],\r\n  exports: [ZyfraInputNumberComponent],\r\n})\r\nexport class ZyfraInputNumberModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputSwitchModule",
            "id": "module-ZyfraInputSwitchModule-8f283774697b9ce7d1946ac8ec4dab77",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ZyfraInputSwitchComponent } from './zyfra-input-switch.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputSwitchComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule],\r\n  exports: [ZyfraInputSwitchComponent],\r\n})\r\nexport class ZyfraInputSwitchModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMessageModule",
            "id": "module-ZyfraMessageModule-6b74f177fb9c5597976a17725995b13a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/message/zyfra-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { ZyfraMessageComponent } from './zyfra-message.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraMessageComponent],\r\n  imports: [MessagesModule, MessageModule],\r\n  exports: [ZyfraMessageComponent],\r\n})\r\nexport class ZyfraMessageModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPaginatorModule",
            "id": "module-ZyfraPaginatorModule-edf367fcd4c72dbb5f9436c5c62d1f49",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/paginator/zyfra-paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraPaginatorComponent } from './zyfra-paginator.component';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPaginatorComponent],\r\n  imports: [PaginatorModule],\r\n  exports: [ZyfraPaginatorComponent],\r\n})\r\nexport class ZyfraPaginatorModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPasswordModule",
            "id": "module-ZyfraPasswordModule-cfda9c2ac5d468b582c131540eb173b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/password/zyfra-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ZyfraPasswordComponent } from './zyfra-password.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPasswordComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PasswordModule],\r\n  exports: [ZyfraPasswordComponent],\r\n})\r\nexport class ZyfraPasswordModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraProgressBarModule",
            "id": "module-ZyfraProgressBarModule-a07d6ca7d938b248ebf7a781a4942301",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ZyfraProgressBarComponent } from './zyfra-progress-bar.component';\n\n@NgModule({\n  declarations: [ZyfraProgressBarComponent],\n  imports: [ProgressBarModule],\n  exports: [ZyfraProgressBarComponent],\n})\nexport class ZyfraProgressBarModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraRadioButtonModule",
            "id": "module-ZyfraRadioButtonModule-ba0d7b92aab98a610bbdaf9bf5b95bc2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraRadioButtonComponent } from './zyfra-radio-button.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraRadioButtonComponent],\r\n  imports: [RadioButtonModule, FormsModule, ReactiveFormsModule, CommonModule],\r\n  exports: [ZyfraRadioButtonComponent],\r\n})\r\nexport class ZyfraRadioButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSelectButtonModule",
            "id": "module-ZyfraSelectButtonModule-6cb3b475046ffee7b5f3e5f9521731f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/select-button/zyfra-select-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSelectButtonComponent],\r\n  imports: [SelectButtonModule],\r\n  exports: [ZyfraSelectButtonComponent],\r\n})\r\nexport class ZyfraSelectButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSharedModule",
            "id": "module-ZyfraSharedModule-c50e7f7436923c6d4d2329ae005813fc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/@shared/zyfra-shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTemplateDirective } from './zyfra-template.directives';\n\n@NgModule({\n  declarations: [ZyfraTemplateDirective],\n  imports: [],\n  exports: [ZyfraTemplateDirective],\n})\nexport class ZyfraSharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSliderModule",
            "id": "module-ZyfraSliderModule-5d8738b0317ba096b421f0f10bc3e39d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/slider/zyfra-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport { ZyfraSliderComponent } from './zyfra-slider.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSliderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SliderModule,\r\n  ],\r\n  exports: [ZyfraSliderComponent]\r\n})\r\nexport class ZyfraSliderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSpinnerModule",
            "id": "module-ZyfraSpinnerModule-d559707838213510f8d4d829064eecea",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/spinner/zyfra-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSpinnerComponent } from './zyfra-spinner.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@NgModule({\n  declarations: [ZyfraSpinnerComponent],\n  imports: [ProgressSpinnerModule],\n  exports: [ZyfraSpinnerComponent],\n})\nexport class ZyfraSpinnerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitButtonModule",
            "id": "module-ZyfraSplitButtonModule-8b30755daf4e361a51389fa4eb8b28fb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/split-button/zyfra-split-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSplitButtonComponent } from './zyfra-split-button.component';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSplitButtonComponent],\r\n  imports: [SplitButtonModule],\r\n  exports: [ZyfraSplitButtonComponent],\r\n})\r\nexport class ZyfraSplitButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitterModule",
            "id": "module-ZyfraSplitterModule-90b73bea1a7d4621c07dc3dd7744bc6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/splitter/zyfra-splitter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSplitterComponent } from './zyfra-splitter.component';\nimport { SplitterModule } from 'primeng/splitter';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\n@NgModule({\n  declarations: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n  imports: [CommonModule, BrowserModule, BrowserAnimationsModule, SplitterModule],\n  exports: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n})\nexport class ZyfraSplitterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabMenuModule",
            "id": "module-ZyfraTabMenuModule-26caa6282bf1d82275b8a099b84121f3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { SlideMenuModule } from 'primeng/slidemenu';\nimport { ZyfraTabMenuComponent } from './zyfra-tab-menu.component';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\n\n@NgModule({\n  declarations: [ZyfraTabMenuComponent],\n  imports: [CommonModule, TooltipModule, TabMenuModule, OverlayPanelModule, SlideMenuModule],\n  exports: [ZyfraTabMenuComponent],\n})\nexport class ZyfraTabMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabViewModule",
            "id": "module-ZyfraTabViewModule-15d7978d26fed8109681b029a1f66829",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { TabViewModule } from 'primeng/tabview';\nimport { CommonModule } from '@angular/common';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraTabViewComponent } from './zyfra-tab-view/zyfra-tab-view.component';\nimport { ZyfraTabPanelComponent } from './zyfra-tab-panel/zyfra-tab-panel.component';\n\n@NgModule({\n  declarations: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n  imports: [CommonModule, OverlayPanelModule, TabViewModule, TooltipModule],\n  exports: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n})\nexport class ZyfraTabViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTextareaModule",
            "id": "module-ZyfraTextareaModule-9604f7fb4e40321cc7e72479bb7495e7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/textarea/zyfra-textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraTextareaComponent } from './zyfra-textarea.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTextareaComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextareaModule],\r\n  exports: [ZyfraTextareaComponent],\r\n})\r\nexport class ZyfraTextareaModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToastModule",
            "id": "module-ZyfraToastModule-285b93c533c0d3134d398aca885f3811",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toast/zyfra-toast.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ZyfraToastComponent } from './zyfra-toast.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToastComponent],\r\n  imports: [CommonModule, ToastModule, RippleModule, FormsModule],\r\n  exports: [ZyfraToastComponent],\r\n})\r\nexport class ZyfraToastModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToggleButtonModule",
            "id": "module-ZyfraToggleButtonModule-9f92679b3780a424559ee063beb001c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraToggleButtonComponent } from './zyfra-toggle-button.component';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToggleButtonComponent],\r\n  imports: [FormsModule, CommonModule, ToggleButtonModule],\r\n  exports: [ZyfraToggleButtonComponent],\r\n})\r\nexport class ZyfraToggleButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeModule",
            "id": "module-ZyfraTreeModule-eb85132fff93b2713cf7c175a26d8304",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree/zyfra-tree.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraTreeComponent } from './zyfra-tree.component';\r\nimport { TreeModule } from 'primeng/tree';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraTreeComponent,\r\n  ],\r\n  imports: [\r\n    TreeModule,\r\n  ],\r\n  exports: [\r\n    ZyfraTreeComponent,\r\n  ]\r\n})\r\nexport class ZyfraTreeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraUiRootModule",
            "id": "module-ZyfraUiRootModule-fd551edc5c0b707212fc9d8a33d2ad29",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/root/zyfra-ui-root.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({})\r\nexport class ZyfraUiRootModule {\r\n  // do nothing,\r\n  // override if need root providers for components\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AnimationSpeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Badge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n}"
            },
            {
                "name": "CheckboxWithFormControlComponentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n    toggleStatus(): void {\r\n      if (this.fControl.disabled) {\r\n        this.fControl.enable();\r\n      } else {\r\n        this.fControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.fControl.setValue(!this.fControl.value);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "cities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryCity[]",
                "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Currency",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplateWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CustomWithBadge.bind({})"
            },
            {
                "name": "CustomWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChangeHandler($event)\"\n              (onClose)=\"onCloseHandler($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Decimal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EXPORTED_DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
            },
            {
                "name": "FormControlRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormControlTemplate.bind({})"
            },
            {
                "name": "FormControlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\r\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
            },
            {
                "name": "formControlTemplateChunk",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
            },
            {
                "name": "Group",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTextExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTitleExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "htmlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n  </div>\r\n`"
            },
            {
                "name": "htmlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n</div>`"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconDefs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-logo-green\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-history\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"folder\",\n        \"data\": [\n            \"folder-mode\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
            },
            {
                "name": "IconsSet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectItem[]",
                "defaultValue": "[]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-file', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
            },
            {
                "name": "Mini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MiniRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "MultiMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoValueDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OverflowTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PhoneExt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RADIO_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n}"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SerialNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "simpleMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
            },
            {
                "name": "simpleMenuItemsWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
            },
            {
                "name": "SimpleMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "SimpleSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\r\n  template: template(`[(ngModel)]=\"model\"`),\r\n  props: {\r\n    ...args,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
            },
            {
                "name": "SimpleWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Simple.bind({})"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SSN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Style",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Submit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(str: string) => `\r\n    <div class=\"p-radiobutton-group\">\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"red\"\r\n      label=\"red\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"black\"\r\n      label=\"black\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"blue\"\r\n      label=\"blue\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"pink\"\r\n      label=\"pink\"\r\n      [disabled]=\"disabled || disabledPink\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      [value]=\"null\"\r\n      label=\"Не заполнено\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button>\r\n    </div>\r\n  `"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAutoCompleteComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraAutoCompleteComponent,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethodHandler(event): void {\n      const filtered = [];\n      const query = event.query;\n\n      for (const country of this.countries) {\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filtered.push(country);\n        }\n      }\n\n      this.suggestions = filtered;\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraBreadcrumbComponent>",
                "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraChipComponent>",
                "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraCheckboxComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox\r\n      [(model)]=\"model\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabled]=\"disabled\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n    ></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === null ? 'null' : model}})\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraConfirmDialogComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDialogComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"dialog.onInit($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      #dialog\r\n      [header]=\"header\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    ></zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponents>",
                "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDropdownComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraDropdownComponent,\n  template: `\n    <zyfra-dropdown\n      [(value)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n    ></zyfra-dropdown>\n\n    <br>\n\n    <p>Selected value:</p>\n    <pre>{{value | json}}</pre>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraHintComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"hintTitle !== undefined\">\r\n        <div>\r\n          <ng-template #testHint>\r\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\r\n            <div>{{ hintText }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [zyfraHint]=\"testHint\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"hintTitle == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [zyfraHint]=\"hintText\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputMaskComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMessageComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputNumberComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputSwitchComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPaginatorComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPasswordComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraProgressBarComponent>",
                "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSpinnerComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSliderComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitterComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabMenuComponent>",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTextareaComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToggleButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToastComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\r\n      label=\"for toast\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-toast\r\n      #toast\r\n      [position]=\"position\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n      [preventDuplicates]=\"preventDuplicates\"\r\n      [severity]=\"severity\"\r\n      [summary]=\"summary\"\r\n      [detail]=\"detail\"\r\n      [life]=\"life\"\r\n      [closable]=\"closable\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onClose)=\"onClose($event)\"\r\n    ></zyfra-toast>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onClose: action('onClose'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionComponent>",
                "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionTabComponent>",
                "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabPanelComponent>",
                "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChangeHandler($event)\"\n      (onClose)=\"onCloseHandler($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "ToggleMask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VirtualScroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithFormControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithPageOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSubMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FilterMatchModeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\"",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "ItemClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "onResizeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "PageOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number | Record<string | >",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SliderOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SpinnerColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TZyfraButtonIconPosision",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/components/src/lib/message/zyfra-message.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMessageComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/toast/zyfra-toast.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "htmlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n</div>`"
                },
                {
                    "name": "NoIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToastComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\r\n      label=\"for toast\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-toast\r\n      #toast\r\n      [position]=\"position\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n      [preventDuplicates]=\"preventDuplicates\"\r\n      [severity]=\"severity\"\r\n      [summary]=\"summary\"\r\n      [detail]=\"detail\"\r\n      [life]=\"life\"\r\n      [closable]=\"closable\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onClose)=\"onClose($event)\"\r\n    ></zyfra-toast>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onClose: action('onClose'),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts": [
                {
                    "name": "AnimationSpeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WarningWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.stories.ts": [
                {
                    "name": "Badge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Submit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckboxWithFormControlComponentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n    toggleStatus(): void {\r\n      if (this.fControl.disabled) {\r\n        this.fControl.enable();\r\n      } else {\r\n        this.fControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.fControl.setValue(!this.fControl.value);\r\n    },\r\n  },\r\n})"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraCheckboxComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox\r\n      [(model)]=\"model\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabled]=\"disabled\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n    ></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === null ? 'null' : model}})\r\n  `,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithFormControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PhoneExt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SerialNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SSN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputMaskComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Currency",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Decimal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputNumberComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputSwitchComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPaginatorComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithPageOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Style",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSpinnerComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n}"
                }
            ],
            "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts": [
                {
                    "name": "cities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryCity[]",
                    "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts": [
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplateWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CustomWithBadge.bind({})"
                },
                {
                    "name": "CustomWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChangeHandler($event)\"\n              (onClose)=\"onCloseHandler($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
                },
                {
                    "name": "OverflowTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Simple.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChangeHandler($event)\"\n      (onClose)=\"onCloseHandler($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Mini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoValueDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraProgressBarComponent>",
                    "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts": [
                {
                    "name": "DangerMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToggleButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts": [
                {
                    "name": "DisabledRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "FormControlRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormControlTemplate.bind({})"
                },
                {
                    "name": "FormControlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\r\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
                },
                {
                    "name": "formControlTemplateChunk",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
                },
                {
                    "name": "MiniRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\r\n  template: template(`[(ngModel)]=\"model\"`),\r\n  props: {\r\n    ...args,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
                },
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(str: string) => `\r\n    <div class=\"p-radiobutton-group\">\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"red\"\r\n      label=\"red\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"black\"\r\n      label=\"black\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"blue\"\r\n      label=\"blue\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"pink\"\r\n      label=\"pink\"\r\n      [disabled]=\"disabled || disabledPink\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      [value]=\"null\"\r\n      label=\"Не заполнено\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button>\r\n    </div>\r\n  `"
                }
            ],
            "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraConfirmDialogComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.module.ts": [
                {
                    "name": "EXPORTED_DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
                }
            ],
            "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts": [
                {
                    "name": "Group",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDropdownComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraDropdownComponent,\n  template: `\n    <zyfra-dropdown\n      [(value)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n    ></zyfra-dropdown>\n\n    <br>\n\n    <p>Selected value:</p>\n    <pre>{{value | json}}</pre>\n  `,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "VirtualScroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "simpleMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
                },
                {
                    "name": "simpleMenuItemsWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabMenuComponent>",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSubMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.component.stories.ts": [
                {
                    "name": "HintTextExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HintTitleExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraHintComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"hintTitle !== undefined\">\r\n        <div>\r\n          <ng-template #testHint>\r\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\r\n            <div>{{ hintText }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [zyfraHint]=\"testHint\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"hintTitle == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [zyfraHint]=\"hintText\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts": [
                {
                    "name": "htmlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n  </div>\r\n`"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDialogComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"dialog.onInit($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      #dialog\r\n      [header]=\"header\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    ></zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/icon/story/icon-definitions.ts": [
                {
                    "name": "IconDefs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-logo-green\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-history\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"folder\",\n        \"data\": [\n            \"folder-mode\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
                }
            ],
            "libs/components/src/lib/icon/icon.component.stories.ts": [
                {
                    "name": "IconsSet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponents>",
                    "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraBreadcrumbComponent>",
                    "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
                }
            ],
            "libs/components/src/lib/tree/zyfra-tree.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-file', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/chip/zyfra-chip.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraChipComponent>",
                    "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionTabComponent>",
                    "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabPanelComponent>",
                    "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts": [
                {
                    "name": "RADIO_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n}"
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.stories.ts": [
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSliderComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  props: args,\n})"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAutoCompleteComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraAutoCompleteComponent,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethodHandler(event): void {\n      const filtered = [];\n      const query = event.query;\n\n      for (const country of this.countries) {\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n          filtered.push(country);\n        }\n      }\n\n      this.suggestions = filtered;\n    },\n  },\n})"
                },
                {
                    "name": "withDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/input/zyfra-input.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/password/zyfra-password.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPasswordComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "ToggleMask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitterComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTextareaComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionComponent>",
                    "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts": [
                {
                    "name": "FilterMatchModeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\"",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts": [
                {
                    "name": "ItemClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.ts": [
                {
                    "name": "onResizeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.ts": [
                {
                    "name": "PageOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number | Record<string | >",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.ts": [
                {
                    "name": "SliderOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.ts": [
                {
                    "name": "SpinnerColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.ts": [
                {
                    "name": "TZyfraButtonIconPosision",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/components/src/lib/@shared/zyfra-template.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionTabComponent",
                "coveragePercent": 40,
                "coverageCount": "6/15",
                "status": "medium"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionComponent",
                "coveragePercent": 66,
                "coverageCount": "10/15",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraAccordionOpenClose",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAutoCompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/61",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Badge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Submit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxWithFormControlComponentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/60",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraHintOverlayManager",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTextExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTitleExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraHintComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraHintDirective",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraHintOptionsModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPORTED_DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/icon.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponents",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconsSet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconDefs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Phone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneExt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SerialNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SSN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputMaskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Currency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Decimal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPaginatorComponent",
                "coveragePercent": 85,
                "coverageCount": "18/21",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ToggleMask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoValueDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formControlTemplateChunk",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiniRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RADIO_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryCity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSelectButtonComponent",
                "coveragePercent": 25,
                "coverageCount": "4/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonChange",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonOptionClick",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Style",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationSpeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitterComponent",
                "coveragePercent": 76,
                "coverageCount": "13/17",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSplitterTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItemsWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplateWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OverflowTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToggleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TToggleButtonClick",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            }
        ]
    }
}