{
    "pipes": [],
    "interfaces": [
        {
            "name": "DropdownChangeEvent",
            "id": "interface-DropdownChangeEvent-8b810166ae215bda5792ee984113eae4eb0b4572a6d71b3ab88dc29f84fb77ec20ea39739242cc60e7b3aa4e9469fd1f418caaf497a41b96d335d62d776a0fbc",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\nexport interface DropdownChangeEvent<T> {\r\n  originalEvent: PointerEvent;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-dropdown',\r\n  templateUrl: './zyfra-dropdown.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDropdownComponent<T = unknown> {\r\n  @Input() value: T;\r\n  @Input() options: T[];\r\n  @Input() optionLabel = 'label';\r\n  @Input() optionValue;\r\n  @Input() optionDisabled = 'disabled';\r\n  @Input() optionGroupLabel = 'label';\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() name: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() style: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() filter: boolean;\r\n  @Input() filterValue: string;\r\n  @Input() filterBy: string;\r\n  @Input() filterMatchMode:\r\n    | 'contains'\r\n    | 'startsWith'\r\n    | 'endsWith'\r\n    | 'equals'\r\n    | 'notEquals'\r\n    | 'in'\r\n    | 'lt'\r\n    | 'lte'\r\n    | 'gt'\r\n    | 'gte' = 'contains';\r\n  @Input() filterPlaceholder: string;\r\n  @Input() filterLocale: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n  @Input() emptyMessage = 'No records found';\r\n  @Input() emptyFilterMessage = 'No results found';\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() editable: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() placeholder: string;\r\n  @Input() inputId: string;\r\n  @Input() dataKey: string;\r\n  @Input() autofocus: boolean;\r\n  @Input() autofocusFilter: boolean;\r\n  @Input() resetFilterOnHide: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() autoDisplayFirst = true;\r\n  @Input() group: boolean;\r\n  @Input() groupTemplateClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaFilterLabel: string;\r\n  @Input() tooltip: any;\r\n  @Input() tooltipStyleClass: string;\r\n  @Input() tooltipPosition = 'top';\r\n  @Input() tooltipPositionStyle = 'absolute';\r\n  @Input() itemSize = 30;\r\n  @Input() label = '';\r\n  @Input() virtualScroll: boolean;\r\n\r\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<AnimationEvent>();\r\n  @Output() valueChange = new EventEmitter<T>();\r\n\r\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  groupTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n  headerTemplate: TemplateRef<unknown>;\r\n  emptyTemplate: TemplateRef<unknown>;\r\n  emptyfilterTemplate: TemplateRef<unknown>;\r\n  footerTemplate: TemplateRef<unknown>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach((item) => {\r\n      switch (item.getType()) {\r\n        case 'item':\r\n          this.itemTemplate = item.template;\r\n          break;\r\n        case 'group':\r\n          this.groupTemplate = item.template;\r\n          break;\r\n        case 'selectedItem':\r\n          this.selectedItemTemplate = item.template;\r\n          break;\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'empty':\r\n          this.emptyTemplate = item.template;\r\n          break;\r\n        case 'emptyfilter':\r\n          this.emptyfilterTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InputEvent",
            "id": "interface-InputEvent-a725e20b06ff4bff27a9954a1ddf7db541f154635f63ae7cb43ba87deff8afc316e1b7ec086b2ed9d0ce9b05ea6702c14d2e272b036649043efe891d7f221077",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nexport interface InputEvent {\r\n  originalEvent: KeyboardEvent;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-input-number',\r\n  templateUrl: './zyfra-input-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputNumberComponent {\r\n  @Input() value: number;\r\n  @Input() format = true;\r\n  @Input() showButtons: boolean;\r\n  @Input() buttonLayout = 'stacked';\r\n  @Input() spanClass: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() incrementButtonClass: string;\r\n  @Input() decrementButtonClass: string;\r\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\r\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\r\n  @Input() locale: string;\r\n  @Input() localeMatcher = 'best fit';\r\n  @Input() mode = 'decimal';\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay = 'symbol';\r\n  @Input() useGrouping = true;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() step = 1;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() inputStyle: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: string;\r\n  @Input() disabled: boolean;\r\n  @Input() title: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() name: string;\r\n  @Input() autocomplete: string;\r\n\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onInput = new EventEmitter<InputEvent>();\r\n}\r\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyboardEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NavMenuEvent",
            "id": "interface-NavMenuEvent-623a59f47e0d633300c463ee623347b73c7db8618edf4c201a88f39515b5c4fb5f5f6eae17fceb71294d509dd1306592fd4c486374e9969ca0790edb732b8733",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NavMenuSelectionEvent",
            "id": "interface-NavMenuSelectionEvent-623a59f47e0d633300c463ee623347b73c7db8618edf4c201a88f39515b5c4fb5f5f6eae17fceb71294d509dd1306592fd4c486374e9969ca0790edb732b8733",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem | ZyfraMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PageChangeEvent",
            "id": "interface-PageChangeEvent-02497c6dcdf6f7c7aaccb8ce919da4ebd6741db1eacb31e1f87d70064fa9d20d67a541c28aa87f4bafb595655222524cf6f5b0bdff00f1fd875a7ce65a647d9f",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectButtonChange",
            "id": "interface-SelectButtonChange-4705e8d28adb5d175eb4733fed86337ed467d3b95ba233efb4c7aef880582b445c7e9de3f9a8beeee535122d0a2d71a529379b2d58880c6a65f9886bcab912d3",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectButtonOptionClick",
            "id": "interface-SelectButtonOptionClick-4705e8d28adb5d175eb4733fed86337ed467d3b95ba233efb4c7aef880582b445c7e9de3f9a8beeee535122d0a2d71a529379b2d58880c6a65f9886bcab912d3",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "option",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SettingsConfig",
            "id": "interface-SettingsConfig-623a59f47e0d633300c463ee623347b73c7db8618edf4c201a88f39515b5c4fb5f5f6eae17fceb71294d509dd1306592fd4c486374e9969ca0790edb732b8733",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
            "properties": [
                {
                    "name": "selectedSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItemSize",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "singleGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StoryCity",
            "id": "interface-StoryCity-0d436ffe2601f689bd3d769b40cd81959cc826b0107d9c29d8340f7a76ec672376bd3ac2332c923b4c53a536ae9abd43737be86aa0e3e5d14852b8edcbff8463",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { Meta, Story } from '@storybook/angular/types-6-0';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { ZyfraSelectButtonModule } from './zyfra-select-button.module';\r\n\r\nexport default {\r\n  moduleId: module.id,\r\n  title: 'Buttons/SelectButton',\r\n  component: ZyfraSelectButtonComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, ZyfraSelectButtonModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-select-button.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\ninterface StoryCity {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nconst cities: StoryCity[] = [\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n];\r\n\r\nconst Template: Story<ZyfraSelectButtonComponent<StoryCity, string>> = (args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  options: cities,\r\n  optionLabel: 'name',\r\n  optionDisabled: 'inactive',\r\n  multiple: true,\r\n  optionValue: 'code',\r\n  disabled: false,\r\n  styleClass: 'selectbutton-default',\r\n};\r\n\r\nexport const DefaultMini = Template.bind({});\r\nDefaultMini.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-default p-selectbutton-mini',\r\n};\r\n\r\nexport const Danger = Template.bind({});\r\nDanger.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-danger',\r\n};\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ToolbarConfig",
            "id": "interface-ToolbarConfig-623a59f47e0d633300c463ee623347b73c7db8618edf4c201a88f39515b5c4fb5f5f6eae17fceb71294d509dd1306592fd4c486374e9969ca0790edb732b8733",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
            "properties": [
                {
                    "name": "closeAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "filesMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "rubricatorMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TToggleButtonClick",
            "id": "interface-TToggleButtonClick-dbbdd2e22d0e5701b32b8d6bc0d4303949fb38be4a2ad41b79d77fa8be1471592c779106b1aa4f260c7f6dc3cfa41e29690ae1ed8f5ba167d877548995c94067",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraAccordionOpenClose",
            "id": "interface-ZyfraAccordionOpenClose-2495929423a8a9ca5a4e2742b39dcec28447a01531bc845b76a2f2198ee4dc7c921f327f0eba0f646b9d26b6d40761b8ef2f58e52d1a4a0e18ac2fe1c5cf7dfe",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Accordion } from 'primeng/accordion';\r\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface ZyfraAccordionOpenClose {\r\n  originalEvent: PointerEvent;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion',\r\n  templateUrl: './zyfra-accordion.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: Accordion,\r\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\r\n      deps: [ZyfraAccordionComponent],\r\n    },\r\n  ],\r\n  //styleUrls: ['./zyfra-accordion.component.less'],\r\n  //encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\r\n  /** allow multiple tabs be active at the same time. */\r\n  @Input() multiple = false;\r\n  /** inline style */\r\n  @Input() style: { [key: string]: string | number | null };\r\n  /** css class */\r\n  @Input() styleClass: string;\r\n  /** expand icon class */\r\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\r\n  /** collapse icon class */\r\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\r\n\r\n  /** EventEmitter  */\r\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\r\n  /** EventEmitter on closing tab */\r\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n  /** EventEmitter on opening tab */\r\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n\r\n  /** primeng Accordion component */\r\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\r\n  /** zyfra AccordionTab component */\r\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\r\n\r\n  private tabs$: Subscription;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\r\n    this.reInitTab();\r\n  }\r\n\r\n  reInitTab(): void {\r\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\r\n    this.accordion.tabList.reset(primengAccordionTabs);\r\n    this.accordion.tabList.notifyOnChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabs$?.unsubscribe();\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraDatePickerLocaleInterface",
            "id": "interface-ZyfraDatePickerLocaleInterface-c8df545f280b13de0d391f34f7fb03f27136ec68448ced9a6487cb0f28f0b8d306d0c052535f9eb7c36070e73af99b2c67550ff16471e8c463c1d06b7f99ad60",
            "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraDatePickerLocaleInterface {\r\n  locale: Locale;\r\n}\r\n",
            "properties": [
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Locale",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppItem",
            "id": "interface-ZyfraMenuAppItem-48ff33f0303072fcaca19dc7522ae45e73730c80a9ec8dba8410f54202d55dba577b2d5d43db4fb6d40501e09dfaa82c779c87cb14451e1df679f41347894117",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransition",
            "id": "interface-ZyfraMenuAppTransition-48ff33f0303072fcaca19dc7522ae45e73730c80a9ec8dba8410f54202d55dba577b2d5d43db4fb6d40501e09dfaa82c779c87cb14451e1df679f41347894117",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "delay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "timingFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransitionSettings",
            "id": "interface-ZyfraMenuAppTransitionSettings-48ff33f0303072fcaca19dc7522ae45e73730c80a9ec8dba8410f54202d55dba577b2d5d43db4fb6d40501e09dfaa82c779c87cb14451e1df679f41347894117",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "close",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraMenuItem",
            "id": "interface-ZyfraMenuItem-4f2afd59658fc33b9c569e426d2a38bc38a160bd3b518758079a5a9a0596a651830816095638c32ce1db060229dff0df2bf6ae6feaf9b79732914c370655f578",
            "file": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { QueryParamsHandling } from '@angular/router';\r\n\r\nexport interface ZyfraMenuItem {\r\n  label?: string;\r\n  icon?: string;\r\n  command?: (event?: any) => void;\r\n  url?: string;\r\n  items?: ZyfraMenuItem[];\r\n  expanded?: boolean;\r\n  disabled?: boolean;\r\n  visible?: boolean;\r\n  target?: string;\r\n  escape?: boolean;\r\n  routerLinkActiveOptions?: any;\r\n  separator?: boolean;\r\n  badge?: string;\r\n  tooltip?: string;\r\n  tooltipPosition?: string;\r\n  badgeStyleClass?: string;\r\n  style?: any;\r\n  styleClass?: string;\r\n  title?: string;\r\n  id?: string;\r\n  automationId?: any;\r\n  tabindex?: string;\r\n  routerLink?: any;\r\n  queryParams?: {\r\n    [k: string]: any;\r\n  };\r\n  fragment?: string;\r\n  queryParamsHandling?: QueryParamsHandling;\r\n  preserveFragment?: boolean;\r\n  skipLocationChange?: boolean;\r\n  replaceUrl?: boolean;\r\n  state?: {\r\n    [k: string]: any;\r\n  };\r\n  tooltipOptions?: {\r\n    tooltipLabel?: string;\r\n    tooltipPosition?: string;\r\n    tooltipEvent?: string;\r\n    appendTo?: any;\r\n    positionStyle?: string;\r\n    tooltipStyleClass?: string;\r\n    tooltipZIndex?: string;\r\n    escape?: boolean;\r\n    disabled?: boolean;\r\n    positionTop?: number;\r\n    positionLeft?: number;\r\n    showDelay?: number;\r\n    hideDelay?: number;\r\n    life?: number;\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "automationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "badgeStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "command",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "escape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "fragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "preserveFragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "queryParamsHandling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryParamsHandling",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "replaceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "routerLinkActiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "separator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "skipLocationChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tooltipOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ZyfraTime",
            "id": "interface-ZyfraTime-75d7f021682c04405152dfff00c73952ee88b15cc4a3fc012dd1287d94a39fbb0480c3f73bb9970c5eac7823062a19010663d53d820867c3204b0f832481449b",
            "file": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraTime {\r\n  value: string;\r\n  date: Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "NavMenuService",
            "id": "injectable-NavMenuService-cb1ac2aaaee971a332b3940d654c98bb4ca40bf2a265f0552fdaf20007491e1f90ee5047d5a256d2755b183117aecc5dc5fea6b84234c684ea188d3ba384432d",
            "file": "libs/components/src/lib/nav-menu/service/selection.service.ts",
            "properties": [
                {
                    "name": "selection",
                    "defaultValue": "new BehaviorSubject<TreeNode>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection$",
                    "defaultValue": "this.selection.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "selectionChange",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Injectable()\r\nexport class NavMenuService {\r\n  private selection = new BehaviorSubject<TreeNode>(null);\r\n  selection$ = this.selection.asObservable();\r\n\r\n  selectionChange(node: TreeNode): void {\r\n    if (this.selection.value) {\r\n      this.selection.value.styleClass = '';\r\n    }\r\n    if (node) {\r\n      node.styleClass = 'active';\r\n    }\r\n    this.selection.next(node);\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "ZyfraDynamicDialogService",
            "id": "injectable-ZyfraDynamicDialogService-2e20522deec2bdc71f8d2679eb41fa1862bb8a85e4a732134192f279651ad9e99d564c6087eaaf870a089ada1d8751d2fc0cb80c927f18c7ffcd14fcf2b6d229",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogComponentRefMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<DynamicDialogRef | ComponentRef<DynamicDialogComponent>>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "appendDialogComponentToBody",
                    "args": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicDialogRef",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ZyfraDynamicDialogRef",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeDialogComponentFromBody",
                    "args": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector, Type } from '@angular/core';\r\nimport { DynamicDialogComponent, DynamicDialogConfig, DynamicDialogInjector, DynamicDialogRef } from 'primeng/dynamicdialog';\r\nimport { ZyfraDynamicDialogRef } from '.';\r\nimport { ZyfraDynamicDialogConfig } from './zyfra-dynamic-dialog-config';\r\n\r\n@Injectable()\r\nexport class ZyfraDynamicDialogService {\r\n\r\n  public dialogComponentRefMap: Map<DynamicDialogRef, ComponentRef<DynamicDialogComponent>> = new Map();\r\n  public config: ZyfraDynamicDialogConfig;\r\n  public ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector) { }\r\n\r\n  public open(componentType: Type<unknown>, config: ZyfraDynamicDialogConfig): ZyfraDynamicDialogRef {\r\n    const dialogRef = this.appendDialogComponentToBody(config);\r\n    this.config = config;\r\n    this.ref = dialogRef;\r\n    this.dialogComponentRefMap.get(dialogRef).instance.childComponentType = componentType;\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private appendDialogComponentToBody(config: DynamicDialogConfig): DynamicDialogRef {\r\n    const map = new WeakMap();\r\n    map.set(DynamicDialogConfig, config);\r\n\r\n    const dialogRef = new DynamicDialogRef();\r\n    map.set(DynamicDialogRef, dialogRef);\r\n\r\n    const sub = dialogRef.onClose.subscribe(() => {\r\n      this.dialogComponentRefMap.get(dialogRef).instance.close();\r\n    });\r\n\r\n    const destroySub = dialogRef.onDestroy.subscribe(() => {\r\n      this.removeDialogComponentFromBody(dialogRef);\r\n      destroySub.unsubscribe();\r\n      sub.unsubscribe();\r\n    });\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\r\n    const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\r\n\r\n    this.appRef.attachView(componentRef.hostView);\r\n\r\n    const domElem = (componentRef.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\r\n    document.body.appendChild(domElem);\r\n\r\n    this.dialogComponentRefMap.set(dialogRef, componentRef);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private removeDialogComponentFromBody(dialogRef: DynamicDialogRef): void {\r\n    if (!dialogRef || !this.dialogComponentRefMap.has(dialogRef)) {\r\n      return;\r\n    }\r\n\r\n    const dialogComponentRef = this.dialogComponentRefMap.get(dialogRef);\r\n    this.appRef.detachView(dialogComponentRef.hostView);\r\n    dialogComponentRef.destroy();\r\n    this.dialogComponentRefMap.delete(dialogRef);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ZyfraHintOverlayManager",
            "id": "injectable-ZyfraHintOverlayManager-e3b79f1ca35013309c252bc906f2d858862f936fb7dac53911e52ef7173acd5c856741f81b0808b1029ee117c7254b13f7fc38b60e478ab0909901881f6cb9e1",
            "file": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
            "properties": [
                {
                    "name": "className",
                    "defaultValue": "'zyfra-hint-overlay-container'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "innerContainer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "append",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ZyfraHintOverlayManager {\r\n  private innerContainer: HTMLElement = null;\r\n  private readonly className = 'zyfra-hint-overlay-container';\r\n  private renderer: Renderer2;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, rendererFactory: RendererFactory2) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  private get container(): HTMLElement {\r\n    if (!this.innerContainer) {\r\n      this.innerContainer = this.document.querySelector(`.${this.className}`);\r\n      if (!this.innerContainer) {\r\n        this.innerContainer = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.innerContainer, this.className);\r\n        this.renderer.setStyle(\r\n          this.innerContainer,\r\n          'cssText',\r\n          'position:fixed; top:0; left:0; width:100%; height:100%; pointer-events:none; z-index:99999;'\r\n        );\r\n        this.document.body.appendChild(this.innerContainer);\r\n      }\r\n    }\r\n    return this.innerContainer;\r\n  }\r\n\r\n  public create(): void {}\r\n\r\n  public append(element: HTMLElement): void {\r\n    this.container.appendChild(element);\r\n  }\r\n\r\n  public remove(element: HTMLElement): void {\r\n    this.container.removeChild(element);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "container": {
                    "name": "container",
                    "getSignature": {
                        "name": "container",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 16
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ZyfraDynamicDialogConfig",
            "id": "class-ZyfraDynamicDialogConfig-f8b7be20d4603ddadff59330a3dc71190aa401e7cb9f1beca8d4eba0321b79309d44adc7003e36d457da7f7b256b4c8ec5c12426b51b169394fec304846f6bb2",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\nexport class ZyfraDynamicDialogConfig extends DynamicDialogConfig { }\r\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogConfig",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraDynamicDialogRef",
            "id": "class-ZyfraDynamicDialogRef-fb96dfc38945814ed9864ccb417f12556f663f9c63aed63af6f277b29e73c3187bb13a3ee81491a609ef08c8c0c9ea0fec19bf8bd7d5708fd1d2a83761583a1c",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nexport class ZyfraDynamicDialogRef extends DynamicDialogRef { }\r\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogRef",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraHintOptionsModel",
            "id": "class-ZyfraHintOptionsModel-d98609294b0c4bed7e90c73aa3b027e8fc912735d40667608dfb33d33d4675aa49f4a53f3cb2776bda46b738a520996f722a1f3d1ce2a98b277de32549b60cc3",
            "file": "libs/components/src/lib/hint/zyfra-hint.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TemplateRef } from '@angular/core';\r\n\r\nexport class ZyfraHintOptionsModel {\r\n  left?: number;\r\n  top?: number;\r\n  className?: string;\r\n  content?: string | TemplateRef<any>;\r\n  context: Record<string, unknown>;\r\n}\r\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ZyfraAutofocusDirective",
            "id": "directive-ZyfraAutofocusDirective-6a7fbf62d48035b76918d7308e9e17ae7458375a2c8ddbb00318edb0feedde27e095edd7300af4c62fc7532e5e0cb254d790cd26f84e0d7ff57e585a3b338509",
            "file": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive, ElementRef,\r\n  Input, OnInit,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraAutofocus]'\r\n})\r\nexport class ZyfraAutofocusDirective implements OnInit {\r\n  @Input() set zyfraAutofocus(condition: boolean) {\r\n    this.focus = condition !== false;\r\n  }\r\n\r\n  private focus = true;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.focus) {\r\n      this.el.nativeElement.focus();\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[zyfraAutofocus]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraAutofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "focus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "zyfraAutofocus": {
                    "name": "zyfraAutofocus",
                    "setSignature": {
                        "name": "zyfraAutofocus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 10,
                        "jsdoctags": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraDropdownTemplateDirective",
            "id": "directive-ZyfraDropdownTemplateDirective-252e9c56f2b3a1803d9dd5f1cf0d06273781345d328bdaf2b1f81e772a523b21f20771cde5eeb742c4ad71ef66f967fbec95287fb32844e78397724cefbf1d51",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\ntype DropdownTemplateType = 'item' | 'group' | 'selectedItem' | 'header' | 'empty' | 'emptyfilter' | 'footer';\r\n\r\n@Directive({\r\n  selector: '[zyfraDropdownTemplate]',\r\n})\r\nexport class ZyfraDropdownTemplateDirective {\r\n  @Input() zyfraDropdownTemplate: DropdownTemplateType;\r\n\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n\r\n  get template() {\r\n    return this.templateRef;\r\n  }\r\n\r\n  public getType() {\r\n    return this.zyfraDropdownTemplate;\r\n  }\r\n}\r\n",
            "selector": "[zyfraDropdownTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraDropdownTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "DropdownTemplateType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "DropdownTemplateType",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "template": {
                    "name": "template",
                    "getSignature": {
                        "name": "template",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "ZyfraHintDirective",
            "id": "directive-ZyfraHintDirective-3619d6899b8c70fcc7f0c2707962afcd4f37897bfda3a83ee3d7143bdac3ed992efa6018d413be3610320d25b46f515a125e6225b3cb8d15f160b58847677198",
            "file": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  Directive,\r\n  Inject,\r\n  ComponentFactoryResolver,\r\n  Input,\r\n  ElementRef,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  HostListener,\r\n  Renderer2,\r\n} from '@angular/core';\r\nimport { ZyfraHintComponent } from './zyfra-hint.component';\r\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\r\n\r\n@Directive({\r\n  selector: '[zyfraHint]',\r\n  exportAs: 'zyfraHint',\r\n})\r\nexport class ZyfraHintDirective implements OnDestroy, OnChanges, AfterViewInit {\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    @Inject(ComponentFactoryResolver)\r\n    private resolver: ComponentFactoryResolver,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zyfraHintOverlayManager: ZyfraHintOverlayManager,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  @Input() zyfraHint: string | TemplateRef<any> = null;\r\n  @Input() zyfraHintContext: Record<string, unknown>;\r\n  @Input() zyfraHintDelay = 400;\r\n  @Input() hintClass: string | string[] = '';\r\n  @Input() zyfraShowHint = false;\r\n  @Input() position: 'left' | 'right' | 'above' | 'below' = 'right';\r\n  @Input() hasOverflowText: HTMLElement;\r\n\r\n  private hintStyle: string;\r\n  private mutationObserver: MutationObserver;\r\n  private componentFactory = this.resolver.resolveComponentFactory(ZyfraHintComponent);\r\n  private hintCmpRef: ComponentRef<ZyfraHintComponent> = null;\r\n  private hintElement: HTMLElement = null;\r\n  private coordinates = { left: 0, top: 0 };\r\n  private hintTimerId = null;\r\n\r\n  @HostListener('click', ['$event']) clickEvent(event: MouseEvent): void {\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener('mouseenter', ['$event']) mouseenter(event: MouseEvent): void {\r\n    if (!this.zyfraShowHint) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event']) mouseleave(event: MouseEvent): void {\r\n    if (!this.hintCmpRef) {\r\n      clearTimeout(this.hintTimerId);\r\n      this.zyfraShowHint = false;\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.zyfraShowHint) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.hintCmpRef) {\r\n      let wereChanges = false;\r\n\r\n      if (changes.position) {\r\n        const change = changes.position;\r\n\r\n        if (!change.firstChange) {\r\n          this._setHintClasses();\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (changes.zyfraHint) {\r\n        const change = changes.zyfraHint;\r\n        if (!change.firstChange) {\r\n          this.hintCmpRef.instance.options.content = change.currentValue;\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (wereChanges) {\r\n        this.hintCmpRef.changeDetectorRef.detectChanges();\r\n        this._setOptions();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setHintClasses(): void {\r\n    this.hintCmpRef.instance.hostClasses = `zyfra_hint ${this.position} ${this.hintClass} ${this.hintStyle}`;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.hintCmpRef) {\r\n      this.hintCmpRef.destroy();\r\n      this.hintCmpRef = null;\r\n    }\r\n    if (this.mutationObserver) {\r\n      this.mutationObserver.disconnect();\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.zyfraShowHint) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  public hintForOveflowText(): boolean {\r\n    return this.hasOverflowText ? this.hasOverflowText.offsetWidth < this.hasOverflowText.scrollWidth : true;\r\n  }\r\n\r\n  public show(): void {\r\n    if (this.zyfraHint && this.hintForOveflowText()) {\r\n      this._showHint();\r\n      this.zyfraShowHint = true;\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    clearTimeout(this.hintTimerId);\r\n    if (this.hintCmpRef) {\r\n      this.renderer.setStyle(this.hintCmpRef.location.nativeElement, 'animation', 'hintOut 0.3s');\r\n    }\r\n    this.zyfraShowHint = false;\r\n  }\r\n\r\n  private _setOptions(): void {\r\n    const viewPort: DOMRect = this.elementRef.nativeElement.getBoundingClientRect();\r\n    const elementHeight: number = viewPort.height;\r\n    const elementWidth: number = viewPort.width;\r\n    const hintBoundingClientRect: DOMRect = this.hintElement.getBoundingClientRect();\r\n    const hintHeight = hintBoundingClientRect.height;\r\n    const hintWidth = hintBoundingClientRect.width;\r\n    const margin = 12;\r\n\r\n    this._setPosition(hintHeight, elementHeight, viewPort, margin, hintWidth);\r\n\r\n    this._setCoordinatesLeftAndTop(hintHeight, elementHeight, viewPort, margin, hintWidth, elementWidth);\r\n\r\n    this.hintCmpRef.instance.options.left = this.coordinates.left;\r\n    this.hintCmpRef.instance.options.top = this.coordinates.top;\r\n    this._setHintClasses();\r\n    this.hintCmpRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  private _setPosition(\r\n    hintHeight: number,\r\n    elementHeight: number,\r\n    viewPort: DOMRect,\r\n    margin: number,\r\n    hintWidth: number\r\n  ): void {\r\n    switch (this.position) {\r\n      case 'left':\r\n        if (viewPort.left < hintWidth + margin) {\r\n          this.position = 'right';\r\n        }\r\n        break;\r\n      case 'right':\r\n        if (window.innerWidth - viewPort.right < hintWidth + margin) {\r\n          this.position = 'left';\r\n        }\r\n        break;\r\n      case 'above':\r\n        if (viewPort.top < hintHeight + margin) {\r\n          this.position = 'below';\r\n        }\r\n        break;\r\n      case 'below':\r\n        if (window.innerHeight - (viewPort.top + elementHeight) < hintHeight + margin) {\r\n          this.position = 'above';\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _setCoordinatesLeftAndTop(\r\n    hintHeight: number,\r\n    elementHeight: number,\r\n    viewPort: DOMRect,\r\n    margin: number,\r\n    hintWidth: number,\r\n    elementWidth: number\r\n  ): void {\r\n    switch (this.position) {\r\n      case 'right': {\r\n        if (hintHeight <= elementHeight) {\r\n          this.coordinates.top = viewPort.top;\r\n        } else {\r\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\r\n        }\r\n        this.coordinates.left = viewPort.right + margin;\r\n        break;\r\n      }\r\n      case 'left': {\r\n        if (hintHeight <= elementHeight) {\r\n          this.coordinates.top = viewPort.top;\r\n        } else {\r\n          this.coordinates.top = viewPort.top - (hintHeight - elementHeight) / 2;\r\n        }\r\n        this.coordinates.left = viewPort.left - hintWidth - margin;\r\n        break;\r\n      }\r\n      case 'above': {\r\n        if (elementWidth >= hintWidth) {\r\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\r\n        } else if (viewPort.left < hintWidth / 2) {\r\n          this.coordinates.left = viewPort.left;\r\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\r\n          this.coordinates.left = viewPort.left - hintWidth / 2;\r\n        } else {\r\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\r\n        }\r\n\r\n        this.coordinates.top = viewPort.top - hintHeight - margin;\r\n        break;\r\n      }\r\n      case 'below': {\r\n        if (elementWidth >= hintWidth) {\r\n          this.coordinates.left = viewPort.left + (elementWidth - hintWidth) / 2;\r\n        } else if (viewPort.left < hintWidth / 2) {\r\n          this.coordinates.left = viewPort.left;\r\n        } else if (viewPort.left + hintWidth >= window.innerWidth) {\r\n          this.coordinates.left = viewPort.left - hintWidth / 2;\r\n        } else {\r\n          this.coordinates.left = viewPort.left - (hintWidth - elementWidth) / 2;\r\n        }\r\n        this.coordinates.top = viewPort.bottom + margin;\r\n        break;\r\n      }\r\n      default: {\r\n        this.coordinates.left = viewPort.right + margin;\r\n        this.coordinates.top = viewPort.top;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _showHint(): void {\r\n    this.hintTimerId = setTimeout(() => {\r\n      this.zyfraHintOverlayManager.create();\r\n\r\n      this.hintCmpRef = this.viewContainerRef.createComponent(this.componentFactory);\r\n      this.hintStyle = '';\r\n      this.hintCmpRef.instance.options = {\r\n        left: -1000,\r\n        top: -1000,\r\n        content: this.zyfraHint,\r\n        context: this.zyfraHintContext,\r\n      };\r\n      this._setHintClasses();\r\n      this.hintElement = this.hintCmpRef.location.nativeElement;\r\n      this.zyfraHintOverlayManager.append(this.hintElement);\r\n\r\n      this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n        mutations.forEach((mutation: MutationRecord) => {\r\n          if (mutation.type === 'childList') {\r\n            this._setOptions();\r\n          }\r\n        });\r\n      });\r\n\r\n      this.mutationObserver.observe(this.hintElement, {\r\n        childList: true,\r\n      });\r\n\r\n      this.hintCmpRef.instance.close.subscribe(() => {\r\n        this.hintCmpRef.destroy();\r\n        this.hintCmpRef = null;\r\n\r\n        if (this.mutationObserver) {\r\n          this.mutationObserver.disconnect();\r\n        }\r\n      });\r\n      this._setOptions();\r\n      this.hintCmpRef.changeDetectorRef.detectChanges();\r\n    }, this.zyfraHintDelay);\r\n  }\r\n}\r\n",
            "selector": "[zyfraHint]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "hasOverflowText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "HTMLElement",
                    "decorators": []
                },
                {
                    "name": "hintClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | string[]",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\"",
                    "decorators": []
                },
                {
                    "name": "zyfraHint",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "zyfraHintContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Record<string | >",
                    "decorators": []
                },
                {
                    "name": "zyfraHintDelay",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "zyfraShowHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentFactory",
                    "defaultValue": "this.resolver.resolveComponentFactory(ZyfraHintComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinates",
                    "defaultValue": "{ left: 0, top: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintCmpRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<ZyfraHintComponent>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hintTimerId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "mutationObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_setCoordinatesLeftAndTop",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setHintClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setPosition",
                    "args": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "hintHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewPort",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "margin",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hintWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_showHint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hintForOveflowText",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnDestroy",
                "OnChanges",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zyfraHintOverlayManager",
                        "type": "ZyfraHintOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraNavMenuGroupDirective",
            "id": "directive-ZyfraNavMenuGroupDirective-8ce5780491b2e68ded1ef6427fdcd36700df465b6eb9eba657a26dfc5b7718bf9fd4715ea4dcddc3f0b5b15904447af008ce4fefdda9ba9efbaf1bda58c84dde",
            "file": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { ZyfraMenuItem } from '../model/zyfra-menu-item.interface';\r\n@Directive({\r\n  selector: '[zyfraNavMenuGroup]'\r\n})\r\nexport class ZyfraNavMenuGroupDirective {\r\n  @Input() items: ZyfraMenuItem[] = [];\r\n  @Input() header: string;\r\n}\r\n",
            "selector": "[zyfraNavMenuGroup]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "ZyfraMenuItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraSplitterTemplateDirective",
            "id": "directive-ZyfraSplitterTemplateDirective-e09ad0cb5c726becc70445c4afb7e57e9ec23c6d90982ce1226803bc152b0c9adade6f78449679bf4d3f45fd7d1787dbd8572179c139fc5eece89e0d462f8c45",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraSplitterTemplate]',\r\n})\r\nexport class ZyfraSplitterTemplateDirective {\r\n  @Input() type: string;\r\n\r\n  constructor(public template: TemplateRef<any>) {}\r\n}\r\n",
            "selector": "[zyfraSplitterTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTemplateDirective",
            "id": "directive-ZyfraTemplateDirective-a2394be448166f095b70aed2266d8851e2c61adb42d0baf0db7e95dc176c05c3ad147c2494c0f96a4c052c0b72187adc588825fc85679769bfc2bd0087e24023",
            "file": "libs/components/src/lib/@shared/zyfra-template.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraTemplate]',\r\n})\r\nexport class ZyfraTemplateDirective {\r\n  @Input() zyfraTemplate: string;\r\n\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n",
            "selector": "[zyfraTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "ExampleDynamicDialogComponent",
            "id": "component-ExampleDynamicDialogComponent-56ba2b3dae56619ec493a6857ac5351ee269f27d16172ad9738f3a5cb06b5435bee4635b69084fade7b392683e7bc8fb1d1a21f69ae161ee1bcbd4bb425cca86",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  user component\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\n\r\n@Component({\r\n  selector: 'storybook-dynamic-dialog',\r\n  template: `\r\n  <zyfra-button (click)=\"open()\"\r\n                label=\"open dialog\"\r\n                icon=\"pi pi-check\"></zyfra-button>\r\n  `,\r\n  providers: [ZyfraDynamicDialogService]\r\n})\r\nclass ZyfraDynamicDialogComponent implements OnDestroy {\r\n\r\n  @Input() set data(data: unknown) {\r\n    this.options.data = data;\r\n  }\r\n  @Input() set header(header: string) {\r\n    this.options.header = header;\r\n  }\r\n  @Input() set footer(footer: string) {\r\n    this.options.footer = footer;\r\n  }\r\n  @Input() set width(width: string) {\r\n    this.options.width = width;\r\n  }\r\n  @Input() set height(height: string) {\r\n    this.options.height = height;\r\n  }\r\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\r\n    this.options.closeOnEscape = closeOnEscape;\r\n  }\r\n  @Input() set baseZIndex(baseZIndex: number) {\r\n    this.options.baseZIndex = baseZIndex;\r\n  }\r\n  @Input() set autoZIndex(autoZIndex: boolean) {\r\n    this.options.autoZIndex = autoZIndex;\r\n  }\r\n  @Input() set dismissableMask(dismissableMask: boolean) {\r\n    this.options.dismissableMask = dismissableMask;\r\n  }\r\n  @Input() set rtl(rtl: boolean) {\r\n    this.options.rtl = rtl;\r\n  }\r\n  @Input() set style(style: string) {\r\n    this.options.style = style;\r\n  }\r\n  @Input() set contentStyle(contentStyle: string) {\r\n    this.options.contentStyle = contentStyle;\r\n  }\r\n  @Input() set styleClass(styleClass: string) {\r\n    this.options.styleClass = styleClass;\r\n  }\r\n  @Input() set transitionOptions(transitionOptions: string) {\r\n    this.options.transitionOptions = transitionOptions;\r\n  }\r\n  @Input() set closable(closable: boolean) {\r\n    this.options.closable = closable;\r\n  }\r\n  @Input() set showHeader(showHeader: boolean) {\r\n    this.options.showHeader = showHeader;\r\n  }\r\n\r\n  public options: ZyfraDynamicDialogConfig = {};\r\n\r\n  private ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\r\n\r\n  public open(): void {\r\n    this.ref = this.dynamicDialogService.open(\r\n      ExampleDynamicDialogComponent, this.options\r\n    );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.ref) {\r\n      this.ref.close();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <div>\r\n    user component\r\n  </div>`\r\n})\r\nclass ExampleDynamicDialogComponent { }\r\n\r\nexport default {\r\n  title: 'Dialogs/DynamicDialog',\r\n  component: ZyfraDynamicDialogComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        ZyfraDynamicDialogComponent,\r\n        ExampleDynamicDialogComponent\r\n      ],\r\n      imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        ZyfraButtonModule,\r\n        ZyfraDynamicDialogModule\r\n      ],\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n});\r\n\r\n\r\nexport const Simple = Template.bind({});\r\nSimple.args = {\r\n  data: 'Some data',\r\n  header: \"Header\",\r\n  footer: \"Footer\",\r\n  width: \"500px\",\r\n  height: \"200px\",\r\n  closeOnEscape: false,\r\n  baseZIndex: 0,\r\n  autoZIndex: false,\r\n  dismissableMask: false,\r\n  rtl: false,\r\n  style: '',\r\n  contentStyle: '',\r\n  styleClass: '',\r\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n  closable: true,\r\n  showHeader: true\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IconComponents",
            "id": "component-IconComponents-1388bfab85f8d48e8138af4b53faeb92d8da674543ad1e8d3325c57038b407187651790d06ae54b70fc18910f69d4c07987c077ba7467cf4c67d8ad0c76461e4",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    "
            ],
            "template": "<div *ngFor=\"let def of defs\">\n  <h4>{{ def.dir }}</h4>\n\n  <div class=\"icons\">\n    <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n      <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n      <div class=\"name\">{{ name }}</div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defs",
                    "defaultValue": "IconDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraIconComponent } from './zyfra-icon.component';\r\nimport { IconDefs } from './story/icon-definitions';\r\n\r\n//@ts-ignore\r\nimport doc from './zyfra-icon.component.story.doc.mdx';\r\n\r\n@Component({\r\n  template: `\r\n    <div *ngFor=\"let def of defs\">\r\n      <h4>{{ def.dir }}</h4>\r\n\r\n      <div class=\"icons\">\r\n        <div *ngFor=\"let name of def.data\" class=\"icon-def\">\r\n          <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\r\n          <div class=\"name\">{{ name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        font-family: Inter;\r\n      }\r\n\r\n      h4 {\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .icons {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      }\r\n\r\n      .icon-def {\r\n        display: flex;\r\n        width: 90px;\r\n        height: 90px;\r\n        max-width: 90px;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: 4px;\r\n        padding-top: 8px;\r\n      }\r\n\r\n      .icon-def:hover {\r\n        background-color: #eeeeee99;\r\n      }\r\n\r\n      .icon {\r\n        font-size: 24px;\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n\r\n      .name {\r\n        font-size: 12px;\r\n        text-align: center;\r\n        margin-top: 12px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nclass IconComponents {\r\n  defs = IconDefs;\r\n}\r\n\r\nexport default {\r\n  title: 'Icons/IconComponent',\r\n  component: IconComponents,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule],\r\n      declarations: [ZyfraIconComponent],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: doc,\r\n    },\r\n  },\r\n} as Meta<ZyfraIconComponent>;\r\n\r\nconst Template: Story<IconComponents> = (args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n});\r\n\r\nexport const IconsSet = Template.bind({});\r\nIconsSet.args = {};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    \n"
        },
        {
            "name": "Page1Component",
            "id": "component-Page1Component-f8d8ec661f6c76a4594526f5202d8d3bebd701a07b8b2df971a345756b0c68186b8c02547c5156a9f504dcdfe5f674c90d1135ea3943b0799eefa42694497ffa",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 1",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateDirective } from '../@shared/zyfra-template.directives';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraSharedModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page2Component",
            "id": "component-Page2Component-f8d8ec661f6c76a4594526f5202d8d3bebd701a07b8b2df971a345756b0c68186b8c02547c5156a9f504dcdfe5f674c90d1135ea3943b0799eefa42694497ffa",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 2",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateDirective } from '../@shared/zyfra-template.directives';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraSharedModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page3Component",
            "id": "component-Page3Component-f8d8ec661f6c76a4594526f5202d8d3bebd701a07b8b2df971a345756b0c68186b8c02547c5156a9f504dcdfe5f674c90d1135ea3943b0799eefa42694497ffa",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 3",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateDirective } from '../@shared/zyfra-template.directives';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraSharedModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "WrapperComponent",
            "id": "component-WrapperComponent-f8d8ec661f6c76a4594526f5202d8d3bebd701a07b8b2df971a345756b0c68186b8c02547c5156a9f504dcdfe5f674c90d1135ea3943b0799eefa42694497ffa",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateDirective } from '../@shared/zyfra-template.directives';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraSharedModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "ZyfraAccordionComponent",
            "id": "component-ZyfraAccordionComponent-2495929423a8a9ca5a4e2742b39dcec28447a01531bc845b76a2f2198ee4dc7c921f327f0eba0f646b9d26b6d40761b8ef2f58e52d1a4a0e18ac2fe1c5cf7dfe",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion, deps: [ZyfraAccordionComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion"
                }
            ],
            "selector": "zyfra-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collapseIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ncollapse icon class",
                    "description": "<p>collapse icon class</p>\n",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expandIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nexpand icon class",
                    "description": "<p>expand icon class</p>\n",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nallow multiple tabs be active at the same time.",
                    "description": "<p>allow multiple tabs be active at the same time.</p>\n",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ninline style",
                    "description": "<p>inline style</p>\n",
                    "line": 41,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ncss class",
                    "description": "<p>css class</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter",
                    "description": "<p>EventEmitter</p>\n",
                    "line": 50,
                    "type": "EventEmitter<number | []>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on closing tab",
                    "description": "<p>EventEmitter on closing tab</p>\n",
                    "line": 52,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                },
                {
                    "name": "onOpen",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on opening tab",
                    "description": "<p>EventEmitter on opening tab</p>\n",
                    "line": 54,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Accordion",
                    "optional": false,
                    "description": "<p>primeng Accordion component</p>\n",
                    "line": 57,
                    "rawdescription": "\nprimeng Accordion component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Accordion, {static: true}"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraAccordionTabComponent>",
                    "optional": false,
                    "description": "<p>zyfra AccordionTab component</p>\n",
                    "line": 59,
                    "rawdescription": "\nzyfra AccordionTab component",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "name": "tabs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reInitTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Accordion } from 'primeng/accordion';\r\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface ZyfraAccordionOpenClose {\r\n  originalEvent: PointerEvent;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion',\r\n  templateUrl: './zyfra-accordion.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: Accordion,\r\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent) => zyfraAccordion.accordion,\r\n      deps: [ZyfraAccordionComponent],\r\n    },\r\n  ],\r\n  //styleUrls: ['./zyfra-accordion.component.less'],\r\n  //encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy {\r\n  /** allow multiple tabs be active at the same time. */\r\n  @Input() multiple = false;\r\n  /** inline style */\r\n  @Input() style: { [key: string]: string | number | null };\r\n  /** css class */\r\n  @Input() styleClass: string;\r\n  /** expand icon class */\r\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\r\n  /** collapse icon class */\r\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\r\n\r\n  /** EventEmitter  */\r\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\r\n  /** EventEmitter on closing tab */\r\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n  /** EventEmitter on opening tab */\r\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n\r\n  /** primeng Accordion component */\r\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\r\n  /** zyfra AccordionTab component */\r\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\r\n\r\n  private tabs$: Subscription;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\r\n    this.reInitTab();\r\n  }\r\n\r\n  reInitTab(): void {\r\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\r\n    this.accordion.tabList.reset(primengAccordionTabs);\r\n    this.accordion.tabList.notifyOnChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabs$?.unsubscribe();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<p-accordion\r\n  [multiple]=\"multiple\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [expandIcon]=\"expandIcon\"\r\n  [collapseIcon]=\"collapseIcon\"\r\n  (activeIndexChange)=\"activeIndexChange.emit($event)\"\r\n  (onOpen)=\"onOpen.emit($event)\"\r\n  (onClose)=\"onClose.emit($event)\"\r\n>\r\n  <ng-content></ng-content>\r\n</p-accordion>\r\n"
        },
        {
            "name": "ZyfraAccordionTabComponent",
            "id": "component-ZyfraAccordionTabComponent-bf7341aa7487b670c3a05437495e6b83e6d21734424c1463b63373b2c6a90c83a2333cf9a8a6b06709533c317329074b1182dda73117cb75f054d0ebc248921a",
            "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-accordion-tab",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: contents;\n      }\n    "
            ],
            "templateUrl": [
                "./zyfra-accordion-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhether a lazy loaded panel should avoid getting loaded again on reselection",
                    "description": "<p>Whether a lazy loaded panel should avoid getting loaded again on reselection</p>\n",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDefines whether the tab can be selected",
                    "description": "<p>Defines whether the tab can be selected</p>\n",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTitle of the tab",
                    "description": "<p>Title of the tab</p>\n",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDefines if the tab is active",
                    "description": "<p>Defines if the tab is active</p>\n",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nTransition options of the animation",
                    "description": "<p>Transition options of the animation</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ntab activeness",
                    "description": "<p>tab activeness</p>\n",
                    "line": 41,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "headerFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "iconsFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionTab",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AccordionTab"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective[]",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ZyfraTemplateDirective } from '../../@shared/zyfra-template.directives';\r\nimport { AccordionTab } from 'primeng/accordion';\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion-tab',\r\n  templateUrl: './zyfra-accordion-tab.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: contents;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ZyfraAccordionTabComponent implements AfterContentInit, AfterViewInit {\r\n  /** Title of the tab */\r\n  @Input() header: string;\r\n  /** Defines whether the tab can be selected */\r\n  @Input() disabled: boolean;\r\n  /** Whether a lazy loaded panel should avoid getting loaded again on reselection */\r\n  @Input() cache = true;\r\n  /** Transition options of the animation */\r\n  @Input() transitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n  /** Defines if the tab is active */\r\n  @Input() selected: boolean;\r\n  /** tab activeness */\r\n  @Output() selectedChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChildren(ZyfraTemplateDirective) tmpl: ZyfraTemplateDirective[];\r\n  @ViewChild(AccordionTab) tab: AccordionTab;\r\n\r\n  headerFacet: TemplateRef<any>;\r\n  contentFacet: TemplateRef<any>;\r\n  iconsFacet: TemplateRef<any>;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.tmpl.forEach((t) => {\r\n      if (t.zyfraTemplate === 'header') {\r\n        this.headerFacet = t.templateRef;\r\n      } else if (t.zyfraTemplate === 'icons') {\r\n        this.iconsFacet = t.templateRef;\r\n      } else {\r\n        this.contentFacet = t.templateRef;\r\n      }\r\n    });\r\n    if (!!this.iconsFacet && !this.headerFacet) {\r\n      throw new Error('icon template can only be used with header template');\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: contents;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit"
            ],
            "templateData": "<p-accordionTab\r\n  [disabled]=\"disabled\"\r\n  [header]=\"header\"\r\n  [cache]=\"cache\"\r\n  [selected]=\"selected\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  (selectedChange)=\"selectedChange.emit($event)\"\r\n>\r\n  <ng-template pTemplate=\"header\" *ngIf=\"!!headerFacet\">\r\n    <div [class.zyfra-accordion-header__left]=\"!!iconsFacet\">\r\n      <ng-container *ngTemplateOutlet=\"headerFacet\"></ng-container>\r\n      <div class=\"zyfra-accordion-header-extra-icons\" *ngIf=\"!!iconsFacet\">\r\n        <ng-container *ngTemplateOutlet=\"iconsFacet\"></ng-container>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"content\" *ngIf=\"!!contentFacet; else noContentFacet\">\r\n    <ng-container *ngTemplateOutlet=\"contentFacet\"></ng-container>\r\n  </ng-template>\r\n  <ng-template #noContentFacet>\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</p-accordionTab>\r\n"
        },
        {
            "name": "ZyfraAutoCompleteComponent",
            "id": "component-ZyfraAutoCompleteComponent-65fe903965ff5c63bea0b59556fa4129b25445bd74900d252d47efa8562cbcf45556c72f53fb8580baca0f9abd62e42cc0848617c4b0db8a74629cf0027d05a0",
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-auto-complete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-auto-complete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autoHighlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "completeOnFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "delay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dropdownMode",
                    "defaultValue": "'blank'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "forceSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "immutable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "itemSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionGroupLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showEmptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "suggestions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unique",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "completeMethod",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClear",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeyUp",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'zyfra-auto-complete',\r\n  templateUrl: './zyfra-auto-complete.component.html',\r\n})\r\nexport class ZyfraAutoCompleteComponent<T = unknown> {\r\n  @Input() value: any;\r\n  @Input() suggestions: any[];\r\n  @Input() field: any;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() dropdown: boolean;\r\n  @Input() multiple: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() minLength = 1;\r\n  @Input() delay = 300;\r\n  @Input() completeOnFocus: boolean;\r\n  @Input() style: string;\r\n  @Input() inputStyle: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() optionGroupLabel: string;\r\n  @Input() group: boolean;\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() placeholder: string;\r\n  @Input() readonly: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() size: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() dataKey: string;\r\n  @Input() autoHighlight: boolean;\r\n  @Input() type = 'text';\r\n  @Input() showEmptyMessage: boolean;\r\n  @Input() emptyMessage = 'No records found.';\r\n  @Input() immutable = true;\r\n  @Input() required: boolean;\r\n  @Input() autofocus: boolean;\r\n  @Input() forceSelection: boolean;\r\n  @Input() dropdownMode = 'blank';\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() unique = true;\r\n  @Input() autocomplete: string;\r\n  @Input() virtualScroll: boolean;\r\n  @Input() itemSize: number;\r\n  @Input() label = '';\r\n\r\n  @Output() completeMethod = new EventEmitter<unknown>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onKeyUp = new EventEmitter<KeyboardEvent>();\r\n  @Output() onSelect = new EventEmitter<T>();\r\n  @Output() onUnselect = new EventEmitter<unknown>();\r\n  @Output() onDropdownClick = new EventEmitter<PointerEvent>();\r\n  @Output() onClear = new EventEmitter<InputEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<void>();\r\n  @Output() valueChange = new EventEmitter<T>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-autoComplete\r\n    [(ngModel)]=\"value\"\r\n    [suggestions]=\"suggestions\"\r\n    [field]=\"field\"\r\n    [scrollHeight]=\"scrollHeight\"\r\n    [dropdown]=\"dropdown\"\r\n    [multiple]=\"multiple\"\r\n    [dropdownIcon]=\"dropdownIcon\"\r\n    [minLength]=\"minLength\"\r\n    [delay]=\"delay\"\r\n    [completeOnFocus]=\"completeOnFocus\"\r\n    [style]=\"style\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [inputId]=\"inputId\"\r\n    [name]=\"name\"\r\n    [optionGroupLabel]=\"optionGroupLabel\"\r\n    [group]=\"group\"\r\n    [optionGroupChildren]=\"optionGroupChildren\"\r\n    [placeholder]=\"placeholder\"\r\n    [readonly]=\"readonly\"\r\n    [disabled]=\"disabled\"\r\n    [maxlength]=\"maxlength\"\r\n    [size]=\"size\"\r\n    [appendTo]=\"appendTo\"\r\n    [tabindex]=\"tabindex\"\r\n    [dataKey]=\"dataKey\"\r\n    [autoHighlight]=\"autoHighlight\"\r\n    [type]=\"type\"\r\n    [showEmptyMessage]=\"showEmptyMessage\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [required]=\"required\"\r\n    [autofocus]=\"autofocus\"\r\n    [forceSelection]=\"forceSelection\"\r\n    [dropdownMode]=\"dropdownMode\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [unique]=\"unique\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [virtualScroll]=\"virtualScroll\"\r\n    [itemSize]=\"itemSize\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    (completeMethod)=\"completeMethod.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onKeyUp)=\"onKeyUp.emit($event)\"\r\n    (onSelect)=\"onSelect.emit($event)\"\r\n    (onUnselect)=\"onUnselect.emit($event)\"\r\n    (onDropdownClick)=\"onDropdownClick.emit($event)\"\r\n    (onClear)=\"onClear.emit($event)\"\r\n    (onShow)=\"onShow.emit($event)\"\r\n    (onHide)=\"onHide.emit($event)\"\r\n  >\r\n    <div *ngIf=\"dropdown\">\r\n      <ng-template let-obj pTemplate=\"item\">\r\n        <div>{{ obj[field] }}</div>\r\n      </ng-template>\r\n    </div>\r\n  </p-autoComplete>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraBreadcrumbComponent",
            "id": "component-ZyfraBreadcrumbComponent-af62563a050c49c38b9da76100f9b6c44a7e9aeb25a2834e69241224d8777151f69a1e794887b37edce94e123333ae055ffcc5f61e4420b14e8b3faa450d2669",
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "home",
                    "defaultValue": "{ icon: 'zyfra-icon social-home-breadcrumbs' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MenuItem",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<ItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\ntype ItemClickEvent = { originalEvent: Event; item: MenuItem };\r\n\r\n@Component({\r\n  selector: 'zyfra-breadcrumb',\r\n  templateUrl: './zyfra-breadcrumb.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraBreadcrumbComponent {\r\n  @Input() items: MenuItem[] = [];\r\n  @Input() home: MenuItem = { icon: 'zyfra-icon social-home-breadcrumbs' };\r\n  @Input() style: string = null;\r\n  @Input() styleClass: string = null;\r\n\r\n  @Output() onItemClick = new EventEmitter<ItemClickEvent>();\r\n\r\n  onItemClickHandler(event: ItemClickEvent): void {\r\n    this.onItemClick.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-breadcrumb\r\n  [model]=\"items\"\r\n  [home]=\"home\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  (onItemClick)=\"onItemClickHandler($event)\"\r\n></p-breadcrumb>\r\n"
        },
        {
            "name": "ZyfraButtonComponent",
            "id": "component-ZyfraButtonComponent-674cc126b2c0b4476b76a55f22d0895fe42340ad5411689d130552e68623881c0c99848313993a6ffe44d97411c31cc98e92e234131a938fab672283e06d5443",
            "file": "libs/components/src/lib/button/zyfra-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TZyfraButtonIconPosision",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "blur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\n\r\nexport type TZyfraButtonIconPosision = 'left' | 'right' | 'top' | 'bottom';\r\n\r\n@Component({\r\n  selector: 'zyfra-button',\r\n  templateUrl: './zyfra-button.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraButtonComponent {\r\n  @Input() label: string;\r\n  @Input() type = 'button';\r\n  @Input() icon: string;\r\n  @Input() iconPos: TZyfraButtonIconPosision = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() badge: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n\r\n  // останавливаю всплытие клика (именно так. через HostListener не работает)\r\n  nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  click(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  focus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  blur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-button\r\n  [type]=\"type\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [badge]=\"badge\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"click($event)\"\r\n  (onFocus)=\"focus($event)\"\r\n  (onBlur)=\"blur($event)\"\r\n></p-button>\r\n"
        },
        {
            "name": "ZyfraCheckboxComponent",
            "id": "component-ZyfraCheckboxComponent-36893485446906049431708731ea4e6558727e9c58fe0e1b525597a8bf32edc599e76df804492382848c1762985465865f3471908611cdd625364b09d569a6ab",
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "binary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "checkboxIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  forwardRef,\r\n  Provider,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { Checkbox } from 'primeng/checkbox';\r\n\r\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'zyfra-checkbox',\r\n  templateUrl: './zyfra-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [CHECKBOX_VALUE_ACCESSOR],\r\n  styles: [],\r\n})\r\nexport class ZyfraCheckboxComponent extends Checkbox implements ControlValueAccessor {\r\n  @Input() binary = true;\r\n  @Input() checkboxIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() model: boolean;\r\n  @Input() disabled: boolean;\r\n  @Output() modelChange = new EventEmitter<boolean | null>();\r\n\r\n  constructor(cd: ChangeDetectorRef) {\r\n    super(cd);\r\n  }\r\n\r\n  onChangeHandler(event: { checked: boolean; originalEvent: PointerEvent }) {\r\n    if (this.formControl) {\r\n      this.formControl.setValue(event.checked);\r\n    } else {\r\n      this.model = event.checked;\r\n    }\r\n    this.modelChange.emit(this.model);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Checkbox",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-checkbox\r\n  [(ngModel)]=\"model\"\r\n  [name]=\"name\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [binary]=\"binary\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  [checkboxIcon]=\"checkboxIcon\"\r\n  [readonly]=\"readonly\"\r\n  [required]=\"required\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n></p-checkbox>\r\n"
        },
        {
            "name": "ZyfraChipComponent",
            "id": "component-ZyfraChipComponent-338eceb6ef742f97c52ff0dad538c5d7b0eeccbafc58e8cec1be65fc2a73aea8db467277b3fadbb185fc345d5173f921c52ebc9d7874437eb827b267d062f0cd",
            "file": "libs/components/src/lib/chip/zyfra-chip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "removeIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onRemove",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRemoveHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-chip',\r\n  templateUrl: './zyfra-chip.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraChipComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() image: string;\r\n  @Input() removable: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() removeIcon: string = 'zyfra-icon cancel-close';\r\n\r\n  /* onRemove */\r\n  @Output() onRemove: EventEmitter<any> = new EventEmitter();\r\n\r\n  onRemoveHandler(event) {\r\n    this.onRemove.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-chip\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [image]=\"image\"\r\n  [removable]=\"removable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [removeIcon]=\"removeIcon\"\r\n  (onRemove)=\"onRemoveHandler($event)\"\r\n></p-chip>\r\n"
        },
        {
            "name": "ZyfraConfirmDialogComponent",
            "id": "component-ZyfraConfirmDialogComponent-bd740be214080a0c0929fe2ddd548055ebe86fe3bf048868f66faf73e4a5944a3777795d02f43611cac49e920e1f9d052e6d400aeab1c5ea07fb8ec3c7ce64f9",
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                }
            ],
            "selector": "zyfra-confirm-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-confirm-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Function",
                    "decorators": []
                },
                {
                    "name": "acceptButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "acceptIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "acceptLabel",
                    "defaultValue": "'yes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "acceptMessages",
                    "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "blockScroll",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "object",
                    "decorators": []
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "closeOnEscape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "defaultFocus",
                    "defaultValue": "'accept'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "reject",
                    "defaultValue": "() => {}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Function",
                    "decorators": []
                },
                {
                    "name": "rejectButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rejectIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rejectLabel",
                    "defaultValue": "'no'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rejectMessages",
                    "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "rejectVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'400ms cubic-bezier(0.25, 0.8, 0.25, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHindler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { Message } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-confirm-dialog',\r\n  templateUrl: './zyfra-confirm-dialog.component.html',\r\n  styles: [],\r\n  providers: [ConfirmationService],\r\n})\r\nexport class ZyfraConfirmDialogComponent implements OnInit {\r\n  @Input() message: any = '';\r\n  @Input() key: string;\r\n  @Input() icon: string;\r\n  @Input() header: string = '';\r\n  @Input() accept: Function = () => {};\r\n  @Input() reject: Function = () => {};\r\n  @Input() acceptMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() rejectMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() acceptLabel: string = 'yes';\r\n  @Input() rejectLabel: string = 'no';\r\n  @Input() acceptIcon: string;\r\n  @Input() rejectIcon: string;\r\n  @Input() acceptButtonStyleClass: string;\r\n  @Input() rejectButtonStyleClass: string;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() rejectVisible: boolean = true;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() blockScroll: boolean = true;\r\n  @Input() closeOnEscape: boolean = true;\r\n  @Input() closable: boolean = true;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n  @Input() defaultFocus: string = 'accept';\r\n\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private confirmationService: ConfirmationService, private primengConfig: PrimeNGConfig) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClick(e) {\r\n    this.confirmationService.confirm({\r\n      message: this.message,\r\n      header: this.header,\r\n      icon: this.icon,\r\n      accept: () => {\r\n        this.msgs = this.acceptMessages;\r\n        this.accept();\r\n      },\r\n      reject: () => {\r\n        this.msgs = this.rejectMessages;\r\n        this.reject();\r\n      },\r\n    });\r\n  }\r\n\r\n  /* onHide */\r\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n  onHideHindler(event) {\r\n    this.onHide.emit(event);\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-confirmDialog\r\n  [message]=\"message\"\r\n  [key]=\"key\"\r\n  [icon]=\"icon\"\r\n  [header]=\"header\"\r\n  [acceptLabel]=\"acceptLabel\"\r\n  [rejectLabel]=\"rejectLabel\"\r\n  [acceptIcon]=\"acceptIcon\"\r\n  [rejectIcon]=\"rejectIcon\"\r\n  [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n  [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n  [acceptVisible]=\"acceptVisible\"\r\n  [rejectVisible]=\"rejectVisible\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [closable]=\"closable\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [appendTo]=\"appendTo\"\r\n  [defaultFocus]=\"defaultFocus\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  (onHide)=\"onHideHindler($event)\"\r\n></p-confirmDialog>\r\n"
        },
        {
            "name": "ZyfraDatepickerComponent",
            "id": "component-ZyfraDatepickerComponent-45ba9ffa6ae0d2a36bb1c3f479b97e4d494e518dfc37dc2aa662c0d11032074e5c8317118650da29c7b9ec22d7fa19a8a1fa9995fd83f188b3ffc53a814ec473",
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-datepicker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "calendarBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledDates",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "Date[]",
                    "decorators": []
                },
                {
                    "name": "disabledDays",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hideOnDateTimeSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "locale",
                    "defaultValue": "ZyfraLocale.ru",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "ZyfraLocale",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string | number | Date",
                    "decorators": []
                },
                {
                    "name": "monthNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "numberOfMonths",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "returnFormatValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "ZyfraDatePickerValueType",
                    "decorators": []
                },
                {
                    "name": "selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showCalendarBtn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showChangeMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showDate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showOnFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showWeek",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "timeMode",
                    "defaultValue": "ZyfraDatePickerMode.absolute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "ZyfraDatePickerMode",
                    "decorators": []
                },
                {
                    "name": "yearNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "yearRange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_defaultDateValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_defaultTimeValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "calendar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Calendar",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'calendar', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "controlRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentValueType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "DatePickerMode",
                    "defaultValue": "ZyfraDatePickerMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "datepickerValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datepickerValueShowBtn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dateValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultDateFormat",
                    "defaultValue": "'dd.MM.yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultTimeFormat",
                    "defaultValue": "'HH:mm:ss'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formatDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formattedValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formatTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "invalidDateMessage",
                    "defaultValue": "'Invalid date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "localeFns",
                    "defaultValue": "{\r\n    locale: ruFns,\r\n   }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDatePickerLocaleInterface",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "modes",
                    "defaultValue": "[\r\n    {\r\n      name: 'Абсолютное время',\r\n      value: ZyfraDatePickerMode.absolute,\r\n    },\r\n    {\r\n      name: 'Относительное время',\r\n      value: ZyfraDatePickerMode.relative,\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTime[]",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timestampFormat",
                    "defaultValue": "'x'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeControlState",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAbsoluteTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 324,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 300,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateFormattedValueFromCalendarValue",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateFormattedValueFromInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getCurrentValueType",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 571,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidatorRequiredControl",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValueOutput",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | number | Date",
                    "typeParameters": [],
                    "line": 533,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarDateChange",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 527,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDatepickerNgModelChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openCalendar",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnValidatorChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replaceSymbols",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 591,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCalendarDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFormattedValue",
                    "args": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 465,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInputTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLocalizationCalendar",
                    "args": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMode",
                    "args": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  OnChanges,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  AfterViewInit,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NgControl,\r\n} from '@angular/forms';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Calendar } from 'primeng/calendar';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { en } from './i18n/en_US';\r\nimport { ru } from './i18n/ru_RU';\r\nimport { isIsoDate } from './utils/is-iso-date';\r\nimport { generateTimeArray } from './utils/generate-time-array';\r\nimport { ZyfraDatePickerMode } from './model/zyfra-date-picker-mode.enum';\r\nimport { ZyfraLocale } from './model/zyfra-date-picker-locale.enum';\r\nimport { ZyfraDatePickerValueType } from './model/zyfra-date-picker-value-type.enum';\r\nimport { ZyfraTime } from './model/zyfra-time.model';\r\nimport { format, isValid, parse, parseISO } from 'date-fns';\r\nimport { ru as ruFns, enUS as enFns } from 'date-fns/esm/locale';\r\nimport { ZyfraDatePickerLocaleInterface } from './model/zyfra-date-picker.model';\r\n\r\n@Component({\r\n  selector: 'zyfra-datepicker',\r\n  templateUrl: './zyfra-datepicker.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraDatepickerComponent\r\n  implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n  readonly DatePickerMode = ZyfraDatePickerMode;\r\n\r\n  @Input() model: string | number | Date;\r\n  @Input() placeholder: string;\r\n  @Input() disabled: boolean;\r\n  @Input() required: boolean;\r\n  @Input() label: string;\r\n  @Input() spanClass: string;\r\n  @Input() timeMode: ZyfraDatePickerMode = ZyfraDatePickerMode.absolute;\r\n  @Input() showChangeMode: boolean;\r\n  @Input() showClear: boolean;\r\n  @Input() showDate: boolean = true;\r\n  @Input() showTime: boolean;\r\n  @Input() inputClass: string = '';\r\n  @Input() monthNavigator: boolean = false;\r\n  @Input() yearNavigator: boolean = false;\r\n  @Input() yearRange: string = null;\r\n  @Input() showCalendarBtn: boolean = true;\r\n  @Input() calendarBtnLabel: string;\r\n  @Input() hideOnDateTimeSelect: boolean = true;\r\n  @Input() numberOfMonths: number = 1;\r\n  @Input() selectionMode: string = 'single';\r\n  @Input() disabledDates: Date[] = null;\r\n  @Input() disabledDays: number[] = null;\r\n  @Input() firstDayOfWeek: number = 1;\r\n  @Input() showOnFocus: boolean = false;\r\n  @Input() showWeek: boolean = false;\r\n  @Input() locale: ZyfraLocale = ZyfraLocale.ru;\r\n  @Input() set dateFormat(formatDate: string) {\r\n    this.formatDate = this.replaceSymbols(formatDate) || this.defaultDateFormat;\r\n  }\r\n  @Input() set timeFormat(formatTime: string) {\r\n    this.formatTime = this.replaceSymbols(formatTime) || this.defaultTimeFormat;\r\n  }\r\n\r\n  @Input()\r\n  returnFormatValue: ZyfraDatePickerValueType;\r\n\r\n  // @Output() modelChange: EventEmitter<\r\n  //   string | number | Date | null\r\n  // > = new EventEmitter();\r\n\r\n  @ViewChild('calendar', { static: false }) private calendar: Calendar;\r\n\r\n  public controlRequired: boolean;\r\n  public readonly modes = [\r\n    {\r\n      name: 'Абсолютное время',\r\n      value: ZyfraDatePickerMode.absolute,\r\n    },\r\n    {\r\n      name: 'Относительное время',\r\n      value: ZyfraDatePickerMode.relative,\r\n    },\r\n  ];\r\n  public datepickerValue: Date;\r\n  public datepickerValueShowBtn: Date;\r\n  public timeArray: ZyfraTime[];\r\n  public formattedValue: string = '';\r\n  private currentValueType: string;\r\n  private _defaultDateValue: Date = null;\r\n  private _defaultTimeValue: Date = null;\r\n  private destroyed$: Subject<void> = new Subject<void>();\r\n  private defaultDateFormat = 'dd.MM.yyyy';\r\n  private defaultTimeFormat = 'HH:mm:ss';\r\n  private dateValue: string = '';\r\n  private invalidDateMessage: string = 'Invalid date';\r\n  private formatDate: string;\r\n  private formatTime: string;\r\n  private timeValue: string = '';\r\n  private timestampFormat: string = 'x';\r\n  private localeFns: ZyfraDatePickerLocaleInterface = {\r\n    locale: ruFns,\r\n   };\r\n\r\n  constructor(\r\n    @Self() @Optional() public ngControl: NgControl,\r\n    private primeNGConfig: PrimeNGConfig,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    if (ngControl) {\r\n      ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n  public registerOnValidatorChange?(fn: () => void): void {}\r\n\r\n  public onChange = (value: string | number | Date) => {};\r\n  public onTouched = (): void => {};\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public writeValue(outsideValue: string | number | Date | null): void {\r\n    this.model = outsideValue;\r\n    if (this.model) {\r\n      this.currentValueType = this.getCurrentValueType(this.model);\r\n    }\r\n    this.changeControlState(this.model);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.ngControl) {\r\n      this.getValidatorRequiredControl(this.ngControl);\r\n    }\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    if (this.ngControl) {\r\n      this.ngControl.statusChanges\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.showTime && changes.showTime.currentValue && this.formatTime) {\r\n      this.timeArray = generateTimeArray(this.formatTime);\r\n    }\r\n\r\n    if (changes.locale && changes.locale.currentValue) {\r\n      this.setLocalizationCalendar(changes.locale.currentValue);\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public openCalendar(event: Event): void {\r\n    this.calendar.onButtonClick(\r\n      event,\r\n      this.calendar.inputfieldViewChild.nativeElement\r\n    );\r\n    event.stopPropagation();\r\n  }\r\n\r\n  public setMode(mode: ZyfraDatePickerMode): void {\r\n    this.timeMode = mode;\r\n    this.clearValue();\r\n  }\r\n\r\n  public onDatepickerNgModelChange(event: string): void {\r\n    this.formattedValue = event;\r\n    if (this.timeMode === ZyfraDatePickerMode.absolute) {\r\n      this.checkAbsoluteTime();\r\n    }\r\n  }\r\n\r\n  public onCalendarDateChange(datepickerValue: Date): void {\r\n    if (!this.showCalendarBtn || this.hideOnDateTimeSelect) {\r\n      this.datepickerValue = datepickerValue;\r\n      this.generateFormattedValueFromCalendarValue(datepickerValue);\r\n    } else {\r\n      this.datepickerValueShowBtn = datepickerValue;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public onCalendarClose(): void {\r\n    if (this.showCalendarBtn && !this.hideOnDateTimeSelect) {\r\n      this.calendar.value = this.datepickerValue;\r\n    }\r\n  }\r\n\r\n  public saveCalendarDate(): void {\r\n    this.datepickerValue = this.datepickerValueShowBtn;\r\n    this.generateFormattedValueFromCalendarValue(this.datepickerValue);\r\n    this.cdr.detectChanges();\r\n    this.calendar.hideOverlay();\r\n  }\r\n\r\n  public onInputBlur(): void {\r\n    if (this.formattedValue && this.timeMode === ZyfraDatePickerMode.absolute) {\r\n      if (\r\n        this.dateValue === this.invalidDateMessage ||\r\n        this.timeValue === this.invalidDateMessage\r\n      ) {\r\n        this.formattedValue = '';\r\n        return;\r\n      }\r\n\r\n      if (this.showDate && this.showTime) {\r\n        this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n      } else if (this.showDate) {\r\n        this.formattedValue = this.dateValue;\r\n      } else if (this.showTime) {\r\n        this.formattedValue = this.timeValue;\r\n      }\r\n\r\n      if (isValid(parseISO(this.dateValue))) {\r\n        this.datepickerValue = parse(\r\n          this.dateValue,\r\n          this.formatDate,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n      }\r\n\r\n      this.datepickerValue = parse(this.dateValue, this.formatDate, new Date());\r\n\r\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\r\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\r\n      this.onChangeValue(\r\n        this.getValueOutput(\r\n          parse(dateValue, formatValue, new Date(), this.localeFns)\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  public setInputTime(time: ZyfraTime): void {\r\n    this._defaultTimeValue = time.date;\r\n    this.timeValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatTime,\r\n      this.localeFns\r\n    );\r\n    this.formattedValue = this.timeValue;\r\n    let fullFormatString = this.formatTime;\r\n\r\n    if (this.showDate) {\r\n      if (!this._defaultDateValue || !isValid(this._defaultDateValue)) {\r\n        this._defaultDateValue = new Date();\r\n        this.dateValue = format(\r\n          this._defaultDateValue,\r\n          this.formatDate,\r\n          this.localeFns\r\n        );\r\n      }\r\n\r\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n      fullFormatString = `${this.formatDate} ${this.formatTime}`;\r\n    }\r\n\r\n    this.onChangeValue(\r\n      this.getValueOutput(\r\n        parse(this.formattedValue, fullFormatString, new Date(), this.localeFns)\r\n      )\r\n    );\r\n  }\r\n\r\n  public clearValue(): void {\r\n    this.formattedValue = '';\r\n\r\n    if (this.ngControl && this.ngControl.control) {\r\n      this.ngControl.control.markAsDirty();\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n    this.datepickerValue = null;\r\n    this.datepickerValueShowBtn = null;\r\n    this.onChangeValue(null);\r\n  }\r\n\r\n  private getValidatorRequiredControl(ngControl: NgControl): void {\r\n    if (ngControl.control && ngControl.control.validator && this.label) {\r\n      const validators = ngControl.control.validator({} as AbstractControl);\r\n      this.controlRequired = validators && validators.required;\r\n    } else {\r\n      this.controlRequired = false;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private checkAbsoluteTime(): void {\r\n    if (!this.formattedValue) {\r\n      this._defaultDateValue = null;\r\n      this._defaultTimeValue = null;\r\n      this.dateValue = '';\r\n      this.timeValue = '';\r\n      this.onChangeValue(null);\r\n      return;\r\n    }\r\n\r\n    let validationString: string = '';\r\n\r\n    if (this.showDate) {\r\n      validationString += this.formatDate;\r\n    }\r\n\r\n    if (this.showTime) {\r\n      validationString += this.showDate\r\n        ? ` ${this.formatTime}`\r\n        : this.formatTime;\r\n    }\r\n\r\n    const newDate = parse(\r\n      this.formattedValue,\r\n      validationString,\r\n      new Date(),\r\n      this.localeFns\r\n    );\r\n\r\n    if (isValid(newDate)) {\r\n      if (this.showDate) {\r\n        this._defaultDateValue = newDate;\r\n        this.dateValue = format(newDate, this.formatDate, this.localeFns);\r\n      }\r\n      if (this.showTime) {\r\n        this.timeValue = format(newDate, this.formatTime, this.localeFns);\r\n      }\r\n    }\r\n  }\r\n\r\n  private generateFormattedValueFromCalendarValue(datepickerValue: Date): void {\r\n    this._defaultDateValue = datepickerValue;\r\n    this.dateValue = format(\r\n      this._defaultDateValue,\r\n      this.formatDate,\r\n      this.localeFns\r\n    );\r\n    this.formattedValue = this.dateValue;\r\n\r\n    if (!this._defaultTimeValue || !isValid(this._defaultTimeValue)) {\r\n      this._defaultTimeValue = this._defaultDateValue;\r\n    }\r\n\r\n    this.timeValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatTime,\r\n      this.localeFns\r\n    );\r\n\r\n    if (this.showTime) {\r\n      this.formattedValue += ` ${this.timeValue}`;\r\n    }\r\n\r\n    const dateValue = `${this.dateValue} ${this.timeValue}`;\r\n    const formatValue = `${this.formatDate} ${this.formatTime}`;\r\n    this.onChangeValue(\r\n      this.getValueOutput(\r\n        parse(dateValue, formatValue, new Date(), this.localeFns)\r\n      )\r\n    );\r\n  }\r\n\r\n  private generateFormattedValueFromInput(): void {\r\n    let dateParam: Date;\r\n\r\n    switch (this.currentValueType) {\r\n      case ZyfraDatePickerValueType.null:\r\n        this._defaultDateValue = null;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.timestamp:\r\n        dateParam = parse(\r\n          this.model as string,\r\n          this.timestampFormat,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = dateParam;\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.date:\r\n        dateParam = this.model as Date;\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = this.model as Date;\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.string:\r\n        dateParam = parse(\r\n          this.model as string,\r\n          this.formatDate,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = dateParam;\r\n        }\r\n        const formatPattern = `${this.formatDate} ${this.formatTime}`;\r\n        this._defaultDateValue = parse(\r\n          this.model as string,\r\n          formatPattern,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.isoString:\r\n        dateParam = parseISO(this.model as string);\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = new Date(this.model);\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n    }\r\n\r\n    this.setFormattedValue(this._defaultDateValue);\r\n  }\r\n\r\n  private changeControlState(value: Date | string | number | null): void {\r\n    this.currentValueType = this.getCurrentValueType(value);\r\n    if (this.timeMode === ZyfraDatePickerMode.relative) {\r\n      this.formattedValue = String(value);\r\n    } else {\r\n      this.generateFormattedValueFromInput();\r\n    }\r\n  }\r\n\r\n  private setFormattedValue(defaultDateValue: Date | null): void {\r\n    this._defaultTimeValue = defaultDateValue ? defaultDateValue : new Date();\r\n    this.dateValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatDate,\r\n      this.localeFns\r\n    );\r\n    this.timeValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatTime,\r\n      this.localeFns\r\n    );\r\n\r\n    if (this.showDate && this.showTime) {\r\n      if (\r\n        this.dateValue === this.invalidDateMessage ||\r\n        this.timeValue === this.invalidDateMessage\r\n      ) {\r\n        this.formattedValue = '';\r\n        this.cdr.detectChanges();\r\n        return;\r\n      }\r\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n    } else if (this.showDate) {\r\n      this.dateValue = format(\r\n        this._defaultDateValue,\r\n        this.formatDate,\r\n        this.localeFns\r\n      );\r\n      this.formattedValue =\r\n        this.dateValue === this.invalidDateMessage ? '' : this.dateValue;\r\n    } else if (this.showTime) {\r\n      this._defaultTimeValue = this._defaultDateValue;\r\n      this.timeValue = format(\r\n        this._defaultTimeValue,\r\n        this.formatTime,\r\n        this.localeFns\r\n      );\r\n      this.formattedValue =\r\n        this.timeValue === this.invalidDateMessage ? '' : this.timeValue;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private setLocalizationCalendar(locale: string): void {\r\n    let currentLocale: unknown;\r\n\r\n    switch (locale) {\r\n      case ZyfraLocale.en:\r\n        currentLocale = en;\r\n        this.localeFns.locale = enFns;\r\n        break;\r\n      case ZyfraLocale.ru:\r\n      default:\r\n        currentLocale = ru;\r\n        this.localeFns.locale = ruFns ;\r\n        break;\r\n    }\r\n    this.primeNGConfig.setTranslation(currentLocale);\r\n  }\r\n\r\n  private onChangeValue(value: string | Date | number | null): void {\r\n    // this.modelChange.emit(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  private getValueOutput(date: Date): string | number | Date {\r\n    const returnValueType = this.returnFormatValue || this.currentValueType;\r\n    let resultDate: string | number | Date;\r\n    switch (returnValueType) {\r\n      case ZyfraDatePickerValueType.timestamp:\r\n        resultDate = date.valueOf();\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.string:\r\n        let formatValue: string;\r\n\r\n        if (this.formatDate && this.showDate) {\r\n          formatValue = this.formatDate;\r\n        }\r\n\r\n        if (this.formatTime && this.showTime) {\r\n          formatValue =\r\n            this.formatDate && this.showDate\r\n              ? `${this.formatDate} ${this.formatTime}`\r\n              : this.formatTime;\r\n        }\r\n\r\n        resultDate = format(date, formatValue, this.localeFns);\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.isoString:\r\n        resultDate = date.toISOString();\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.date:\r\n      default:\r\n        resultDate = date;\r\n        break;\r\n    }\r\n\r\n    return resultDate;\r\n  }\r\n\r\n  private getCurrentValueType(value: string | number | Date | null): string {\r\n    if (value === null) {\r\n      return ZyfraDatePickerValueType.null;\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n      return ZyfraDatePickerValueType.timestamp;\r\n    }\r\n\r\n    if ((value as unknown) instanceof Date) {\r\n      return ZyfraDatePickerValueType.date;\r\n    }\r\n\r\n    if (isIsoDate(value as string)) {\r\n      return ZyfraDatePickerValueType.isoString;\r\n    }\r\n\r\n    return ZyfraDatePickerValueType.string;\r\n  }\r\n\r\n  private replaceSymbols(str: string): string {\r\n    if (!str) {\r\n      return str;\r\n    }\r\n    const year = /Y/g;\r\n    const day = /D/g;\r\n    const hour = /h/g;\r\n    const sec = /S/g;\r\n    return str\r\n      .replace(year, 'y')\r\n      .replace(day, 'd')\r\n      .replace(hour, 'H')\r\n      .replace(sec, 'H');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 120,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnChanges",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "dateFormat": {
                    "name": "dateFormat",
                    "setSignature": {
                        "name": "dateFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 75,
                        "jsdoctags": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "timeFormat": {
                    "name": "timeFormat",
                    "setSignature": {
                        "name": "timeFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 78,
                        "jsdoctags": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"zyfra-datepicker\">\r\n  <div\r\n    class=\"zyfra-datepicker-controls\"\r\n    [ngClass]=\"{\r\n      'visible-clear': showClear,\r\n      'visible-date': timeMode === DatePickerMode.absolute && showDate,\r\n      'visible-time': timeMode === DatePickerMode.absolute && showTime,\r\n      'visible-change-mode': showChangeMode,\r\n      'visible-relative': timeMode === DatePickerMode.relative\r\n    }\"\r\n  >\r\n    <button\r\n      *ngIf=\"showClear\"\r\n      (click)=\"clearValue()\"\r\n      [disabled]=\"disabled\"\r\n      class=\"zyfra-datepicker-control zyfra-datepicker-button\"\r\n    >\r\n      <i class=\"zyfra-icon tools-broom\"></i>\r\n    </button>\r\n    <ng-container *ngIf=\"timeMode === DatePickerMode.absolute; else relativeTmpl\">\r\n      <div class=\"zyfra-datepicker-control\" *ngIf=\"showDate\">\r\n        <button [disabled]=\"disabled\" class=\"zyfra-datepicker-button\" (click)=\"openCalendar($event)\">\r\n          <i class=\"zyfra-icon date-calendar-blank\"></i>\r\n        </button>\r\n        <p-calendar\r\n          #calendar\r\n          [ngModel]=\"datepickerValue\"\r\n          [panelStyleClass]=\"'zyfra-datepicker-calendar'\"\r\n          [locale]=\"$any(locale)\"\r\n          [selectionMode]=\"selectionMode\"\r\n          [showOnFocus]=\"showOnFocus\"\r\n          [showWeek]=\"showWeek\"\r\n          [monthNavigator]=\"monthNavigator\"\r\n          [yearNavigator]=\"yearNavigator\"\r\n          [yearRange]=\"yearRange\"\r\n          [hideOnDateTimeSelect]=\"hideOnDateTimeSelect\"\r\n          [numberOfMonths]=\"numberOfMonths\"\r\n          [disabledDates]=\"disabledDates\"\r\n          [disabledDays]=\"disabledDays\"\r\n          [firstDayOfWeek]=\"firstDayOfWeek\"\r\n          (onSelect)=\"onCalendarDateChange($event)\"\r\n          (onClickOutside)=\"onCalendarClose()\"\r\n        >\r\n          <ng-template pTemplate=\"footer\" *ngIf=\"showCalendarBtn\">\r\n            <div class=\"zyfra-datepicker-calendar-footer\">\r\n              <zyfra-button\r\n                [label]=\"calendarBtnLabel\"\r\n                [styleClass]=\"'p-button-mini button-success-style'\"\r\n                (onClick)=\"saveCalendarDate()\"\r\n              >\r\n              </zyfra-button>\r\n            </div>\r\n          </ng-template>\r\n        </p-calendar>\r\n      </div>\r\n      <zyfra-dropdown\r\n        *ngIf=\"showTime\"\r\n        class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\r\n        [options]=\"timeArray\"\r\n        [disabled]=\"disabled\"\r\n        (valueChange)=\"setInputTime($event)\"\r\n        [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n        [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n        [dropdownIcon]=\"'zyfra-icon date-update'\"\r\n        [optionLabel]=\"'value'\"\r\n      >\r\n      </zyfra-dropdown>\r\n    </ng-container>\r\n    <zyfra-dropdown\r\n      *ngIf=\"showChangeMode\"\r\n      class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\r\n      [value]=\"timeMode\"\r\n      [options]=\"$any(modes)\"\r\n      (valueChange)=\"setMode($event)\"\r\n      [disabled]=\"disabled\"\r\n      [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n      [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n      [dropdownIcon]=\"'zyfra-icon chevrons-dropdown'\"\r\n      [optionLabel]=\"'name'\"\r\n      [optionValue]=\"'value'\"\r\n    >\r\n      <ng-template let-modeType zyfraDropdownTemplate=\"item\">\r\n        <div class=\"mode-item\">\r\n          <zyfra-radio-button\r\n            [name]=\"'groupname'\"\r\n            [value]=\"modeType.value\"\r\n            [ngModel]=\"timeMode\"\r\n          ></zyfra-radio-button>\r\n          <i\r\n            class=\"zyfra-icon date-update\"\r\n            [ngClass]=\"{\r\n              'date-update': modeType.value === DatePickerMode.absolute,\r\n              'date-clock': modeType.value === DatePickerMode.relative\r\n            }\"\r\n          ></i>\r\n          <div>{{ modeType.name }}</div>\r\n        </div>\r\n      </ng-template>\r\n    </zyfra-dropdown>\r\n  </div>\r\n  <zyfra-input\r\n    [(ngModel)]=\"formattedValue\"\r\n    type=\"text\"\r\n    (ngModelChange)=\"onDatepickerNgModelChange($event)\"\r\n    (onBlur)=\"onInputBlur()\"\r\n    [placeholder]=\"placeholder\"\r\n    [label]=\"label\"\r\n    [inputClass]=\"{\r\n      'ng-invalid': !!ngControl?.invalid,\r\n      'ng-valid': !!ngControl?.valid,\r\n      'ng-dirty': !!ngControl?.dirty,\r\n      'ng-touched': !!ngControl?.touched\r\n    }\"\r\n    [required]=\"required || controlRequired\"\r\n    [disabled]=\"disabled\"\r\n  >\r\n  </zyfra-input>\r\n  <ng-template #relativeTmpl>\r\n    <zyfra-dropdown\r\n      class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\r\n      [value]=\"timeMode\"\r\n      [options]=\"$any(timeArray)\"\r\n      [disabled]=\"disabled\"\r\n      [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n      [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n      [dropdownIcon]=\"'zyfra-icon date-clock'\"\r\n      [optionLabel]=\"'value'\"\r\n    >\r\n    </zyfra-dropdown>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "ZyfraDialogComponent",
            "id": "component-ZyfraDialogComponent-96f999ff4e6d88fba6befe882de481ac4a269bb2c6e854d31aafa75185a524122c4047826c1909225fe03aff02d688a8b269ca83460f7e31ff9fbd889e13612c",
            "file": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "blockScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "object",
                    "decorators": []
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "object",
                    "decorators": []
                },
                {
                    "name": "contentStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "focusOnShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "htmlTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "SafeHtml",
                    "decorators": []
                },
                {
                    "name": "keepInViewport",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maximizable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maximizeIcon",
                    "defaultValue": "'zyfra-icon arrows-expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "minimizeIcon",
                    "defaultValue": "'zyfra-icon arrows-collapse'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "minX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "resizable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'150ms cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onDragEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMaximize",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeInit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDragEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMaximizeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeInitHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'zyfra-dialog',\r\n  templateUrl: './zyfra-dialog.component.html',\r\n  styles: [],\r\n})\r\nexport class ZyfraDialogComponent {\r\n  @Input() htmlTemplate: SafeHtml;\r\n\r\n  @Input() header: string;\r\n  @Input() draggable: boolean = true;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() keepInViewport: boolean = true;\r\n  @Input() resizable: boolean = true;\r\n  @Input() contentStyle: object;\r\n  @Input() visible: boolean;\r\n  @Input() modal: boolean;\r\n  @Input() position: string = 'center';\r\n  @Input() blockScroll: boolean;\r\n  @Input() closeOnEscape: boolean;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() rtl: boolean;\r\n  @Input() closable: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() contentStyleClass: string;\r\n  @Input() showHeader: boolean = true;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() minX: number = 0;\r\n  @Input() minY: number = 0;\r\n  @Input() focusOnShow: boolean = true;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() maximizable: boolean;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() closeIcon: string = 'zyfra-icon selection-check-simple';\r\n  @Input() minimizeIcon: string = 'zyfra-icon arrows-collapse';\r\n  @Input() maximizeIcon: string = 'zyfra-icon arrows-expand';\r\n\r\n  /* onHide */\r\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n  onHideHandler(event) {\r\n    this.visible = false;\r\n    this.onHide.emit(this.visible);\r\n  }\r\n\r\n  /* onShow */\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n  onShowHandler(event) {\r\n    this.visible = true;\r\n    this.onShow.emit(this.visible);\r\n  }\r\n\r\n  /* onResizeInit */\r\n  @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\r\n\r\n  onResizeInitHandler(event) {\r\n    this.onResizeInit.emit(event);\r\n  }\r\n\r\n  /* onResizeEnd */\r\n  @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  onResizeEndHandler(event) {\r\n    this.onResizeEnd.emit(event);\r\n  }\r\n\r\n  /* onDragEnd */\r\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  onDragEndHandler(event) {\r\n    this.onDragEnd.emit(event);\r\n  }\r\n\r\n  /* onMaximize */\r\n  @Output() onMaximize: EventEmitter<any> = new EventEmitter();\r\n\r\n  onInit() {\r\n    this.visible = true;\r\n  }\r\n\r\n  onMaximizeHandler(event) {\r\n    this.onMaximize.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-dialog\r\n  [header]=\"header\"\r\n  [draggable]=\"draggable\"\r\n  [keepInViewport]=\"keepInViewport\"\r\n  [resizable]=\"resizable\"\r\n  [contentStyle]=\"contentStyle\"\r\n  [(visible)]=\"visible\"\r\n  [modal]=\"modal\"\r\n  [position]=\"position\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [rtl]=\"rtl\"\r\n  [closable]=\"closable\"\r\n  [appendTo]=\"appendTo\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [contentStyleClass]=\"contentStyleClass\"\r\n  [showHeader]=\"showHeader\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [minX]=\"minX\"\r\n  [minY]=\"minY\"\r\n  [focusOnShow]=\"focusOnShow\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [maximizable]=\"maximizable\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  [closeIcon]=\"closeIcon\"\r\n  [minimizeIcon]=\"minimizeIcon\"\r\n  [maximizeIcon]=\"maximizeIcon\"\r\n  (onShow)=\"onShowHandler($event)\"\r\n  (onHide)=\"onHideHandler($event)\"\r\n  (onResizeInit)=\"onResizeInitHandler($event)\"\r\n  (onResizeEnd)=\"onResizeEndHandler($event)\"\r\n  (onDragEnd)=\"onDragEndHandler($event)\"\r\n  (onMaximize)=\"onMaximizeHandler($event)\"\r\n>\r\n  <div [innerHTML]=\"htmlTemplate\"></div>\r\n</p-dialog>\r\n"
        },
        {
            "name": "ZyfraDropdownComponent",
            "id": "component-ZyfraDropdownComponent-8b810166ae215bda5792ee984113eae4eb0b4572a6d71b3ab88dc29f84fb77ec20ea39739242cc60e7b3aa4e9469fd1f418caaf497a41b96d335d62d776a0fbc",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ariaFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autoDisplayFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autofocusFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "emptyFilterMessage",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filterBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterMatchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\"",
                    "decorators": []
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "groupTemplateClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "itemSize",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionDisabled",
                    "defaultValue": "'disabled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionGroupLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "resetFilterOnHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "T",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "EventEmitter"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<DropdownChangeEvent<T>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "emptyfilterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "emptyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "groupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "selectedItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraDropdownTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\nexport interface DropdownChangeEvent<T> {\r\n  originalEvent: PointerEvent;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-dropdown',\r\n  templateUrl: './zyfra-dropdown.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDropdownComponent<T = unknown> {\r\n  @Input() value: T;\r\n  @Input() options: T[];\r\n  @Input() optionLabel = 'label';\r\n  @Input() optionValue;\r\n  @Input() optionDisabled = 'disabled';\r\n  @Input() optionGroupLabel = 'label';\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() name: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() style: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() filter: boolean;\r\n  @Input() filterValue: string;\r\n  @Input() filterBy: string;\r\n  @Input() filterMatchMode:\r\n    | 'contains'\r\n    | 'startsWith'\r\n    | 'endsWith'\r\n    | 'equals'\r\n    | 'notEquals'\r\n    | 'in'\r\n    | 'lt'\r\n    | 'lte'\r\n    | 'gt'\r\n    | 'gte' = 'contains';\r\n  @Input() filterPlaceholder: string;\r\n  @Input() filterLocale: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n  @Input() emptyMessage = 'No records found';\r\n  @Input() emptyFilterMessage = 'No results found';\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() editable: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() placeholder: string;\r\n  @Input() inputId: string;\r\n  @Input() dataKey: string;\r\n  @Input() autofocus: boolean;\r\n  @Input() autofocusFilter: boolean;\r\n  @Input() resetFilterOnHide: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() autoDisplayFirst = true;\r\n  @Input() group: boolean;\r\n  @Input() groupTemplateClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaFilterLabel: string;\r\n  @Input() tooltip: any;\r\n  @Input() tooltipStyleClass: string;\r\n  @Input() tooltipPosition = 'top';\r\n  @Input() tooltipPositionStyle = 'absolute';\r\n  @Input() itemSize = 30;\r\n  @Input() label = '';\r\n  @Input() virtualScroll: boolean;\r\n\r\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<AnimationEvent>();\r\n  @Output() valueChange = new EventEmitter<T>();\r\n\r\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  groupTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n  headerTemplate: TemplateRef<unknown>;\r\n  emptyTemplate: TemplateRef<unknown>;\r\n  emptyfilterTemplate: TemplateRef<unknown>;\r\n  footerTemplate: TemplateRef<unknown>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach((item) => {\r\n      switch (item.getType()) {\r\n        case 'item':\r\n          this.itemTemplate = item.template;\r\n          break;\r\n        case 'group':\r\n          this.groupTemplate = item.template;\r\n          break;\r\n        case 'selectedItem':\r\n          this.selectedItemTemplate = item.template;\r\n          break;\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'empty':\r\n          this.emptyTemplate = item.template;\r\n          break;\r\n        case 'emptyfilter':\r\n          this.emptyfilterTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-dropdown\r\n    [(ngModel)]=\"value\"\r\n    [options]=\"options\"\r\n    [optionLabel]=\"optionLabel\"\r\n    [optionValue]=\"optionValue\"\r\n    [optionDisabled]=\"optionDisabled\"\r\n    [optionGroupLabel]=\"optionGroupLabel\"\r\n    [optionGroupChildren]=\"optionGroupChildren\"\r\n    [name]=\"name\"\r\n    [scrollHeight]=\"scrollHeight\"\r\n    [virtualScroll]=\"virtualScroll\"\r\n    [style]=\"style\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [styleClass]=\"styleClass\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [filter]=\"filter\"\r\n    [filterValue]=\"filterValue\"\r\n    [filterBy]=\"filterBy\"\r\n    [filterMatchMode]=\"filterMatchMode\"\r\n    [filterPlaceholder]=\"filterPlaceholder\"\r\n    [filterLocale]=\"filterLocale\"\r\n    [required]=\"required\"\r\n    [disabled]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [emptyFilterMessage]=\"emptyFilterMessage\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [editable]=\"editable\"\r\n    [maxlength]=\"maxlength\"\r\n    [appendTo]=\"appendTo\"\r\n    [tabindex]=\"tabindex\"\r\n    [placeholder]=\"placeholder\"\r\n    [inputId]=\"inputId\"\r\n    [dataKey]=\"dataKey\"\r\n    [autofocus]=\"autofocus\"\r\n    [autofocusFilter]=\"autofocusFilter\"\r\n    [resetFilterOnHide]=\"resetFilterOnHide\"\r\n    [dropdownIcon]=\"dropdownIcon\"\r\n    [autoDisplayFirst]=\"autoDisplayFirst\"\r\n    [group]=\"group\"\r\n    [showClear]=\"showClear\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [ariaFilterLabel]=\"ariaFilterLabel\"\r\n    [tooltip]=\"tooltip\"\r\n    [tooltipStyleClass]=\"tooltipStyleClass\"\r\n    [tooltipPosition]=\"tooltipPosition\"\r\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\r\n    (onChange)=\"onChange.emit($event)\"\r\n    (onClick)=\"onClick.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onShow)=\"onShow.emit($event)\"\r\n    (onHide)=\"onHide.emit($event)\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n  >\r\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\r\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\r\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\r\n      ></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\r\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\r\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\r\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\r\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n    </ng-template>\r\n  </p-dropdown>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraDynamicDialogComponent",
            "id": "component-ZyfraDynamicDialogComponent-56ba2b3dae56619ec493a6857ac5351ee269f27d16172ad9738f3a5cb06b5435bee4635b69084fade7b392683e7bc8fb1d1a21f69ae161ee1bcbd4bb425cca86",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ZyfraDynamicDialogService"
                }
            ],
            "selector": "storybook-dynamic-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<zyfra-button (click)=\"open()\"\n              label=\"open dialog\"\n              icon=\"pi pi-check\"></zyfra-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "closable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "transitionOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\n\r\n@Component({\r\n  selector: 'storybook-dynamic-dialog',\r\n  template: `\r\n  <zyfra-button (click)=\"open()\"\r\n                label=\"open dialog\"\r\n                icon=\"pi pi-check\"></zyfra-button>\r\n  `,\r\n  providers: [ZyfraDynamicDialogService]\r\n})\r\nclass ZyfraDynamicDialogComponent implements OnDestroy {\r\n\r\n  @Input() set data(data: unknown) {\r\n    this.options.data = data;\r\n  }\r\n  @Input() set header(header: string) {\r\n    this.options.header = header;\r\n  }\r\n  @Input() set footer(footer: string) {\r\n    this.options.footer = footer;\r\n  }\r\n  @Input() set width(width: string) {\r\n    this.options.width = width;\r\n  }\r\n  @Input() set height(height: string) {\r\n    this.options.height = height;\r\n  }\r\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\r\n    this.options.closeOnEscape = closeOnEscape;\r\n  }\r\n  @Input() set baseZIndex(baseZIndex: number) {\r\n    this.options.baseZIndex = baseZIndex;\r\n  }\r\n  @Input() set autoZIndex(autoZIndex: boolean) {\r\n    this.options.autoZIndex = autoZIndex;\r\n  }\r\n  @Input() set dismissableMask(dismissableMask: boolean) {\r\n    this.options.dismissableMask = dismissableMask;\r\n  }\r\n  @Input() set rtl(rtl: boolean) {\r\n    this.options.rtl = rtl;\r\n  }\r\n  @Input() set style(style: string) {\r\n    this.options.style = style;\r\n  }\r\n  @Input() set contentStyle(contentStyle: string) {\r\n    this.options.contentStyle = contentStyle;\r\n  }\r\n  @Input() set styleClass(styleClass: string) {\r\n    this.options.styleClass = styleClass;\r\n  }\r\n  @Input() set transitionOptions(transitionOptions: string) {\r\n    this.options.transitionOptions = transitionOptions;\r\n  }\r\n  @Input() set closable(closable: boolean) {\r\n    this.options.closable = closable;\r\n  }\r\n  @Input() set showHeader(showHeader: boolean) {\r\n    this.options.showHeader = showHeader;\r\n  }\r\n\r\n  public options: ZyfraDynamicDialogConfig = {};\r\n\r\n  private ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\r\n\r\n  public open(): void {\r\n    this.ref = this.dynamicDialogService.open(\r\n      ExampleDynamicDialogComponent, this.options\r\n    );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.ref) {\r\n      this.ref.close();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <div>\r\n    user component\r\n  </div>`\r\n})\r\nclass ExampleDynamicDialogComponent { }\r\n\r\nexport default {\r\n  title: 'Dialogs/DynamicDialog',\r\n  component: ZyfraDynamicDialogComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        ZyfraDynamicDialogComponent,\r\n        ExampleDynamicDialogComponent\r\n      ],\r\n      imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        ZyfraButtonModule,\r\n        ZyfraDynamicDialogModule\r\n      ],\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n});\r\n\r\n\r\nexport const Simple = Template.bind({});\r\nSimple.args = {\r\n  data: 'Some data',\r\n  header: \"Header\",\r\n  footer: \"Footer\",\r\n  width: \"500px\",\r\n  height: \"200px\",\r\n  closeOnEscape: false,\r\n  baseZIndex: 0,\r\n  autoZIndex: false,\r\n  dismissableMask: false,\r\n  rtl: false,\r\n  style: '',\r\n  contentStyle: '',\r\n  styleClass: '',\r\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n  closable: true,\r\n  showHeader: true\r\n};\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "footer": {
                    "name": "footer",
                    "setSignature": {
                        "name": "footer",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "width": {
                    "name": "width",
                    "setSignature": {
                        "name": "width",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "height": {
                    "name": "height",
                    "setSignature": {
                        "name": "height",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closeOnEscape": {
                    "name": "closeOnEscape",
                    "setSignature": {
                        "name": "closeOnEscape",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "jsdoctags": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "baseZIndex": {
                    "name": "baseZIndex",
                    "setSignature": {
                        "name": "baseZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "autoZIndex": {
                    "name": "autoZIndex",
                    "setSignature": {
                        "name": "autoZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "dismissableMask": {
                    "name": "dismissableMask",
                    "setSignature": {
                        "name": "dismissableMask",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "rtl": {
                    "name": "rtl",
                    "setSignature": {
                        "name": "rtl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 47,
                        "jsdoctags": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "style": {
                    "name": "style",
                    "setSignature": {
                        "name": "style",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "contentStyle": {
                    "name": "contentStyle",
                    "setSignature": {
                        "name": "contentStyle",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "styleClass": {
                    "name": "styleClass",
                    "setSignature": {
                        "name": "styleClass",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "transitionOptions": {
                    "name": "transitionOptions",
                    "setSignature": {
                        "name": "transitionOptions",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closable": {
                    "name": "closable",
                    "setSignature": {
                        "name": "closable",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "showHeader": {
                    "name": "showHeader",
                    "setSignature": {
                        "name": "showHeader",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraHintComponent",
            "id": "component-ZyfraHintComponent-725be62b1e1c2d03d0c36b88bf6db42b59b3d8bbee305fa60ccfc1faa7e8d87a73e0ae7532d608cf006c2e2ed89bdead58489eeb05665867c021c7d8682f8b2d",
            "file": "libs/components/src/lib/hint/zyfra-hint.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-hint",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-hint.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraHintOptionsModel",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hostClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'animationend', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style.left.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "style.top.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  Output,\r\n  TemplateRef,\r\n  HostBinding,\r\n  ChangeDetectionStrategy,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { ZyfraHintOptionsModel } from './zyfra-hint.model';\r\n\r\n@Component({\r\n  selector: 'zyfra-hint',\r\n  templateUrl: './zyfra-hint.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraHintComponent {\r\n  @HostBinding('style.top.px') get topParam(): number {\r\n    return this.options.top;\r\n  }\r\n  @HostBinding('style.left.px') get leftParam(): number {\r\n    return this.options.left;\r\n  }\r\n\r\n  set options(op: ZyfraHintOptionsModel) {\r\n    this._options = op;\r\n    this.hostClasses = op.className;\r\n  }\r\n  get options(): ZyfraHintOptionsModel {\r\n    return this._options;\r\n  }\r\n\r\n  get hasTemplateRef(): boolean {\r\n    return this._options.content instanceof TemplateRef;\r\n  }\r\n  @HostBinding('class') hostClasses = '';\r\n\r\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  private _options: ZyfraHintOptionsModel;\r\n  @HostListener('animationend', ['$event']) animationend(event: AnimationEvent): void {\r\n    if (event.animationName === 'hintOut') {\r\n      this.close.emit(true);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "topParam": {
                    "name": "topParam",
                    "getSignature": {
                        "name": "topParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 20
                    }
                },
                "leftParam": {
                    "name": "leftParam",
                    "getSignature": {
                        "name": "leftParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 23
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "op",
                                "type": "ZyfraHintOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "ZyfraHintOptionsModel",
                        "line": 31
                    }
                },
                "hasTemplateRef": {
                    "name": "hasTemplateRef",
                    "getSignature": {
                        "name": "hasTemplateRef",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 35
                    }
                }
            },
            "templateData": "<ng-template [ngIf]=\"hasTemplateRef\" [ngIfElse]=\"string\">\r\n  <ng-container *ngTemplateOutlet=\"$any(options.content); context: { $implicit: options.context }\"> </ng-container>\r\n</ng-template>\r\n<ng-template #string>\r\n  {{ options.content }}\r\n</ng-template>\r\n"
        },
        {
            "name": "ZyfraIconComponent",
            "id": "component-ZyfraIconComponent-bbf31636ac303e9e8e24790121fef029fb9d083f8907f5af45a96cec5acc227b6506582035a43a105c66bb9b881ff1cd26e15117b9a9d924f1d43ec62b44efdb",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-icon",
            "styleUrls": [
                "./zyfra-icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-icon',\r\n  templateUrl: './zyfra-icon.component.html',\r\n  styleUrls: ['./zyfra-icon.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraIconComponent {\r\n  @Input() iconClass: string = null;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .zyfra-icon-color {\r\n        fill: none;\r\n    }\r\n}",
                    "styleUrl": "./zyfra-icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"zyfra-icon\" [ngClass]=\"iconClass\"></span>"
        },
        {
            "name": "ZyfraInputComponent",
            "id": "component-ZyfraInputComponent-595cf9c39c781888e225b1e674fdbe5e0762f82e11d5127cd7526dec9dab0cd0a2ffe4958b1aba0649c3144a5e9507c205d521eba64afa6ac9232d28c4436bdf",
            "file": "libs/components/src/lib/input/zyfra-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | string[] | Set<string> | literal type",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "controlRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "changeModel",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidatorRequiredControl",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "outsideValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "outsideValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NgControl,\r\n} from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'zyfra-input',\r\n  templateUrl: './zyfra-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraInputComponent\r\n  implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\r\n  @Input() model: string;\r\n  @Input() type: string;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() spanClass: string;\r\n  @Input() inputClass:  string | string[] | Set<string> | {\r\n    [klass: string]: any;\r\n  };\r\n  @Input() disabled: boolean;\r\n  @Input() required: boolean;\r\n  @Input() tooltip: string;\r\n  @Input() tooltipPosition = 'right';\r\n\r\n  @Output() onBlur = new EventEmitter<unknown>();\r\n\r\n  public controlRequired: boolean;\r\n\r\n  private destroyed$: Subject<void> = new Subject<void>();\r\n\r\n  constructor(\r\n    @Self() @Optional() public ngControl: NgControl,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    if (ngControl) {\r\n      ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  onChange = (value: string) => {};\r\n  onTouched = () => {};\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  writeValue(outsideValue: string): void {\r\n    this.model = outsideValue;\r\n    if (!this.model) {\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.ngControl) {\r\n      this.getValidatorRequiredControl(this.ngControl);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.ngControl) {\r\n      this.ngControl.statusChanges\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  changeModel(value: string): void {\r\n    this.onChange(value);\r\n  }\r\n\r\n  private getValidatorRequiredControl(ngControl: NgControl): void {\r\n    if (ngControl.control && ngControl.control.validator && this.label) {\r\n      const validators = ngControl.control.validator({} as AbstractControl);\r\n      this.controlRequired = validators && validators.required;\r\n    } else {\r\n      this.controlRequired = false;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "templateData": "<span class=\"zyfra-input\"\r\n      [class.zyfra-input_disabled]=\"disabled\"\r\n      [class.p-float-label]=\"label\">\r\n  <i *ngIf=\"iClass\"\r\n     [class]=\"iClass\"></i>\r\n  <input pInputText\r\n         [type]=\"type\"\r\n         [id]=\"id\"\r\n         [(ngModel)]=\"model\"\r\n         (ngModelChange)=\"changeModel($event)\"\r\n         (blur)=\"onBlur.emit($event)\"\r\n         [placeholder]=\"placeholder\"\r\n         [ngClass]=\"ngControl ? {'ng-invalid': ngControl.invalid, 'ng-valid': ngControl.valid, 'ng-dirty': ngControl.dirty, 'ng-touched': ngControl.touched} : inputClass\"\r\n         [disabled]=\"disabled\"\r\n         [required]=\"required || controlRequired\"\r\n         [pTooltip]=\"tooltip ? tooltip : null\"\r\n         [tooltipPosition]=\"tooltipPosition\" />\r\n  <label *ngIf=\"label\"\r\n         [class.label-required]=\"required || controlRequired\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputMaskComponent",
            "id": "component-ZyfraInputMaskComponent-01ad05d97722ae09733a850ce93b9a28618daa61860eae9eb5801328b7a47c3bf733c2cda4100e6fd2fe34822cb9b7fb046b459125f65f2310dedac98f19f96f",
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-mask",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-mask.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autoClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "autoFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "characterPattern",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "slotChar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unmask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "onComplete",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeydown",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-mask',\r\n  templateUrl: './zyfra-input-mask.component.html',\r\n})\r\nexport class ZyfraInputMaskComponent {\r\n  @Input() value: string;\r\n  @Input() mask: string;\r\n  @Input() type: string;\r\n  @Input() slotChar: string;\r\n  @Input() autoClear: boolean;\r\n  @Input() unmask: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: string;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n  @Input() name: string;\r\n  @Input() inputId: string;\r\n  @Input() required: boolean;\r\n  @Input() characterPattern: string;\r\n  @Input() autoFocus: boolean;\r\n  @Input() autocomplete: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() title: string;\r\n  @Input() label = '';\r\n\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onComplete = new EventEmitter<void>();\r\n  @Output() onKeydown = new EventEmitter<KeyboardEvent>();\r\n  @Output() onInput = new EventEmitter<KeyboardEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span\r\n  class=\"zyfra-input\"\r\n  [class.zyfra-input_disabled]=\"disabled\"\r\n  [class.p-float-label]=\"label\"\r\n>\r\n  <p-inputMask\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [mask]=\"mask\"\r\n    [type]=\"type\"\r\n    [slotChar]=\"slotChar\"\r\n    [autoClear]=\"autoClear\"\r\n    [unmask]=\"unmask\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [placeholder]=\"placeholder\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [disabled]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [name]=\"name\"\r\n    [inputId]=\"inputId\"\r\n    [required]=\"required\"\r\n    [characterPattern]=\"characterPattern\"\r\n    [autoFocus]=\"autoFocus\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [title]=\"title\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onComplete)=\"onComplete.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n    (onKeydown)=\"onKeydown.emit($event)\"\r\n  ></p-inputMask>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{label}}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputNumberComponent",
            "id": "component-ZyfraInputNumberComponent-a725e20b06ff4bff27a9954a1ddf7db541f154635f63ae7cb43ba87deff8afc316e1b7ec086b2ed9d0ce9b05ea6702c14d2e272b036649043efe891d7f221077",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-number",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonLayout",
                    "defaultValue": "'stacked'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "currencyDisplay",
                    "defaultValue": "'symbol'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "decrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "decrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "format",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "incrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "incrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "localeMatcher",
                    "defaultValue": "'best fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "defaultValue": "'decimal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nexport interface InputEvent {\r\n  originalEvent: KeyboardEvent;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-input-number',\r\n  templateUrl: './zyfra-input-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputNumberComponent {\r\n  @Input() value: number;\r\n  @Input() format = true;\r\n  @Input() showButtons: boolean;\r\n  @Input() buttonLayout = 'stacked';\r\n  @Input() spanClass: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() incrementButtonClass: string;\r\n  @Input() decrementButtonClass: string;\r\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\r\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\r\n  @Input() locale: string;\r\n  @Input() localeMatcher = 'best fit';\r\n  @Input() mode = 'decimal';\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay = 'symbol';\r\n  @Input() useGrouping = true;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() step = 1;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() inputStyle: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: string;\r\n  @Input() disabled: boolean;\r\n  @Input() title: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() name: string;\r\n  @Input() autocomplete: string;\r\n\r\n  @Output() valueChange = new EventEmitter<number>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onInput = new EventEmitter<InputEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\r\n\r\n  <p-inputNumber\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [format]=\"format\"\r\n    [showButtons]=\"showButtons\"\r\n    [buttonLayout]=\"buttonLayout\"\r\n    [incrementButtonClass]=\"incrementButtonClass\"\r\n    [decrementButtonClass]=\"decrementButtonClass\"\r\n    [incrementButtonIcon]=\"incrementButtonIcon\"\r\n    [decrementButtonIcon]=\"decrementButtonIcon\"\r\n    [locale]=\"locale\"\r\n    [localeMatcher]=\"localeMatcher\"\r\n    [mode]=\"mode\"\r\n    [prefix]=\"prefix\"\r\n    [suffix]=\"suffix\"\r\n    [placeholder]=\"placeholder\"\r\n    [currency]=\"currency\"\r\n    [currencyDisplay]=\"currencyDisplay\"\r\n    [useGrouping]=\"useGrouping\"\r\n    [minFractionDigits]=\"minFractionDigits\"\r\n    [maxFractionDigits]=\"maxFractionDigits\"\r\n    [min]=\"min\"\r\n    [max]=\"max\"\r\n    [step]=\"step\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputId]=\"inputId\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [disabled]=\"disabled\"\r\n    [title]=\"title\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [name]=\"name\"\r\n    [autocomplete]=\"autocomplete\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n  >\r\n  </p-inputNumber>\r\n\r\n  <label\r\n    *ngIf=\"label\"\r\n    [class.label-required]=\"ariaRequired\"\r\n    [style.padding-left]=\"showButtons && buttonLayout === 'horizontal' ? '38px' : ''\"\r\n    >{{ label }}</label\r\n  >\r\n</span>\r\n"
        },
        {
            "name": "ZyfraInputSwitchComponent",
            "id": "component-ZyfraInputSwitchComponent-f89a0088494c8ac565291e73b35778afccc4dc0c586a842c9633b177d02fc085d419d78b7da5145526174184653a01145a8c40db9309614a561d00a443f7e4e4",
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-switch',\r\n  templateUrl: './zyfra-input-switch.component.html',\r\n  styles: [],\r\n})\r\nexport class ZyfraInputSwitchComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  @Input() checked: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() readonly: boolean;\r\n\r\n  /* onChange */\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  onChangeHandler(event) {\r\n    this.checked = event.checked;\r\n    this.onChange.emit(this.checked);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-inputSwitch\r\n  [(ngModel)]=\"checked\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [name]=\"name\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [disabled]=\"disabled\"\r\n  [readonly]=\"readonly\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n></p-inputSwitch>\r\n"
        },
        {
            "name": "ZyfraMenuApplicationsComponent",
            "id": "component-ZyfraMenuApplicationsComponent-5c5eaad22bd302cad83a62de5707c7c5a105c617bfb9f697ece6418092063bad59086dca74825b4d3ca9e3c77903682e6413e92efaf295580613bfbdf9ab5f57",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "ZyfraMenuAppItem | null",
                    "decorators": []
                },
                {
                    "name": "bottomMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "ZyfraMenuAppItem[]",
                    "decorators": []
                },
                {
                    "name": "hintDelay",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "topMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "ZyfraMenuAppItem[]",
                    "decorators": []
                },
                {
                    "name": "transition",
                    "defaultValue": "{\r\n    open: {\r\n      duration: 300,\r\n      delay: 500,\r\n      timingFunction: 'ease-in',\r\n    },\r\n    close: {\r\n      duration: 300,\r\n      delay: 300,\r\n      timingFunction: 'ease-out',\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ZyfraMenuAppTransitionSettings",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectItem",
                    "defaultValue": "new EventEmitter<ZyfraMenuAppItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleState",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "transitionDelayEnable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "wrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "closeWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnterHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ]
                },
                {
                    "name": "onMouseOutHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "openWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectItemHandler",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialPanelSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggle",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggleWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ZyfraMenuAppItem, ZyfraMenuAppTransitionSettings } from './zyfra-menu-applications.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-applications',\r\n  templateUrl: './zyfra-menu-applications.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraMenuApplicationsComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('wrapper', { static: true }) wrapper: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() transition: ZyfraMenuAppTransitionSettings = {\r\n    open: {\r\n      duration: 300,\r\n      delay: 500,\r\n      timingFunction: 'ease-in',\r\n    },\r\n    close: {\r\n      duration: 300,\r\n      delay: 300,\r\n      timingFunction: 'ease-out',\r\n    },\r\n  };\r\n  @Input() hintDelay = 1000;\r\n  @Input() topMenuItems: ZyfraMenuAppItem[] = [];\r\n  @Input() bottomMenuItems: ZyfraMenuAppItem[] = [];\r\n  @Input() activeItem: ZyfraMenuAppItem | null = null;\r\n\r\n  @Output() selectItem = new EventEmitter<ZyfraMenuAppItem>();\r\n  @Output() toggleState = new EventEmitter<boolean>();\r\n\r\n  transitionDelayEnable = true;\r\n  private destroy$ = new Subject();\r\n  private _isOpen = true;\r\n\r\n  set isOpen(isOpen: boolean) {\r\n    this._isOpen = isOpen;\r\n    this.toggleState.emit(this.isOpen);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  get isOpen(): boolean {\r\n    return this._isOpen;\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setInitialPanelSizes();\r\n\r\n    fromEvent(this.wrapper.nativeElement, 'mousemove')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.open(true));\r\n  }\r\n\r\n  private setInitialPanelSizes(): void {\r\n    const menuSplitter = this.elementRef.nativeElement.querySelector('.menu-splitter');\r\n    const panelBottom = this.elementRef.nativeElement.querySelector('.menu-applications-list__bottom');\r\n    const splitterPanels = this.elementRef.nativeElement.querySelectorAll('.menu-splitter__panel');\r\n\r\n    if (!menuSplitter || !panelBottom || !splitterPanels.length || splitterPanels.length !== 2) {\r\n      return;\r\n    }\r\n\r\n    const bottomPanelSize = Math.ceil((panelBottom.offsetHeight / menuSplitter.offsetHeight) * 100);\r\n\r\n    this.renderer.setStyle(splitterPanels[0], 'flex-basis', 'calc(' + (100 - bottomPanelSize) + '%)');\r\n    this.renderer.setStyle(splitterPanels[1], 'flex-basis', 'calc(' + bottomPanelSize + '%)');\r\n  }\r\n\r\n  get transitionStyles(): Record<string, string> {\r\n    let transitionDelay: number;\r\n\r\n    if (this.transitionDelayEnable) {\r\n      transitionDelay = this.isOpen ? this.transition.open.delay : this.transition.close.delay;\r\n    } else {\r\n      transitionDelay = 0;\r\n    }\r\n\r\n    return {\r\n      'transition-delay': `${transitionDelay}ms`,\r\n      'transition-duration': `${\r\n        this.isOpen ? this.transition.open.duration : this.transition.close.duration\r\n      }ms`,\r\n      'transition-timing-function': this.isOpen\r\n        ? this.transition.open.timingFunction\r\n        : this.transition.close.timingFunction,\r\n    };\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnterHandler(): void {\r\n    this.open(true);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseOutHandler(): void {\r\n    this.close(true);\r\n  }\r\n\r\n  toggle(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.toggleWithDelay();\r\n    } else {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private toggleWithDelay(): void {\r\n    this.transitionDelayEnable = true;\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  private toggleWithoutDelay(): void {\r\n    this.transitionDelayEnable = false;\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  open(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.openWithDelay();\r\n    } else {\r\n      this.openWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private openWithDelay(): void {\r\n    if (!this.isOpen) {\r\n      this.toggleWithDelay();\r\n    }\r\n  }\r\n\r\n  private openWithoutDelay(): void {\r\n    if (!this.isOpen) {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  close(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.closeWithDelay();\r\n    } else {\r\n      this.closeWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private closeWithDelay(): void {\r\n    if (this.isOpen) {\r\n      this.toggleWithDelay();\r\n    }\r\n  }\r\n\r\n  private closeWithoutDelay(): void {\r\n    if (this.isOpen) {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  selectItemHandler(item: ZyfraMenuAppItem): void {\r\n    this.selectItem.emit(item);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "isOpen": {
                    "name": "isOpen",
                    "setSignature": {
                        "name": "isOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 59
                    }
                },
                "transitionStyles": {
                    "name": "transitionStyles",
                    "getSignature": {
                        "name": "transitionStyles",
                        "type": "",
                        "returnType": "Record<string, string>",
                        "line": 88
                    }
                }
            },
            "templateData": "<div\r\n  #wrapper\r\n  class=\"menu-applications\"\r\n  [class]=\"isOpen ? 'menu-applications_opened' : 'menu-applications_closed'\"\r\n  [style]=\"transitionStyles\"\r\n>\r\n  <div class=\"menu-applications-wrapper\">\r\n    <zyfra-splitter [minSizes]=\"[2, 1]\" styleClass=\"menu-splitter\" panelStyleClass=\"menu-splitter__panel\">\r\n      <ng-template zyfraSplitterTemplate>\r\n        <ul class=\"menu-applications-list menu-applications-list__top\">\r\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: topMenuItems }\"></ng-container>\r\n        </ul>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <ul class=\"menu-applications-list menu-applications-list__bottom\">\r\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: bottomMenuItems }\"></ng-container>\r\n        </ul>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #itemList let-items>\r\n  <zyfra-menu-applications-item\r\n    *ngFor=\"let item of items\"\r\n    [item]=\"item\"\r\n    [isActive]=\"item === activeItem\"\r\n    [zyfraHint]=\"hint\"\r\n    [zyfraHintContext]=\"item\"\r\n    [zyfraHintDelay]=\"hintDelay\"\r\n    (click)=\"selectItemHandler(item)\"\r\n  ></zyfra-menu-applications-item>\r\n</ng-template>\r\n\r\n<ng-template #hint let-item>\r\n  <div class=\"menu-applications-hint\">\r\n    <div class=\"menu-applications-hint__title\">{{ item.title }}</div>\r\n    <div class=\"menu-applications-hint__desc\" *ngIf=\"item.description\">{{ item.description }}</div>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "ZyfraMenuApplicationsItemComponent",
            "id": "component-ZyfraMenuApplicationsItemComponent-d4a55dbb5151232a08b455f4a6edb637fab2e418493a2c175ba52b4f72262c6fc54ac2345af3fe79510eef8925bd59c4bb9d7553038c96d24c8fe0918a54651d",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ZyfraMenuAppItem",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { ZyfraMenuAppItem } from '../zyfra-menu-applications.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-applications-item',\r\n  templateUrl: './zyfra-menu-applications-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraMenuApplicationsItemComponent {\r\n  @Input() item: ZyfraMenuAppItem;\r\n  @Input() isActive = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div\r\n  class=\"zyfra-menu-applications-item\"\r\n  [class.zyfra-menu-applications-item_active]=\"isActive\"\r\n>\r\n  <zyfra-icon [iconClass]=\"item.icon\" class=\"zyfra-menu-applications-item__icon\"></zyfra-icon>\r\n  <span class=\"zyfra-menu-applications-item__title\">{{ item.title }}</span>\r\n  <zyfra-icon class=\"zyfra-menu-applications-item__arrow\" iconClass=\"arrows-arrow-right\"></zyfra-icon>\r\n</div>\r\n"
        },
        {
            "name": "ZyfraMessageComponent",
            "id": "component-ZyfraMessageComponent-ae1dee140f6445d29243f0c9c66c5b81cc92ac4ba2bb53100f92f91b47b673eb51a6578cfa1553f2b1f2ac9fcca2082368626eff9eb060ade91d08c3f89046de",
            "file": "libs/components/src/lib/message/zyfra-message.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableService",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "escape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-message',\r\n  templateUrl: './zyfra-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [],\r\n  providers: [MessageService],\r\n})\r\nexport class ZyfraMessageComponent implements OnInit {\r\n  //---- message component --------\r\n  @Input() value: any[];\r\n  @Input() closable: boolean = true;\r\n  @Input() style: string = '';\r\n  @Input() styleClass: string = '';\r\n  @Input() enableService: boolean = true;\r\n  @Input() escape: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n\r\n  // --- for message service -----\r\n  // @Input() severity:string;\r\n  // @Input() summary:string;\r\n  // @Input() detail:string;\r\n  // @Input() id:any;\r\n  // @Input() life:number    = 3000;\r\n  // @Input() sticky:boolean = false;\r\n  // @Input() data:any;\r\n\r\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  clear() {\r\n    this.value = [];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-messages\r\n  [(value)]=\"value\"\r\n  [closable]=\"closable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [enableService]=\"enableService\"\r\n  [escape]=\"escape\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n></p-messages>\r\n"
        },
        {
            "name": "ZyfraNavMenuComponent",
            "id": "component-ZyfraNavMenuComponent-e1a37241e8526e68fe096be39d18cd2708174327ecfcd078ed6a96ffda8add77c993c63dfaf442f3cc38540259701411fa1385390ba0d57351c89c46b143c2e1",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerConfig",
                    "defaultValue": "{\r\n    settings: false,\r\n    home: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "HeaderConfig",
                    "decorators": []
                },
                {
                    "name": "menuTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "[]",
                    "decorators": []
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "[]",
                    "decorators": []
                },
                {
                    "name": "searchPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "settingsConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "SettingsConfig",
                    "decorators": []
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "ToolbarConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter"
                },
                {
                    "name": "homeClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<NavMenuSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_settings",
                    "defaultValue": "DEFAULT_SETTINGS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "groupNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[][]",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "headerExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "itemExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'navMenu'"
                        }
                    ]
                },
                {
                    "name": "menuGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraNavMenuGroupDirective>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "name": "settingsPanelConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "toolbarExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [
                {
                    "name": "activeElement",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLElement",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applySettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "copyConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "expandBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasActive",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToActiveElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ZyfraNavMenuGroupDirective } from '../../directives/nav-menu-group.directive';\r\nimport { Router } from '@angular/router';\r\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\r\nimport { Subject } from 'rxjs';\r\nimport { convertToNode } from '../../utils/treeNode.functions';\r\nimport {\r\n  DEFAULT_SETTINGS,\r\n  HeaderConfig,\r\n  NavMenuEvent,\r\n  NavMenuSelectionEvent,\r\n  SettingsConfig,\r\n  ToolbarConfig\r\n} from '../../model/nav-menu-config';\r\nimport { ZyfraTemplateDirective } from '../../../@shared/zyfra-template.directives';\r\n\r\n@Component({\r\n  selector: 'zyfra-nav-menu',\r\n  templateUrl: './zyfra-nav-menu.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuComponent implements AfterViewInit, AfterContentInit, OnDestroy {\r\n  @ViewChild('navMenu') menu: ElementRef;\r\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\r\n  @ContentChildren(ZyfraNavMenuGroupDirective) menuGroups: QueryList<ZyfraNavMenuGroupDirective>;\r\n  @Input() menuTitle: string;\r\n  @Input() emptyMessage: string;\r\n  @Input() searchPlaceholder: string = '';\r\n  @Input() toolbarConfig: ToolbarConfig;\r\n\r\n  @Input() get settingsConfig(): SettingsConfig {\r\n    return this._settings;\r\n  }\r\n\r\n  set settingsConfig(settings: SettingsConfig) {\r\n    if (!settings) {\r\n      return;\r\n    }\r\n    this._settings = { ...DEFAULT_SETTINGS, ...settings };\r\n  };\r\n\r\n  @Input() headerConfig: HeaderConfig = {\r\n    settings: false,\r\n    home: false\r\n  };\r\n\r\n  @Input() set model(items: ZyfraMenuItem[]) {\r\n    this.nodes = (items || []).map(item => convertToNode(item));\r\n  }\r\n\r\n  @Input() set nodes(nodes: TreeNode[]) {\r\n    this._nodes = nodes;\r\n  }\r\n\r\n  get nodes(): TreeNode[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  @Output() homeClick = new EventEmitter<void>();\r\n  @Output() selectionChange = new EventEmitter<NavMenuSelectionEvent>();\r\n  @Output() nodeExpand = new EventEmitter<NavMenuEvent>();\r\n  @Output() nodeCollapse = new EventEmitter<NavMenuEvent>();\r\n  @Output() activeItemChange = new EventEmitter<NavMenuEvent>();\r\n\r\n\r\n  headerExtraTemplate: TemplateRef<any>;\r\n  toolbarExtraTemplate: TemplateRef<any>;\r\n  itemExtraTemplate: TemplateRef<any>;\r\n\r\n  settingsPanelConfig: SettingsConfig;\r\n  activeNode: TreeNode;\r\n  groupNodes: TreeNode[][] = [];\r\n  activeGroup: number;\r\n\r\n  private _activeNode: TreeNode;\r\n  private _settings: SettingsConfig = DEFAULT_SETTINGS;\r\n  private _nodes: TreeNode[] = [];\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private cdr: ChangeDetectorRef,\r\n              private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.menuGroups) {\r\n      this.menuGroups.forEach(({ items }: ZyfraNavMenuGroupDirective) => {\r\n        this.groupNodes.push(items.map((item: ZyfraMenuItem) => convertToNode(item)));\r\n      });\r\n    }\r\n\r\n    this.templates.forEach((item) => {\r\n      switch (item.zyfraTemplate) {\r\n        case 'header':\r\n          this.headerExtraTemplate = item.templateRef;\r\n          break;\r\n        case 'toolbar':\r\n          this.toolbarExtraTemplate = item.templateRef;\r\n          break;\r\n        case 'menuitem':\r\n          this.itemExtraTemplate = item.templateRef;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    let activeGroup;\r\n    if (this.groupNodes.length) {\r\n      this.groupNodes.some((nodes, groupIndex) =>\r\n        nodes.some((node) => {\r\n          const isActiveGroup = this.hasActive(node);\r\n          if (isActiveGroup) {\r\n            activeGroup = groupIndex;\r\n          }\r\n          return isActiveGroup;\r\n        }));\r\n    } else {\r\n      this.nodes.some(node => this.hasActive(node));\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this.activeNode = this._activeNode;\r\n      this.activeGroup = activeGroup;\r\n      if (this.activeNode) {\r\n        this.expandBranchFrom(this.activeNode);\r\n        setTimeout(() => this.scrollToActiveElement(), 500);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  nodeCollapseHandler(node: TreeNode, groupIndex?: number): void {\r\n    this.nodeCollapse.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  nodeExpandHandler(node: TreeNode, groupIndex?: number): void {\r\n    this.nodeExpand.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  updateActiveItem(node: TreeNode, groupIndex?: number): void {\r\n    this.activeItemChange.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  copyConfig(): void {\r\n    this.settingsPanelConfig = { ...this.settingsConfig };\r\n  }\r\n\r\n  applySettings(): void {\r\n    this.settingsConfig = this.settingsPanelConfig;\r\n  }\r\n\r\n  selectionChangeHandler(selection: TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[], groupIndex?: number): void {\r\n    let selectionData;\r\n    if (selection) {\r\n      selectionData = Array.isArray(selection)\r\n        ? selection.map(node => node.data)\r\n        : selection.data;\r\n    }\r\n    this.selectionChange.emit({ selection: selectionData, groupIndex });\r\n  }\r\n\r\n  private hasActive(node: TreeNode): boolean {\r\n    if (this.isSelected(node)) {\r\n      return true;\r\n    }\r\n    if (node.children) {\r\n      return node.children.some(childNode => this.isSelected(childNode) || this.hasActive(childNode));\r\n    }\r\n    return this.isSelected(node);\r\n  }\r\n\r\n  private isSelected(node: TreeNode): boolean {\r\n    if (node.data.routerLink) {\r\n      const isActive = this.isActive(node.data);\r\n      if (isActive) {\r\n        node.styleClass = 'active';\r\n        this._activeNode = node;\r\n      }\r\n      return isActive;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isActive(item: ZyfraMenuItem): boolean {\r\n    return item.routerLink && this.router.isActive(this.router.createUrlTree(item.routerLink), {\r\n      paths: 'subset',\r\n      queryParams: 'subset',\r\n      fragment: 'ignored',\r\n      matrixParams: 'ignored'\r\n    });\r\n  }\r\n\r\n  private expandBranchFrom(node: TreeNode): void {\r\n    if (node.parent) {\r\n      node.parent.expanded = true;\r\n      this.expandBranchFrom(node.parent);\r\n    } else {\r\n      node.expanded = true;\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private scrollToActiveElement(): void {\r\n    const activeItem = this.activeElement();\r\n    if (activeItem) {\r\n      activeItem.scrollIntoView({ block: 'center', behavior: 'smooth' })\r\n    }\r\n  }\r\n\r\n  private activeElement(): HTMLElement {\r\n    return this.menu.nativeElement.querySelector('.p-treenode.active');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 96,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterContentInit",
                "OnDestroy"
            ],
            "accessors": {
                "settingsConfig": {
                    "name": "settingsConfig",
                    "setSignature": {
                        "name": "settingsConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "settingsConfig",
                        "type": "",
                        "returnType": "SettingsConfig",
                        "line": 49
                    }
                },
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 69,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 73
                    }
                }
            },
            "templateData": "<div class=\"zyfra-nav-menu p-component\" #navMenu>\r\n\r\n  <div class=\"header\" #header>\r\n    <div class=\"app-name\">{{menuTitle}}</div>\r\n    <div class=\"right-side\">\r\n      <ng-container *ngTemplateOutlet=\"headerExtraTemplate\"></ng-container>\r\n      <i *ngIf=\"headerConfig?.settings\" class=\"toolbar-button zyfra-icon settings-tune\"\r\n         (click)=\"copyConfig(); settingPanel.show($event, header)\"></i>\r\n      <i *ngIf=\"headerConfig?.home\" class=\"toolbar-button zyfra-icon social-home\"\r\n         (click)=\"homeClick.emit()\"></i>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"nav-menu-content\"\r\n       [ngClass]=\"settingsConfig?.selectedSize\">\r\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\r\n      <zyfra-accordion [multiple]=\"!settingsConfig.singleGroup\">\r\n        <zyfra-accordion-tab *ngFor=\"let group of menuGroups; let i = index\" [selected]=\"i === activeGroup\">\r\n          <ng-template zyfraTemplate=\"header\">\r\n                        <span class=\"p-accordion-header-text groupHeader\">\r\n                            <i class=\"zyfra-icon vectors-circle\"></i>{{group.header}}\r\n                        </span>\r\n          </ng-template>\r\n          <zyfra-menu-group-content [nodes]=\"groupNodes[i]\"\r\n                                    [selectionMode]=\"settingsConfig.selectionMode\"\r\n                                    [activeNode]=\"activeGroup === i ? activeNode : null\"\r\n                                    [searchPlaceholder]=\"searchPlaceholder\"\r\n                                    [toolbarConfig]=\"toolbarConfig\"\r\n                                    [toolbarExtra]=\"toolbarExtraTemplate\"\r\n                                    [itemExtra]=\"itemExtraTemplate\"\r\n                                    [emptyMessage]=\"emptyMessage\"\r\n                                    (activeItemChange)=\"updateActiveItem($event, i)\"\r\n                                    (selectionChange)=\"selectionChangeHandler($event, i)\"\r\n                                    (nodeCollapse)=\"nodeCollapseHandler($event, i)\"\r\n                                    (nodeExpand)=\"nodeExpandHandler($event, i)\">\r\n          </zyfra-menu-group-content>\r\n        </zyfra-accordion-tab>\r\n      </zyfra-accordion>\r\n    </ng-container>\r\n\r\n    <ng-template #noGroups>\r\n      <zyfra-menu-group-content [nodes]=\"nodes\"\r\n                                [activeNode]=\"activeNode\"\r\n                                [selectionMode]=\"settingsConfig.selectionMode\"\r\n                                [searchPlaceholder]=\"searchPlaceholder\"\r\n                                [toolbarConfig]=\"toolbarConfig\"\r\n                                [toolbarExtra]=\"toolbarExtraTemplate\"\r\n                                [itemExtra]=\"itemExtraTemplate\"\r\n                                [emptyMessage]=\"emptyMessage\"\r\n                                (activeItemChange)=\"updateActiveItem($event)\"\r\n                                (selectionChange)=\"selectionChangeHandler($event)\"\r\n                                (nodeCollapse)=\"nodeCollapseHandler($event)\"\r\n                                (nodeExpand)=\"nodeExpandHandler($event)\">\r\n      </zyfra-menu-group-content>\r\n    </ng-template>\r\n  </div>\r\n\r\n  <p-overlayPanel #settingPanel\r\n                  styleClass=\"settingsPanel\"\r\n                  [dismissable]=\"false\"\r\n                  [appendTo]=\"header\">\r\n    <ng-template pTemplate>\r\n      <div>Настройки навигационой панели</div>\r\n      <div class=\"settings-block\">\r\n        <span>Представление</span>\r\n        <zyfra-checkbox label=\"Одиночный режим групповых панелей\"\r\n                        [(model)]=\"settingsPanelConfig.singleGroup\"></zyfra-checkbox>\r\n        <zyfra-checkbox label=\"Режим множественного выбора элементов\"\r\n                        [model]=\"settingsPanelConfig.selectionMode === 'checkbox'\"\r\n                        (modelChange)=\"settingsPanelConfig.selectionMode = $event ? 'checkbox' : 'single'\"></zyfra-checkbox>\r\n      </div>\r\n      <div class=\"settings-block\">\r\n        <span>Степень компактности</span>\r\n        <p-radioButton name=\"size\"\r\n                       value=\"standard\"\r\n                       label=\"Стандартный вид\"\r\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\r\n        <p-radioButton name=\"size\"\r\n                       value=\"enlarged\"\r\n                       label=\"Увеличенный вид\"\r\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\r\n      </div>\r\n      <div>\r\n        <zyfra-button styleClass=\"p-button-secondary p-button-mini\"\r\n                      label=\"Отмена\"\r\n                      (onClick)=\"settingPanel.hide()\"></zyfra-button>\r\n        <zyfra-button styleClass=\"p-button-mini\"\r\n                      label=\"Подтвердить\"\r\n                      (onClick)=\"applySettings(); settingPanel.hide()\"></zyfra-button>\r\n      </div>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n</div>\r\n"
        },
        {
            "name": "ZyfraNavMenuGroupComponent",
            "id": "component-ZyfraNavMenuGroupComponent-7e162d78aa44ce9f813bdcfea6d23cdfcaed484a589195bfcd0e2bdf10d107e86cfc6b2263f4ab45433517e678925bae4b9e06ba44b1d73101b61a074db5aae0",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-group-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "[]",
                    "decorators": []
                },
                {
                    "name": "search",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "searchPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "toolbarExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter<TreeNode | []>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_toolbarConfig",
                    "defaultValue": "DEFAULT_TOOLBAR_CONFIG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeRootNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentFolder",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "folderIcons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'folderIcons'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "folderPath",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isToolbarNotEmpty",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "pathToActiveNode",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rubricatorNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tree",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Tree"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "treeWrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "viewMode",
                    "defaultValue": "'hierarchy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewMode",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "viewNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "methodsClass": [
                {
                    "name": "changeActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 264,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "changeSearchValue",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeViewMode",
                    "args": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearSearchField",
                    "args": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "collapseAllNodes",
                    "args": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranch",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toLevelUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateIfHasActiveChild",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 302,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateViewNodes",
                    "args": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { Tree } from 'primeng/tree';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { NavMenuService } from '../../service/selection.service';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { fromRubricatorNodes, getPath } from '../../utils/treeNode.functions';\r\nimport {\r\n  DEFAULT_TOOLBAR_CONFIG,\r\n  SelectionType,\r\n  ToolbarConfig,\r\n  ViewMode\r\n} from '../../model/nav-menu-config';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-group-content',\r\n  templateUrl: './zyfra-nav-menu-group.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuGroupComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild(Tree) public tree: Tree;\r\n  @ViewChild('folderIcons') public folderIcons: TemplateRef<any>;\r\n  @Input() itemExtra: TemplateRef<any>;\r\n  @Input() toolbarExtra: TemplateRef<any>;\r\n  @Input() emptyMessage: string;\r\n  @Input() search: boolean = false;\r\n  @Input() searchPlaceholder: string;\r\n\r\n  @Input() set activeNode(node: TreeNode) {\r\n    if (!node) {\r\n      return;\r\n    }\r\n    this.currentFolder = node.parent;\r\n    this.setActiveNode(node);\r\n  }\r\n\r\n  get activeNode(): TreeNode {\r\n    return this._activeNode;\r\n  }\r\n\r\n  @Input() set nodes(nodes: TreeNode[]) {\r\n    if (!nodes) {\r\n      return;\r\n    }\r\n\r\n    this._nodes = nodes;\r\n    this.viewNodes = nodes;\r\n    if (this.toolbarConfig.rubricatorMode) {\r\n      this.rubricatorNodes = fromRubricatorNodes(this.nodes);\r\n    }\r\n  }\r\n\r\n  get nodes(): TreeNode[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  @Input() set selectionMode(mode: SelectionType) {\r\n    this._selectionMode = mode;\r\n    if (this.tree && this.tree.selection) {\r\n      if (Array.isArray(this.tree.selection) && this._selectionMode === 'single') {\r\n        this.setActiveNode(this.activeNode);\r\n      }\r\n      if (!Array.isArray(this.tree.selection) && this._selectionMode === 'checkbox') {\r\n        this.tree.selection = [this.tree.selection];\r\n      }\r\n    }\r\n  }\r\n\r\n  get selectionMode(): SelectionType {\r\n    return this._selectionMode;\r\n  }\r\n\r\n  @Input() set toolbarConfig(config: ToolbarConfig) {\r\n    if (!config) {\r\n      return;\r\n    }\r\n    this._toolbarConfig = { ...DEFAULT_TOOLBAR_CONFIG, ...config };\r\n    this.isToolbarNotEmpty = Object.values(this._toolbarConfig).some(value => value);\r\n  }\r\n\r\n  get toolbarConfig(): ToolbarConfig {\r\n    return this._toolbarConfig;\r\n  }\r\n\r\n  @Output() selectionChange: EventEmitter<TreeNode | TreeNode[]> = new EventEmitter();\r\n  @Output() activeItemChange: EventEmitter<TreeNode> = new EventEmitter();\r\n  @Output() nodeExpand: EventEmitter<TreeNode> = new EventEmitter();\r\n  @Output() nodeCollapse: EventEmitter<TreeNode> = new EventEmitter();\r\n\r\n  isToolbarNotEmpty: boolean = false;\r\n  viewNodes: TreeNode[] = [];\r\n  viewMode: ViewMode = 'hierarchy';\r\n  currentFolder: TreeNode = null;\r\n\r\n  private _selectionMode: SelectionType = 'single';\r\n  private _nodes: TreeNode[] = [];\r\n  private _activeNode: TreeNode;\r\n  private _toolbarConfig: ToolbarConfig = DEFAULT_TOOLBAR_CONFIG;\r\n  private activeRootNode: TreeNode;\r\n  private treeWrapper: Element;\r\n  private rubricatorNodes: TreeNode[] = [];\r\n  private pathToActiveNode = [];\r\n  private folderPath = [];\r\n  private destroyed$ = new Subject();\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private cdr: ChangeDetectorRef,\r\n              private navMenuService: NavMenuService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.navMenuService.selection$\r\n      .pipe(\r\n        filter(() => Boolean(this.tree)),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(value => {\r\n        if (value !== this.activeNode) {\r\n          this.resetActiveParent();\r\n          if (this.selectionMode === 'single') {\r\n            if (this.tree.selection) {\r\n              this.tree.selection = null;\r\n              this.selectionChange.emit(this.tree.selection);\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const embeddedViewRef = this.viewContainerRef.createEmbeddedView(this.folderIcons);\r\n    this.treeWrapper = this.tree.el.nativeElement.querySelector('.p-tree-wrapper');\r\n    this.renderer.appendChild(this.treeWrapper, embeddedViewRef.rootNodes[0]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  selectionChangeHandler(selection: TreeNode | TreeNode[]): void {\r\n    this.selectionChange.emit(selection);\r\n  };\r\n\r\n  nodeCollapseHandler(node: TreeNode): void {\r\n    this.nodeCollapse.emit(node);\r\n    this.currentFolder = node.parent;\r\n    this.updateIfHasActiveChild(node);\r\n  }\r\n\r\n  nodeExpandHandler(node: TreeNode): void {\r\n    if (node === this.activeRootNode) {\r\n      this.changeActiveParent();\r\n    }\r\n    this.setCurrentNode(node);\r\n    this.nodeExpand.emit(node);\r\n  }\r\n\r\n  setActiveNode(node: TreeNode): void {\r\n    this.resetActiveParent();\r\n    if (this.selectionMode === 'single') {\r\n      this.tree.selection = node;\r\n      this.selectionChange.emit(this.tree.selection);\r\n      this._activeNode = node;\r\n      this.navMenuService.selectionChange(node);\r\n    } else {\r\n      if (this._activeNode) {\r\n        this._activeNode.styleClass = '';\r\n      }\r\n      this._activeNode = node;\r\n      this._activeNode.styleClass = 'active';\r\n    }\r\n    this.pathToActiveNode = getPath(node);\r\n    if (this.viewMode === 'folder') {\r\n      this.pathToActiveNode = [...this.folderPath, getPath(node)[1]];\r\n    }\r\n    this.activeItemChange.emit(node);\r\n  }\r\n\r\n  toLevelUp(): void {\r\n    this.currentFolder.expanded = false;\r\n    this.nodeCollapseHandler(this.currentFolder);\r\n    this.currentFolder = this.folderPath.pop();\r\n    this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  toTop(): void {\r\n    this.collapseBranchFrom(this.currentFolder);\r\n    this.currentFolder = null;\r\n    this.viewNodes = this.nodes;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  closeAll(): void {\r\n    if (this.viewMode === 'folder') {\r\n      this.toTop();\r\n    } else {\r\n      this.collapseAllNodes();\r\n    }\r\n    this.currentFolder = null;\r\n  }\r\n\r\n  changeViewMode(triggeredMode: ViewMode): void {\r\n    if (this.viewMode === 'rubricator') {\r\n      this.currentFolder = null;\r\n    }\r\n    this.viewMode = this.viewMode === triggeredMode\r\n      ? 'hierarchy'\r\n      : triggeredMode;\r\n    this.updateViewNodes(this.viewMode);\r\n  }\r\n\r\n  toggleSearch(): void {\r\n    this.changeSearchValue('');\r\n    this.search = !this.search;\r\n  }\r\n\r\n  changeSearchValue(searchString: string): void {\r\n    this.tree._filter(searchString);\r\n  }\r\n\r\n  clearSearchField(field: HTMLInputElement): void {\r\n    field.value = '';\r\n    this.changeSearchValue('');\r\n    field.focus();\r\n  }\r\n\r\n\r\n  private setCurrentNode(node: TreeNode): void {\r\n    if (this.viewMode === 'folder') {\r\n      this.folderPath.push(this.currentFolder);\r\n      this.viewNodes = [node];\r\n    }\r\n    this.currentFolder = node;\r\n  }\r\n\r\n  private resetActiveParent(): void {\r\n    if (this.activeRootNode && this.pathToActiveNode) {\r\n      this.pathToActiveNode.forEach(node => {\r\n        if (node) {\r\n          node.styleClass = '';\r\n        }\r\n      });\r\n      this.activeRootNode = null;\r\n    }\r\n  }\r\n\r\n  private changeActiveParent(): void {\r\n    if (this.activeRootNode) {\r\n      this.activeRootNode.styleClass = '';\r\n      this.activeRootNode = this.pathToActiveNode.find(node => node?.styleClass === 'active-root');\r\n    }\r\n  }\r\n\r\n  private collapseBranchFrom(node: TreeNode): void {\r\n    this.updateIfHasActiveChild(node);\r\n    node.expanded = false;\r\n    while (this.folderPath.length) {\r\n      const parent = this.folderPath.pop();\r\n      if (parent) {\r\n        parent.expanded = false;\r\n      }\r\n      this.updateIfHasActiveChild(parent);\r\n    }\r\n  }\r\n\r\n  private collapseAllNodes(excludeBranch?: TreeNode): void {\r\n    this.viewNodes.forEach(node => {\r\n      if (node !== excludeBranch) {\r\n        this.collapseBranch(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private collapseBranch(node: TreeNode): void {\r\n    node.expanded = false;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.updateIfHasActiveChild(childNode);\r\n        this.collapseBranch(childNode);\r\n      });\r\n    }\r\n    this.updateIfHasActiveChild(node);\r\n  }\r\n\r\n  private updateIfHasActiveChild(node: TreeNode): void {\r\n    if (node && this.pathToActiveNode.includes(node)) {\r\n      this.activeRootNode = node;\r\n      this.activeRootNode.styleClass = 'active-root';\r\n    }\r\n  }\r\n\r\n  private updateViewNodes(newMode: ViewMode): void {\r\n    if (newMode === 'rubricator') {\r\n      if (!this.rubricatorNodes.length) {\r\n        this.rubricatorNodes = fromRubricatorNodes(this.nodes);\r\n      }\r\n      this.viewNodes = this.rubricatorNodes;\r\n    } else if (newMode === 'folder') {\r\n      if (this.currentFolder) {\r\n        this.folderPath = getPath(this.currentFolder);\r\n        this.collapseAllNodes(this.folderPath[1] || this.currentFolder);\r\n        this.currentFolder.expanded = true;\r\n      }\r\n      this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\r\n    } else {\r\n      this.viewNodes = this.nodes;\r\n    }\r\n    if (this.search) {\r\n      this.toggleSearch();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 118,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "activeNode": {
                    "name": "activeNode",
                    "setSignature": {
                        "name": "activeNode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "jsdoctags": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeNode",
                        "type": "",
                        "returnType": "TreeNode",
                        "line": 51
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 67
                    }
                },
                "selectionMode": {
                    "name": "selectionMode",
                    "setSignature": {
                        "name": "selectionMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "selectionMode",
                        "type": "",
                        "returnType": "SelectionType",
                        "line": 83
                    }
                },
                "toolbarConfig": {
                    "name": "toolbarConfig",
                    "setSignature": {
                        "name": "toolbarConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 87,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "toolbarConfig",
                        "type": "",
                        "returnType": "ToolbarConfig",
                        "line": 95
                    }
                }
            },
            "templateData": "<p-tree #headerToolbar\r\n        filterBy=\"label\"\r\n        filterMode=\"strict\"\r\n        [value]=\"viewNodes\"\r\n        [class.folder-open]=\"viewMode === 'folder' && currentFolder\"\r\n        [emptyMessage]=\"'<Нет данных для отображения>'\"\r\n        [selectionMode]=\"selectionMode\"\r\n        [filterPlaceholder]=\"searchPlaceholder\"\r\n        (selectionChange)=\"selectionChangeHandler($event)\"\r\n        (onNodeCollapse)=\"nodeCollapseHandler($event.node)\"\r\n        (onNodeExpand)=\"nodeExpandHandler($event.node)\">\r\n\r\n    <ng-template *ngIf=\"isToolbarNotEmpty || toolbarExtra\" pTemplate=\"header\">\r\n        <div class=\"header header-toolbar\">\r\n            <div class=\"right-side\">\r\n                <ng-container *ngTemplateOutlet=\"toolbarExtra\"></ng-container>\r\n                <i *ngIf=\"toolbarConfig.filesMode\" class=\"toolbar-button zyfra-icon files-mode\"\r\n                   [class.active]=\"viewMode === 'folder'\"\r\n                   (click)=\"changeViewMode('folder')\"></i>\r\n                <i *ngIf=\"toolbarConfig.rubricatorMode\" class=\"toolbar-button zyfra-icon editor-alfavit\"\r\n                   [class.active]=\"viewMode === 'rubricator'\"\r\n                   (click)=\"changeViewMode('rubricator')\"></i>\r\n                <i *ngIf=\"toolbarConfig.closeAll\" class=\"toolbar-button zyfra-icon chevrons-close-all\"\r\n                   (click)=\"closeAll()\"></i>\r\n                <i *ngIf=\"toolbarConfig.search\" class=\"toolbar-button zyfra-icon sort-zoom-in\"\r\n                   [class.active]=\"search\"\r\n                   (click)=\"toggleSearch()\"></i>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"search\"\r\n             class=\"header header-search-bar\">\r\n            <span class=\"search-bar p-input-icon-left p-input-icon-right\">\r\n                <i class=\"toolbar-button zyfra-icon sort-zoom-in\"></i>\r\n                <i class=\"toolbar-button zyfra-icon tools-broom\"\r\n                   [class.hidden]=\"!searchField.value\"\r\n                   (click)=\"clearSearchField(searchField)\"></i>\r\n                <input #searchField\r\n                       class=\"search-bar-field\"\r\n                       pInputText\r\n                       zyfraAutofocus\r\n                       type=\"text\"\r\n                       [placeholder]=\"searchPlaceholder\"\r\n                       (input)=\"changeSearchValue($event.target.value)\"/>\r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template let-node pTemplate=\"default\">\r\n        <zyfra-nav-menu-item [item]=\"node.data\"\r\n                             (itemClick)=\"setActiveNode(node)\" [itemExtra]=\"itemExtra\">\r\n        </zyfra-nav-menu-item>\r\n    </ng-template>\r\n</p-tree>\r\n\r\n<ng-template #folderIcons>\r\n    <div class=\"folder-icons\" [class.visible]=\"this.viewMode === 'folder' && currentFolder\">\r\n        <i class=\"toolbar-button zyfra-icon arrows-corner-left-up\" (click)=\"toLevelUp()\"></i>\r\n        <i class=\"toolbar-button zyfra-icon arrows-arrow-up-level\" (click)=\"toTop()\"></i>\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "ZyfraNavMenuItemComponent",
            "id": "component-ZyfraNavMenuItemComponent-bb0730cc543edffd0a279c5901c8e6966b2cf0ff2ece213b204666f594290c4e2f8833b9ab1ce90237b784aff50fe0a74a3cdab7c006135914ab77a268ff4540",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ZyfraMenuItem",
                    "decorators": []
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<ZyfraMenuItem>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "itemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-nav-menu-item',\r\n  templateUrl: './zyfra-nav-menu-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuItemComponent {\r\n  @Input() item: ZyfraMenuItem;\r\n  @Input() itemExtra: TemplateRef<any>;\r\n\r\n  @Output() itemClick: EventEmitter<ZyfraMenuItem> = new EventEmitter();\r\n\r\n  itemClickHandler(event: MouseEvent, item: ZyfraMenuItem): void {\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault();\r\n    }\r\n    if (item.command) {\r\n      item.command({\r\n        originalEvent: event,\r\n        item\r\n      });\r\n    }\r\n    this.itemClick.emit(item);\r\n  }\r\n\r\n  onItemKeyDown(event): void {\r\n    const listItem = event.currentTarget.parentElement;\r\n    switch (event.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        if (listItem) {\r\n          listItem.children[0].click();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"p-menuitem-wrapper\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"p-menuitem-content\"\r\n         pTooltip\r\n         [class]=\"item.styleClass\"\r\n         [ngClass]=\"{'p-hidden': item.visible === false}\"\r\n         [ngStyle]=\"item.style\"\r\n         [tooltipOptions]=\"item.tooltipOptions\">\r\n        <a *ngIf=\"!item.routerLink\"\r\n           class=\"p-menuitem-link\"\r\n           role=\"menuitem\"\r\n           [attr.href]=\"item.url||null\"\r\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\r\n           [attr.data-automationid]=\"item.automationId\"\r\n           [attr.target]=\"item.target\"\r\n           [attr.title]=\"item.title\"\r\n           [attr.id]=\"item.id\"\r\n           [ngClass]=\"{'p-disabled':item.disabled}\"\r\n           (keydown)=\"onItemKeyDown($event)\"\r\n           (click)=\"itemClickHandler($event, item)\">\r\n            <span *ngIf=\"item.icon\"\r\n                  class=\"p-menuitem-icon\"\r\n                  [ngClass]=\"item.icon\">\r\n            </span>\r\n            <span *ngIf=\"item.escape !== false; else htmlLabel\"\r\n                  #label\r\n                  class=\"p-menuitem-text\"\r\n                  position=\"below\"\r\n                  [zyfraHint]=\"item.label\"\r\n                  [hasOverflowText]=\"label\">{{item.label}}\r\n            </span>\r\n            <ng-template #htmlLabel>\r\n                <span #label\r\n                      class=\"p-menuitem-text\"\r\n                      position=\"below\"\r\n                      [zyfraHint]=\"item.label\"\r\n                      [hasOverflowText]=\"label\"\r\n                      [innerHTML]=\"item.label\">\r\n                </span>\r\n            </ng-template>\r\n        </a>\r\n        <a *ngIf=\"item.routerLink\"\r\n           class=\"p-menuitem-link\"\r\n           role=\"menuitem\"\r\n           [routerLink]=\"item.routerLink\"\r\n           [attr.data-automationid]=\"item.automationId\"\r\n           [queryParams]=\"item.queryParams\"\r\n           [routerLinkActive]=\"'p-menuitem-link-active'\"\r\n           [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\r\n           [attr.target]=\"item.target\"\r\n           [attr.id]=\"item.id\"\r\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\r\n           [attr.title]=\"item.title\"\r\n           [ngClass]=\"{'p-disabled':item.disabled}\"\r\n           [fragment]=\"item.fragment\"\r\n           [queryParamsHandling]=\"item.queryParamsHandling\"\r\n           [preserveFragment]=\"item.preserveFragment\"\r\n           [skipLocationChange]=\"item.skipLocationChange\"\r\n           [replaceUrl]=\"item.replaceUrl\"\r\n           [state]=\"item.state\"\r\n           (keydown)=\"onItemKeyDown($event)\"\r\n           (click)=\"itemClickHandler($event, item)\">\r\n            <span *ngIf=\"item.icon\"\r\n                  class=\"p-menuitem-icon\"\r\n                  [ngClass]=\"item.icon\">\r\n            </span>\r\n            <span *ngIf=\"item.escape !== false; else htmlRouteLabel\"\r\n                  #label\r\n                  class=\"p-menuitem-text\"\r\n                  position=\"below\"\r\n                  [zyfraHint]=\"item.label\"\r\n                  [hasOverflowText]=\"label\">{{item.label}}\r\n            </span>\r\n            <ng-template #htmlRouteLabel>\r\n                <span #label\r\n                      class=\"p-menuitem-text\"\r\n                      position=\"below\"\r\n                      [zyfraHint]=\"item.label\"\r\n                      [hasOverflowText]=\"label\"\r\n                      [innerHTML]=\"item.label\">\r\n                </span>\r\n            </ng-template>\r\n        </a>\r\n\r\n        <ng-container *ngTemplateOutlet=\"itemExtra; context: { $implicit: item }\"></ng-container>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ZyfraPaginatorComponent",
            "id": "component-ZyfraPaginatorComponent-02497c6dcdf6f7c7aaccb8ce919da4ebd6741db1eacb31e1f87d70064fa9d20d67a541c28aa87f4bafb595655222524cf6f5b0bdff00f1fd875a7ce65a647d9f",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alwaysShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to show it even there is only one page.\n",
                    "description": "<p>Whether to show it even there is only one page.</p>\n",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "currentPageReportTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTemplate of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dropdownAppendTo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTarget element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n",
                    "description": "<p>Target element to attach the dropdown overlay, valid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name).</p>\n",
                    "line": 71,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "dropdownItemTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTemplate instance to inject into the dropdown item inside in the paginator.\n",
                    "description": "<p>Template instance to inject into the dropdown item inside in the paginator.</p>\n",
                    "line": 66,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "dropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</code></pre></div>",
                    "line": 75,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tZero-relative number of the first row to be displayed.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Zero-relative number of the first row to be displayed.</code></pre></div>",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageLinkSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tNumber of page links to display.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Number of page links to display.</code></pre></div>",
                    "line": 33,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Data count to display per page.\n",
                    "description": "<p> Data count to display per page.</p>\n",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nArray of integer/object values to display inside rows per page dropdown.\nA object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n",
                    "description": "<p>Array of integer/object values to display inside rows per page dropdown.\nA object that have &#39;showAll&#39; key can be added to it to show all data. Exp; [10,20,30,{showAll:&#39;All&#39;}]</p>\n",
                    "line": 38,
                    "type": "PageOption[]",
                    "decorators": []
                },
                {
                    "name": "showCurrentPageReport",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether to display current page report.\n",
                    "description": "<p>Whether to display current page report.</p>\n",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhen enabled, icons are displayed on paginator to go first and last page.\n",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page.</p>\n",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showJumpToPageDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tWhether to display a dropdown to navigate to any page.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Whether to display a dropdown to navigate to any page.</code></pre></div>",
                    "line": 88,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tWhether to show page links.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Whether to show page links.</code></pre></div>",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tInline style of the component.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Inline style of the component.</code></pre></div>",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n\tStyle class of the component.\n",
                    "description": "<div><pre class=\"line-numbers\"><code class=\"language-none\">Style class of the component.</code></pre></div>",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "templateLeft",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTemplate instance to inject into the left side of the paginator.\n",
                    "description": "<p>Template instance to inject into the left side of the paginator.</p>\n",
                    "line": 58,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "templateRight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTemplate instance to inject into the right side of the paginator.\n",
                    "description": "<p>Template instance to inject into the right side of the paginator.</p>\n",
                    "line": 62,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNumber of total records.\n",
                    "description": "<p>Number of total records.</p>\n",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-paginator\r\n  class=\"zyfra-paginator\"\r\n  [rows]=\"rows\"\r\n  [totalRecords]=\"totalRecords\"\r\n  [pageLinkSize]=\"pageLinkSize\"\r\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [alwaysShow]=\"alwaysShow\"\r\n  [showFirstLastIcon]=\"showFirstLastIcon\"\r\n  [templateLeft]=\"templateLeft\"\r\n  [templateRight]=\"templateRight\"\r\n  [dropdownItemTemplate]=\"dropdownItemTemplate\"\r\n  [dropdownAppendTo]=\"dropdownAppendTo\"\r\n  [dropdownScrollHeight]=\"dropdownScrollHeight\"\r\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n  [showCurrentPageReport]=\"showCurrentPageReport\"\r\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n  [showPageLinks]=\"showPageLinks\"\r\n  (onPageChange)=\"onPageChange($event)\"\r\n></p-paginator>\r\n"
        },
        {
            "name": "ZyfraPasswordComponent",
            "id": "component-ZyfraPasswordComponent-0effbb7bdd73057b8a0d3927f3f815bfd192753ece7a76af43254901ce5c36eea6f94f208b8fa3de4c9350ffb60cc6dd0a4f24afe889f72e2cdfb51b8f1b2f81",
            "file": "libs/components/src/lib/password/zyfra-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "feedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mediumLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mediumRegex",
                    "defaultValue": "'Regex for a medium level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "promptLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "strongLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "strongRegex",
                    "defaultValue": "'Regex for a strong level password.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "toggleMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "weakLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-password',\r\n  templateUrl: './zyfra-password.component.html',\r\n})\r\nexport class ZyfraPasswordComponent {\r\n  @Input() value: string;\r\n  @Input() promptLabel: string;\r\n  @Input() mediumRegex = 'Regex for a medium level password.';\r\n  @Input() strongRegex = 'Regex for a strong level password.';\r\n  @Input() weakLabel: string;\r\n  @Input() mediumLabel: string;\r\n  @Input() strongLabel: string;\r\n  @Input() feedback = true;\r\n  @Input() toggleMask: boolean;\r\n  @Input() appendTo: string;\r\n  @Input() inputStyle: any;\r\n  @Input() inputStyleClass: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() disabled: boolean;\r\n  @Input() label = '';\r\n  @Input() required = '';\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-password\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [promptLabel]=\"promptLabel\"\r\n    [mediumRegex]=\"mediumRegex\"\r\n    [strongRegex]=\"strongRegex\"\r\n    [weakLabel]=\"weakLabel\"\r\n    [disabled]=\"disabled\"\r\n    [mediumLabel]=\"mediumLabel\"\r\n    [strongLabel]=\"strongLabel\"\r\n    [feedback]=\"feedback\"\r\n    [toggleMask]=\"toggleMask\"\r\n    [appendTo]=\"appendTo\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n  ></p-password>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraProgressBarComponent",
            "id": "component-ZyfraProgressBarComponent-78732359cf93a16107996139f229417b57a709e0c89d39e9f7d34f7bc5b7c5a29ff00c11c5003ca28eb6493ccd442f08aebc1b212a300a062dacf628eabf2f02",
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "defaultValue": "'determinate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"determinate\" | \"indeterminate\"",
                    "decorators": []
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unit",
                    "defaultValue": "'%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-progress-bar',\r\n  templateUrl: './zyfra-progress-bar.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraProgressBarComponent {\r\n  @Input() value: number = null;\r\n  @Input() showValue: boolean = true;\r\n  @Input() unit: string = '%';\r\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\r\n  @Input() style: { [key: string]: string | null } = null;\r\n  @Input() styleClass: string = null;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-progressBar\r\n  [value]=\"value\"\r\n  [showValue]=\"showValue\"\r\n  [unit]=\"unit\"\r\n  [mode]=\"mode\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n>\r\n</p-progressBar>\r\n"
        },
        {
            "name": "ZyfraRadioButtonComponent",
            "id": "component-ZyfraRadioButtonComponent-46128168b7a5af53d4f93488732e8b83ff15c6861c3be1b16c7bd76350894ab2f38485559e7e1f07c5647abac339ac31dd9f989b334873c5773a8e8410e250c1",
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RADIO_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-radio-button",
            "styleUrls": [
                "./zyfra-radio-button.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "formControlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ngModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "T",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "T",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "ngModelChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter<T>"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<FocusEvent>"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<FocusEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "modelChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  forwardRef,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nexport const RADIO_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'zyfra-radio-button',\r\n  templateUrl: './zyfra-radio-button.component.html',\r\n  styleUrls: ['./zyfra-radio-button.component.less'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [RADIO_VALUE_ACCESSOR],\r\n})\r\nexport class ZyfraRadioButtonComponent<T> implements ControlValueAccessor {\r\n  @Input() name: string;\r\n  @Input() value: T;\r\n  @Input() label: string;\r\n  @Input() disabled: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() labelStyleClass: string;\r\n  @Input() formControlName: string;\r\n  @Input() formControl: FormControl;\r\n  @Input() ngModel: T;\r\n\r\n  @Output() ngModelChange: EventEmitter<T> = new EventEmitter();\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onFocus: EventEmitter<FocusEvent> = new EventEmitter();\r\n  @Output() onBlur: EventEmitter<FocusEvent> = new EventEmitter();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  modelChange(value: T): void {\r\n    if (this.formControl) {\r\n      this.formControl.setValue(value);\r\n    }\r\n    this.ngModelChange.emit(this.ngModel);\r\n  }\r\n\r\n  handleClick(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  handleFocus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  handleBlur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {}\r\n\r\n  registerOnTouched(fn: () => void): void {}\r\n\r\n  writeValue(value: T): void {\r\n    this.ngModel = value;\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@radioButtonSize: 20px;\r\n@radioButtonCoreSize: 8px;\r\n@radioButtonMiniSize: 16px;\r\n@radioButtonMiniCoreSize: 4px;\r\n@radioBorderAccent: 2px solid var(--radioButtonHover);\r\n\r\n.radio-disabled() {\r\n  background: var(--radioButtonDisabledBg);\r\n  border-color: var(--radioButtonDisabled);\r\n}\r\n\r\n.p-radiobutton {\r\n  width: @radioButtonSize;\r\n  height: @radioButtonSize;\r\n\r\n  &-mini {\r\n    width: @radioButtonMiniSize;\r\n    height: @radioButtonMiniSize;\r\n  }\r\n\r\n  &-group p-radiobutton {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  &-disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  .p-disabled.p-disabled {\r\n    opacity: initial;\r\n    .radio-disabled();\r\n  }\r\n\r\n  .p-radiobutton-box {\r\n    border: @radioBorderAccent;\r\n    background: var(--radioButtonBg);\r\n    width: @radioButtonSize;\r\n    height: @radioButtonSize;\r\n\r\n    &:not(:hover):not(.p-disabled) {\r\n      border-color: var(--radioButton);\r\n    }\r\n\r\n    .p-radiobutton-mini& {\r\n      width: @radioButtonMiniSize;\r\n      height: @radioButtonMiniSize;\r\n    }\r\n\r\n    .p-radiobutton-icon {\r\n      background-color: var(--radioButtonBg);\r\n      border: @radioBorderAccent;\r\n      width: @radioButtonCoreSize;\r\n      height: @radioButtonCoreSize;\r\n      .p-radiobutton-mini& {\r\n        width: @radioButtonMiniCoreSize;\r\n        height: @radioButtonMiniCoreSize;\r\n      }\r\n    }\r\n\r\n    &:not(.p-disabled) {\r\n      &.p-focus {\r\n        border-color: var(--radioButtonActive);\r\n      }\r\n\r\n      &:not(.p-highlight):hover {\r\n        border-color: var(--radioButtonHover);\r\n      }\r\n    }\r\n\r\n    &.p-highlight {\r\n      &.p-disabled {\r\n        &,\r\n        .p-radiobutton-icon {\r\n          .radio-disabled();\r\n        }\r\n      }\r\n      &:not(.p-disabled),\r\n      &:not(.p-disabled):hover {\r\n        background: var(--radioButtonBg);\r\n        border: @radioBorderAccent;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./zyfra-radio-button.component.less"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-radioButton\r\n  [name]=\"name\"\r\n  [(ngModel)]=\"ngModel\"\r\n  (ngModelChange)=\"modelChange($event)\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  (onClick)=\"handleClick($event)\"\r\n  (onFocus)=\"handleFocus($event)\"\r\n  (onBlur)=\"handleBlur($event)\"\r\n></p-radioButton>\r\n"
        },
        {
            "name": "ZyfraSelectButtonComponent",
            "id": "component-ZyfraSelectButtonComponent-4705e8d28adb5d175eb4733fed86337ed467d3b95ba233efb4c7aef880582b445c7e9de3f9a8beeee535122d0a2d71a529379b2d58880c6a65f9886bcab912d3",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-select-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-select-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "optionDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "optionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "OPTION[]",
                    "decorators": []
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change emitter\n",
                    "description": "<p>Optional Change emitter</p>\n",
                    "line": 35,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "onOptionClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick emitter\n",
                    "description": "<p>Optional OptionClick emitter</p>\n",
                    "line": 40,
                    "type": "EventEmitter<SelectButtonOptionClick<OPTION>>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change handler\n",
                    "description": "<p>Optional Change handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOptionClick",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick handler\n",
                    "description": "<p>Optional OptionClick handler</p>\n",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-selectButton\r\n  [options]=\"options\"\r\n  [optionLabel]=\"optionLabel\"\r\n  [optionValue]=\"optionValue\"\r\n  [optionDisabled]=\"optionDisabled\"\r\n  [multiple]=\"multiple\"\r\n  [tabindex]=\"tabindex\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [disabled]=\"disabled\"\r\n  [dataKey]=\"dataKey\"\r\n  (onChange)=\"handleChange($event)\"\r\n  (onOptionClick)=\"handleOptionClick($event)\"\r\n></p-selectButton>\r\n"
        },
        {
            "name": "ZyfraSliderComponent",
            "id": "component-ZyfraSliderComponent-09ed2e05e28999f11ba3c6246c49b9401ff622500c135f5d5bbd55906e55b5d86bd4094d60565e7c51ecb53230edd0f67d0eded131bb645f001f604919695f70",
            "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number | number[]",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "SliderOrientation",
                    "decorators": []
                },
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSlideEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSlideEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\ntype SliderOrientation = 'horizontal' | 'vertical';\r\n\r\n@Component({\r\n  selector: 'zyfra-slider',\r\n  templateUrl: './zyfra-slider.component.html',\r\n})\r\nexport class ZyfraSliderComponent {\r\n  @Input() model: number | number[];\r\n  @Input() animate: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() orientation: SliderOrientation = 'horizontal'; //| \"vertical\"\r\n  @Input() step: number = 1;\r\n  @Input() range: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  /* onChange */\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n  /* onSlideEnd */\r\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  onChangeHandler(event) {\r\n    //console.log(event, 'event');\r\n    if (event.value) this.model = event.value;\r\n    if (event.values) this.model = event.values;\r\n    this.onChange.emit(this.model);\r\n  }\r\n\r\n  onSlideEndHandler(event) {\r\n    this.onSlideEnd.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-slider\r\n  [(ngModel)]=\"model\"\r\n  [animate]=\"animate\"\r\n  [disabled]=\"disabled\"\r\n  [min]=\"min\"\r\n  [max]=\"max\"\r\n  [orientation]=\"orientation\"\r\n  [step]=\"step\"\r\n  [range]=\"range\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n  (onSlideEnd)=\"onSlideEndHandler($event)\"\r\n></p-slider>\r\n"
        },
        {
            "name": "ZyfraSpinnerComponent",
            "id": "component-ZyfraSpinnerComponent-0175bbca72c8a8f96f6694b67ea3b8e05ec23275b3a21f583c8cde83b61c3c5892ea0e7f0c7c0465fd00a1f578a2867759669c12a0103c155a8779263027742e",
            "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animationDuration",
                    "defaultValue": "'2s'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SpinnerColor",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Record<string | string | number>",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\ntype SpinnerColor = 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success';\r\n\r\n@Component({\r\n  selector: 'zyfra-spinner',\r\n  templateUrl: './zyfra-spinner.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSpinnerComponent {\r\n  @Input() size = '100px';\r\n  @Input() style: Record<string, string | number>;\r\n  @Input() styleClass: string;\r\n  @Input() strokeWidth = '2';\r\n  @Input() fill = 'none';\r\n  @Input() animationDuration = '2s';\r\n  @Input() color: SpinnerColor = 'primary';\r\n\r\n  get spinnerStyle(): Record<string, string | number> {\r\n    return {\r\n      ...this.style,\r\n      width: this.size,\r\n      height: this.size,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "spinnerStyle": {
                    "name": "spinnerStyle",
                    "getSignature": {
                        "name": "spinnerStyle",
                        "type": "",
                        "returnType": "Record<string, string | number>",
                        "line": 19
                    }
                }
            },
            "templateData": "<p-progressSpinner\r\n  [class]=\"'zyfra-spinner zyfra-spinner_color-' + color\"\r\n  [style]=\"spinnerStyle\"\r\n  [styleClass]=\"styleClass\"\r\n  [strokeWidth]=\"strokeWidth\"\r\n  [fill]=\"fill\"\r\n  [animationDuration]=\"animationDuration\"\r\n></p-progressSpinner>\r\n"
        },
        {
            "name": "ZyfraSplitButtonComponent",
            "id": "component-ZyfraSplitButtonComponent-07082cc72d6009cf89b76824481d230f274162d80d819b7a977d5dc141deeb9e4250e64fc60532ea00cb4484ead472aed7c59a50b41fd034f3d36a65ed9eaa67",
            "file": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-split-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'195ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "menuStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "menuStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "MenuItem[]",
                    "decorators": []
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'225ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<PointerEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDropdownClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-split-button',\r\n  templateUrl: './zyfra-split-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSplitButtonComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() menuStyle: string;\r\n  @Input() menuStyleClass: string;\r\n  @Input() styleClass: string;\r\n  @Input() appendTo: any;\r\n  @Input() dir: string;\r\n  @Input() tabindex: number;\r\n  @Input() model: MenuItem[];\r\n  @Input() showTransitionOptions = '225ms ease-out';\r\n  @Input() hideTransitionOptions = '195ms ease-in';\r\n\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onDropdownClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n\r\n  nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  onClickHandler(event: PointerEvent) {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  onDropdownClickHandler(event: PointerEvent) {\r\n    this.onDropdownClick.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-splitButton\r\n  [model]=\"model\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [menuStyle]=\"menuStyle\"\r\n  [menuStyleClass]=\"menuStyleClass\"\r\n  [appendTo]=\"appendTo\"\r\n  [tabindex]=\"tabindex\"\r\n  [dir]=\"dir\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"onClickHandler($event)\"\r\n  (onDropdownClick)=\"onDropdownClickHandler($event)\"\r\n></p-splitButton>\r\n"
        },
        {
            "name": "ZyfraSplitterComponent",
            "id": "component-ZyfraSplitterComponent-5f726b04c7503e76c7c1cd5db75378835c79274d7e7193750ea2a4d48da07b269f344c764412da9864092b0588960fe4fccc692f56a308550273465dc21ac1ab",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-splitter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "gutterSize",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the divider in pixels.\n\n",
                    "description": "<p>Size of the divider in pixels.</p>\n",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOrientation of the panels, valid values are \"horizontal\" and \"vertical\".\n\n",
                    "description": "<p>Orientation of the panels, valid values are &quot;horizontal&quot; and &quot;vertical&quot;.</p>\n",
                    "line": 36,
                    "type": "\"horizontal\" | \"vertical\"",
                    "decorators": []
                },
                {
                    "name": "minSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum size of the elements relative to 100%.\n\n",
                    "description": "<p>Minimum size of the elements relative to 100%.</p>\n",
                    "line": 31,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "panelSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the elements relative to 100%.\n\n",
                    "description": "<p>Size of the elements relative to 100%.</p>\n",
                    "line": 26,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "panelStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInline style of the pnanel.\n\n",
                    "description": "<p>Inline style of the pnanel.</p>\n",
                    "line": 71,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "panelStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStyle class of the panel.\n\n",
                    "description": "<p>Style class of the panel.</p>\n",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stateKey",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStorage identifier of a stateful Splitter.\n\n",
                    "description": "<p>Storage identifier of a stateful Splitter.</p>\n",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\n\n",
                    "description": "<p>Defines where a stateful splitter keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage.</p>\n",
                    "line": 51,
                    "type": "\"session\" | \"local\"",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInline style of the component.\n\n",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 56,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStyle class of the component.\n\n",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 61,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize ends.\n\n",
                    "description": "<p>Callback to invoke when resize ends.</p>\n",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onResizeStart",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize starts.\n\n",
                    "description": "<p>Callback to invoke when resize starts.</p>\n",
                    "line": 84,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraSplitterTemplateDirective>",
                    "optional": false,
                    "description": "<p>Template html.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nTemplate html.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResizeStartHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\r\n\r\ntype onResizeEvent = { originalEvent: MouseEvent; sizes: [number, number] };\r\n\r\n@Component({\r\n  selector: 'zyfra-splitter',\r\n  templateUrl: './zyfra-splitter.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSplitterComponent implements AfterContentInit {\r\n  // Вся информация о методах и свойствах хранится тут import { Splitter } from 'primeng/splitter';\r\n  /**\r\n   * Size of the elements relative to 100%.\r\n   *\r\n   */\r\n  @Input() panelSizes: number[] = [];\r\n  /**\r\n   * Minimum size of the elements relative to 100%.\r\n   *\r\n   */\r\n  @Input() minSizes: number[] = [];\r\n  /**\r\n   * Orientation of the panels, valid values are \"horizontal\" and \"vertical\".\r\n   *\r\n   */\r\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\r\n  /**\r\n   * Size of the divider in pixels.\r\n   *\r\n   */\r\n  @Input() gutterSize = 8;\r\n  /**\r\n   * Storage identifier of a stateful Splitter.\r\n   *\r\n   */\r\n  @Input() stateKey: string = null;\r\n  /**\r\n   * Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\r\n   *\r\n   */\r\n  @Input() stateStorage: 'session' | 'local' = 'session';\r\n  /**\r\n   * Inline style of the component.\r\n   *\r\n   */\r\n  @Input() style: { [key: string]: string | null } = null;\r\n  /**\r\n   * Style class of the component.\r\n   *\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Style class of the panel.\r\n   *\r\n   */\r\n  @Input() panelStyleClass: string = null;\r\n  /**\r\n   * Inline style of the pnanel.\r\n   *\r\n   */\r\n  @Input() panelStyle: { [key: string]: string | null } = null;\r\n\r\n  /**\r\n   * Template html.\r\n   *\r\n   */\r\n  @ContentChildren(ZyfraSplitterTemplateDirective)\r\n  templates: QueryList<ZyfraSplitterTemplateDirective>;\r\n\r\n  /**\r\n   * Callback to invoke when resize starts.\r\n   *\r\n   */\r\n  @Output() onResizeStart = new EventEmitter<onResizeEvent>();\r\n\r\n  /**\r\n   * Callback to invoke when resize ends.\r\n   *\r\n   */\r\n  @Output() onResizeEnd = new EventEmitter<onResizeEvent>();\r\n\r\n  panels = [];\r\n\r\n  // tslint:disable-next-line: typedef\r\n  ngAfterContentInit() {\r\n    this.templates.forEach((item) => {\r\n      this.panels.push(item.template);\r\n    });\r\n  }\r\n\r\n  onResizeStartHandler(event) {\r\n    this.onResizeStart.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-splitter\r\n  [panelSizes]=\"panelSizes\"\r\n  [minSizes]=\"minSizes\"\r\n  [layout]=\"layout\"\r\n  [gutterSize]=\"gutterSize\"\r\n  [stateKey]=\"stateKey\"\r\n  [stateStorage]=\"stateStorage\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [panelStyleClass]=\"panelStyleClass\"\r\n  [panelStyle]=\"panelStyle\"\r\n  (onResizeStart)=\"onResizeStartHandler($event)\"\r\n  (onResizeEnd)=\"onResizeEnd.emit($event)\"\r\n>\r\n  <ng-template pTemplate *ngFor=\"let item of panels; let i = index\">\r\n    <ng-container *ngTemplateOutlet=\"item\"></ng-container>\r\n  </ng-template>\r\n</p-splitter>\r\n"
        },
        {
            "name": "ZyfraTabMenuComponent",
            "id": "component-ZyfraTabMenuComponent-2fe4ba6a2373210c7ae64f3da5d27fd6ab61b3c8cc90edb8fff6d8dee773174ad1dc00c7caae81d80041e7dd9879f533ed4f4987b5f49d20392d0d99de8e6c0a",
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "MenuItem",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "[]",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_model",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backLabel",
                    "defaultValue": "'Вернуться'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentMenu",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentMenuIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<Element>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navListElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scroll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Event>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "stopOutsideClickListener$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subMenuContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabSubmenuContainer'"
                        }
                    ]
                },
                {
                    "name": "subMenuObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabMenu",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabMenu"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initClickListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initOutsideClickListener",
                    "args": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initSubmenuObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isPartlyVisible",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentIndex",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  HostBinding,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TabMenu } from 'primeng/tabmenu';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, filter, first, takeUntil } from 'rxjs/operators';\r\nimport { SlideMenu } from 'primeng/slidemenu';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-menu',\r\n  templateUrl: './zyfra-tab-menu.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraTabMenuComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\r\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\r\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\r\n  @ViewChild(TabMenu) public tabMenu: TabMenu;\r\n  @ViewChild('tabSubmenuContainer') subMenuContainer: ElementRef;\r\n  @ViewChild('prevControl') public prevControl: ElementRef;\r\n  @ViewChild('nextControl') public nextControl: ElementRef;\r\n  @Input() activeItem: MenuItem = null;\r\n  @Input() style: string = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() set model(items: MenuItem[]) {\r\n    this._model = items;\r\n    this.tabsChanged = true;\r\n  }\r\n  get model(): MenuItem[] {\r\n    return this._model;\r\n  }\r\n  public backLabel = 'Вернуться';\r\n  public openedItem: MenuItem;\r\n\r\n  private _model: MenuItem[] = null;\r\n  private tabsChanged: boolean;\r\n  private maxScrollDistance: number;\r\n  private navLinks: NodeListOf<Element>;\r\n  private navListElement: HTMLElement;\r\n  private currentMenu = null;\r\n  private currentMenuIndex: number;\r\n  private subMenuObserver: MutationObserver;\r\n  private destroyed$ = new Subject();\r\n  private scroll$: Observable<Event>;\r\n  private stopOutsideClickListener$ = new Subject();\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.navListElement = this.tabMenu.navbar.nativeElement;\r\n    this.navLinks = this.navListElement.querySelectorAll('a.p-menuitem-link');\r\n    this.initClickListeners();\r\n    this.scroll$ = fromEvent(this.navListElement, 'scroll').pipe(debounceTime(50));\r\n    this.scroll$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.updateControlsState());\r\n    this.initSubmenuObserver();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    if (this.tabsChanged) {\r\n      this.tabsChanged = false;\r\n      requestAnimationFrame(() => {\r\n        this.hasOverflow = this.navListElement.scrollWidth > this.navListElement.offsetWidth;\r\n        this.updateControlsState();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subMenuObserver.disconnect();\r\n    this.stopOutsideClickListener$.next();\r\n    this.stopOutsideClickListener$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public toggleMenu(event: MouseEvent, menu: SlideMenu, index: number): void {\r\n    const currentTarget = (event.target as HTMLElement).closest('li');\r\n    if (this.currentMenu && this.currentMenu !== menu) {\r\n      this.currentMenu.hide();\r\n    }\r\n    const toggleMenu = () => {\r\n      menu.toggle({ currentTarget });\r\n      this.currentMenu = menu;\r\n      this.currentMenuIndex = index;\r\n    };\r\n\r\n    if (this.isPartlyVisible(event.target as HTMLElement)) {\r\n      currentTarget.scrollIntoView({ inline: 'nearest' });\r\n      this.scroll$.pipe(first(), takeUntil(this.destroyed$)).subscribe(() => toggleMenu());\r\n    } else {\r\n      toggleMenu();\r\n    }\r\n    event.stopImmediatePropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  initOutsideClickListener(menu): void {\r\n    this.stopOutsideClickListener$.next();\r\n    fromEvent(this.document, 'click')\r\n      .pipe(takeUntil(this.stopOutsideClickListener$))\r\n      .subscribe((e: PointerEvent) => {\r\n        const clickInside = e.composedPath().includes(this.subMenuContainer.nativeElement);\r\n        if (!clickInside) {\r\n          menu.hide();\r\n          this.stopOutsideClickListener$.next();\r\n        }\r\n      });\r\n  }\r\n\r\n  public selectTabFromList(index: number): void {\r\n    this.activeItem = this.model[index];\r\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\r\n    (this.navLinks.item(index) as HTMLElement).click();\r\n  }\r\n\r\n  public scrollPrevious(): void {\r\n    this.navListElement.scrollLeft -= this.navListElement.offsetWidth;\r\n  }\r\n\r\n  public scrollNext(): void {\r\n    this.navListElement.scrollLeft += this.navListElement.offsetWidth;\r\n  }\r\n\r\n  private updateControlsState(): void {\r\n    if (this.hasOverflow) {\r\n      this.maxScrollDistance = this.navListElement.scrollWidth - this.navListElement.offsetWidth;\r\n      this.disablePrevControl = this.navListElement.scrollLeft === 0;\r\n      this.disableNextControl = this.maxScrollDistance - this.navListElement.scrollLeft < 1;\r\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\r\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\r\n    }\r\n  }\r\n\r\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\r\n    if (isDisabled) {\r\n      this.renderer.addClass(el, 'disabled');\r\n    } else {\r\n      this.renderer.removeClass(el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private isPartlyVisible(target: HTMLElement): boolean {\r\n    const offsetParent = target.offsetParent as HTMLElement;\r\n    const isLeftSideHidden =\r\n      offsetParent.offsetLeft - this.navListElement.scrollLeft < this.nextControl.nativeElement.offsetWidth;\r\n    const isRightSideHidden =\r\n      offsetParent.offsetLeft +\r\n        offsetParent.offsetWidth -\r\n        this.nextControl.nativeElement.offsetWidth -\r\n        this.navListElement.scrollLeft >\r\n      this.navListElement.offsetWidth;\r\n    return isLeftSideHidden || isRightSideHidden;\r\n  }\r\n\r\n  private initClickListeners(): void {\r\n    fromEvent(this.navListElement, 'click')\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((e: MouseEvent) => {\r\n        this.updateCurrentIndex(e.target as HTMLElement);\r\n        this.updateActiveItem();\r\n      });\r\n\r\n    fromEvent(this.subMenuContainer.nativeElement, 'click')\r\n      .pipe(\r\n        filter(\r\n          (e: MouseEvent) =>\r\n            !(e.target as HTMLElement).nextElementSibling && e.target instanceof HTMLAnchorElement\r\n        ),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateActiveItem();\r\n      });\r\n  }\r\n\r\n  private initSubmenuObserver(): void {\r\n    const target = this.subMenuContainer.nativeElement;\r\n    const config = {\r\n      childList: true,\r\n    };\r\n    const callback = (mutations: MutationRecord[]) => {\r\n      mutations.forEach(() => {\r\n        this.openedItem = this.subMenuContainer.nativeElement.hasChildNodes()\r\n          ? this.model[this.currentMenuIndex]\r\n          : null;\r\n        this.cdr.markForCheck();\r\n      });\r\n    };\r\n    this.subMenuObserver = new MutationObserver(callback);\r\n    this.subMenuObserver.observe(target, config);\r\n  }\r\n\r\n  private updateActiveItem(): void {\r\n    this.activeItem = this.model[this.currentMenuIndex];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateCurrentIndex(target: HTMLElement): void {\r\n    this.navLinks.forEach((value, key) => {\r\n      if (value === target.closest('a')) {\r\n        this.currentMenuIndex = key;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "accessors": {
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 40,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "model",
                        "type": "[]",
                        "returnType": "MenuItem[]",
                        "line": 44
                    }
                }
            },
            "templateData": "<div class=\"tab-container\">\r\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\r\n    <div class=\"control-group\">\r\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\r\n    </div>\r\n  </div>\r\n\r\n  <p-tabMenu [model]=\"model\" [activeItem]=\"activeItem\" [style]=\"style\" [styleClass]=\"styleClass\">\r\n    <ng-template pTemplate=\"item\" let-item let-i=\"index\">\r\n      <i *ngIf=\"item.icon\" class=\"p-menuitem-icon pi pi-fw {{ item.icon }}\"></i>\r\n      <span class=\"p-menuitem-text\">{{ item?.label }}</span>\r\n      <ng-container *ngIf=\"item.items && item.items\">\r\n        <i\r\n          class=\"menu-toggle-icon zyfra-icon {{\r\n            this.openedItem === item ? 'chevrons-dropdown' : 'chevrons-menu-right'\r\n          }}\"\r\n          (click)=\"toggleMenu($event, menu, i)\"\r\n        ></i>\r\n        <p-slideMenu\r\n          #menu\r\n          [model]=\"item.items\"\r\n          [popup]=\"true\"\r\n          [appendTo]=\"tabSubmenuContainer\"\r\n          [backLabel]=\"backLabel\"\r\n          (onShow)=\"initOutsideClickListener(menu)\"\r\n        ></p-slideMenu>\r\n      </ng-container>\r\n    </ng-template>\r\n  </p-tabMenu>\r\n\r\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\r\n    <div class=\"control-group\">\r\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\r\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\r\n    </div>\r\n  </div>\r\n\r\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\r\n    <ng-template pTemplate>\r\n      <div\r\n        *ngFor=\"let tab of model; let i = index\"\r\n        class=\"tab-list-item text-overflow\"\r\n        tooltipPosition=\"bottom\"\r\n        [pTooltip]=\"tab.label\"\r\n        (click)=\"selectTabFromList(i); op.hide()\"\r\n      >\r\n        {{ tab.label }}\r\n      </div>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n\r\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\r\n</div>\r\n<div #tabSubmenuContainer class=\"tab-submenu-container\"></div>\r\n"
        },
        {
            "name": "ZyfraTabPanelComponent",
            "id": "component-ZyfraTabPanelComponent-86282d0751146ee2aafcacbf9acc34bc383e8648d458704f56a32ba0f7753644c4259aa2bc321e5f58541e47bdeff884453eef8424ccdbb51e29167486a5ec3f",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headerStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leftIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"right\" | \"left\" | \"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "propChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_leftIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_rightIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contentTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'header'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "implicitContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-panel',\r\n  templateUrl: './zyfra-tab-panel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTabPanelComponent {\r\n  @ContentChild('header') public headerTemplate: TemplateRef<any>;\r\n  @ContentChild('content') public contentTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild(TemplateRef) implicitContent: TemplateRef<any>;\r\n  @Input() selected: boolean = false;\r\n  @Input() closable: boolean = false;\r\n  @Input() headerStyle: string = null;\r\n  @Input() headerStyleClass: string = null;\r\n  @Input() cache: boolean = true;\r\n  @Input() tooltip: any = null;\r\n  @Input() tooltipStyleClass: string = null;\r\n  @Input() tooltipPosition: 'right' | 'left' | 'top' | 'bottom' = 'top';\r\n  @Input() tooltipPositionStyle: string = 'absolute';\r\n\r\n  @Input() set disabled(disabled: boolean) {\r\n    this._disabled = disabled;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  @Input() set header(header: string) {\r\n    this._header = header;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get header(): string {\r\n    return this._header;\r\n  }\r\n\r\n  @Input() set leftIcon(leftIcon: string) {\r\n    this._leftIcon = leftIcon;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get leftIcon(): string {\r\n    return this._leftIcon;\r\n  }\r\n\r\n  @Input() set rightIcon(rightIcon: string) {\r\n    this._rightIcon = rightIcon;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get rightIcon(): string {\r\n    return this._rightIcon;\r\n  }\r\n\r\n  @Output() propChange: EventEmitter<void> = new EventEmitter();\r\n\r\n  private _header: string = null;\r\n  private _disabled: boolean = false;\r\n  private _leftIcon: string = null;\r\n  private _rightIcon: string = null;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "header",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "leftIcon": {
                    "name": "leftIcon",
                    "setSignature": {
                        "name": "leftIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "leftIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 55
                    }
                },
                "rightIcon": {
                    "name": "rightIcon",
                    "setSignature": {
                        "name": "rightIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "rightIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 64
                    }
                }
            },
            "templateData": "<ng-template><ng-content></ng-content></ng-template>\r\n"
        },
        {
            "name": "ZyfraTabViewComponent",
            "id": "component-ZyfraTabViewComponent-507acddb4d91960538e667c5920f9d1b26869a696ed29ae519908cfeabd8ea11af6a4d5113c2a8c7dc05bb31ae828d212929e24b2687f3c6a3eb39e187f5a66e",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "controlClose",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "keyDownHandler",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "lastFocused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navContentElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabClosed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTabPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTabPanelComponent"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTabPanelComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabsChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabView",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabView"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activeIndexChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFocus",
                    "args": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "current",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focusNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "focusPrev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialPrepare",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tabsInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { fromEvent, merge, Subject } from 'rxjs';\r\nimport { TabView } from 'primeng/tabview';\r\nimport { ZyfraTabPanelComponent } from '../zyfra-tab-panel/zyfra-tab-panel.component';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-view',\r\n  templateUrl: './zyfra-tab-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraTabViewComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\r\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\r\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\r\n  @ViewChild(TabView) public tabView: TabView;\r\n  @ViewChild('prevControl') public prevControl: ElementRef;\r\n  @ViewChild('nextControl') public nextControl: ElementRef;\r\n  @ContentChildren(ZyfraTabPanelComponent) tabPanels: QueryList<ZyfraTabPanelComponent>;\r\n  @Input() activeIndex: number | null = null;\r\n  @Input() controlClose = false;\r\n  @Input() style: string | null = null;\r\n  @Input() styleClass: string | null = null;\r\n\r\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  public tabs: ZyfraTabPanelComponent[] = [];\r\n  public tabList: { header: string; index: number; disabled: boolean }[] = [];\r\n\r\n  private tabsChanged = true;\r\n  private tabClosed = false;\r\n  private maxScrollDistance: number;\r\n  private navLinks: NodeListOf<HTMLElement>;\r\n  private lastFocused: Element;\r\n  private navContentElement: HTMLElement;\r\n  private destroyed$: Subject<any> = new Subject();\r\n  private tabsChanged$: Subject<any> = new Subject();\r\n  private keyDownHandler = (e: KeyboardEvent): void => {\r\n    // use an arrow function to access the context of the component\r\n    if (e.key !== 'ArrowRight' && e.key !== 'ArrowLeft') {\r\n      return;\r\n    }\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        this.focusPrev();\r\n        break;\r\n      case 'ArrowRight':\r\n        this.focusNext();\r\n        break;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.tabsInit();\r\n    this.tabPanels.changes.pipe(takeUntil(this.destroyed$)).subscribe(() => {\r\n      this.tabsChanged$.next();\r\n      this.tabsInit();\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.navContentElement = this.tabView.content.nativeElement;\r\n    this.navContentElement.addEventListener('keydown', this.keyDownHandler);\r\n    fromEvent(this.navContentElement, 'scroll')\r\n      .pipe(debounceTime(50), takeUntil(this.destroyed$))\r\n      .subscribe(() => this.updateControlsState());\r\n  }\r\n\r\n  private initialPrepare(): void {\r\n    this.navLinks = this.navContentElement.querySelectorAll('a.p-tabview-nav-link');\r\n    const highlight = this.navContentElement.querySelector('li.p-highlight');\r\n    let focusPresent = false;\r\n    this.navLinks.forEach((value) => {\r\n      if (this.lastFocused === value) {\r\n        focusPresent = true;\r\n      }\r\n    });\r\n    if (!focusPresent) {\r\n      this.lastFocused = highlight ? highlight.firstElementChild : this.navLinks.item(0);\r\n    }\r\n    this.navLinks.forEach((link, index): void => {\r\n      if (this.lastFocused !== link) {\r\n        this.renderer.setAttribute(this.navLinks[index], 'tabindex', '-1');\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    if (this.tabsChanged || this.tabClosed) {\r\n      requestAnimationFrame(() => {\r\n        this.hasOverflow = this.navContentElement.scrollWidth > this.navContentElement.offsetWidth;\r\n        this.updateControlsState();\r\n        if (this.tabsChanged) {\r\n          this.initialPrepare();\r\n        }\r\n        this.tabsChanged = false;\r\n        this.tabClosed = false;\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.removeListeners();\r\n    this.tabsChanged$.next();\r\n    this.tabsChanged$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public activeIndexChangeHandler(event): void {\r\n    this.activeIndex = event;\r\n    this.activeIndexChange.emit(event);\r\n  }\r\n\r\n  public handleChange(event): void {\r\n    this.onChange.emit(event);\r\n    this.changeFocus(this.lastFocused, this.navLinks.item(event.index));\r\n  }\r\n\r\n  public handleClose(event): void {\r\n    const closedTab = event.originalEvent.target.offsetParent;\r\n    this.tabClosed = true;\r\n    this.tabList = this.tabList.filter(({ index }) => index !== event.index);\r\n    if (this.lastFocused === closedTab) {\r\n      this.changeFocus(this.lastFocused, this.navLinks.item(this.tabList[0].index));\r\n    }\r\n    this.onClose.emit(event);\r\n  }\r\n\r\n  public scrollPrevious(): void {\r\n    this.navContentElement.scrollLeft -= this.navContentElement.offsetWidth;\r\n  }\r\n\r\n  public scrollNext(): void {\r\n    this.navContentElement.scrollLeft += this.navContentElement.offsetWidth;\r\n  }\r\n\r\n  public selectTabFromList(event: MouseEvent, index: number): void {\r\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\r\n    if (!this.tabList[index].disabled && this.activeIndex !== index) {\r\n      this.activeIndex = index;\r\n      this.changeFocus(this.lastFocused, this.navLinks.item(index));\r\n      this.onChange.emit({ originalEvent: event, index });\r\n    }\r\n  }\r\n\r\n  private tabsInit(): void {\r\n    this.tabs = this.tabPanels.toArray();\r\n    this.tabList = this.tabs.map((value, index) => ({\r\n      header: value.header,\r\n      index,\r\n      disabled: value.disabled,\r\n    }));\r\n    this.tabsChanged = true;\r\n    merge(...this.tabs.map((value) => value.propChange))\r\n      .pipe(takeUntil(this.tabsChanged$))\r\n      .subscribe(() => {\r\n        this.cdr.markForCheck();\r\n      });\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateControlsState(): void {\r\n    if (this.hasOverflow) {\r\n      this.maxScrollDistance = this.navContentElement.scrollWidth - this.navContentElement.offsetWidth;\r\n      this.disablePrevControl = this.navContentElement.scrollLeft === 0;\r\n      this.disableNextControl = this.maxScrollDistance - this.navContentElement.scrollLeft < 1;\r\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\r\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\r\n    }\r\n  }\r\n\r\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\r\n    if (isDisabled) {\r\n      this.renderer.addClass(el, 'disabled');\r\n    } else {\r\n      this.renderer.removeClass(el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private removeListeners(): void {\r\n    this.navContentElement.removeEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  private focusPrev(): void {\r\n    const current = this.document.activeElement;\r\n    if (!current.parentElement.previousElementSibling) {\r\n      return;\r\n    }\r\n    const next = current.parentElement.previousElementSibling.firstChild as HTMLElement;\r\n    if (!next) {\r\n      return;\r\n    }\r\n    this.changeFocus(current, next);\r\n    next.focus();\r\n    if (next.offsetLeft < this.navContentElement.scrollLeft) {\r\n      this.navContentElement.scrollLeft =\r\n        next.offsetLeft + next.offsetWidth - this.navContentElement.offsetWidth;\r\n    }\r\n  }\r\n\r\n  private focusNext(): void {\r\n    const current = this.document.activeElement;\r\n    if (!current.parentElement.nextElementSibling) {\r\n      return;\r\n    }\r\n    const next = current.parentElement.nextElementSibling.firstChild as HTMLElement;\r\n    if (!next) {\r\n      return;\r\n    }\r\n    this.changeFocus(current, next);\r\n    next.focus();\r\n    if (\r\n      next.offsetLeft + next.offsetWidth >\r\n      this.navContentElement.offsetWidth + this.navContentElement.scrollLeft\r\n    ) {\r\n      this.navContentElement.scrollLeft = next.offsetLeft;\r\n    }\r\n  }\r\n\r\n  private changeFocus(current: Element, next: Element): void {\r\n    this.renderer.setAttribute(current, 'tabindex', '-1');\r\n    this.renderer.setAttribute(next, 'tabindex', '0');\r\n    this.lastFocused = next;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "templateData": "<div class=\"tab-container\">\r\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\r\n    <div class=\"control-group\">\r\n      <i #prevControl class=\"pi pi-angle-left control-icon\" (click)=\"scrollPrevious()\"></i>\r\n    </div>\r\n  </div>\r\n  <p-tabView\r\n    [activeIndex]=\"activeIndex\"\r\n    [controlClose]=\"controlClose\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    (activeIndexChange)=\"activeIndexChangeHandler($event)\"\r\n    (onChange)=\"handleChange($event)\"\r\n    (onClose)=\"handleClose($event)\"\r\n  >\r\n    <ng-container *ngFor=\"let tab of tabs\">\r\n      <p-tabPanel\r\n        [header]=\"tab.header\"\r\n        [selected]=\"tab.selected\"\r\n        [disabled]=\"tab.disabled\"\r\n        [closable]=\"tab.closable\"\r\n        [leftIcon]=\"tab.leftIcon\"\r\n        [rightIcon]=\"tab.rightIcon\"\r\n        [headerStyle]=\"tab.headerStyle\"\r\n        [headerStyleClass]=\"tab.headerStyleClass\"\r\n        [cache]=\"tab.cache\"\r\n        [tooltip]=\"tab.tooltip\"\r\n        [tooltipPosition]=\"tab.tooltipPosition\"\r\n        [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n      >\r\n        <ng-template *ngIf=\"tab.headerTemplate\" pTemplate=\"header\">\r\n          <ng-container\r\n            [ngTemplateOutlet]=\"tab.headerTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n          ></ng-container>\r\n        </ng-template>\r\n\r\n        <ng-template *ngIf=\"tab.contentTemplate\" pTemplate=\"content\">\r\n          <ng-container\r\n            [ngTemplateOutlet]=\"tab.contentTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n          ></ng-container>\r\n        </ng-template>\r\n\r\n        <ng-container\r\n          [ngTemplateOutlet]=\"tab.implicitContent\"\r\n          [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n        ></ng-container>\r\n      </p-tabPanel>\r\n    </ng-container>\r\n  </p-tabView>\r\n\r\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\r\n    <div class=\"control-group\">\r\n      <i class=\"pi pi-ellipsis-v control-icon\" (click)=\"op.toggle($event)\"></i>\r\n      <i #nextControl class=\"pi pi-angle-right control-icon\" (click)=\"scrollNext()\"></i>\r\n    </div>\r\n  </div>\r\n\r\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\r\n    <ng-template pTemplate>\r\n      <div\r\n        *ngFor=\"let tab of tabList\"\r\n        class=\"tab-list-item text-overflow\"\r\n        [class.disabled]=\"tab.disabled\"\r\n        tooltipPosition=\"bottom\"\r\n        [pTooltip]=\"tab.header\"\r\n        (click)=\"selectTabFromList($event, tab.index); op.hide()\"\r\n      >\r\n        {{ tab.header }}\r\n      </div>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n\r\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\r\n</div>\r\n"
        },
        {
            "name": "ZyfraTextareaComponent",
            "id": "component-ZyfraTextareaComponent-cde504184ac746c5468243b2fc55ad4771282d86c5f529571ca42174b38c5176c648935c0d31814b260522464432ab9f2837d83fce658bb0a5ac711445b45b57",
            "file": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onResize",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-textarea',\r\n  templateUrl: './zyfra-textarea.component.html',\r\n})\r\nexport class ZyfraTextareaComponent {\r\n  @Input() value: string;\r\n  @Input() rows: number;\r\n  @Input() cols: number;\r\n  @Input() autoResize: boolean;\r\n  @Input() id: string;\r\n  @Input() name: string;\r\n  @Input() placeholder: string;\r\n  @Input() class: string;\r\n  @Input() disabled: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() minlength: number;\r\n  @Input() label = '';\r\n  @Input() required = false;\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n  @Output() onResize = new EventEmitter<unknown>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <textarea\r\n    pInputTextarea\r\n    [rows]=\"rows\"\r\n    [cols]=\"cols\"\r\n    [autoResize]=\"autoResize\"\r\n    [(ngModel)]=\"value\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n    [placeholder]=\"placeholder\"\r\n    [class]=\"class\"\r\n    [disabled]=\"disabled\"\r\n    [maxlength]=\"maxlength\"\r\n    [minlength]=\"minlength\"\r\n    [name]=\"name\"\r\n    (onResize)=\"onResize.emit($event)\"\r\n  ></textarea>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
        },
        {
            "name": "ZyfraToastComponent",
            "id": "component-ZyfraToastComponent-02153ecf8e4d2d587d463f7e36351593a28682a64dd38b0e8da6a7817eb274875e9a36ec4380d17ef7b7050cbc66d341aa4ccdcd5175da5c9fe1b51c3b1827b9",
            "file": "libs/components/src/lib/toast/zyfra-toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideTransformOptions",
                    "defaultValue": "'translateY(-100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'250ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "life",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "preventDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "preventOpenDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "severity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showTransformOptions",
                    "defaultValue": "'translateY(100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sticky",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCloseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-toast',\r\n  templateUrl: './zyfra-toast.component.html',\r\n  styles: [],\r\n  providers: [MessageService],\r\n})\r\nexport class ZyfraToastComponent {\r\n  @Input() customTemplate: TemplateRef<any>;\r\n\r\n  @Input() key: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() position: string = 'top-right';\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '250ms ease-in';\r\n  @Input() showTransformOptions: string = 'translateY(100%)';\r\n  @Input() hideTransformOptions: string = 'translateY(-100%)';\r\n  @Input() preventOpenDuplicates: boolean;\r\n  @Input() preventDuplicates: boolean;\r\n\r\n  // --- for message -----\r\n  @Input() severity: string;\r\n  @Input() summary: string;\r\n  @Input() detail: string;\r\n  @Input() id: any;\r\n  @Input() life: number = 3000;\r\n  @Input() sticky: boolean = false;\r\n  @Input() closable: boolean = true;\r\n  @Input() data: any;\r\n  // @Input() key:string;\r\n\r\n  /* onClose */\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  showMessage() {\r\n    this.messageService.add({\r\n      severity: this.severity,\r\n      summary: this.summary,\r\n      detail: this.detail,\r\n      life: this.life,\r\n      id: this.id,\r\n      sticky: this.sticky,\r\n      closable: this.closable,\r\n      data: this.data,\r\n    });\r\n  }\r\n\r\n  onCloseHandler(event) {\r\n    this.onClose.emit(event);\r\n  }\r\n\r\n  // нужны ли кастомные методы?\r\n  onReject() {\r\n    this.messageService.clear('c');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-toast\r\n  [key]=\"key\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [position]=\"position\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  [showTransformOptions]=\"showTransformOptions\"\r\n  [hideTransformOptions]=\"hideTransformOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  (onClose)=\"onReject()\"\r\n>\r\n  <ng-template *ngIf=\"customTemplate\" let-message pTemplate=\"message\">\r\n    <div class='p-toast-message-custom'>\r\n      <ng-container *ngTemplateOutlet=\"customTemplate\"></ng-container>\r\n    </div>\r\n  </ng-template>\r\n</p-toast>\r\n"
        },
        {
            "name": "ZyfraToggleButtonComponent",
            "id": "component-ZyfraToggleButtonComponent-dbbdd2e22d0e5701b32b8d6bc0d4303949fb38be4a2ad41b79d77fa8be1471592c779106b1aa4f260c7f6dc3cfa41e29690ae1ed8f5ba167d877548995c94067",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-toggle-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toggle-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "model",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "offIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "offLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onLabel",
                    "defaultValue": "'confirm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-toggleButton\r\n  [(ngModel)]=\"model\"\r\n  [onLabel]=\"onLabel\"\r\n  [offLabel]=\"offLabel\"\r\n  [onIcon]=\"onIcon\"\r\n  [offIcon]=\"offIcon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  (onChange)=\"handleChange($event)\"\r\n>\r\n</p-toggleButton>\r\n"
        },
        {
            "name": "ZyfraTreeComponent",
            "id": "component-ZyfraTreeComponent-968b4a3c67edcdacadd38291d07b094d4f8ca658e3d34bdc9c4bc4724b2b949ccb714123b9817bcdf33d1e999388b1e6b648c57198ebc3951d5998d7816aec84",
            "file": "libs/components/src/lib/tree/zyfra-tree.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "draggableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "draggableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "droppableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "droppableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "enableFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filterBy",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "indentation",
                    "defaultValue": "1.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TreeNode[]",
                    "decorators": []
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "metaKeySelection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "propagateSelectionDown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "propagateSelectionUp",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "trackBy",
                    "defaultValue": "(index: number, item: any) => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "(index: number, item: any) => any",
                    "decorators": []
                },
                {
                    "name": "validateDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "virtualNodeHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeContextMenuSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeDrop",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onFilterHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeCollapseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeContextMenuSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeDropHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpandHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeUnselectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './zyfra-tree.component.html',\r\n})\r\nexport class ZyfraTreeComponent {\r\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() items: TreeNode[];\r\n\r\n  @Input() selectionMode: string; // single | multipple | checkbox\r\n\r\n  @Input() selection: any;\r\n\r\n  @Input() style: any;\r\n\r\n  @Input() styleClass: string;\r\n\r\n  @Input() contextMenu: any;\r\n\r\n  @Input() layout = 'vertical';\r\n\r\n  @Input() draggableScope: any;\r\n\r\n  @Input() droppableScope: any;\r\n\r\n  @Input() draggableNodes: boolean;\r\n\r\n  @Input() droppableNodes: boolean;\r\n\r\n  @Input() metaKeySelection = true;\r\n\r\n  @Input() propagateSelectionUp = true;\r\n\r\n  @Input() propagateSelectionDown = true;\r\n\r\n  @Input() loading: boolean;\r\n\r\n  @Input() loadingIcon = 'pi pi-spinner';\r\n\r\n  @Input() emptyMessage = '';\r\n\r\n  @Input() ariaLabel: string;\r\n\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Input() validateDrop: boolean;\r\n\r\n  @Input() enableFilter: boolean;\r\n\r\n  @Input() filterBy = 'label';\r\n\r\n  @Input() filterMode = 'lenient';\r\n\r\n  @Input() filterPlaceholder: string;\r\n\r\n  @Input() filterLocale: string;\r\n\r\n  @Input() scrollHeight: string;\r\n\r\n  @Input() virtualScroll: boolean;\r\n\r\n  @Input() virtualNodeHeight: string;\r\n\r\n  @Input() minBufferPx: number;\r\n\r\n  @Input() maxBufferPx: number;\r\n\r\n  @Input() indentation = 1.5;\r\n\r\n  @Input() trackBy = (index: number, item: any) => item;\r\n\r\n  onNodeSelectHandler(event: Event): void {\r\n    this.onNodeSelect.emit(event);\r\n  }\r\n\r\n  onNodeUnselectHandler(event: Event): void {\r\n    this.onNodeUnselect.emit(event);\r\n  }\r\n\r\n  onNodeExpandHandler(event: Event): void {\r\n    this.onNodeExpand.emit(event);\r\n  }\r\n\r\n  onNodeCollapseHandler(event: Event): void {\r\n    this.onNodeCollapse.emit(event);\r\n  }\r\n\r\n  onNodeContextMenuSelectHandler(event: Event): void {\r\n    this.onNodeContextMenuSelect.emit(event);\r\n  }\r\n\r\n  onNodeDropHandler(event: Event): void {\r\n    this.onNodeDrop.emit(event);\r\n  }\r\n\r\n  onFilterHandler(event: Event): void {\r\n    this.onFilter.emit(event);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tree\r\n  [value]=\"items\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [(selection)]=\"selection\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [contextMenu]=\"contextMenu\"\r\n  [layout]=\"layout\"\r\n  [draggableScope]=\"draggableScope\"\r\n  [droppableScope]=\"droppableScope\"\r\n  [draggableNodes]=\"draggableNodes\"\r\n  [droppableNodes]=\"droppableNodes\"\r\n  [metaKeySelection]=\"metaKeySelection\"\r\n  [propagateSelectionUp]=\"propagateSelectionUp\"\r\n  [propagateSelectionDown]=\"propagateSelectionDown\"\r\n  [loading]=\"loading\"\r\n  [loadingIcon]=\"loadingIcon\"\r\n  [emptyMessage]=\"emptyMessage\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [validateDrop]=\"validateDrop\"\r\n  [filter]=\"enableFilter\"\r\n  [filterBy]=\"filterBy\"\r\n  [filterMode]=\"filterMode\"\r\n  [filterPlaceholder]=\"filterPlaceholder\"\r\n  [filterLocale]=\"filterLocale\"\r\n  [scrollHeight]=\"scrollHeight\"\r\n  [virtualScroll]=\"virtualScroll\"\r\n  [virtualNodeHeight]=\"virtualNodeHeight\"\r\n  [minBufferPx]=\"minBufferPx\"\r\n  [maxBufferPx]=\"maxBufferPx\"\r\n  [trackBy]=\"trackBy\"\r\n  [indentation]=\"indentation\"\r\n  (onNodeSelect)=\"onNodeSelectHandler($event)\"\r\n  (onNodeUnselect)=\"onNodeUnselectHandler($event)\"\r\n  (onNodeExpand)=\"onNodeExpandHandler($event)\"\r\n  (onNodeCollapse)=\"onNodeCollapseHandler($event)\"\r\n  (onNodeContextMenuSelect)=\"onNodeContextMenuSelectHandler($event)\"\r\n  (onNodeDrop)=\"onNodeDropHandler($event)\"\r\n  (onFilter)=\"onFilterHandler($event)\"\r\n></p-tree>\r\n"
        },
        {
            "name": "ZyfraTriCheckboxComponent",
            "id": "component-ZyfraTriCheckboxComponent-f598081e1b982d2a84a6522c7d8380e68cea281e980b8d4b43b55f78804c6a0a245af87eff13456b04fc7247ff687b59c65dcf44e8ecf4d4d7655dacd362440a",
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-tri-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tri-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "FormControl | null",
                    "decorators": []
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean | null",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "onModelChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "onModelTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy, Provider, forwardRef, ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: 'zyfra-tri-checkbox',\r\n  templateUrl: './zyfra-tri-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [CHECKBOX_VALUE_ACCESSOR],\r\n  styles: [],\r\n})\r\nexport class ZyfraTriCheckboxComponent implements ControlValueAccessor {\r\n  @Input() name: string;\r\n  @Input() label: string;\r\n  @Input() disabled: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() readonly: boolean;\r\n  @Input() model: boolean | null;\r\n  @Input() formControl: FormControl | null;\r\n  @Output() modelChange = new EventEmitter<boolean | null>();\r\n  onModelChange: () => void = () => {};\r\n  onModelTouched: () => void = () => {};\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n  }\r\n\r\n  onChangeHandler(event: { value: true, originalEvent: PointerEvent }) {\r\n    if (this.formControl) {\r\n      this.formControl.setValue(event.value);\r\n    } else {\r\n      this.model = event.value;\r\n    }\r\n    this.modelChange.emit(this.model);\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.model = value;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    this.disabled = disabled;\r\n    this.cd.markForCheck();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-triStateCheckbox\r\n  [(ngModel)]=\"model\"\r\n  [name]=\"name\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [readonly]=\"readonly\"\r\n  (onChange)=\"onChangeHandler($event)\"\r\n></p-triStateCheckbox>\r\n"
        }
    ],
    "modules": [
        {
            "name": "ZyfraAccordionModule",
            "id": "module-ZyfraAccordionModule-1191881326adc62afb6e632206e0bf459498ae38cf419fb521d5f797025d0ed8f9b2019facbca71a31ef9ff219bea0d4ca9db5cf551710085e4a3053d9b7bf96",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/accordion/zyfra-accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraAccordionComponent } from './zyfra-accordion/zyfra-accordion.component';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { ZyfraAccordionTabComponent } from './zyfra-accordion-tab/zyfra-accordion-tab.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\r\n  imports: [AccordionModule, CommonModule, ZyfraSharedModule],\r\n  exports: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\r\n})\r\nexport class ZyfraAccordionModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraAutoCompleteModule",
            "id": "module-ZyfraAutoCompleteModule-ff9fcfb6e7d238a8507e56e8d78faf68f3f8492e21dff5e30e3f90bd3eee9fd8d1976a456e8ff4725ddc676f7295bffce1a651dbdb5f60b1dcb9205ef6f476de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraAutoCompleteComponent } from './zyfra-auto-complete.component';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraAutoCompleteComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AutoCompleteModule],\r\n  exports: [ZyfraAutoCompleteComponent],\r\n})\r\nexport class ZyfraAutoCompleteModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraBreadcrumbModule",
            "id": "module-ZyfraBreadcrumbModule-377488805d39f63163e6a2a5b93d82e9926cb58e4447623c547c966d71993a82ba5fbbd6944342b01ce3190d2e5e75ba29e85e4e7247af5f292d45b51e3b355e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraBreadcrumbComponent } from './zyfra-breadcrumb.component';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraBreadcrumbComponent],\r\n  imports: [BreadcrumbModule],\r\n  exports: [ZyfraBreadcrumbComponent],\r\n})\r\nexport class ZyfraBreadcrumbModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraButtonModule",
            "id": "module-ZyfraButtonModule-6048466eb0480a06db13abfa6ed756fff43b5af6c72bfff008b7b4a9469f661157b68e4e43e79dac449fdf20af78459b337c799308d2a78c36f2343f176989df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/button/zyfra-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraButtonComponent } from './zyfra-button.component';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraButtonComponent],\r\n  imports: [ButtonModule],\r\n  exports: [ZyfraButtonComponent],\r\n})\r\nexport class ZyfraButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraCheckBoxModule",
            "id": "module-ZyfraCheckBoxModule-5495d0f380659ffb9d9062ca4cb6d564e9ff3d11b4e804f239219a18b0b8e6632a1ee7610597d7349b6632026a243145019cd8e0e2c452fcdcdd2c513bfeb964",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ZyfraCheckboxComponent } from './zyfra-checkbox.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraCheckboxComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, CheckboxModule],\r\n  exports: [ZyfraCheckboxComponent],\r\n})\r\nexport class ZyfraCheckBoxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraChipModule",
            "id": "module-ZyfraChipModule-049eaeb8d47c3f15225fff041202013859903db96fb4e36c99628382521034ffaa323b3883ca29cc417db6e6fa202c0b262102fed4fa3aec4a11f3109eff1c2f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/chip/zyfra-chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraChipComponent } from './zyfra-chip.component';\r\nimport { ChipModule } from 'primeng/chip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraChipComponent],\r\n  imports: [ChipModule],\r\n  exports: [ZyfraChipComponent],\r\n})\r\nexport class ZyfraChipModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraConfirmDialogModule",
            "id": "module-ZyfraConfirmDialogModule-e0b659d75d595e480f82b289ad6472be4e55a53e303d69970c70cda3a40c2c6c31692db3925fb762aa7ddbc3c60f9295dc89423444ab67d1cd652c1c5092c778",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ZyfraConfirmDialogComponent } from './zyfra-confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraConfirmDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ConfirmDialogModule,\r\n    MessagesModule,\r\n    ToastModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [ZyfraConfirmDialogComponent],\r\n})\r\nexport class ZyfraConfirmDialogModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDatepickerModule",
            "id": "module-ZyfraDatepickerModule-531de9c3039247213a891a6e5f8516fc4f5e28dd7d0149f4ab75da1d98b3c31c6e928ec7fc9f13386b0fb60d9ddd7880aa207a0f761ce8da4576a2bbefb48fe5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDatepickerComponent } from './zyfra-datepicker.component';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ZyfraDropdownModule } from '../dropdown';\r\nimport { ZyfraButtonModule } from '../button';\r\nimport { ZyfraRadioButtonModule } from '../radio-button';\r\nimport { ZyfraInputModule } from '../input';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDatepickerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CalendarModule,\r\n    ZyfraButtonModule,\r\n    ZyfraRadioButtonModule,\r\n    ZyfraInputModule,\r\n    ZyfraDropdownModule\r\n  ],\r\n  exports: [ZyfraDatepickerComponent]\r\n})\r\nexport class ZyfraDatepickerModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraDropdownModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraRadioButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDialogModule",
            "id": "module-ZyfraDialogModule-0ff7ac453021e1cc13e43e6b47573ae0906d28488612f63e4d22c3ef3abbbcfccbb735af870bdd29b6c40d501c37087e8da00f7afb602d90c35333ea94523ea5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dialog/zyfra-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ZyfraDialogComponent } from './zyfra-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDialogComponent],\r\n  imports: [CommonModule, DialogModule, ToastModule],\r\n  exports: [ZyfraDialogComponent],\r\n})\r\nexport class ZyfraDialogModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDropdownModule",
            "id": "module-ZyfraDropdownModule-2dad0093773221e0ef83154547f635edc37e38e653f0cea169498f73f202fc2f701b59a9d7bdff4ff875c6f4477e191eab50cbfe0172056e8af69f439481360b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDropdownComponent } from './zyfra-dropdown.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule],\r\n  exports: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\r\n})\r\nexport class ZyfraDropdownModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDynamicDialogModule",
            "id": "module-ZyfraDynamicDialogModule-fdf95cb99a078d7bda1ef437162ae5a704866ce926586ab4f47bd7de7dd3391813c10c220af0e7fb6d9422195217d7072300b0bf07bcf6faeed10b1a379d13cf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicDialogModule\r\n  ]\r\n})\r\nexport class ZyfraDynamicDialogModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraHintModule",
            "id": "module-ZyfraHintModule-96ea9a9cc33016368897cad2d7f6643f5583d89399e127ea75b16bcd6c79032b7fbbd6a3c80e50040da46b1e30e37c434429cfc0d6db1f41d94e5bca6f9babbf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraHintDirective } from './zyfra-hint.directive';\r\nimport { ZyfraHintComponent } from './zyfra-hint.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraHintOverlayManager } from './zyfra-hint-overlay-manager.service';\r\n\r\nconst EXPORTED_DECLARATIONS = [ZyfraHintDirective, ZyfraHintComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: EXPORTED_DECLARATIONS,\r\n  declarations: EXPORTED_DECLARATIONS,\r\n  providers: [ZyfraHintOverlayManager],\r\n  entryComponents: [ZyfraHintComponent],\r\n})\r\nexport class ZyfraHintModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ZyfraHintOverlayManager"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraHintComponent"
                        },
                        {
                            "name": "ZyfraHintDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraIconModule",
            "id": "module-ZyfraIconModule-0f25f7327170f85ad2b8cf0d0901c7432749c979e7fb6e97bbcebbe3e548bf926f0c2ada0daa1e899cd001d1d23ea9288799343b5a67efd137879c89c79fc34c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/icon/zyfra-icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraIconComponent } from './zyfra-icon.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraIconComponent],\r\n  imports: [CommonModule],\r\n  exports: [ZyfraIconComponent],\r\n})\r\nexport class ZyfraIconModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputMaskModule",
            "id": "module-ZyfraInputMaskModule-a82052d484aeaf9b1431f4b9b006d0bf9ca1e8aceecd73d70be8a914e16875498c3be5be967e4e52a96c1f8fee6c9b4d1c2c4dacdde53e0a8e83b763df894323",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraInputMaskComponent } from './zyfra-input-mask.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputMaskComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    InputMaskModule\r\n  ],\r\n  exports: [ZyfraInputMaskComponent]\r\n})\r\nexport class ZyfraInputMaskModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputModule",
            "id": "module-ZyfraInputModule-409ce0d2809ef23d28bd506cf29bddf8b1cce0e4e5fc39bc0b75457ea4bbac0938e8d9c79b63c472338a0b32819bc6f65b0833c877be04f3d324c333213ee1d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input/zyfra-input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraInputComponent } from './zyfra-input.component';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputComponent],\r\n  imports: [CommonModule, InputTextModule, TooltipModule, FormsModule, ReactiveFormsModule],\r\n  exports: [ZyfraInputComponent],\r\n})\r\nexport class ZyfraInputModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputNumberModule",
            "id": "module-ZyfraInputNumberModule-8d698702463fbdb18b13c0b31a5007811d7bb312fd457663475f0dc0e8aa8a447cdf18452fd2e13389393ef18b95326219e5ac2e47fadf2445b12d6b1887a0bf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-number/zyfra-input-number.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraInputNumberComponent } from './zyfra-input-number.component';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputNumberComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputNumberModule],\r\n  exports: [ZyfraInputNumberComponent],\r\n})\r\nexport class ZyfraInputNumberModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputSwitchModule",
            "id": "module-ZyfraInputSwitchModule-6e8f18867f3fb96192643cb535ec51ca399aceb618b8ccabda21e982505b0fa879dd609b57a289cb6671c11e5550368da8765f54faa6019f9a8c4908fa0ab142",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ZyfraInputSwitchComponent } from './zyfra-input-switch.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputSwitchComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule],\r\n  exports: [ZyfraInputSwitchComponent],\r\n})\r\nexport class ZyfraInputSwitchModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMenuApplicationsModule",
            "id": "module-ZyfraMenuApplicationsModule-4871177bb7b415706c9790cb1811d8f344dcd65ce424c9149f2664f03e1130273f12c4bcbb2ae8ea8e891a87b688e2cc9368bac673b3cccf3d18721cfcc009e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraMenuApplicationsComponent } from './zyfra-menu-applications.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraMenuApplicationsItemComponent } from './zyfra-menu-applications-item/zyfra-menu-applications-item.component';\r\nimport { ZyfraHintModule, ZyfraIconModule, ZyfraSplitterModule } from '@digital-plant/zyfra-components';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraMenuApplicationsComponent, ZyfraMenuApplicationsItemComponent],\r\n  imports: [CommonModule, ZyfraIconModule, ZyfraSplitterModule, ZyfraHintModule],\r\n  exports: [ZyfraMenuApplicationsComponent],\r\n})\r\nexport class ZyfraMenuApplicationsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        },
                        {
                            "name": "ZyfraMenuApplicationsItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraHintModule"
                        },
                        {
                            "name": "ZyfraIconModule"
                        },
                        {
                            "name": "ZyfraSplitterModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMessageModule",
            "id": "module-ZyfraMessageModule-be431c1d2dffe88fc547e43640a76325744faba8100b77d058e54c69244e868ef441914c7438fc2aff7e1723855d157f4566960a56bb0a9465c4d9cb17502d2f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/message/zyfra-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { ZyfraMessageComponent } from './zyfra-message.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraMessageComponent],\r\n  imports: [MessagesModule, MessageModule],\r\n  exports: [ZyfraMessageComponent],\r\n})\r\nexport class ZyfraMessageModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraNavMenuModule",
            "id": "module-ZyfraNavMenuModule-b95d258001012b65241b6c4e2c24344e6f15a25d63ba68e5ad8e8299381ac19423ba534fbb86b7ff8b8fba378ffa2e6cbe384767c2808d3c705bbd91ad87e946",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraAutofocusDirective } from './directives/zyfra-autofocus.directives';\r\nimport { ZyfraNavMenuGroupDirective } from './directives/nav-menu-group.directive';\r\nimport { NavMenuService } from './service/selection.service';\r\nimport { ZyfraNavMenuItemComponent } from './components/zyfra-menu-item/zyfra-nav-menu-item.component';\r\nimport { ZyfraNavMenuGroupComponent } from './components/zyfra-nav-menu-group/zyfra-nav-menu-group.component';\r\nimport { ZyfraSharedModule } from '../@shared/zyfra-shared.module';\r\nimport { ZyfraHintModule } from '../hint/zyfra-hint.module';\r\nimport { ZyfraAccordionModule } from '../accordion/zyfra-accordion.module';\r\nimport { ZyfraInputModule } from '../input/zyfra-input.module';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\nimport { ZyfraCheckBoxModule } from '../checkbox/zyfra-checkbox.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraNavMenuComponent,\r\n    ZyfraAutofocusDirective,\r\n    ZyfraNavMenuGroupDirective,\r\n    ZyfraNavMenuGroupComponent,\r\n    ZyfraNavMenuItemComponent\r\n  ],\r\n  imports: [\r\n    PanelMenuModule,\r\n    MenuModule,\r\n    TreeModule,\r\n    ToggleButtonModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    RippleModule,\r\n    CommonModule,\r\n    InputTextModule,\r\n    OverlayPanelModule,\r\n    RadioButtonModule,\r\n    TooltipModule,\r\n    ZyfraCheckBoxModule,\r\n    ZyfraButtonModule,\r\n    ZyfraInputModule,\r\n    ZyfraAccordionModule,\r\n    ZyfraSharedModule,\r\n    ZyfraHintModule\r\n  ],\r\n  providers: [NavMenuService],\r\n  exports: [\r\n    ZyfraNavMenuComponent,\r\n    ZyfraNavMenuGroupDirective\r\n  ]\r\n})\r\nexport class ZyfraNavMenuModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "NavMenuService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutofocusDirective"
                        },
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        },
                        {
                            "name": "ZyfraNavMenuItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionModule"
                        },
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraCheckBoxModule"
                        },
                        {
                            "name": "ZyfraHintModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPaginatorModule",
            "id": "module-ZyfraPaginatorModule-c5876f218c667b59b44643c5c32b928159e2edc613d2714825052ceb0cceacfc3dbe77bbf54ecfe365e9f064823f549707d9fff4fa7c30c84056aeb08f4bd569",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/paginator/zyfra-paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraPaginatorComponent } from './zyfra-paginator.component';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPaginatorComponent],\r\n  imports: [PaginatorModule],\r\n  exports: [ZyfraPaginatorComponent],\r\n})\r\nexport class ZyfraPaginatorModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPasswordModule",
            "id": "module-ZyfraPasswordModule-c456a6f19494ef24bddecee30c4b4f73e0f06e1b9205103fe1c19c137ef02bfcc664780feb480fa2d6cc4be0e5dffc7906790550c7a703aa6a14c871600fbeb4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/password/zyfra-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ZyfraPasswordComponent } from './zyfra-password.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPasswordComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PasswordModule],\r\n  exports: [ZyfraPasswordComponent],\r\n})\r\nexport class ZyfraPasswordModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraProgressBarModule",
            "id": "module-ZyfraProgressBarModule-4c4fea2ff4fea1966826711aa4921bb1b2215b728a55d76abccd2f07b11fc98ae0e18abb5cb9567e7d711168f782195f7582625393b61114bc17a8fd02422ed5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { ZyfraProgressBarComponent } from './zyfra-progress-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraProgressBarComponent],\r\n  imports: [ProgressBarModule],\r\n  exports: [ZyfraProgressBarComponent],\r\n})\r\nexport class ZyfraProgressBarModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraRadioButtonModule",
            "id": "module-ZyfraRadioButtonModule-1b216b60089cf00ec08eb2ee58c037cd9221c63bce2838d555ba8fadef9b60d8615f995dd8dbeeb8872a772ebbb5fc353cf81de1d07da63bd8e12c5f6b1b7e38",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraRadioButtonComponent } from './zyfra-radio-button.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraRadioButtonComponent],\r\n  imports: [RadioButtonModule, FormsModule, ReactiveFormsModule, CommonModule],\r\n  exports: [ZyfraRadioButtonComponent],\r\n})\r\nexport class ZyfraRadioButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSelectButtonModule",
            "id": "module-ZyfraSelectButtonModule-d155c98618ae2cde1aa88d01aeeaa0ed15b466fdb5db38cf6f9e4715587539f46b51905e1b2b51dc55d645bb491b709bdaee1c01bbc6c7f9512c33f339d31c94",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/select-button/zyfra-select-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSelectButtonComponent],\r\n  imports: [SelectButtonModule],\r\n  exports: [ZyfraSelectButtonComponent],\r\n})\r\nexport class ZyfraSelectButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSharedModule",
            "id": "module-ZyfraSharedModule-f6318395de13676b896d3076d639a0628a12f2a6a29e94a1bf664743afc048264adadf68c0ce05ac36698208cd1b3503913c0a98398d6577c96c52418ff1d3d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/@shared/zyfra-shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraTemplateDirective } from './zyfra-template.directives';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTemplateDirective],\r\n  exports: [ZyfraTemplateDirective],\r\n})\r\nexport class ZyfraSharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSliderModule",
            "id": "module-ZyfraSliderModule-c34f0073f0682e69b918aec956f26ae830f21afa7621a231442005f62f4d6a39b5eeb0ed5516b08510002b0236448dbd0acf8e6b18a38010e7e5740ce06a505e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/slider/zyfra-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport { ZyfraSliderComponent } from './zyfra-slider.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSliderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SliderModule,\r\n  ],\r\n  exports: [ZyfraSliderComponent]\r\n})\r\nexport class ZyfraSliderModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSpinnerModule",
            "id": "module-ZyfraSpinnerModule-5695763481dea259b59dda79e04dd5b4688a22669bf2f5603590bb8a9fa9cd77c293243486dc6573cb79afce0874aac9f2492548017031187d8a5cbd5f025d68",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/spinner/zyfra-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSpinnerComponent } from './zyfra-spinner.component';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSpinnerComponent],\r\n  imports: [ProgressSpinnerModule],\r\n  exports: [ZyfraSpinnerComponent],\r\n})\r\nexport class ZyfraSpinnerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitButtonModule",
            "id": "module-ZyfraSplitButtonModule-6d0198689cd4d6a33a059e7e1f87efed395ee4f020702f6f4ca14a5da71b12d61fb7a65113a6b2b0a4a4fa2799fdf0f247f47c6c49e64d96cfc50441edaf9671",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/split-button/zyfra-split-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSplitButtonComponent } from './zyfra-split-button.component';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSplitButtonComponent],\r\n  imports: [SplitButtonModule],\r\n  exports: [ZyfraSplitButtonComponent],\r\n})\r\nexport class ZyfraSplitButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitterModule",
            "id": "module-ZyfraSplitterModule-25737593ee381f82a8b014757b967ef8e83372547d9c12499c87e3ab72fff464b0198e5cadf9fdd099aaed527fb86350bcc21f541e2c8658a3c5b27808227bc2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/splitter/zyfra-splitter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSplitterComponent } from './zyfra-splitter.component';\r\nimport { SplitterModule } from 'primeng/splitter';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\r\n  imports: [CommonModule, BrowserModule, BrowserAnimationsModule, SplitterModule],\r\n  exports: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\r\n})\r\nexport class ZyfraSplitterModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabMenuModule",
            "id": "module-ZyfraTabMenuModule-a20eba47f89c2f59d73042094bd8a9c95f71f5df9c7fc4eaa0e47e1fae9a9ea275efab5e071be2e93e11282a58ac884d4004e4169f8c951e301564f38d376b3d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { SlideMenuModule } from 'primeng/slidemenu';\r\nimport { ZyfraTabMenuComponent } from './zyfra-tab-menu.component';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTabMenuComponent],\r\n  imports: [CommonModule, TooltipModule, TabMenuModule, OverlayPanelModule, SlideMenuModule],\r\n  exports: [ZyfraTabMenuComponent],\r\n})\r\nexport class ZyfraTabMenuModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabViewModule",
            "id": "module-ZyfraTabViewModule-d0df00303c86c60e10fe2ecbe76d63634afb5979c174397434ab9de7ca131899719f7d98deb40353f1c591cd2fa8dc2c117016f86ba51416da4c3094c08511aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ZyfraTabViewComponent } from './zyfra-tab-view/zyfra-tab-view.component';\r\nimport { ZyfraTabPanelComponent } from './zyfra-tab-panel/zyfra-tab-panel.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\r\n  imports: [CommonModule, OverlayPanelModule, TabViewModule, TooltipModule],\r\n  exports: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\r\n})\r\nexport class ZyfraTabViewModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTextareaModule",
            "id": "module-ZyfraTextareaModule-328f343d5f7dd84ff7c0ad60471d2715570158751e37b1e06afadb6c4221c88146de2dcd2f5db5b28fddb361c4a1dc3860297948df707366c70a1525f7c75263",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/textarea/zyfra-textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraTextareaComponent } from './zyfra-textarea.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTextareaComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextareaModule],\r\n  exports: [ZyfraTextareaComponent],\r\n})\r\nexport class ZyfraTextareaModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToastModule",
            "id": "module-ZyfraToastModule-8af59ce2d33e73cdbac22f5656d2203e5ab95f094f1bd418963cb20c4ea7f4ab5042063d124861cf7b74423ce8329dfaaa4e12fa7fad8ab80fd6aadcac9b1196",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toast/zyfra-toast.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ZyfraToastComponent } from './zyfra-toast.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToastComponent],\r\n  imports: [CommonModule, ToastModule, RippleModule, FormsModule],\r\n  exports: [ZyfraToastComponent],\r\n})\r\nexport class ZyfraToastModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToggleButtonModule",
            "id": "module-ZyfraToggleButtonModule-a42ec844ce7246291042d4b9692493083465154ec99600c3c516d7f471e90cb2639b39bf486e0ae425c0ca220bc1d5151d99a6e9d30c0efdfcc8019a7f25faba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraToggleButtonComponent } from './zyfra-toggle-button.component';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToggleButtonComponent],\r\n  imports: [FormsModule, CommonModule, ToggleButtonModule],\r\n  exports: [ZyfraToggleButtonComponent],\r\n})\r\nexport class ZyfraToggleButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeModule",
            "id": "module-ZyfraTreeModule-067ee032f92720e22990f3aee0cd037e48d618f9d0566c2d53f6faa5cdd6cb3e4d044d8bfdd623d22f48eff24f5881ba0e983712fc52bde0c7b7e1f10e81b5c4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree/zyfra-tree.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraTreeComponent } from './zyfra-tree.component';\r\nimport { TreeModule } from 'primeng/tree';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraTreeComponent,\r\n  ],\r\n  imports: [\r\n    TreeModule,\r\n  ],\r\n  exports: [\r\n    ZyfraTreeComponent,\r\n  ]\r\n})\r\nexport class ZyfraTreeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTriCheckBoxModule",
            "id": "module-ZyfraTriCheckBoxModule-9122831b5c49c8793a57e5b64ac0185dcfba94ed3b36443c368ae972df22173aa7f4d4f1cf66f0c39ae5421de4b5fd423a56153124c4adc12d778561ea4e1df1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraTriCheckboxComponent } from './zyfra-tri-checkbox.component';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTriCheckboxComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TriStateCheckboxModule],\r\n  exports: [ZyfraTriCheckboxComponent],\r\n})\r\nexport class ZyfraTriCheckBoxModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraUiRootModule",
            "id": "module-ZyfraUiRootModule-0f30bad653561a2fbe3061f89428162be1b48e38ac771a181539e7f8b250a13808201e2f8d73474be17f9db01789e84d7e31f40ecc28c82aa9eecf7e7ca489e6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/root/zyfra-ui-root.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({})\r\nexport class ZyfraUiRootModule {\r\n  // do nothing,\r\n  // override if need root providers for components\r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Absolute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AbsoluteMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n}"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AnimationSpeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\r\n  {label: 'Наименование ячейки 1'},\r\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\r\n  {label: 'Наименование ячейки 3 длиннее остальных'},\r\n  {label: 'Наименование ячейки 4'},\r\n  {label: 'Наименование ячейки 5'},\r\n]"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
            },
            {
                "name": "basicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\r\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
            },
            {
                "name": "BasicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Binary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "bottomMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Избранное',\r\n    icon: 'social-star'\r\n  },\r\n  {\r\n    title: 'Поиск',\r\n    icon: 'sort-zoom-in'\r\n  },\r\n  {\r\n    title: 'Служба техподдежки',\r\n    icon: 'alerts-pulse'\r\n  },\r\n]"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n}"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\r\n  multi: true,\r\n}"
            },
            {
                "name": "CheckboxWithFormControlComponentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n    toggleStatus(): void {\r\n      if (this.fControl.disabled) {\r\n        this.fControl.enable();\r\n      } else {\r\n        this.fControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.fControl.setValue(!this.fControl.value);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "cities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryCity[]",
                "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "convertToNode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\r\n  let children;\r\n  const node: TreeNode = {\r\n    label: item.label,\r\n    data: item,\r\n    key: generateKey(),\r\n    parent\r\n  };\r\n  if (item.items) {\r\n    children = item.items.map(childItem => {\r\n      return convertToNode(childItem, node);\r\n    });\r\n  }\r\n  node.children = children;\r\n  return node;\r\n}"
            },
            {
                "name": "Currency",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplateWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CustomWithBadge.bind({})"
            },
            {
                "name": "CustomTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\r\n              [activeIndex]=\"activeIndex\"\r\n              [controlClose]=\"controlClose\"\r\n              [style]=\"style\"\r\n              [styleClass]=\"styleClass\"\r\n              (onChange)=\"onChangeHandler($event)\"\r\n              (onClose)=\"onCloseHandler($event)\">\r\n          <ng-container *ngFor=\"let tab of tabs\">\r\n              <zyfra-tab-panel [header]=\"tab.header\"\r\n                               [selected]=\"tab.selected\"\r\n                               [disabled]=\"tab.disabled\"\r\n                               [closable]=\"tab.closable\"\r\n                               [leftIcon]=\"tab.leftIcon\"\r\n                               [rightIcon]=\"tab.rightIcon\"\r\n                               [headerStyle]=\"tab.headerStyle\"\r\n                               [headerStyleClass]=\"tab.headerStyleClass\"\r\n                               [cache]=\"tab.cache\"\r\n                               [tooltip]=\"tab.tooltip\"\r\n                               [tooltipPosition]=\"tab.tooltipPosition\"\r\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\r\n                  <ng-template #header>\r\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\r\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\r\n                               [value]=\"tab.badgeValue\"\r\n                               [severity]=\"tab.severity\"></p-badge>\r\n                  </ng-template>\r\n\r\n                {{tab.content}}\r\n              </zyfra-tab-panel>\r\n          </ng-container>\r\n      </zyfra-tab-view>`,\r\n})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Decimal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DEFAULT_SETTINGS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SettingsConfig",
                "defaultValue": "{\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n}"
            },
            {
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToolbarConfig",
                "defaultValue": "{\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}"
            },
            {
                "name": "DefaultDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  open: {\r\n    duration: 300,\r\n    delay: 500,\r\n    timingFunction: 'ease-in',\r\n  },\r\n  close: {\r\n    duration: 300,\r\n    delay: 300,\r\n    timingFunction: 'ease-out',\r\n  }\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "en",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  \"dateFormat\": \"mm/dd/yy\",\r\n  \"today\": \"Today\",\r\n  \"weekHeader\": \"Wk\",\r\n  \"clear\": \"Clear\"\r\n}"
            },
            {
                "name": "EnlargedSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "EXPORTED_DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
            },
            {
                "name": "ExtraItemTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
            },
            {
                "name": "ExtraTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ExtraItemTemplate.bind({})"
            },
            {
                "name": "flatNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\r\n}"
            },
            {
                "name": "FolderMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "FormControlRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormControlTemplate.bind({})"
            },
            {
                "name": "FormControlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\r\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
            },
            {
                "name": "formControlTemplateChunk",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
            },
            {
                "name": "fromRubricatorNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\r\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\r\n  const rubricatorNodes = [];\r\n  letters.forEach(letter => {\r\n    rubricatorNodes.push({\r\n      key: letter,\r\n      label: letter,\r\n      data: { label: letter },\r\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\r\n    });\r\n  });\r\n  return rubricatorNodes;\r\n}"
            },
            {
                "name": "generateKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
            },
            {
                "name": "getPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\r\n  acc.push(node.parent);\r\n  return node.parent\r\n    ? getPath(node.parent, acc)\r\n    : acc.reverse();\r\n}"
            },
            {
                "name": "Group",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GroupPanels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "GroupPanelTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTextExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HintTitleExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "htmlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n  </div>\r\n`"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconDefs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        \"dir\": \"account\",\r\n        \"data\": [\r\n            \"account-card-details\",\r\n            \"account-circle\",\r\n            \"account-done\",\r\n            \"account-down-list-open\",\r\n            \"account-down-list\",\r\n            \"account-edit\",\r\n            \"account-group\",\r\n            \"account-key\",\r\n            \"account-location\",\r\n            \"account-lock\",\r\n            \"account-log-in\",\r\n            \"account-logout\",\r\n            \"account-minus\",\r\n            \"account-multiple-minus\",\r\n            \"account-multiple-plus\",\r\n            \"account-multiple-shield\",\r\n            \"account-multiple\",\r\n            \"account-plus\",\r\n            \"account-remove\",\r\n            \"account-search\",\r\n            \"account-setting-1\",\r\n            \"account-setting\",\r\n            \"account-shield-1\",\r\n            \"account-shield-alarm\",\r\n            \"account-shield-off\",\r\n            \"account-shield\",\r\n            \"account-switch\",\r\n            \"account-unlock\",\r\n            \"account-worker\",\r\n            \"account\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"add\",\r\n        \"data\": [\r\n            \"add-alarm\",\r\n            \"add-bell-plus\",\r\n            \"add-bookmark-plus\",\r\n            \"add-cart-plus\",\r\n            \"add-file-plus\",\r\n            \"add-folder-plus\",\r\n            \"add-label-add\",\r\n            \"add-library-plus\",\r\n            \"add-map-marker-plus\",\r\n            \"add-phone\",\r\n            \"add-plus-box-fill\",\r\n            \"add-plus-box\",\r\n            \"add-plus-circle-multiple\",\r\n            \"add-plus-drop-down-list\",\r\n            \"add-plus\",\r\n            \"add-shape-square-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"alerts\",\r\n        \"data\": [\r\n            \"alerts-alarm-1\",\r\n            \"alerts-alarm-2\",\r\n            \"alerts-alarm-3\",\r\n            \"alerts-alarm-light\",\r\n            \"alerts-bell-fill\",\r\n            \"alerts-bell-off\",\r\n            \"alerts-bell-ring-fill\",\r\n            \"alerts-bell-ring\",\r\n            \"alerts-bell\",\r\n            \"alerts-box-fill\",\r\n            \"alerts-circle-fill\",\r\n            \"alerts-circle\",\r\n            \"alerts-decagram-fill\",\r\n            \"alerts-decagram\",\r\n            \"alerts-flag-fill\",\r\n            \"alerts-flag\",\r\n            \"alerts-help-box-fill\",\r\n            \"alerts-help-box\",\r\n            \"alerts-help-circle-outline\",\r\n            \"alerts-help-fill\",\r\n            \"alerts-info-circle-fill\",\r\n            \"alerts-info-square-fill\",\r\n            \"alerts-info-square\",\r\n            \"alerts-info-triangle-fill\",\r\n            \"alerts-info-triangle\",\r\n            \"alerts-inform-fill-mini\",\r\n            \"alerts-inform-mini\",\r\n            \"alerts-inform\",\r\n            \"alerts-information-variant\",\r\n            \"alerts-mark\",\r\n            \"alerts-octagon-fill\",\r\n            \"alerts-octagon\",\r\n            \"alerts-pulse\",\r\n            \"alerts-question-mark\",\r\n            \"alerts-square\",\r\n            \"alerts-warning\",\r\n            \"alerts\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"apps\",\r\n        \"data\": [\r\n            \"apps-collector\",\r\n            \"apps-key\",\r\n            \"apps-ontology-2\",\r\n            \"apps-ontology\",\r\n            \"apps-own\",\r\n            \"apps-star\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"arrows\",\r\n        \"data\": [\r\n            \"arrows-all\",\r\n            \"arrows-arrow-circle-down\",\r\n            \"arrows-arrow-circle-left\",\r\n            \"arrows-arrow-circle-right\",\r\n            \"arrows-arrow-circle-up\",\r\n            \"arrows-arrow-expand-horizontal\",\r\n            \"arrows-arrow-expand-vertical\",\r\n            \"arrows-arrow-left\",\r\n            \"arrows-arrow-right\",\r\n            \"arrows-arrow-up-level\",\r\n            \"arrows-arrow-upward\",\r\n            \"arrows-autorenew-1\",\r\n            \"arrows-autorenew\",\r\n            \"arrows-back\",\r\n            \"arrows-cached-1\",\r\n            \"arrows-cached\",\r\n            \"arrows-chevron-left\",\r\n            \"arrows-chevron-right\",\r\n            \"arrows-collapse-four-arrows\",\r\n            \"arrows-collapse\",\r\n            \"arrows-compare\",\r\n            \"arrows-corner-down-left\",\r\n            \"arrows-corner-down-right\",\r\n            \"arrows-corner-left-down\",\r\n            \"arrows-corner-left-up\",\r\n            \"arrows-corner-right-down\",\r\n            \"arrows-corner-right-up\",\r\n            \"arrows-corner-up-left\",\r\n            \"arrows-corner-up-right\",\r\n            \"arrows-diagonal-arrow-left-down\",\r\n            \"arrows-diagonal-arrow-left-up\",\r\n            \"arrows-diagonal-arrow-right-down\",\r\n            \"arrows-diagonal-arrow-right-up\",\r\n            \"arrows-down-2\",\r\n            \"arrows-down-bold\",\r\n            \"arrows-down-double-2\",\r\n            \"arrows-down-double-top-2\",\r\n            \"arrows-down-limit-1\",\r\n            \"arrows-down-limit-double-1\",\r\n            \"arrows-down\",\r\n            \"arrows-expand-all\",\r\n            \"arrows-expand\",\r\n            \"arrows-left-bold\",\r\n            \"arrows-long-arrow-left\",\r\n            \"arrows-long-arrow-right\",\r\n            \"arrows-next\",\r\n            \"arrows-refresh\",\r\n            \"arrows-replay\",\r\n            \"arrows-right-bold\",\r\n            \"arrows-shuffle-variant\",\r\n            \"arrows-shuffle\",\r\n            \"arrows-swap-horiz\",\r\n            \"arrows-swap-vert\",\r\n            \"arrows-swap\",\r\n            \"arrows-up-2\",\r\n            \"arrows-up-bold\",\r\n            \"arrows-up-double-2\",\r\n            \"arrows-up-double-top-2\",\r\n            \"arrows-up-limit-1\",\r\n            \"arrows-up-limit-double-1\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"audio\",\r\n        \"data\": [\r\n            \"audio-add-library-music\",\r\n            \"audio-artist\",\r\n            \"audio-bookmark-music\",\r\n            \"audio-file-music\",\r\n            \"audio-microphone-off\",\r\n            \"audio-microphone\",\r\n            \"audio-music-box\",\r\n            \"audio-music-circle\",\r\n            \"audio-music-off\",\r\n            \"audio-music\",\r\n            \"audio-volume-high\",\r\n            \"audio-volume-low\",\r\n            \"audio-volume-medium\",\r\n            \"audio-volume-minus\",\r\n            \"audio-volume-mute\",\r\n            \"audio-volume-off\",\r\n            \"audio-volume-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"badges\",\r\n        \"data\": [\r\n            \"badges-clipboard-tex\",\r\n            \"badges-clipboard\",\r\n            \"badges-code-download\",\r\n            \"badges-code\",\r\n            \"badges-tag-fill\",\r\n            \"badges-tag-multiple\",\r\n            \"badges-tag-plus\",\r\n            \"badges-tag-remove\",\r\n            \"badges-tag-search\",\r\n            \"badges-tag-text\",\r\n            \"badges-tag\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"battery\",\r\n        \"data\": [\r\n            \"battery-10\",\r\n            \"battery-30\",\r\n            \"battery-50\",\r\n            \"battery-80\",\r\n            \"battery-alert\",\r\n            \"battery-charging\",\r\n            \"battery-flash-off\",\r\n            \"battery-flash\",\r\n            \"battery-minus\",\r\n            \"battery-plus\",\r\n            \"battery\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"bookmarks\",\r\n        \"data\": [\r\n            \"bookmarks-book-open-page-variant\",\r\n            \"bookmarks-book-open-plus\",\r\n            \"bookmarks-book-open-variant\",\r\n            \"bookmarks-book-open\",\r\n            \"bookmarks-book\",\r\n            \"bookmarks-bookmark-check-fill\",\r\n            \"bookmarks-bookmark-check\",\r\n            \"bookmarks-bookmark-fill\",\r\n            \"bookmarks-bookmark-music-fill\",\r\n            \"bookmarks-bookmark-music\",\r\n            \"bookmarks-bookmark-plus-fill\",\r\n            \"bookmarks-bookmark-plus\",\r\n            \"bookmarks-bookmark-remove-fill\",\r\n            \"bookmarks-bookmark-remove\",\r\n            \"bookmarks-bookmark\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"camera\",\r\n        \"data\": [\r\n            \"camera-camera\",\r\n            \"camera-clapperboard-close\",\r\n            \"camera-clapperboard\",\r\n            \"camera-close\",\r\n            \"camera-film-close\",\r\n            \"camera-film\",\r\n            \"camera-image\",\r\n            \"camera-video-close\",\r\n            \"camera-video-off\",\r\n            \"camera-video\",\r\n            \"camera\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"cancel\",\r\n        \"data\": [\r\n            \"cancel-block\",\r\n            \"cancel-close-box-fill\",\r\n            \"cancel-close-box\",\r\n            \"cancel-close-circle-fill\",\r\n            \"cancel-close-circle\",\r\n            \"cancel-close\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"charts\",\r\n        \"data\": [\r\n            \"charts-arc-1\",\r\n            \"charts-arc\",\r\n            \"charts-areaspline\",\r\n            \"charts-bar-stacked\",\r\n            \"charts-bar\",\r\n            \"charts-bubble-line\",\r\n            \"charts-bubble\",\r\n            \"charts-chart-donut-variant-half\",\r\n            \"charts-chart-donut-variant\",\r\n            \"charts-donut\",\r\n            \"charts-elevation-decline\",\r\n            \"charts-elevation-rise\",\r\n            \"charts-finance\",\r\n            \"charts-gantt\",\r\n            \"charts-google-analytics\",\r\n            \"charts-google-assistant\",\r\n            \"charts-hexagon-multiple\",\r\n            \"charts-histogram-chart-dashed-2\",\r\n            \"charts-histogram-chart-dashed\",\r\n            \"charts-histogram\",\r\n            \"charts-line-variant\",\r\n            \"charts-line\",\r\n            \"charts-pie-2\",\r\n            \"charts-pie\",\r\n            \"charts-poll-box\",\r\n            \"charts-poll\",\r\n            \"charts-scatterplot-hexbin\",\r\n            \"charts-signal\",\r\n            \"charts-trending-down\",\r\n            \"charts-trending-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"chevrons\",\r\n        \"data\": [\r\n            \"chevrons-close-all\",\r\n            \"chevrons-double-down\",\r\n            \"chevrons-double-left\",\r\n            \"chevrons-double-right\",\r\n            \"chevrons-double-up\",\r\n            \"chevrons-down\",\r\n            \"chevrons-dropdown\",\r\n            \"chevrons-dropup\",\r\n            \"chevrons-input\",\r\n            \"chevrons-left\",\r\n            \"chevrons-menu-left\",\r\n            \"chevrons-menu-right\",\r\n            \"chevrons-right\",\r\n            \"chevrons-unfold-less-horizontal\",\r\n            \"chevrons-unfold-less-verica\",\r\n            \"chevrons-unfold-more-horizontal\",\r\n            \"chevrons-unfold-more-vertical\",\r\n            \"chevrons-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"color\",\r\n        \"data\": [\r\n            \"angular\",\r\n            \"application\",\r\n            \"color-arrows-down-double-2\",\r\n            \"color-arrows-down-double-top-2\",\r\n            \"color-arrows-down-limit-double-1\",\r\n            \"color-arrows-up-double-2\",\r\n            \"color-arrows-up-double-top-2\",\r\n            \"color-arrows-up-limit-double-1\",\r\n            \"color-compass\",\r\n            \"color-France-drop\",\r\n            \"color-France\",\r\n            \"color-German-drop\",\r\n            \"color-German\",\r\n            \"color-Grat-Britan-down-list\",\r\n            \"color-Grat-Britan-drop\",\r\n            \"color-Indian-drop\",\r\n            \"color-Indian\",\r\n            \"color-logo-green\",\r\n            \"color-Russia-drop\",\r\n            \"color-Russia\",\r\n            \"ecp-alert-1\",\r\n            \"ecp-wind\",\r\n            \"external\",\r\n            \"react\",\r\n            \"vue\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"date\",\r\n        \"data\": [\r\n            \"date-access-alarm\",\r\n            \"date-calendar-blank\",\r\n            \"date-calendar-check\",\r\n            \"date-calendar-clock\",\r\n            \"date-calendar-plus\",\r\n            \"date-calendar-question\",\r\n            \"date-calendar-range\",\r\n            \"date-calendar-remove\",\r\n            \"date-calendar-text\",\r\n            \"date-calendar-today\",\r\n            \"date-calendar\",\r\n            \"date-clock-alert\",\r\n            \"date-clock-end\",\r\n            \"date-clock-in\",\r\n            \"date-clock-out\",\r\n            \"date-clock-start\",\r\n            \"date-clock\",\r\n            \"date-history\",\r\n            \"date-period-dropdown-list-open\",\r\n            \"date-period-dropdown-list\",\r\n            \"date-range\",\r\n            \"date-time-add\",\r\n            \"date-time-remove\",\r\n            \"date-timer-sand-empty\",\r\n            \"date-timer\",\r\n            \"date-update\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"delete\",\r\n        \"data\": [\r\n            \"delete-do-not-disturb\",\r\n            \"delete-drop\",\r\n            \"delete-empty\",\r\n            \"delete-forever\",\r\n            \"delete-label-delete\",\r\n            \"delete-minus-circle\",\r\n            \"delete-minus-square\",\r\n            \"delete-minus\",\r\n            \"delete-restore\",\r\n            \"delete\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"devices\",\r\n        \"data\": [\r\n            \"devices-android-debug-bridge\",\r\n            \"devices-android\",\r\n            \"devices-camera-front\",\r\n            \"devices-cellphone-basic\",\r\n            \"devices-cellphone-link-off\",\r\n            \"devices-cellphone-link\",\r\n            \"devices-cellphone-wireless\",\r\n            \"devices-cellphone\",\r\n            \"devices-desktop-tower\",\r\n            \"devices-hard-drive-outline\",\r\n            \"devices-headphones\",\r\n            \"devices-input-device\",\r\n            \"devices-laptop-off\",\r\n            \"devices-laptop\",\r\n            \"devices-monitor\",\r\n            \"devices-printer\",\r\n            \"devices-sensor\",\r\n            \"devices-speaker\",\r\n            \"devices-tablet\",\r\n            \"devices-touchpad\",\r\n            \"devices-transmitter\",\r\n            \"devices-tv\",\r\n            \"devices-watch-variant\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"ecp\",\r\n        \"data\": [\r\n            \"alert\",\r\n            \"ecologist-1\",\r\n            \"expand-four-arrows-24\",\r\n            \"false-event1\",\r\n            \"false-event3\",\r\n            \"pin-1\",\r\n            \"pin-alarm\",\r\n            \"wind-1\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"editor\",\r\n        \"data\": [\r\n            \"editor-add-column\",\r\n            \"editor-add-comment\",\r\n            \"editor-add-row\",\r\n            \"editor-alfavit\",\r\n            \"editor-attach-2\",\r\n            \"editor-attach-file\",\r\n            \"editor-border-all\",\r\n            \"editor-border-bottom\",\r\n            \"editor-border-clear\",\r\n            \"editor-border-color\",\r\n            \"editor-border-horizontal\",\r\n            \"editor-border-inner\",\r\n            \"editor-border-left\",\r\n            \"editor-border-outer\",\r\n            \"editor-border-right\",\r\n            \"editor-border-style\",\r\n            \"editor-border-top\",\r\n            \"editor-border-vertical\",\r\n            \"editor-copy-drop\",\r\n            \"editor-copy\",\r\n            \"editor-crop\",\r\n            \"editor-delete-column\",\r\n            \"editor-delete-row\",\r\n            \"editor-down\",\r\n            \"editor-drag-and-drop\",\r\n            \"editor-dropdown-list-open\",\r\n            \"editor-dropdown-list\",\r\n            \"editor-droplet\",\r\n            \"editor-format-align-center\",\r\n            \"editor-format-align-justify\",\r\n            \"editor-format-align-left\",\r\n            \"editor-format-align-right\",\r\n            \"editor-format-bold\",\r\n            \"editor-format-color-fill\",\r\n            \"editor-format-color-reset\",\r\n            \"editor-format-color-text\",\r\n            \"editor-format-italic\",\r\n            \"editor-format-list-bulleted\",\r\n            \"editor-format-list-numbered\",\r\n            \"editor-format-textdirection-l-to-r\",\r\n            \"editor-format-underlined\",\r\n            \"editor-formula\",\r\n            \"editor-functions\",\r\n            \"editor-group-dropdown\",\r\n            \"editor-group\",\r\n            \"editor-hash\",\r\n            \"editor-insert-emoticon-sad\",\r\n            \"editor-insert-emoticon\",\r\n            \"editor-insert-link\",\r\n            \"editor-line-height\",\r\n            \"editor-link\",\r\n            \"editor-list-dushed-2\",\r\n            \"editor-merge-type\",\r\n            \"editor-mini\",\r\n            \"editor-mode\",\r\n            \"editor-panel-left\",\r\n            \"editor-panel-right\",\r\n            \"editor-panel-top\",\r\n            \"editor-percent\",\r\n            \"editor-right\",\r\n            \"editor-screen\",\r\n            \"editor-search-tags-words\",\r\n            \"editor-sort-asc\",\r\n            \"editor-table\",\r\n            \"editor-title\",\r\n            \"editor-ungroup\",\r\n            \"editor-vertical-align-bottom\",\r\n            \"editor-vertical-align-center\",\r\n            \"editor-vertical-align-top\",\r\n            \"editor-window\",\r\n            \"editor-wrap-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"export\",\r\n        \"data\": [\r\n            \"export-files-pdf\",\r\n            \"export-files-xlsx\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"files\",\r\n        \"data\": [\r\n            \"files-archive\",\r\n            \"files-cloud-check\",\r\n            \"files-cloud\",\r\n            \"files-cloup-upload\",\r\n            \"files-correct\",\r\n            \"files-description-properties\",\r\n            \"files-document-image\",\r\n            \"files-document-text\",\r\n            \"files-download\",\r\n            \"files-excel-box\",\r\n            \"files-export-csv\",\r\n            \"files-export-pdf\",\r\n            \"files-export-xlsx\",\r\n            \"files-export\",\r\n            \"files-file-open-all\",\r\n            \"files-file-remove\",\r\n            \"files-file\",\r\n            \"files-find\",\r\n            \"files-folder-delete\",\r\n            \"files-folder-remove\",\r\n            \"files-folder-root-add\",\r\n            \"files-folder\",\r\n            \"files-in-om\",\r\n            \"files-loader\",\r\n            \"files-mnemo\",\r\n            \"files-mode\",\r\n            \"files-multi\",\r\n            \"files-powerpoint\",\r\n            \"files-upload\",\r\n            \"files-view-document\",\r\n            \"files-word-box\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"finance\",\r\n        \"data\": [\r\n            \"finance-calculator\",\r\n            \"finance-credit-card-of\",\r\n            \"finance-credit-card-plus\",\r\n            \"finance-credit-card\",\r\n            \"finance-currency-btc\",\r\n            \"finance-currency-usd-off\",\r\n            \"finance-currency-usd\",\r\n            \"finance-qr-code-search\",\r\n            \"finance-qr-code\",\r\n            \"finance-scanner\",\r\n            \"finance-wallet\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"location\",\r\n        \"data\": [\r\n            \"location-compass\",\r\n            \"location-crosshairs-gps\",\r\n            \"location-crosshairs\",\r\n            \"location-language\",\r\n            \"location-localization-down-list\",\r\n            \"location-map-2\",\r\n            \"location-map-marker-minus\",\r\n            \"location-map-marker-off\",\r\n            \"location-map-marker-plus\",\r\n            \"location-map-marker\",\r\n            \"location-map\",\r\n            \"location-navigation-1\",\r\n            \"location-navigation\",\r\n            \"location-person-pin-circle\",\r\n            \"location-pin-1\",\r\n            \"location-pin-2\",\r\n            \"location-pin\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"lokoil\",\r\n        \"data\": [\r\n            \"lokoil-compass\",\r\n            \"lokoil-gas-work\",\r\n            \"lokoil-gas\",\r\n            \"lokoil-wind\",\r\n            \"lokoil-work\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"messaging\",\r\n        \"data\": [\r\n            \"messaging-alert\",\r\n            \"messaging-at\",\r\n            \"messaging-emai\",\r\n            \"messaging-email-open\",\r\n            \"messaging-forward\",\r\n            \"messaging-inbox\",\r\n            \"messaging-message-circle\",\r\n            \"messaging-message-off\",\r\n            \"messaging-message\",\r\n            \"messaging-processing\",\r\n            \"messaging-question-ask\",\r\n            \"messaging-reply\",\r\n            \"messaging-send\",\r\n            \"messaging-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"network\",\r\n        \"data\": [\r\n            \"network-close\",\r\n            \"network-cloud-download\",\r\n            \"network-cloud-upload\",\r\n            \"network-database-delete\",\r\n            \"network-database-json\",\r\n            \"network-database-minus\",\r\n            \"network-database-plus\",\r\n            \"network-database-search\",\r\n            \"network-database-sql\",\r\n            \"network-database\",\r\n            \"network-download\",\r\n            \"network-external-link\",\r\n            \"network-lan-connect\",\r\n            \"network-lan-disconnect\",\r\n            \"network-lan-pending\",\r\n            \"network-lan\",\r\n            \"network-layers\",\r\n            \"network-library\",\r\n            \"network-minus\",\r\n            \"network-no-layers\",\r\n            \"network-object\",\r\n            \"network-plus\",\r\n            \"network-scheme-2\",\r\n            \"network-scheme\",\r\n            \"network-security\",\r\n            \"network-server-1\",\r\n            \"network-server-network-off\",\r\n            \"network-server-network\",\r\n            \"network-server-off\",\r\n            \"network-server-security\",\r\n            \"network-server\",\r\n            \"network-upload\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"phone\",\r\n        \"data\": [\r\n            \"phone-call-missed\",\r\n            \"phone-in-talk\",\r\n            \"phone-minus\",\r\n            \"phone-missed\",\r\n            \"phone-off\",\r\n            \"phone-paused\",\r\n            \"phone-plus\",\r\n            \"phone\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"player\",\r\n        \"data\": [\r\n            \"player-loop\",\r\n            \"player-pause\",\r\n            \"player-play\",\r\n            \"player-skip-backward\",\r\n            \"player-skip-forward\",\r\n            \"player-skip-next-circle-outline\",\r\n            \"player-skip-previous\",\r\n            \"player-stop\",\r\n            \"player-voicemail\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"plus\",\r\n        \"data\": [\r\n            \"plus-circle-fill\",\r\n            \"plus-circle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"poi\",\r\n        \"data\": [\r\n            \"poi-barley\",\r\n            \"poi-factory\",\r\n            \"poi-flask-1\",\r\n            \"poi-flask-2\",\r\n            \"poi-flask-3\",\r\n            \"poi-flask-4\",\r\n            \"poi-flask-5\",\r\n            \"poi-fuel\",\r\n            \"poi-gas-monitoring\",\r\n            \"poi-gas-station\",\r\n            \"poi-nuclear-station\",\r\n            \"poi-oil-factory\",\r\n            \"poi-power-station\",\r\n            \"poi-respirator-2\",\r\n            \"poi-respirator-3\",\r\n            \"poi-respirator-4\",\r\n            \"poi-respirator-5\",\r\n            \"poi-respirator-6\",\r\n            \"poi-respirator\",\r\n            \"poi-water-pump\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"selection\",\r\n        \"data\": [\r\n            \"selection-check-all\",\r\n            \"selection-check-circle\",\r\n            \"selection-check-simple\",\r\n            \"selection-checkbox-blank-circle\",\r\n            \"selection-checkbox-blank\",\r\n            \"selection-checkbox-marked-circle-chanel\",\r\n            \"selection-checkbox-marked-circle\",\r\n            \"selection-checked-1\",\r\n            \"selection-checked-empty\",\r\n            \"selection-checked\",\r\n            \"selection-radio-off\",\r\n            \"selection-radio-on\",\r\n            \"selection-success\",\r\n            \"selection-toggle-left\",\r\n            \"selection-toggle-right\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"settings\",\r\n        \"data\": [\r\n            \"settings-2\",\r\n            \"settings-apps\",\r\n            \"settings-more-horiz\",\r\n            \"settings-more-vert\",\r\n            \"settings-power\",\r\n            \"settings-tune-vertical\",\r\n            \"settings-tune\",\r\n            \"settings\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shapes\",\r\n        \"data\": [\r\n            \"shapes-animation\",\r\n            \"shapes-arrange-bring-forward\",\r\n            \"shapes-arrange-send-backward\",\r\n            \"shapes-arrange-send-to-back\",\r\n            \"shapes-box-shadow\",\r\n            \"shapes-checkbox-intermediate\",\r\n            \"shapes-checkerboard\",\r\n            \"shapes-collage\",\r\n            \"shapes-cube-3\",\r\n            \"shapes-cube-outline\",\r\n            \"shapes-cube\",\r\n            \"shapes-drawing-box\",\r\n            \"shapes-drawing\",\r\n            \"shapes-hexagon-fill\",\r\n            \"shapes-hexagon\",\r\n            \"shapes-layers-off\",\r\n            \"shapes-layers\",\r\n            \"shapes-nest-protec\",\r\n            \"shapes-nut\",\r\n            \"shapes-pentagon-fill\",\r\n            \"shapes-pentagon\",\r\n            \"shapes-rhombus-fill\",\r\n            \"shapes-rhombus\",\r\n            \"shapes-shape-fill\",\r\n            \"shapes-shape-plus-1\",\r\n            \"shapes-shape-plus\",\r\n            \"shapes-shape\",\r\n            \"shapes-square-inc\",\r\n            \"shapes-triangle-fill\",\r\n            \"shapes-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shopping\",\r\n        \"data\": [\r\n            \"shopping-box\",\r\n            \"shopping-cart\",\r\n            \"shopping-gift\",\r\n            \"shopping\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"signal\",\r\n        \"data\": [\r\n            \"signal-access-point\",\r\n            \"signal-bluetooth\",\r\n            \"signal-cast\",\r\n            \"signal-off\",\r\n            \"signal-radio-tower\",\r\n            \"signal-rss-box\",\r\n            \"signal-wifi-off\",\r\n            \"signal-wifi\",\r\n            \"signal\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"social\",\r\n        \"data\": [\r\n            \"social-behance\",\r\n            \"social-browser\",\r\n            \"social-facebook\",\r\n            \"social-github\",\r\n            \"social-globe-2\",\r\n            \"social-google-plus\",\r\n            \"social-heart-fill\",\r\n            \"social-heart\",\r\n            \"social-home-breadcrumbs\",\r\n            \"social-home\",\r\n            \"social-instagram\",\r\n            \"social-linkedin-box\",\r\n            \"social-moon\",\r\n            \"social-share\",\r\n            \"social-star-fill\",\r\n            \"social-star-half\",\r\n            \"social-star\",\r\n            \"social-sun\",\r\n            \"social-tab\",\r\n            \"social-telegram\",\r\n            \"social-thumb-down\",\r\n            \"social-thumb-up\",\r\n            \"social-twitter\",\r\n            \"social-vk\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"sort\",\r\n        \"data\": [\r\n            \"sort-abc-ru-up\",\r\n            \"sort-abc-ru\",\r\n            \"sort-alphabetical-up\",\r\n            \"sort-alphabetical\",\r\n            \"sort-apps\",\r\n            \"sort-asc-arr\",\r\n            \"sort-desc-arr\",\r\n            \"sort-eye-off-2\",\r\n            \"sort-eye-off\",\r\n            \"sort-eye\",\r\n            \"sort-filter-remove\",\r\n            \"sort-filter\",\r\n            \"sort-funnel-drop-down-list-open\",\r\n            \"sort-funnel-drop-down-list\",\r\n            \"sort-look-into-the-buffer\",\r\n            \"sort-maximize\",\r\n            \"sort-numeric\",\r\n            \"sort-real-size\",\r\n            \"sort-search-mistake\",\r\n            \"sort-zoom-in\",\r\n            \"sort-zoom-out\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"tools\",\r\n        \"data\": [\r\n            \"tools-auto-fix\",\r\n            \"tools-award\",\r\n            \"tools-briefcase\",\r\n            \"tools-broom\",\r\n            \"tools-brush\",\r\n            \"tools-content-cut\",\r\n            \"tools-content-save-as\",\r\n            \"tools-content-save\",\r\n            \"tools-earth-work\",\r\n            \"tools-eraser\",\r\n            \"tools-eyedropper\",\r\n            \"tools-keyboard-close-1\",\r\n            \"tools-keyboard-close\",\r\n            \"tools-keyboard\",\r\n            \"tools-lightbulb\",\r\n            \"tools-npm\",\r\n            \"tools-palette\",\r\n            \"tools-pantone\",\r\n            \"tools-ruler\",\r\n            \"tools-save-back\",\r\n            \"tools-solver\",\r\n            \"tools-thermometer-minus\",\r\n            \"tools-thermometer-plus\",\r\n            \"tools-thermometer\",\r\n            \"tools-umbrella\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"transport\",\r\n        \"data\": [\r\n            \"transport-airplane\",\r\n            \"transport-ambulance\",\r\n            \"transport-truck\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"vectors\",\r\n        \"data\": [\r\n            \"vectors-arrange-above\",\r\n            \"vectors-arrange-below\",\r\n            \"vectors-circle-variant\",\r\n            \"vectors-circle\",\r\n            \"vectors-combine-1\",\r\n            \"vectors-combine\",\r\n            \"vectors-curve\",\r\n            \"vectors-difference-ab\",\r\n            \"vectors-difference-ba\",\r\n            \"vectors-difference\",\r\n            \"vectors-ellipse\",\r\n            \"vectors-intersection\",\r\n            \"vectors-line\",\r\n            \"vectors-point\",\r\n            \"vectors-polygon\",\r\n            \"vectors-polyline\",\r\n            \"vectors-radius\",\r\n            \"vectors-rectangle\",\r\n            \"vectors-selection\",\r\n            \"vectors-square\",\r\n            \"vectors-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"view\",\r\n        \"data\": [\r\n            \"view-agenda\",\r\n            \"view-array\",\r\n            \"view-carousel\",\r\n            \"view-column\",\r\n            \"view-component\",\r\n            \"view-dashboard-variant\",\r\n            \"view-dashboard\",\r\n            \"view-day\",\r\n            \"view-folder-mode\",\r\n            \"view-grid-1\",\r\n            \"view-grid\",\r\n            \"view-headline\",\r\n            \"view-list\",\r\n            \"view-logo-grey-z\",\r\n            \"view-logo-sgrey\",\r\n            \"view-menu-2\",\r\n            \"view-menu-arrow-down\",\r\n            \"view-menu-arrow-left\",\r\n            \"view-menu-arrow-right\",\r\n            \"view-menu-arrow-up\",\r\n            \"view-menu\",\r\n            \"view-module\",\r\n            \"view-quilt\",\r\n            \"view-sequential\"\r\n        ]\r\n    }\r\n]"
            },
            {
                "name": "IconsSet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1' },\r\n  { label: 'Название цеха 2' },\r\n  { label: 'Название цеха 3' },\r\n  { label: 'Название цеха 4' }\r\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectItem[]",
                "defaultValue": "[]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus',\r\n      items: [\r\n        {\r\n          label: 'Bookmark',\r\n          icon: 'zyfra-icon   bookmarks-bookmark',\r\n          items: [\r\n            {\r\n              label: 'Video',\r\n              icon: 'zyfra-icon camera-video'\r\n            },\r\n            {\r\n              label: 'Bookmark',\r\n              icon: 'zyfra-icon   bookmarks-bookmark',\r\n              items: [\r\n                {\r\n                  label: 'Video',\r\n                  icon: 'zyfra-icon camera-video',\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'Video',\r\n          icon: 'zyfra-icon camera-video',\r\n        }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon delete',\r\n      },\r\n      {\r\n        label: 'Export',\r\n        icon: 'zyfra-icon network-external-link'\r\n      }\r\n    ]\r\n  },\r\n  { label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon settings-power',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus'\r\n    }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: 'zyfra-icon editor-mode',\r\n    items: [\r\n      {\r\n        label: 'Left',\r\n        icon: 'zyfra-icon editor-format-align-left'\r\n      },\r\n      {\r\n        label: 'Right',\r\n        icon: 'zyfra-icon editor-format-align-right'\r\n      },\r\n      {\r\n        label: 'Center',\r\n        icon: 'zyfra-icon editor-format-align-center'\r\n      },\r\n      {\r\n        label: 'Justify',\r\n        icon: 'zyfra-icon editor-format-align-justify'\r\n      }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 5',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 6',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 7',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 8',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 9',\r\n    icon: 'zyfra-icon account',\r\n    items: [\r\n      {\r\n        label: 'New',\r\n        icon: 'zyfra-icon account-plus',\r\n\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon account-minus',\r\n\r\n      }]\r\n  }\r\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    label: 'Documents',\r\n    data: 'Documents Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [{\r\n      label: 'Work',\r\n      data: 'Work Folder',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n      collapsedIcon: 'zyfra-icon files-folder',\r\n      children: [\r\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\r\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Home',\r\n        data: 'Home Folder',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder',\r\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\r\n      }]\r\n  },\r\n  {\r\n    label: 'Pictures',\r\n    data: 'Pictures Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [\r\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\r\n      { label: 'logo.jpg', icon: 'zyfra-icon files-file', data: 'PrimeFaces Logo' },\r\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    data: 'Movies Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n    children: [{\r\n      label: 'Al Pacino',\r\n      data: 'Pacino Movies',\r\n      children: [\r\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\r\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Robert De Niro',\r\n        data: 'De Niro Movies',\r\n        children: [\r\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\r\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\r\n        ]\r\n      }]\r\n  }\r\n]"
            },
            {
                "name": "ManyItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Mini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MiniRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "MultiMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultipleMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultipleSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "NoIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoValueDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OverflowTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PhoneExt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RADIO_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n}"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Relative",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ru",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Янв\",\r\n    \"Февр\",\r\n    \"Март\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Авг\",\r\n    \"Сент\",\r\n    \"Окт\",\r\n    \"Ноябрь\",\r\n    \"Дек\"\r\n  ],\r\n  \"dateFormat\": \"dd.mm.yyyy\",\r\n  \"today\": \"Сегодня\",\r\n  \"weekHeader\": \"Нд\",\r\n  \"clear\": \"Очистить\"\r\n}"
            },
            {
                "name": "RubricatorMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SerialNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "simpleMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4'\r\n  },\r\n]"
            },
            {
                "name": "simpleMenuItemsWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon bookmarks-bookmark',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon editor-mode',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: '',\r\n  },\r\n]"
            },
            {
                "name": "SimpleMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "SimpleSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\r\n  template: template(`[(ngModel)]=\"model\"`),\r\n  props: {\r\n    ...args,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
            },
            {
                "name": "SimpleWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Simple.bind({})"
            },
            {
                "name": "SingleGroupPanel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sortByLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(a: TreeNode, b: TreeNode): number => {\r\n  if (a.label > b.label) {\r\n    return 1;\r\n  }\r\n  if (a.label < b.label) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}"
            },
            {
                "name": "SSN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Style",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "subItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'warning',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1 длиннее остальных',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\r\n            icon: 'zyfra-icon files-file',\r\n            badge: 'danger',\r\n            badgeStyleClass: 'p-badge-dot',\r\n            routerLink: ['/page1']\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'info',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2 длиннее остальных',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
            },
            {
                "name": "SubItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "subItemsRubricator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'A-Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Д-Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Б-Ячейка третьего уровня 1',\r\n            icon: 'zyfra-icon files-file',\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'В-Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ц-Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Э-Ячейка пятого уровня 2',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ж-Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'М-Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'У-Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(str: string) => `\r\n    <div class=\"p-radiobutton-group\">\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"red\"\r\n      label=\"red\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"black\"\r\n      label=\"black\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"blue\"\r\n      label=\"blue\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"pink\"\r\n      label=\"pink\"\r\n      [disabled]=\"disabled || disabledPink\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      [value]=\"null\"\r\n      label=\"Не заполнено\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button>\r\n    </div>\r\n  `"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAutoCompleteComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraAutoCompleteComponent,\r\n  props: {\r\n    ...args,\r\n    countries: [\r\n      { name: 'Argentina', code: 'AR' },\r\n      { name: 'Armenia', code: 'AM' },\r\n      { name: 'Aruba', code: 'AW' },\r\n      { name: 'Russia', code: 'RU' },\r\n      { name: 'India', code: 'IN' },\r\n      { name: 'Indonesia', code: 'ID' },\r\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n      { name: 'Iraq', code: 'IQ' },\r\n      { name: 'Ireland', code: 'IE' },\r\n      { name: 'Isle of Man', code: 'IM' },\r\n      { name: 'Israel', code: 'IL' },\r\n      { name: 'Italy', code: 'IT' },\r\n      { name: 'Zambia', code: 'ZM' },\r\n      { name: 'Zimbabwe', code: 'ZW' },\r\n    ],\r\n    completeMethod(event): void {\r\n      const filtered = [];\r\n      const query = event.query;\r\n\r\n      for (const country of this.countries) {\r\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\r\n          filtered.push(country);\r\n        }\r\n      }\r\n\r\n      this.suggestions = filtered;\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraBreadcrumbComponent>",
                "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\r\n  component: ZyfraBreadcrumbComponent,\r\n  props: {\r\n    ...args,\r\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraCheckboxComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox\r\n      [(model)]=\"model\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabled]=\"disabled\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n    ></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === null ? 'null' : model}})\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraChipComponent>",
                "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraConfirmDialogComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDatepickerComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraDatepickerComponent,\r\n  template: `\r\n  <zyfra-datepicker\r\n  [ngModel]=\"model\"\r\n  (ngModelChange)=\"$event\"\r\n  [dateFormat]=\"dateFormat\"\r\n  [timeFormat]=\"timeFormat\"\r\n  [returnFormatValue]=\"returnFormatValue\"\r\n  [placeholder]=\"placeholder\"\r\n  [disabled]=\"disabled\"\r\n  [required]=\"required\"\r\n  [label]=\"label\"\r\n  [spanClass]=\"spanClass\"\r\n  [timeMode]=\"timeMode\"\r\n  [locale]=\"locale\"\r\n  [showChangeMode]=\"showChangeMode\"\r\n  [showClear]=\"showClear\"\r\n  [showDate]=\"showDate\"\r\n  [showTime]=\"showTime\"\r\n  [monthNavigator]=\"monthNavigator\"\r\n  [yearNavigator]=\"yearNavigator\"\r\n  [yearRange]=\"yearRange\"\r\n  [showCalendarBtn]=\"showCalendarBtn\"\r\n  [calendarBtnLabel]=\"calendarBtnLabel\"\r\n  [numberOfMonths]=\"numberOfMonths\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [disabledDates]=\"disabledDates\"\r\n  [firstDayOfWeek]=\"firstDayOfWeek\"\r\n  >\r\n  </zyfra-datepicker>\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDropdownComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraDropdownComponent,\r\n  template: `\r\n    <zyfra-dropdown\r\n      [(value)]=\"value\"\r\n      [options]=\"options\"\r\n      [optionLabel]=\"optionLabel\"\r\n      [placeholder]=\"placeholder\"\r\n      [showClear]=\"showClear\"\r\n      [label]=\"label\"\r\n      [style]=\"{ width: '360px' }\"\r\n      [group]=\"group\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      [filter]=\"filter\"\r\n    ></zyfra-dropdown>\r\n\r\n    <br>\r\n\r\n    <p>Selected value:</p>\r\n    <pre>{{value | json}}</pre>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDialogComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"dialog.onInit($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      #dialog\r\n      [header]=\"header\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    ></zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDynamicDialogComponent>",
                "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraHintComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"hintTitle !== undefined\">\r\n        <div>\r\n          <ng-template #testHint>\r\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\r\n            <div>{{ hintText }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [zyfraHint]=\"testHint\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"hintTitle == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [zyfraHint]=\"hintText\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponents>",
                "defaultValue": "(args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputMaskComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputNumberComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputSwitchComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <div>\r\n      <zyfra-button\r\n        label=\"Toggle\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.toggle()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Open\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.open()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Close\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.close()\"\r\n      ></zyfra-button>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div style=\"height: 650px; display: flex; position: relative;\">\r\n      <zyfra-menu-applications\r\n        #menu\r\n        [transition]=\"transition\"\r\n        [hintDelay]=\"hintDelay\"\r\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\r\n        [topMenuItems]=\"topMenuItems\"\r\n        [bottomMenuItems]=\"bottomMenuItems\"\r\n        [activeItem]=\"activeItem\"\r\n        (selectItem)=\"selectItem($event); menu.close();\"\r\n        (toggleState)=\"toggleState($event)\"\r\n      ></zyfra-menu-applications>\r\n\r\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\r\n        <p>Some content</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeItem: null,\r\n    toggleState: value => action('toggleState')({ value }),\r\n    selectItem(item: any): void {\r\n      action('selectItem')(item);\r\n\r\n      const isTopItem = this.topMenuItems.includes(item);\r\n\r\n      if (isTopItem) {\r\n        this.activeItem = item;\r\n      } else {\r\n        alert(JSON.stringify(item, null, 2));\r\n      }\r\n    }\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMessageComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPaginatorComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPasswordComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraProgressBarComponent>",
                "defaultValue": "(args: ZyfraProgressBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSliderComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSliderComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitterComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-splitter\r\n      [panelSizes]=\"panelSizes\"\r\n      [minSizes]=\"minSizes\"\r\n      [style]=\"style\"\r\n      (onResizeStart)=\"onResizeStart($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n    >\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 1</div>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 2</div>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\r\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSpinnerComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraSpinnerComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabMenuComponent>",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTextareaComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToastComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\r\n      label=\"for toast\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-toast\r\n      #toast\r\n      [position]=\"position\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n      [preventDuplicates]=\"preventDuplicates\"\r\n      [severity]=\"severity\"\r\n      [summary]=\"summary\"\r\n      [detail]=\"detail\"\r\n      [life]=\"life\"\r\n      [closable]=\"closable\"\r\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\r\n      (onClose)=\"onClose($event)\"\r\n    ></zyfra-toast>\r\n\r\n    <ng-template #customTemplate>\r\n    <div>\r\n        <p>content</p>\r\n        <ul>\r\n          <li>item 1 (for example)</li>\r\n          <li><b>item 2</b></li>\r\n        </ul>\r\n    </div>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onClose: action('onClose'),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToggleButtonComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeComponent>",
                "defaultValue": "(args) => ({\r\n  component: ZyfraTreeComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTriCheckboxComponent>",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tri-checkbox\r\n      [label]=\"label\"\r\n      [name]=\"name\"\r\n      [disabled]=\"disabled\"\r\n      [readonly]=\"readonly\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [(model)]=\"model\"\r\n      (onChange)=\"onChangeHandler($event)\"\r\n    ></zyfra-tri-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <zyfra-tri-checkbox\r\n      [formControl]=\"fControl\"\r\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n    ></zyfra-tri-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px' }\"\r\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionComponent>",
                "defaultValue": "(args: ZyfraAccordionComponent) => ({\r\n  template: `\r\n  <zyfra-accordion [multiple]=\"multiple\"\r\n                   (mouseover)=\"mouseover()\"\r\n                   (onOpen)=\"onOpen($event)\"\r\n                   (onClose)=\"onClose($event)\"\r\n                   (activeIndexChange)=\"activeIndexChange($event)\">\r\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\r\n      Content 1\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">\r\n          {{dynamicString}} header Content 2\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"icons\">\r\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\r\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"content\">\r\n      {{dynamicString}} body Content 2\r\n      </ng-template>\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\r\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\r\n    </zyfra-accordion-tab>\r\n  </zyfra-accordion>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectedChange: action('selectedChange'),\r\n    onOpen: action('onOpen'),\r\n    onClose: action('onClose'),\r\n    activeIndexChange: action('activeIndexChange'),\r\n    mouseover(): void {\r\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\r\n      this.showThirdForReInitTabTest = true;\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionTabComponent>",
                "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\r\n  component: ZyfraAccordionTabComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsItemComponent>",
                "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\r\n  component: ZyfraMenuApplicationsItemComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabPanelComponent>",
                "defaultValue": "(args: ZyfraTabPanelComponent) => ({\r\n  component: ZyfraTabPanelComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tab-view\r\n      [class]=\"zyfraTabViewTagStyle\"\r\n      [activeIndex]=\"activeIndex\"\r\n      [controlClose]=\"controlClose\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      (onChange)=\"onChangeHandler($event)\"\r\n      (onClose)=\"onCloseHandler($event)\"\r\n    >\r\n      <ng-container *ngFor=\"let tab of tabs\">\r\n        <zyfra-tab-panel\r\n          [header]=\"tab.header\"\r\n          [selected]=\"tab.selected\"\r\n          [disabled]=\"tab.disabled\"\r\n          [closable]=\"tab.closable\"\r\n          [leftIcon]=\"tab.leftIcon\"\r\n          [rightIcon]=\"tab.rightIcon\"\r\n          [headerStyle]=\"tab.headerStyle\"\r\n          [headerStyleClass]=\"tab.headerStyleClass\"\r\n          [cache]=\"tab.cache\"\r\n          [tooltip]=\"tab.tooltip\"\r\n          [tooltipPosition]=\"tab.tooltipPosition\"\r\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n        >\r\n          {{ tab.content }}\r\n        </zyfra-tab-panel>\r\n      </ng-container>\r\n    </zyfra-tab-view>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
            },
            {
                "name": "ToggleMask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "topMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\r\n  {\r\n    title: 'Z-QA — Zyfra Quality Assurance',\r\n    icon: 'shapes-cube',\r\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\r\n  },\r\n  {\r\n    title: 'Zyfra Document Explorer',\r\n    icon: 'view-dashboard',\r\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'charts-bar-stacked',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n  {\r\n    title: 'Z-PS — Zyfra Production Scheduling',\r\n    icon: 'tools-eyedropper',\r\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'vectors-difference-ab',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n]"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VirtualScroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithFormControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithoutLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithPageOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSubMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "generateTimeArray",
                "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ZyfraTime[]",
                "jsdoctags": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isIsoDate",
                "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "DropdownTemplateType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "HeaderConfig",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ItemClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MenuItemSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"standard\" | \"enlarged\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "onResizeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "PageOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number | Record<string | >",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SelectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"single\" | \"checkbox\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SliderOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SpinnerColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TZyfraButtonIconPosision",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ViewMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "ZyfraDatePickerMode",
                "childs": [
                    {
                        "name": "absolute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "absolute"
                    },
                    {
                        "name": "relative",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "relative"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
            },
            {
                "name": "ZyfraDatePickerValueType",
                "childs": [
                    {
                        "name": "date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    },
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "string"
                    },
                    {
                        "name": "isoString",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "isoString"
                    },
                    {
                        "name": "timestamp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "timestamp"
                    },
                    {
                        "name": "null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
            },
            {
                "name": "ZyfraLocale",
                "childs": [
                    {
                        "name": "ru",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ru_RU"
                    },
                    {
                        "name": "en",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "en_US"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
            }
        ],
        "groupedVariables": {
            "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts": [
                {
                    "name": "Absolute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AbsoluteMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultipleMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Relative",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDatepickerComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraDatepickerComponent,\r\n  template: `\r\n  <zyfra-datepicker\r\n  [ngModel]=\"model\"\r\n  (ngModelChange)=\"$event\"\r\n  [dateFormat]=\"dateFormat\"\r\n  [timeFormat]=\"timeFormat\"\r\n  [returnFormatValue]=\"returnFormatValue\"\r\n  [placeholder]=\"placeholder\"\r\n  [disabled]=\"disabled\"\r\n  [required]=\"required\"\r\n  [label]=\"label\"\r\n  [spanClass]=\"spanClass\"\r\n  [timeMode]=\"timeMode\"\r\n  [locale]=\"locale\"\r\n  [showChangeMode]=\"showChangeMode\"\r\n  [showClear]=\"showClear\"\r\n  [showDate]=\"showDate\"\r\n  [showTime]=\"showTime\"\r\n  [monthNavigator]=\"monthNavigator\"\r\n  [yearNavigator]=\"yearNavigator\"\r\n  [yearRange]=\"yearRange\"\r\n  [showCalendarBtn]=\"showCalendarBtn\"\r\n  [calendarBtnLabel]=\"calendarBtnLabel\"\r\n  [numberOfMonths]=\"numberOfMonths\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [disabledDates]=\"disabledDates\"\r\n  [firstDayOfWeek]=\"firstDayOfWeek\"\r\n  >\r\n  </zyfra-datepicker>\r\n  `,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse($event)'),\r\n  nodeExpand: action('nodeExpand($event)'),\r\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "BasicTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
                },
                {
                    "name": "BasicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "EnlargedSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "ExtraItemTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\">\r\n          \r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n          \r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n                          \r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
                },
                {
                    "name": "ExtraTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ExtraItemTemplate.bind({})"
                },
                {
                    "name": "FolderMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "GroupPanels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "GroupPanelTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>      \r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n                        \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n                      \r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
                },
                {
                    "name": "MultipleSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "RubricatorMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "SingleGroupPanel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "SubItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/message/zyfra-message.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMessageComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/toast/zyfra-toast.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToastComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\r\n      label=\"for toast\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-toast\r\n      #toast\r\n      [position]=\"position\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n      [preventDuplicates]=\"preventDuplicates\"\r\n      [severity]=\"severity\"\r\n      [summary]=\"summary\"\r\n      [detail]=\"detail\"\r\n      [life]=\"life\"\r\n      [closable]=\"closable\"\r\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\r\n      (onClose)=\"onClose($event)\"\r\n    ></zyfra-toast>\r\n\r\n    <ng-template #customTemplate>\r\n    <div>\r\n        <p>content</p>\r\n        <ul>\r\n          <li>item 1 (for example)</li>\r\n          <li><b>item 2</b></li>\r\n        </ul>\r\n    </div>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onClose: action('onClose'),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts": [
                {
                    "name": "AnimationSpeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WarningWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/nav-menu/dataForStories.ts": [
                {
                    "name": "basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\r\n  {label: 'Наименование ячейки 1'},\r\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\r\n  {label: 'Наименование ячейки 3 длиннее остальных'},\r\n  {label: 'Наименование ячейки 4'},\r\n  {label: 'Наименование ячейки 5'},\r\n]"
                },
                {
                    "name": "basicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\r\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
                },
                {
                    "name": "subItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'warning',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1 длиннее остальных',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\r\n            icon: 'zyfra-icon files-file',\r\n            badge: 'danger',\r\n            badgeStyleClass: 'p-badge-dot',\r\n            routerLink: ['/page1']\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'info',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2 длиннее остальных',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
                },
                {
                    "name": "subItemsRubricator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'A-Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Д-Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Б-Ячейка третьего уровня 1',\r\n            icon: 'zyfra-icon files-file',\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'В-Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ц-Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Э-Ячейка пятого уровня 2',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ж-Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'М-Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'У-Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckboxWithFormControlComponentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n    toggleStatus(): void {\r\n      if (this.fControl.disabled) {\r\n        this.fControl.enable();\r\n      } else {\r\n        this.fControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.fControl.setValue(!this.fControl.value);\r\n    },\r\n  },\r\n})"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraCheckboxComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-checkbox\r\n      [(model)]=\"model\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabled]=\"disabled\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n    ></zyfra-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === null ? 'null' : model}})\r\n  `,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithFormControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PhoneExt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SerialNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SSN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputMaskComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Currency",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Decimal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputNumberComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputSwitchComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPaginatorComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithPageOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Style",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSpinnerComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSpinnerComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts": [
                {
                    "name": "Binary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTriCheckboxComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tri-checkbox\r\n      [label]=\"label\"\r\n      [name]=\"name\"\r\n      [disabled]=\"disabled\"\r\n      [readonly]=\"readonly\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [(model)]=\"model\"\r\n      (onChange)=\"onChangeHandler($event)\"\r\n    ></zyfra-tri-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <zyfra-tri-checkbox\r\n      [formControl]=\"fControl\"\r\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n    ></zyfra-tri-checkbox>\r\n    <br>\r\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\r\n    <br>\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px' }\"\r\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts": [
                {
                    "name": "bottomMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Избранное',\r\n    icon: 'social-star'\r\n  },\r\n  {\r\n    title: 'Поиск',\r\n    icon: 'sort-zoom-in'\r\n  },\r\n  {\r\n    title: 'Служба техподдежки',\r\n    icon: 'alerts-pulse'\r\n  },\r\n]"
                },
                {
                    "name": "CustomTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  open: {\r\n    duration: 300,\r\n    delay: 500,\r\n    timingFunction: 'ease-in',\r\n  },\r\n  close: {\r\n    duration: 300,\r\n    delay: 300,\r\n    timingFunction: 'ease-out',\r\n  }\r\n}"
                },
                {
                    "name": "ManyItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <div>\r\n      <zyfra-button\r\n        label=\"Toggle\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.toggle()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Open\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.open()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Close\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.close()\"\r\n      ></zyfra-button>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div style=\"height: 650px; display: flex; position: relative;\">\r\n      <zyfra-menu-applications\r\n        #menu\r\n        [transition]=\"transition\"\r\n        [hintDelay]=\"hintDelay\"\r\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\r\n        [topMenuItems]=\"topMenuItems\"\r\n        [bottomMenuItems]=\"bottomMenuItems\"\r\n        [activeItem]=\"activeItem\"\r\n        (selectItem)=\"selectItem($event); menu.close();\"\r\n        (toggleState)=\"toggleState($event)\"\r\n      ></zyfra-menu-applications>\r\n\r\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\r\n        <p>Some content</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeItem: null,\r\n    toggleState: value => action('toggleState')({ value }),\r\n    selectItem(item: any): void {\r\n      action('selectItem')(item);\r\n\r\n      const isTopItem = this.topMenuItems.includes(item);\r\n\r\n      if (isTopItem) {\r\n        this.activeItem = item;\r\n      } else {\r\n        alert(JSON.stringify(item, null, 2));\r\n      }\r\n    }\r\n  },\r\n})"
                },
                {
                    "name": "topMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\r\n  {\r\n    title: 'Z-QA — Zyfra Quality Assurance',\r\n    icon: 'shapes-cube',\r\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\r\n  },\r\n  {\r\n    title: 'Zyfra Document Explorer',\r\n    icon: 'view-dashboard',\r\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'charts-bar-stacked',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n  {\r\n    title: 'Z-PS — Zyfra Production Scheduling',\r\n    icon: 'tools-eyedropper',\r\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'vectors-difference-ab',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n]"
                },
                {
                    "name": "WithLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithoutLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\r\n  multi: true,\r\n}"
                }
            ],
            "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraTriCheckboxComponent),\r\n  multi: true,\r\n}"
                }
            ],
            "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts": [
                {
                    "name": "cities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryCity[]",
                    "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts": [
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplateWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CustomWithBadge.bind({})"
                },
                {
                    "name": "CustomWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\r\n              [activeIndex]=\"activeIndex\"\r\n              [controlClose]=\"controlClose\"\r\n              [style]=\"style\"\r\n              [styleClass]=\"styleClass\"\r\n              (onChange)=\"onChangeHandler($event)\"\r\n              (onClose)=\"onCloseHandler($event)\">\r\n          <ng-container *ngFor=\"let tab of tabs\">\r\n              <zyfra-tab-panel [header]=\"tab.header\"\r\n                               [selected]=\"tab.selected\"\r\n                               [disabled]=\"tab.disabled\"\r\n                               [closable]=\"tab.closable\"\r\n                               [leftIcon]=\"tab.leftIcon\"\r\n                               [rightIcon]=\"tab.rightIcon\"\r\n                               [headerStyle]=\"tab.headerStyle\"\r\n                               [headerStyleClass]=\"tab.headerStyleClass\"\r\n                               [cache]=\"tab.cache\"\r\n                               [tooltip]=\"tab.tooltip\"\r\n                               [tooltipPosition]=\"tab.tooltipPosition\"\r\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\r\n                  <ng-template #header>\r\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\r\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\r\n                               [value]=\"tab.badgeValue\"\r\n                               [severity]=\"tab.severity\"></p-badge>\r\n                  </ng-template>\r\n\r\n                {{tab.content}}\r\n              </zyfra-tab-panel>\r\n          </ng-container>\r\n      </zyfra-tab-view>`,\r\n})"
                },
                {
                    "name": "OverflowTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Simple.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tab-view\r\n      [class]=\"zyfraTabViewTagStyle\"\r\n      [activeIndex]=\"activeIndex\"\r\n      [controlClose]=\"controlClose\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      (onChange)=\"onChangeHandler($event)\"\r\n      (onClose)=\"onCloseHandler($event)\"\r\n    >\r\n      <ng-container *ngFor=\"let tab of tabs\">\r\n        <zyfra-tab-panel\r\n          [header]=\"tab.header\"\r\n          [selected]=\"tab.selected\"\r\n          [disabled]=\"tab.disabled\"\r\n          [closable]=\"tab.closable\"\r\n          [leftIcon]=\"tab.leftIcon\"\r\n          [rightIcon]=\"tab.rightIcon\"\r\n          [headerStyle]=\"tab.headerStyle\"\r\n          [headerStyleClass]=\"tab.headerStyleClass\"\r\n          [cache]=\"tab.cache\"\r\n          [tooltip]=\"tab.tooltip\"\r\n          [tooltipPosition]=\"tab.tooltipPosition\"\r\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n        >\r\n          {{ tab.content }}\r\n        </zyfra-tab-panel>\r\n      </ng-container>\r\n    </zyfra-tab-view>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts": [
                {
                    "name": "convertToNode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\r\n  let children;\r\n  const node: TreeNode = {\r\n    label: item.label,\r\n    data: item,\r\n    key: generateKey(),\r\n    parent\r\n  };\r\n  if (item.items) {\r\n    children = item.items.map(childItem => {\r\n      return convertToNode(childItem, node);\r\n    });\r\n  }\r\n  node.children = children;\r\n  return node;\r\n}"
                },
                {
                    "name": "flatNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\r\n}"
                },
                {
                    "name": "fromRubricatorNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\r\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\r\n  const rubricatorNodes = [];\r\n  letters.forEach(letter => {\r\n    rubricatorNodes.push({\r\n      key: letter,\r\n      label: letter,\r\n      data: { label: letter },\r\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\r\n    });\r\n  });\r\n  return rubricatorNodes;\r\n}"
                },
                {
                    "name": "getPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\r\n  acc.push(node.parent);\r\n  return node.parent\r\n    ? getPath(node.parent, acc)\r\n    : acc.reverse();\r\n}"
                },
                {
                    "name": "sortByLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(a: TreeNode, b: TreeNode): number => {\r\n  if (a.label > b.label) {\r\n    return 1;\r\n  }\r\n  if (a.label < b.label) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}"
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Mini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoValueDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraProgressBarComponent>",
                    "defaultValue": "(args: ZyfraProgressBarComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts": [
                {
                    "name": "DangerMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToggleButtonComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "DEFAULT_SETTINGS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "defaultValue": "{\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n}"
                },
                {
                    "name": "DEFAULT_TOOLBAR_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "defaultValue": "{\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts": [
                {
                    "name": "DisabledRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "FormControlRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormControlTemplate.bind({})"
                },
                {
                    "name": "FormControlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\r\n  template: template(`[formControl]=\"control\"`) + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
                },
                {
                    "name": "formControlTemplateChunk",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
                },
                {
                    "name": "MiniRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\r\n  template: template(`[(ngModel)]=\"model\"`),\r\n  props: {\r\n    ...args,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
                },
                {
                    "name": "template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(str: string) => `\r\n    <div class=\"p-radiobutton-group\">\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"red\"\r\n      label=\"red\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"black\"\r\n      label=\"black\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"blue\"\r\n      label=\"blue\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      value=\"pink\"\r\n      label=\"pink\"\r\n      [disabled]=\"disabled || disabledPink\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button><br>\r\n    <zyfra-radio-button\r\n      [name]=\"name\"\r\n      [styleClass]=\"styleClass\"\r\n      [value]=\"null\"\r\n      label=\"Не заполнено\"\r\n      [disabled]=\"disabled\"\r\n      ${str}\r\n      (onClick)=\"onClick($event)\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n    ></zyfra-radio-button>\r\n    </div>\r\n  `"
                }
            ],
            "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraConfirmDialogComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/en_US.ts": [
                {
                    "name": "en",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  \"dateFormat\": \"mm/dd/yy\",\r\n  \"today\": \"Today\",\r\n  \"weekHeader\": \"Wk\",\r\n  \"clear\": \"Clear\"\r\n}"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.module.ts": [
                {
                    "name": "EXPORTED_DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ZyfraHintDirective, ZyfraHintComponent]"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/generateKey.ts": [
                {
                    "name": "generateKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
                }
            ],
            "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts": [
                {
                    "name": "Group",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDropdownComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraDropdownComponent,\r\n  template: `\r\n    <zyfra-dropdown\r\n      [(value)]=\"value\"\r\n      [options]=\"options\"\r\n      [optionLabel]=\"optionLabel\"\r\n      [placeholder]=\"placeholder\"\r\n      [showClear]=\"showClear\"\r\n      [label]=\"label\"\r\n      [style]=\"{ width: '360px' }\"\r\n      [group]=\"group\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      [filter]=\"filter\"\r\n    ></zyfra-dropdown>\r\n\r\n    <br>\r\n\r\n    <p>Selected value:</p>\r\n    <pre>{{value | json}}</pre>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
                },
                {
                    "name": "VirtualScroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus',\r\n      items: [\r\n        {\r\n          label: 'Bookmark',\r\n          icon: 'zyfra-icon   bookmarks-bookmark',\r\n          items: [\r\n            {\r\n              label: 'Video',\r\n              icon: 'zyfra-icon camera-video'\r\n            },\r\n            {\r\n              label: 'Bookmark',\r\n              icon: 'zyfra-icon   bookmarks-bookmark',\r\n              items: [\r\n                {\r\n                  label: 'Video',\r\n                  icon: 'zyfra-icon camera-video',\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'Video',\r\n          icon: 'zyfra-icon camera-video',\r\n        }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon delete',\r\n      },\r\n      {\r\n        label: 'Export',\r\n        icon: 'zyfra-icon network-external-link'\r\n      }\r\n    ]\r\n  },\r\n  { label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon settings-power',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus'\r\n    }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: 'zyfra-icon editor-mode',\r\n    items: [\r\n      {\r\n        label: 'Left',\r\n        icon: 'zyfra-icon editor-format-align-left'\r\n      },\r\n      {\r\n        label: 'Right',\r\n        icon: 'zyfra-icon editor-format-align-right'\r\n      },\r\n      {\r\n        label: 'Center',\r\n        icon: 'zyfra-icon editor-format-align-center'\r\n      },\r\n      {\r\n        label: 'Justify',\r\n        icon: 'zyfra-icon editor-format-align-justify'\r\n      }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 5',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 6',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 7',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 8',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 9',\r\n    icon: 'zyfra-icon account',\r\n    items: [\r\n      {\r\n        label: 'New',\r\n        icon: 'zyfra-icon account-plus',\r\n\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon account-minus',\r\n\r\n      }]\r\n  }\r\n]"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "simpleMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4'\r\n  },\r\n]"
                },
                {
                    "name": "simpleMenuItemsWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon bookmarks-bookmark',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon editor-mode',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: '',\r\n  },\r\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabMenuComponent>",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  }\r\n})"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSubMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/hint/zyfra-hint.component.stories.ts": [
                {
                    "name": "HintTextExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HintTitleExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraHintComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 400px;width: 800px;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"hintTitle !== undefined\">\r\n        <div>\r\n          <ng-template #testHint>\r\n            <div class=\"zyfra_hint_title\">{{ hintTitle }}</div>\r\n            <div>{{ hintText }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [zyfraHint]=\"testHint\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"hintTitle == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [zyfraHint]=\"hintText\"\r\n            [position]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts": [
                {
                    "name": "htmlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\r\n  <div>\r\n    <p>content</p>\r\n    <ul>\r\n      <li>item 1 (for example)</li>\r\n      <li><b>item 2</b></li>\r\n    </ul>\r\n  </div>\r\n`"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDialogComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"dialog.onInit($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      #dialog\r\n      [header]=\"header\"\r\n      [htmlTemplate]=\"htmlTemplate\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    ></zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/chip/zyfra-chip.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraChipComponent>",
                    "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/icon/story/icon-definitions.ts": [
                {
                    "name": "IconDefs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        \"dir\": \"account\",\r\n        \"data\": [\r\n            \"account-card-details\",\r\n            \"account-circle\",\r\n            \"account-done\",\r\n            \"account-down-list-open\",\r\n            \"account-down-list\",\r\n            \"account-edit\",\r\n            \"account-group\",\r\n            \"account-key\",\r\n            \"account-location\",\r\n            \"account-lock\",\r\n            \"account-log-in\",\r\n            \"account-logout\",\r\n            \"account-minus\",\r\n            \"account-multiple-minus\",\r\n            \"account-multiple-plus\",\r\n            \"account-multiple-shield\",\r\n            \"account-multiple\",\r\n            \"account-plus\",\r\n            \"account-remove\",\r\n            \"account-search\",\r\n            \"account-setting-1\",\r\n            \"account-setting\",\r\n            \"account-shield-1\",\r\n            \"account-shield-alarm\",\r\n            \"account-shield-off\",\r\n            \"account-shield\",\r\n            \"account-switch\",\r\n            \"account-unlock\",\r\n            \"account-worker\",\r\n            \"account\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"add\",\r\n        \"data\": [\r\n            \"add-alarm\",\r\n            \"add-bell-plus\",\r\n            \"add-bookmark-plus\",\r\n            \"add-cart-plus\",\r\n            \"add-file-plus\",\r\n            \"add-folder-plus\",\r\n            \"add-label-add\",\r\n            \"add-library-plus\",\r\n            \"add-map-marker-plus\",\r\n            \"add-phone\",\r\n            \"add-plus-box-fill\",\r\n            \"add-plus-box\",\r\n            \"add-plus-circle-multiple\",\r\n            \"add-plus-drop-down-list\",\r\n            \"add-plus\",\r\n            \"add-shape-square-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"alerts\",\r\n        \"data\": [\r\n            \"alerts-alarm-1\",\r\n            \"alerts-alarm-2\",\r\n            \"alerts-alarm-3\",\r\n            \"alerts-alarm-light\",\r\n            \"alerts-bell-fill\",\r\n            \"alerts-bell-off\",\r\n            \"alerts-bell-ring-fill\",\r\n            \"alerts-bell-ring\",\r\n            \"alerts-bell\",\r\n            \"alerts-box-fill\",\r\n            \"alerts-circle-fill\",\r\n            \"alerts-circle\",\r\n            \"alerts-decagram-fill\",\r\n            \"alerts-decagram\",\r\n            \"alerts-flag-fill\",\r\n            \"alerts-flag\",\r\n            \"alerts-help-box-fill\",\r\n            \"alerts-help-box\",\r\n            \"alerts-help-circle-outline\",\r\n            \"alerts-help-fill\",\r\n            \"alerts-info-circle-fill\",\r\n            \"alerts-info-square-fill\",\r\n            \"alerts-info-square\",\r\n            \"alerts-info-triangle-fill\",\r\n            \"alerts-info-triangle\",\r\n            \"alerts-inform-fill-mini\",\r\n            \"alerts-inform-mini\",\r\n            \"alerts-inform\",\r\n            \"alerts-information-variant\",\r\n            \"alerts-mark\",\r\n            \"alerts-octagon-fill\",\r\n            \"alerts-octagon\",\r\n            \"alerts-pulse\",\r\n            \"alerts-question-mark\",\r\n            \"alerts-square\",\r\n            \"alerts-warning\",\r\n            \"alerts\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"apps\",\r\n        \"data\": [\r\n            \"apps-collector\",\r\n            \"apps-key\",\r\n            \"apps-ontology-2\",\r\n            \"apps-ontology\",\r\n            \"apps-own\",\r\n            \"apps-star\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"arrows\",\r\n        \"data\": [\r\n            \"arrows-all\",\r\n            \"arrows-arrow-circle-down\",\r\n            \"arrows-arrow-circle-left\",\r\n            \"arrows-arrow-circle-right\",\r\n            \"arrows-arrow-circle-up\",\r\n            \"arrows-arrow-expand-horizontal\",\r\n            \"arrows-arrow-expand-vertical\",\r\n            \"arrows-arrow-left\",\r\n            \"arrows-arrow-right\",\r\n            \"arrows-arrow-up-level\",\r\n            \"arrows-arrow-upward\",\r\n            \"arrows-autorenew-1\",\r\n            \"arrows-autorenew\",\r\n            \"arrows-back\",\r\n            \"arrows-cached-1\",\r\n            \"arrows-cached\",\r\n            \"arrows-chevron-left\",\r\n            \"arrows-chevron-right\",\r\n            \"arrows-collapse-four-arrows\",\r\n            \"arrows-collapse\",\r\n            \"arrows-compare\",\r\n            \"arrows-corner-down-left\",\r\n            \"arrows-corner-down-right\",\r\n            \"arrows-corner-left-down\",\r\n            \"arrows-corner-left-up\",\r\n            \"arrows-corner-right-down\",\r\n            \"arrows-corner-right-up\",\r\n            \"arrows-corner-up-left\",\r\n            \"arrows-corner-up-right\",\r\n            \"arrows-diagonal-arrow-left-down\",\r\n            \"arrows-diagonal-arrow-left-up\",\r\n            \"arrows-diagonal-arrow-right-down\",\r\n            \"arrows-diagonal-arrow-right-up\",\r\n            \"arrows-down-2\",\r\n            \"arrows-down-bold\",\r\n            \"arrows-down-double-2\",\r\n            \"arrows-down-double-top-2\",\r\n            \"arrows-down-limit-1\",\r\n            \"arrows-down-limit-double-1\",\r\n            \"arrows-down\",\r\n            \"arrows-expand-all\",\r\n            \"arrows-expand\",\r\n            \"arrows-left-bold\",\r\n            \"arrows-long-arrow-left\",\r\n            \"arrows-long-arrow-right\",\r\n            \"arrows-next\",\r\n            \"arrows-refresh\",\r\n            \"arrows-replay\",\r\n            \"arrows-right-bold\",\r\n            \"arrows-shuffle-variant\",\r\n            \"arrows-shuffle\",\r\n            \"arrows-swap-horiz\",\r\n            \"arrows-swap-vert\",\r\n            \"arrows-swap\",\r\n            \"arrows-up-2\",\r\n            \"arrows-up-bold\",\r\n            \"arrows-up-double-2\",\r\n            \"arrows-up-double-top-2\",\r\n            \"arrows-up-limit-1\",\r\n            \"arrows-up-limit-double-1\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"audio\",\r\n        \"data\": [\r\n            \"audio-add-library-music\",\r\n            \"audio-artist\",\r\n            \"audio-bookmark-music\",\r\n            \"audio-file-music\",\r\n            \"audio-microphone-off\",\r\n            \"audio-microphone\",\r\n            \"audio-music-box\",\r\n            \"audio-music-circle\",\r\n            \"audio-music-off\",\r\n            \"audio-music\",\r\n            \"audio-volume-high\",\r\n            \"audio-volume-low\",\r\n            \"audio-volume-medium\",\r\n            \"audio-volume-minus\",\r\n            \"audio-volume-mute\",\r\n            \"audio-volume-off\",\r\n            \"audio-volume-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"badges\",\r\n        \"data\": [\r\n            \"badges-clipboard-tex\",\r\n            \"badges-clipboard\",\r\n            \"badges-code-download\",\r\n            \"badges-code\",\r\n            \"badges-tag-fill\",\r\n            \"badges-tag-multiple\",\r\n            \"badges-tag-plus\",\r\n            \"badges-tag-remove\",\r\n            \"badges-tag-search\",\r\n            \"badges-tag-text\",\r\n            \"badges-tag\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"battery\",\r\n        \"data\": [\r\n            \"battery-10\",\r\n            \"battery-30\",\r\n            \"battery-50\",\r\n            \"battery-80\",\r\n            \"battery-alert\",\r\n            \"battery-charging\",\r\n            \"battery-flash-off\",\r\n            \"battery-flash\",\r\n            \"battery-minus\",\r\n            \"battery-plus\",\r\n            \"battery\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"bookmarks\",\r\n        \"data\": [\r\n            \"bookmarks-book-open-page-variant\",\r\n            \"bookmarks-book-open-plus\",\r\n            \"bookmarks-book-open-variant\",\r\n            \"bookmarks-book-open\",\r\n            \"bookmarks-book\",\r\n            \"bookmarks-bookmark-check-fill\",\r\n            \"bookmarks-bookmark-check\",\r\n            \"bookmarks-bookmark-fill\",\r\n            \"bookmarks-bookmark-music-fill\",\r\n            \"bookmarks-bookmark-music\",\r\n            \"bookmarks-bookmark-plus-fill\",\r\n            \"bookmarks-bookmark-plus\",\r\n            \"bookmarks-bookmark-remove-fill\",\r\n            \"bookmarks-bookmark-remove\",\r\n            \"bookmarks-bookmark\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"camera\",\r\n        \"data\": [\r\n            \"camera-camera\",\r\n            \"camera-clapperboard-close\",\r\n            \"camera-clapperboard\",\r\n            \"camera-close\",\r\n            \"camera-film-close\",\r\n            \"camera-film\",\r\n            \"camera-image\",\r\n            \"camera-video-close\",\r\n            \"camera-video-off\",\r\n            \"camera-video\",\r\n            \"camera\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"cancel\",\r\n        \"data\": [\r\n            \"cancel-block\",\r\n            \"cancel-close-box-fill\",\r\n            \"cancel-close-box\",\r\n            \"cancel-close-circle-fill\",\r\n            \"cancel-close-circle\",\r\n            \"cancel-close\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"charts\",\r\n        \"data\": [\r\n            \"charts-arc-1\",\r\n            \"charts-arc\",\r\n            \"charts-areaspline\",\r\n            \"charts-bar-stacked\",\r\n            \"charts-bar\",\r\n            \"charts-bubble-line\",\r\n            \"charts-bubble\",\r\n            \"charts-chart-donut-variant-half\",\r\n            \"charts-chart-donut-variant\",\r\n            \"charts-donut\",\r\n            \"charts-elevation-decline\",\r\n            \"charts-elevation-rise\",\r\n            \"charts-finance\",\r\n            \"charts-gantt\",\r\n            \"charts-google-analytics\",\r\n            \"charts-google-assistant\",\r\n            \"charts-hexagon-multiple\",\r\n            \"charts-histogram-chart-dashed-2\",\r\n            \"charts-histogram-chart-dashed\",\r\n            \"charts-histogram\",\r\n            \"charts-line-variant\",\r\n            \"charts-line\",\r\n            \"charts-pie-2\",\r\n            \"charts-pie\",\r\n            \"charts-poll-box\",\r\n            \"charts-poll\",\r\n            \"charts-scatterplot-hexbin\",\r\n            \"charts-signal\",\r\n            \"charts-trending-down\",\r\n            \"charts-trending-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"chevrons\",\r\n        \"data\": [\r\n            \"chevrons-close-all\",\r\n            \"chevrons-double-down\",\r\n            \"chevrons-double-left\",\r\n            \"chevrons-double-right\",\r\n            \"chevrons-double-up\",\r\n            \"chevrons-down\",\r\n            \"chevrons-dropdown\",\r\n            \"chevrons-dropup\",\r\n            \"chevrons-input\",\r\n            \"chevrons-left\",\r\n            \"chevrons-menu-left\",\r\n            \"chevrons-menu-right\",\r\n            \"chevrons-right\",\r\n            \"chevrons-unfold-less-horizontal\",\r\n            \"chevrons-unfold-less-verica\",\r\n            \"chevrons-unfold-more-horizontal\",\r\n            \"chevrons-unfold-more-vertical\",\r\n            \"chevrons-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"color\",\r\n        \"data\": [\r\n            \"angular\",\r\n            \"application\",\r\n            \"color-arrows-down-double-2\",\r\n            \"color-arrows-down-double-top-2\",\r\n            \"color-arrows-down-limit-double-1\",\r\n            \"color-arrows-up-double-2\",\r\n            \"color-arrows-up-double-top-2\",\r\n            \"color-arrows-up-limit-double-1\",\r\n            \"color-compass\",\r\n            \"color-France-drop\",\r\n            \"color-France\",\r\n            \"color-German-drop\",\r\n            \"color-German\",\r\n            \"color-Grat-Britan-down-list\",\r\n            \"color-Grat-Britan-drop\",\r\n            \"color-Indian-drop\",\r\n            \"color-Indian\",\r\n            \"color-logo-green\",\r\n            \"color-Russia-drop\",\r\n            \"color-Russia\",\r\n            \"ecp-alert-1\",\r\n            \"ecp-wind\",\r\n            \"external\",\r\n            \"react\",\r\n            \"vue\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"date\",\r\n        \"data\": [\r\n            \"date-access-alarm\",\r\n            \"date-calendar-blank\",\r\n            \"date-calendar-check\",\r\n            \"date-calendar-clock\",\r\n            \"date-calendar-plus\",\r\n            \"date-calendar-question\",\r\n            \"date-calendar-range\",\r\n            \"date-calendar-remove\",\r\n            \"date-calendar-text\",\r\n            \"date-calendar-today\",\r\n            \"date-calendar\",\r\n            \"date-clock-alert\",\r\n            \"date-clock-end\",\r\n            \"date-clock-in\",\r\n            \"date-clock-out\",\r\n            \"date-clock-start\",\r\n            \"date-clock\",\r\n            \"date-history\",\r\n            \"date-period-dropdown-list-open\",\r\n            \"date-period-dropdown-list\",\r\n            \"date-range\",\r\n            \"date-time-add\",\r\n            \"date-time-remove\",\r\n            \"date-timer-sand-empty\",\r\n            \"date-timer\",\r\n            \"date-update\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"delete\",\r\n        \"data\": [\r\n            \"delete-do-not-disturb\",\r\n            \"delete-drop\",\r\n            \"delete-empty\",\r\n            \"delete-forever\",\r\n            \"delete-label-delete\",\r\n            \"delete-minus-circle\",\r\n            \"delete-minus-square\",\r\n            \"delete-minus\",\r\n            \"delete-restore\",\r\n            \"delete\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"devices\",\r\n        \"data\": [\r\n            \"devices-android-debug-bridge\",\r\n            \"devices-android\",\r\n            \"devices-camera-front\",\r\n            \"devices-cellphone-basic\",\r\n            \"devices-cellphone-link-off\",\r\n            \"devices-cellphone-link\",\r\n            \"devices-cellphone-wireless\",\r\n            \"devices-cellphone\",\r\n            \"devices-desktop-tower\",\r\n            \"devices-hard-drive-outline\",\r\n            \"devices-headphones\",\r\n            \"devices-input-device\",\r\n            \"devices-laptop-off\",\r\n            \"devices-laptop\",\r\n            \"devices-monitor\",\r\n            \"devices-printer\",\r\n            \"devices-sensor\",\r\n            \"devices-speaker\",\r\n            \"devices-tablet\",\r\n            \"devices-touchpad\",\r\n            \"devices-transmitter\",\r\n            \"devices-tv\",\r\n            \"devices-watch-variant\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"ecp\",\r\n        \"data\": [\r\n            \"alert\",\r\n            \"ecologist-1\",\r\n            \"expand-four-arrows-24\",\r\n            \"false-event1\",\r\n            \"false-event3\",\r\n            \"pin-1\",\r\n            \"pin-alarm\",\r\n            \"wind-1\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"editor\",\r\n        \"data\": [\r\n            \"editor-add-column\",\r\n            \"editor-add-comment\",\r\n            \"editor-add-row\",\r\n            \"editor-alfavit\",\r\n            \"editor-attach-2\",\r\n            \"editor-attach-file\",\r\n            \"editor-border-all\",\r\n            \"editor-border-bottom\",\r\n            \"editor-border-clear\",\r\n            \"editor-border-color\",\r\n            \"editor-border-horizontal\",\r\n            \"editor-border-inner\",\r\n            \"editor-border-left\",\r\n            \"editor-border-outer\",\r\n            \"editor-border-right\",\r\n            \"editor-border-style\",\r\n            \"editor-border-top\",\r\n            \"editor-border-vertical\",\r\n            \"editor-copy-drop\",\r\n            \"editor-copy\",\r\n            \"editor-crop\",\r\n            \"editor-delete-column\",\r\n            \"editor-delete-row\",\r\n            \"editor-down\",\r\n            \"editor-drag-and-drop\",\r\n            \"editor-dropdown-list-open\",\r\n            \"editor-dropdown-list\",\r\n            \"editor-droplet\",\r\n            \"editor-format-align-center\",\r\n            \"editor-format-align-justify\",\r\n            \"editor-format-align-left\",\r\n            \"editor-format-align-right\",\r\n            \"editor-format-bold\",\r\n            \"editor-format-color-fill\",\r\n            \"editor-format-color-reset\",\r\n            \"editor-format-color-text\",\r\n            \"editor-format-italic\",\r\n            \"editor-format-list-bulleted\",\r\n            \"editor-format-list-numbered\",\r\n            \"editor-format-textdirection-l-to-r\",\r\n            \"editor-format-underlined\",\r\n            \"editor-formula\",\r\n            \"editor-functions\",\r\n            \"editor-group-dropdown\",\r\n            \"editor-group\",\r\n            \"editor-hash\",\r\n            \"editor-insert-emoticon-sad\",\r\n            \"editor-insert-emoticon\",\r\n            \"editor-insert-link\",\r\n            \"editor-line-height\",\r\n            \"editor-link\",\r\n            \"editor-list-dushed-2\",\r\n            \"editor-merge-type\",\r\n            \"editor-mini\",\r\n            \"editor-mode\",\r\n            \"editor-panel-left\",\r\n            \"editor-panel-right\",\r\n            \"editor-panel-top\",\r\n            \"editor-percent\",\r\n            \"editor-right\",\r\n            \"editor-screen\",\r\n            \"editor-search-tags-words\",\r\n            \"editor-sort-asc\",\r\n            \"editor-table\",\r\n            \"editor-title\",\r\n            \"editor-ungroup\",\r\n            \"editor-vertical-align-bottom\",\r\n            \"editor-vertical-align-center\",\r\n            \"editor-vertical-align-top\",\r\n            \"editor-window\",\r\n            \"editor-wrap-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"export\",\r\n        \"data\": [\r\n            \"export-files-pdf\",\r\n            \"export-files-xlsx\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"files\",\r\n        \"data\": [\r\n            \"files-archive\",\r\n            \"files-cloud-check\",\r\n            \"files-cloud\",\r\n            \"files-cloup-upload\",\r\n            \"files-correct\",\r\n            \"files-description-properties\",\r\n            \"files-document-image\",\r\n            \"files-document-text\",\r\n            \"files-download\",\r\n            \"files-excel-box\",\r\n            \"files-export-csv\",\r\n            \"files-export-pdf\",\r\n            \"files-export-xlsx\",\r\n            \"files-export\",\r\n            \"files-file-open-all\",\r\n            \"files-file-remove\",\r\n            \"files-file\",\r\n            \"files-find\",\r\n            \"files-folder-delete\",\r\n            \"files-folder-remove\",\r\n            \"files-folder-root-add\",\r\n            \"files-folder\",\r\n            \"files-in-om\",\r\n            \"files-loader\",\r\n            \"files-mnemo\",\r\n            \"files-mode\",\r\n            \"files-multi\",\r\n            \"files-powerpoint\",\r\n            \"files-upload\",\r\n            \"files-view-document\",\r\n            \"files-word-box\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"finance\",\r\n        \"data\": [\r\n            \"finance-calculator\",\r\n            \"finance-credit-card-of\",\r\n            \"finance-credit-card-plus\",\r\n            \"finance-credit-card\",\r\n            \"finance-currency-btc\",\r\n            \"finance-currency-usd-off\",\r\n            \"finance-currency-usd\",\r\n            \"finance-qr-code-search\",\r\n            \"finance-qr-code\",\r\n            \"finance-scanner\",\r\n            \"finance-wallet\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"location\",\r\n        \"data\": [\r\n            \"location-compass\",\r\n            \"location-crosshairs-gps\",\r\n            \"location-crosshairs\",\r\n            \"location-language\",\r\n            \"location-localization-down-list\",\r\n            \"location-map-2\",\r\n            \"location-map-marker-minus\",\r\n            \"location-map-marker-off\",\r\n            \"location-map-marker-plus\",\r\n            \"location-map-marker\",\r\n            \"location-map\",\r\n            \"location-navigation-1\",\r\n            \"location-navigation\",\r\n            \"location-person-pin-circle\",\r\n            \"location-pin-1\",\r\n            \"location-pin-2\",\r\n            \"location-pin\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"lokoil\",\r\n        \"data\": [\r\n            \"lokoil-compass\",\r\n            \"lokoil-gas-work\",\r\n            \"lokoil-gas\",\r\n            \"lokoil-wind\",\r\n            \"lokoil-work\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"messaging\",\r\n        \"data\": [\r\n            \"messaging-alert\",\r\n            \"messaging-at\",\r\n            \"messaging-emai\",\r\n            \"messaging-email-open\",\r\n            \"messaging-forward\",\r\n            \"messaging-inbox\",\r\n            \"messaging-message-circle\",\r\n            \"messaging-message-off\",\r\n            \"messaging-message\",\r\n            \"messaging-processing\",\r\n            \"messaging-question-ask\",\r\n            \"messaging-reply\",\r\n            \"messaging-send\",\r\n            \"messaging-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"network\",\r\n        \"data\": [\r\n            \"network-close\",\r\n            \"network-cloud-download\",\r\n            \"network-cloud-upload\",\r\n            \"network-database-delete\",\r\n            \"network-database-json\",\r\n            \"network-database-minus\",\r\n            \"network-database-plus\",\r\n            \"network-database-search\",\r\n            \"network-database-sql\",\r\n            \"network-database\",\r\n            \"network-download\",\r\n            \"network-external-link\",\r\n            \"network-lan-connect\",\r\n            \"network-lan-disconnect\",\r\n            \"network-lan-pending\",\r\n            \"network-lan\",\r\n            \"network-layers\",\r\n            \"network-library\",\r\n            \"network-minus\",\r\n            \"network-no-layers\",\r\n            \"network-object\",\r\n            \"network-plus\",\r\n            \"network-scheme-2\",\r\n            \"network-scheme\",\r\n            \"network-security\",\r\n            \"network-server-1\",\r\n            \"network-server-network-off\",\r\n            \"network-server-network\",\r\n            \"network-server-off\",\r\n            \"network-server-security\",\r\n            \"network-server\",\r\n            \"network-upload\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"phone\",\r\n        \"data\": [\r\n            \"phone-call-missed\",\r\n            \"phone-in-talk\",\r\n            \"phone-minus\",\r\n            \"phone-missed\",\r\n            \"phone-off\",\r\n            \"phone-paused\",\r\n            \"phone-plus\",\r\n            \"phone\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"player\",\r\n        \"data\": [\r\n            \"player-loop\",\r\n            \"player-pause\",\r\n            \"player-play\",\r\n            \"player-skip-backward\",\r\n            \"player-skip-forward\",\r\n            \"player-skip-next-circle-outline\",\r\n            \"player-skip-previous\",\r\n            \"player-stop\",\r\n            \"player-voicemail\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"plus\",\r\n        \"data\": [\r\n            \"plus-circle-fill\",\r\n            \"plus-circle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"poi\",\r\n        \"data\": [\r\n            \"poi-barley\",\r\n            \"poi-factory\",\r\n            \"poi-flask-1\",\r\n            \"poi-flask-2\",\r\n            \"poi-flask-3\",\r\n            \"poi-flask-4\",\r\n            \"poi-flask-5\",\r\n            \"poi-fuel\",\r\n            \"poi-gas-monitoring\",\r\n            \"poi-gas-station\",\r\n            \"poi-nuclear-station\",\r\n            \"poi-oil-factory\",\r\n            \"poi-power-station\",\r\n            \"poi-respirator-2\",\r\n            \"poi-respirator-3\",\r\n            \"poi-respirator-4\",\r\n            \"poi-respirator-5\",\r\n            \"poi-respirator-6\",\r\n            \"poi-respirator\",\r\n            \"poi-water-pump\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"selection\",\r\n        \"data\": [\r\n            \"selection-check-all\",\r\n            \"selection-check-circle\",\r\n            \"selection-check-simple\",\r\n            \"selection-checkbox-blank-circle\",\r\n            \"selection-checkbox-blank\",\r\n            \"selection-checkbox-marked-circle-chanel\",\r\n            \"selection-checkbox-marked-circle\",\r\n            \"selection-checked-1\",\r\n            \"selection-checked-empty\",\r\n            \"selection-checked\",\r\n            \"selection-radio-off\",\r\n            \"selection-radio-on\",\r\n            \"selection-success\",\r\n            \"selection-toggle-left\",\r\n            \"selection-toggle-right\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"settings\",\r\n        \"data\": [\r\n            \"settings-2\",\r\n            \"settings-apps\",\r\n            \"settings-more-horiz\",\r\n            \"settings-more-vert\",\r\n            \"settings-power\",\r\n            \"settings-tune-vertical\",\r\n            \"settings-tune\",\r\n            \"settings\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shapes\",\r\n        \"data\": [\r\n            \"shapes-animation\",\r\n            \"shapes-arrange-bring-forward\",\r\n            \"shapes-arrange-send-backward\",\r\n            \"shapes-arrange-send-to-back\",\r\n            \"shapes-box-shadow\",\r\n            \"shapes-checkbox-intermediate\",\r\n            \"shapes-checkerboard\",\r\n            \"shapes-collage\",\r\n            \"shapes-cube-3\",\r\n            \"shapes-cube-outline\",\r\n            \"shapes-cube\",\r\n            \"shapes-drawing-box\",\r\n            \"shapes-drawing\",\r\n            \"shapes-hexagon-fill\",\r\n            \"shapes-hexagon\",\r\n            \"shapes-layers-off\",\r\n            \"shapes-layers\",\r\n            \"shapes-nest-protec\",\r\n            \"shapes-nut\",\r\n            \"shapes-pentagon-fill\",\r\n            \"shapes-pentagon\",\r\n            \"shapes-rhombus-fill\",\r\n            \"shapes-rhombus\",\r\n            \"shapes-shape-fill\",\r\n            \"shapes-shape-plus-1\",\r\n            \"shapes-shape-plus\",\r\n            \"shapes-shape\",\r\n            \"shapes-square-inc\",\r\n            \"shapes-triangle-fill\",\r\n            \"shapes-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shopping\",\r\n        \"data\": [\r\n            \"shopping-box\",\r\n            \"shopping-cart\",\r\n            \"shopping-gift\",\r\n            \"shopping\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"signal\",\r\n        \"data\": [\r\n            \"signal-access-point\",\r\n            \"signal-bluetooth\",\r\n            \"signal-cast\",\r\n            \"signal-off\",\r\n            \"signal-radio-tower\",\r\n            \"signal-rss-box\",\r\n            \"signal-wifi-off\",\r\n            \"signal-wifi\",\r\n            \"signal\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"social\",\r\n        \"data\": [\r\n            \"social-behance\",\r\n            \"social-browser\",\r\n            \"social-facebook\",\r\n            \"social-github\",\r\n            \"social-globe-2\",\r\n            \"social-google-plus\",\r\n            \"social-heart-fill\",\r\n            \"social-heart\",\r\n            \"social-home-breadcrumbs\",\r\n            \"social-home\",\r\n            \"social-instagram\",\r\n            \"social-linkedin-box\",\r\n            \"social-moon\",\r\n            \"social-share\",\r\n            \"social-star-fill\",\r\n            \"social-star-half\",\r\n            \"social-star\",\r\n            \"social-sun\",\r\n            \"social-tab\",\r\n            \"social-telegram\",\r\n            \"social-thumb-down\",\r\n            \"social-thumb-up\",\r\n            \"social-twitter\",\r\n            \"social-vk\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"sort\",\r\n        \"data\": [\r\n            \"sort-abc-ru-up\",\r\n            \"sort-abc-ru\",\r\n            \"sort-alphabetical-up\",\r\n            \"sort-alphabetical\",\r\n            \"sort-apps\",\r\n            \"sort-asc-arr\",\r\n            \"sort-desc-arr\",\r\n            \"sort-eye-off-2\",\r\n            \"sort-eye-off\",\r\n            \"sort-eye\",\r\n            \"sort-filter-remove\",\r\n            \"sort-filter\",\r\n            \"sort-funnel-drop-down-list-open\",\r\n            \"sort-funnel-drop-down-list\",\r\n            \"sort-look-into-the-buffer\",\r\n            \"sort-maximize\",\r\n            \"sort-numeric\",\r\n            \"sort-real-size\",\r\n            \"sort-search-mistake\",\r\n            \"sort-zoom-in\",\r\n            \"sort-zoom-out\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"tools\",\r\n        \"data\": [\r\n            \"tools-auto-fix\",\r\n            \"tools-award\",\r\n            \"tools-briefcase\",\r\n            \"tools-broom\",\r\n            \"tools-brush\",\r\n            \"tools-content-cut\",\r\n            \"tools-content-save-as\",\r\n            \"tools-content-save\",\r\n            \"tools-earth-work\",\r\n            \"tools-eraser\",\r\n            \"tools-eyedropper\",\r\n            \"tools-keyboard-close-1\",\r\n            \"tools-keyboard-close\",\r\n            \"tools-keyboard\",\r\n            \"tools-lightbulb\",\r\n            \"tools-npm\",\r\n            \"tools-palette\",\r\n            \"tools-pantone\",\r\n            \"tools-ruler\",\r\n            \"tools-save-back\",\r\n            \"tools-solver\",\r\n            \"tools-thermometer-minus\",\r\n            \"tools-thermometer-plus\",\r\n            \"tools-thermometer\",\r\n            \"tools-umbrella\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"transport\",\r\n        \"data\": [\r\n            \"transport-airplane\",\r\n            \"transport-ambulance\",\r\n            \"transport-truck\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"vectors\",\r\n        \"data\": [\r\n            \"vectors-arrange-above\",\r\n            \"vectors-arrange-below\",\r\n            \"vectors-circle-variant\",\r\n            \"vectors-circle\",\r\n            \"vectors-combine-1\",\r\n            \"vectors-combine\",\r\n            \"vectors-curve\",\r\n            \"vectors-difference-ab\",\r\n            \"vectors-difference-ba\",\r\n            \"vectors-difference\",\r\n            \"vectors-ellipse\",\r\n            \"vectors-intersection\",\r\n            \"vectors-line\",\r\n            \"vectors-point\",\r\n            \"vectors-polygon\",\r\n            \"vectors-polyline\",\r\n            \"vectors-radius\",\r\n            \"vectors-rectangle\",\r\n            \"vectors-selection\",\r\n            \"vectors-square\",\r\n            \"vectors-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"view\",\r\n        \"data\": [\r\n            \"view-agenda\",\r\n            \"view-array\",\r\n            \"view-carousel\",\r\n            \"view-column\",\r\n            \"view-component\",\r\n            \"view-dashboard-variant\",\r\n            \"view-dashboard\",\r\n            \"view-day\",\r\n            \"view-folder-mode\",\r\n            \"view-grid-1\",\r\n            \"view-grid\",\r\n            \"view-headline\",\r\n            \"view-list\",\r\n            \"view-logo-grey-z\",\r\n            \"view-logo-sgrey\",\r\n            \"view-menu-2\",\r\n            \"view-menu-arrow-down\",\r\n            \"view-menu-arrow-left\",\r\n            \"view-menu-arrow-right\",\r\n            \"view-menu-arrow-up\",\r\n            \"view-menu\",\r\n            \"view-module\",\r\n            \"view-quilt\",\r\n            \"view-sequential\"\r\n        ]\r\n    }\r\n]"
                }
            ],
            "libs/components/src/lib/icon/zyfra-icon.component.stories.ts": [
                {
                    "name": "IconsSet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponents>",
                    "defaultValue": "(args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1' },\r\n  { label: 'Название цеха 2' },\r\n  { label: 'Название цеха 3' },\r\n  { label: 'Название цеха 4' }\r\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraBreadcrumbComponent>",
                    "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\r\n  component: ZyfraBreadcrumbComponent,\r\n  props: {\r\n    ...args,\r\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\r\n  }\r\n})"
                }
            ],
            "libs/components/src/lib/tree/zyfra-tree.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    label: 'Documents',\r\n    data: 'Documents Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [{\r\n      label: 'Work',\r\n      data: 'Work Folder',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n      collapsedIcon: 'zyfra-icon files-folder',\r\n      children: [\r\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\r\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Home',\r\n        data: 'Home Folder',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder',\r\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\r\n      }]\r\n  },\r\n  {\r\n    label: 'Pictures',\r\n    data: 'Pictures Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [\r\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\r\n      { label: 'logo.jpg', icon: 'zyfra-icon files-file', data: 'PrimeFaces Logo' },\r\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    data: 'Movies Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n    children: [{\r\n      label: 'Al Pacino',\r\n      data: 'Pacino Movies',\r\n      children: [\r\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\r\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Robert De Niro',\r\n        data: 'De Niro Movies',\r\n        children: [\r\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\r\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\r\n        ]\r\n      }]\r\n  }\r\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraTreeComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionTabComponent>",
                    "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\r\n  component: ZyfraAccordionTabComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsItemComponent>",
                    "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\r\n  component: ZyfraMenuApplicationsItemComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabPanelComponent>",
                    "defaultValue": "(args: ZyfraTabPanelComponent) => ({\r\n  component: ZyfraTabPanelComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts": [
                {
                    "name": "RADIO_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraRadioButtonComponent),\r\n  multi: true,\r\n}"
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.stories.ts": [
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSliderComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraSliderComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/ru_RU.ts": [
                {
                    "name": "ru",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Янв\",\r\n    \"Февр\",\r\n    \"Март\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Авг\",\r\n    \"Сент\",\r\n    \"Окт\",\r\n    \"Ноябрь\",\r\n    \"Дек\"\r\n  ],\r\n  \"dateFormat\": \"dd.mm.yyyy\",\r\n  \"today\": \"Сегодня\",\r\n  \"weekHeader\": \"Нд\",\r\n  \"clear\": \"Очистить\"\r\n}"
                }
            ],
            "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAutoCompleteComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraAutoCompleteComponent,\r\n  props: {\r\n    ...args,\r\n    countries: [\r\n      { name: 'Argentina', code: 'AR' },\r\n      { name: 'Armenia', code: 'AM' },\r\n      { name: 'Aruba', code: 'AW' },\r\n      { name: 'Russia', code: 'RU' },\r\n      { name: 'India', code: 'IN' },\r\n      { name: 'Indonesia', code: 'ID' },\r\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n      { name: 'Iraq', code: 'IQ' },\r\n      { name: 'Ireland', code: 'IE' },\r\n      { name: 'Isle of Man', code: 'IM' },\r\n      { name: 'Israel', code: 'IL' },\r\n      { name: 'Italy', code: 'IT' },\r\n      { name: 'Zambia', code: 'ZM' },\r\n      { name: 'Zimbabwe', code: 'ZW' },\r\n    ],\r\n    completeMethod(event): void {\r\n      const filtered = [];\r\n      const query = event.query;\r\n\r\n      for (const country of this.countries) {\r\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\r\n          filtered.push(country);\r\n        }\r\n      }\r\n\r\n      this.suggestions = filtered;\r\n    },\r\n  },\r\n})"
                },
                {
                    "name": "withDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDynamicDialogComponent>",
                    "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/input/zyfra-input.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/password/zyfra-password.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPasswordComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "ToggleMask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitterComponent>",
                    "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-splitter\r\n      [panelSizes]=\"panelSizes\"\r\n      [minSizes]=\"minSizes\"\r\n      [style]=\"style\"\r\n      (onResizeStart)=\"onResizeStart($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n    >\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 1</div>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 2</div>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onResizeStart: (event) => action('onResizeStart')({ ...event, sizes: [...event.sizes] }),\r\n    onResizeEnd: (event) => action('onResizeEnd')({ ...event, sizes: [...event.sizes] }),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTextareaComponent>",
                    "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionComponent>",
                    "defaultValue": "(args: ZyfraAccordionComponent) => ({\r\n  template: `\r\n  <zyfra-accordion [multiple]=\"multiple\"\r\n                   (mouseover)=\"mouseover()\"\r\n                   (onOpen)=\"onOpen($event)\"\r\n                   (onClose)=\"onClose($event)\"\r\n                   (activeIndexChange)=\"activeIndexChange($event)\">\r\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\r\n      Content 1\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">\r\n          {{dynamicString}} header Content 2\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"icons\">\r\n          <span class=\"zyfra-icon chevrons-double-up\" title=\"{{dynamicString}} title\"></span>\r\n          <span class=\"zyfra-icon chevrons-double-down\" title=\"static title\"></span>\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"content\">\r\n      {{dynamicString}} body Content 2\r\n      </ng-template>\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\r\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\r\n    </zyfra-accordion-tab>\r\n  </zyfra-accordion>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectedChange: action('selectedChange'),\r\n    onOpen: action('onOpen'),\r\n    onClose: action('onClose'),\r\n    activeIndexChange: action('activeIndexChange'),\r\n    mouseover(): void {\r\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\r\n      this.showThirdForReInitTabTest = true;\r\n    }\r\n  }\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "libs/components/src/lib/datepicker/utils/generate-time-array.ts": [
                {
                    "name": "generateTimeArray",
                    "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ZyfraTime[]",
                    "jsdoctags": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/datepicker/utils/is-iso-date.ts": [
                {
                    "name": "isIsoDate",
                    "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts": [
                {
                    "name": "ZyfraDatePickerMode",
                    "childs": [
                        {
                            "name": "absolute",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "absolute"
                        },
                        {
                            "name": "relative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "relative"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts": [
                {
                    "name": "ZyfraDatePickerValueType",
                    "childs": [
                        {
                            "name": "date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        },
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "string"
                        },
                        {
                            "name": "isoString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "isoString"
                        },
                        {
                            "name": "timestamp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "timestamp"
                        },
                        {
                            "name": "null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts": [
                {
                    "name": "ZyfraLocale",
                    "childs": [
                        {
                            "name": "ru",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ru_RU"
                        },
                        {
                            "name": "en",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "en_US"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts": [
                {
                    "name": "DropdownTemplateType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "HeaderConfig",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "MenuItemSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"standard\" | \"enlarged\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "SelectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"single\" | \"checkbox\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "ViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts": [
                {
                    "name": "ItemClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.ts": [
                {
                    "name": "onResizeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.ts": [
                {
                    "name": "PageOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number | Record<string | >",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.ts": [
                {
                    "name": "SliderOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.ts": [
                {
                    "name": "SpinnerColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.ts": [
                {
                    "name": "TZyfraButtonIconPosision",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/components/src/lib/@shared/zyfra-template.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionTabComponent",
                "coveragePercent": 40,
                "coverageCount": "6/15",
                "status": "medium"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionComponent",
                "coveragePercent": 66,
                "coverageCount": "10/15",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraAccordionOpenClose",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAutoCompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/61",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxWithFormControlComponentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "en",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ru",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraDatePickerLocaleInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraTime",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateTimeArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isIsoDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Absolute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AbsoluteMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Relative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/84",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraDropdownTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/69",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogRef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraDynamicDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint-overlay-manager.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraHintOverlayManager",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTextExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HintTitleExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraHintComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraHintDirective",
                "coveragePercent": 0,
                "coverageCount": "0/34",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraHintOptionsModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/hint/zyfra-hint.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPORTED_DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconDefs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponents",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconsSet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Phone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneExt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SerialNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SSN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputMaskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Currency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Decimal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bottomMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManyItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "topMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransition",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransitionSettings",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItemsRubricator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraNavMenuGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraAutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuSelectionEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SETTINGS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/service/selection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "convertToNode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flatNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fromRubricatorNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortByLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page1Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page2Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page3Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "WrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnlargedSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraItemTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FolderMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanelTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RubricatorMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleGroupPanel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPaginatorComponent",
                "coveragePercent": 85,
                "coverageCount": "18/21",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ToggleMask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoValueDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formControlTemplateChunk",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiniRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RADIO_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryCity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSelectButtonComponent",
                "coveragePercent": 25,
                "coverageCount": "4/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonChange",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonOptionClick",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Style",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationSpeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitterComponent",
                "coveragePercent": 76,
                "coverageCount": "13/17",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSplitterTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItemsWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplateWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OverflowTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToggleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TToggleButtonClick",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Binary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTriCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}