{
    "pipes": [
        {
            "name": "CharLimitPipe",
            "id": "pipe-CharLimitPipe-a1790d8e2e4353fed5fa162a7e5ea066",
            "file": "libs/components/src/lib/@core/utils/chars-limit.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "charLengthLimit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "charLengthLimit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "charLimit",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'charLimit',\n})\nexport class CharLimitPipe implements PipeTransform {\n  public transform(str: string, charLengthLimit: number): string {\n    if (typeof str !== 'string') return str;\n    return str.length > charLengthLimit ? str.slice(0, charLengthLimit) + '...' : str;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Customer",
            "id": "interface-Customer-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "verified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 131
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Dimensions",
            "id": "interface-Dimensions-1aceb7f9dad377ae6bbfea0840f30e99",
            "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { ElementRef, Inject, Injectable } from '@angular/core';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\n@Injectable()\nexport class ZyfraDropdownWithContentService {\n  constructor(@Inject(DOCUMENT) private document: Document, private element: ElementRef) {}\n\n  public setDropdownPanelPosition(): void {\n    const dropdownPanel: HTMLElement = this.element.nativeElement.querySelector('.p-dropdown-panel');\n    const targetHeightElement: HTMLElement = this.element.nativeElement.firstElementChild;\n    dropdownPanel.style.visibility = 'hidden';\n\n    setTimeout(() => {\n      this.relativePosition(dropdownPanel, targetHeightElement);\n      dropdownPanel.style.visibility = 'visible';\n    });\n  }\n\n  // https://github.com/primefaces/primeng/blob/master/src/app/components/dom/domhandler.ts#L94\n  private relativePosition(dropdownPanelElement: HTMLElement, target: HTMLElement): void {\n    const elementDimensions = dropdownPanelElement.offsetParent\n      ? { width: dropdownPanelElement.offsetWidth, height: dropdownPanelElement.offsetHeight }\n      : this.getHiddenElementDimensions(dropdownPanelElement);\n\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const viewport = this.getViewport();\n\n    let top: number, left: number;\n\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = -1 * elementDimensions.height;\n      dropdownPanelElement.style.transformOrigin = 'bottom';\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight;\n      dropdownPanelElement.style.transformOrigin = 'top';\n    }\n\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = targetOffset.left * -1;\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = 0;\n    }\n\n    dropdownPanelElement.style.top = top + 'px';\n    dropdownPanelElement.style.left = left + 'px';\n  }\n\n  private getHiddenElementDimensions(element: HTMLElement): Dimensions {\n    const dimensions: Dimensions = {\n      width: 0,\n      height: 0,\n    };\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n\n    return dimensions;\n  }\n\n  private getViewport(): Dimensions {\n    const win = this.document.defaultView,\n      d = this.document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\n\n    return { width: w, height: h };\n  }\n}\n",
            "properties": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DropdownChangeEvent",
            "id": "interface-DropdownChangeEvent-adca5e7836b3b65b296b80d2964de02d",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Dropdown } from 'primeng/dropdown';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown>\n  extends WrappedFormComponent\n  implements ControlValueAccessor, AfterContentInit\n{\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode:\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'equals'\n    | 'notEquals'\n    | 'in'\n    | 'lt'\n    | 'lte'\n    | 'gt'\n    | 'gte' = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean; // TODO(rustam) remove this prop use control disable\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: any;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n  @Input() mini: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n\n  @ViewChild('dropdown') dropdown: Dropdown;\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\n\n  itemTemplate: TemplateRef<unknown>;\n  groupTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n  headerTemplate: TemplateRef<unknown>;\n  emptyTemplate: TemplateRef<unknown>;\n  emptyfilterTemplate: TemplateRef<unknown>;\n  footerTemplate: TemplateRef<unknown>;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyfilterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  public override setDisabledState(): void {\n    // do nothing, because have `disabled` input\n  }\n}\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "InputEvent",
            "id": "interface-InputEvent-c7757aeb2e91c66b69d350f83768525c",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\nexport interface InputEvent {\n  originalEvent: KeyboardEvent;\n  value: number;\n}\n\n@Component({\n  selector: 'zyfra-input-number',\n  templateUrl: './zyfra-input-number.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputNumberComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() value: number;\n  @Input() format = true;\n  @Input() showButtons: boolean;\n  @Input() buttonLayout = 'stacked';\n  @Input() spanClass: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() incrementButtonClass: string;\n  @Input() decrementButtonClass: string;\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\n  @Input() locale: string;\n  @Input() localeMatcher = 'best fit';\n  @Input() mode = 'decimal';\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() currency: string;\n  @Input() currencyDisplay = 'symbol';\n  @Input() useGrouping = true;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 1;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() inputId: string;\n  @Input() inputStyle: string;\n  @Input() inputStyleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string = '0';\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() title: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() name: string;\n  @Input() autocomplete: string;\n\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onInput = new EventEmitter<InputEvent>();\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "properties": [
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyboardEvent",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "NavMenuEvent",
            "id": "interface-NavMenuEvent-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "NavMenuSelectionEvent",
            "id": "interface-NavMenuSelectionEvent-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "groupIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem | ZyfraMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Order",
            "id": "interface-Order-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1215
                },
                {
                    "name": "customer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1217
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1214
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1212
                },
                {
                    "name": "productCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1213
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1216
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1218
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "PageChangeEvent",
            "id": "interface-PageChangeEvent-644869aac8f0efe887115b4b7bdbba11",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\ntype PageOption = number | Record<string, unknown>;\n\nexport interface PageChangeEvent {\n  first: number;\n  rows: number;\n  page: number;\n  pageCount: number;\n}\n\n@Component({\n  selector: 'zyfra-paginator',\n  templateUrl: './zyfra-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraPaginatorComponent {\n  /**\n   * Number of total records.\n   */\n  @Input() totalRecords = 0;\n  /**\n   *  Data count to display per page.\n   */\n  @Input() rows = 0;\n  /**\n   * \tZero-relative number of the first row to be displayed.\n   */\n  @Input() first = 0;\n  /**\n   * \tNumber of page links to display.\n   */\n  @Input() pageLinkSize = 5;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown.\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   */\n  @Input() rowsPerPageOptions: PageOption[] = null;\n  /**\n   * \tInline style of the component.\n   */\n  @Input() style: string = null;\n  /**\n   * \tStyle class of the component.\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Whether to show it even there is only one page.\n   */\n  @Input() alwaysShow = true;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   */\n  @Input() templateLeft: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   */\n  @Input() templateRight: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the dropdown item inside in the paginator.\n   */\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   */\n  @Input() dropdownAppendTo: any = null;\n  /**\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   */\n  @Input() dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate: string;\n  /**\n   * Whether to display current page report.\n   */\n  @Input() showCurrentPageReport = false;\n  /**\n   * \tWhether to display a dropdown to navigate to any page.\n   */\n  @Input() showJumpToPageDropdown = false;\n  /**\n   * \tWhether to show page links.\n   */\n  @Input() showPageLinks = true;\n\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\n\n  public onPageChange(event: PageChangeEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "first",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1068
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1063
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1065
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1062
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1066
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1070
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1064
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1067
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1069
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1071
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ProductOrder",
            "id": "interface-ProductOrder-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1204
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1199
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1201
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1198
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1202
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1206
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1200
                },
                {
                    "name": "orders",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Order[]",
                    "optional": false,
                    "description": "",
                    "line": 1208
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1203
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1205
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1207
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "RelativeDateMenuItem",
            "id": "interface-RelativeDateMenuItem-8b8434727d3a7cc57e16744c39e31cdc",
            "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RelativeDateModel {\n  time: RelativeDateTimeId,\n  direction: RelativeDateDirectionId,\n  number: string,\n  period: RelativeDatePeriodId\n}\n\n// Menu\nexport interface RelativeDateMenuItem<T = unknown> {\n  id: T;\n  groupId: keyof RelativeDateMenuItems;\n  active?: boolean;\n  icon: string;\n  label: string;\n}\n\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\n\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\n  return DefaultRelativeMenuItems as any;\n}\n\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\n\nexport interface RelativeDateMenuItems {\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\n}\n\nconst DefaultRelativeMenuItems = {\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'plus-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const;\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "groupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "RelativeDateMenuItems",
            "id": "interface-RelativeDateMenuItems-8b8434727d3a7cc57e16744c39e31cdc",
            "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RelativeDateModel {\n  time: RelativeDateTimeId,\n  direction: RelativeDateDirectionId,\n  number: string,\n  period: RelativeDatePeriodId\n}\n\n// Menu\nexport interface RelativeDateMenuItem<T = unknown> {\n  id: T;\n  groupId: keyof RelativeDateMenuItems;\n  active?: boolean;\n  icon: string;\n  label: string;\n}\n\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\n\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\n  return DefaultRelativeMenuItems as any;\n}\n\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\n\nexport interface RelativeDateMenuItems {\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\n}\n\nconst DefaultRelativeMenuItems = {\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'plus-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const;\n",
            "properties": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDateDirectionId>[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "period",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDatePeriodId>[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDateTimeId>[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "RelativeDateModel",
            "id": "interface-RelativeDateModel-8b8434727d3a7cc57e16744c39e31cdc",
            "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RelativeDateModel {\n  time: RelativeDateTimeId,\n  direction: RelativeDateDirectionId,\n  number: string,\n  period: RelativeDatePeriodId\n}\n\n// Menu\nexport interface RelativeDateMenuItem<T = unknown> {\n  id: T;\n  groupId: keyof RelativeDateMenuItems;\n  active?: boolean;\n  icon: string;\n  label: string;\n}\n\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\n\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\n  return DefaultRelativeMenuItems as any;\n}\n\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\n\nexport interface RelativeDateMenuItems {\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\n}\n\nconst DefaultRelativeMenuItems = {\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'plus-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const;\n",
            "properties": [
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateDirectionId",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "period",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDatePeriodId",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateTimeId",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Sale",
            "id": "interface-Sale-964ffbeecfa4d4877513d75da7f0c2c7",
            "file": "libs/components/src/lib/table/_story/data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const Products: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface Customer {\n  id: number;\n  name: string;\n  country: { code: string; name: string };\n  company: string;\n  date: string;\n  status: string;\n  verified: boolean;\n  activity: number;\n  representative: { image: string; name: string };\n  balance: number;\n}\n\nexport const Customers: Customer[] = [\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n];\n\ninterface Sale {\n  product: string;\n  lastYearSale: number;\n  thisYearSale: number;\n  lastYearProfit: number;\n  thisYearProfit: number;\n}\n\nexport const Sales: Sale[] = [\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n];\n\nexport interface Product {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n}\n\nconst ProductsSmall: Product[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n];\n\ninterface ProductOrder {\n  id: string;\n  code: string;\n  name: string;\n  description: string;\n  image: string;\n  price: number;\n  category: string;\n  quantity: number;\n  inventoryStatus: string;\n  rating: number;\n  orders: Order[];\n}\n\ninterface Order {\n  id: string;\n  productCode: string;\n  date: string;\n  amount: number;\n  quantity: number;\n  customer: string;\n  status: string;\n}\n\nconst ProductsOrdersSmall: ProductOrder[] = [\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n];\n\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\n  return array.map(item => ({ ...item }));\n}\n\nexport function getProducts(): Product[] {\n  return cloneArrayOfObjects(Products);\n}\n\nexport function getProductsSmall(): Product[] {\n  return cloneArrayOfObjects(ProductsSmall);\n}\n\nexport function getSalesSmall(): Sale[] {\n  return cloneArrayOfObjects(Sales);\n}\n\nexport function getCustomers(): Customer[] {\n  return cloneArrayOfObjects(Customers);\n}\n\nexport function getProductsOrdersSmall(): ProductOrder[] {\n  return cloneArrayOfObjects(ProductsOrdersSmall);\n}\n",
            "properties": [
                {
                    "name": "lastYearProfit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1044
                },
                {
                    "name": "lastYearSale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1042
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 1041
                },
                {
                    "name": "thisYearProfit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1045
                },
                {
                    "name": "thisYearSale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 1043
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonChange",
            "id": "interface-SelectButtonChange-5fd075fcacb6a9b464269a4ada961fd6",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number = 0;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  public handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SelectButtonOptionClick",
            "id": "interface-SelectButtonOptionClick-5fd075fcacb6a9b464269a4ada961fd6",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number = 0;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  public handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "option",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "SettingsConfig",
            "id": "interface-SettingsConfig-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "selectedSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItemSize",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "singleGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "StoryCity",
            "id": "interface-StoryCity-3c9ff690d0b303367893864b189a95e5",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { moduleMetadata } from '@storybook/angular';\nimport { Meta, Story } from '@storybook/angular/types-6-0';\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\nimport { ZyfraSelectButtonModule } from './zyfra-select-button.module';\n\nexport default {\n  moduleId: module.id,\n  title: 'Buttons/SelectButton',\n  component: ZyfraSelectButtonComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule, ZyfraSelectButtonModule],\n    }),\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-select-button.component.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\ninterface StoryCity {\n  name: string;\n  code: string;\n}\n\nconst cities: StoryCity[] = [\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n];\n\nconst Template: Story<ZyfraSelectButtonComponent<StoryCity, string>> = (args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n});\n\nexport const Default = Template.bind({});\nDefault.args = {\n  options: cities,\n  optionLabel: 'name',\n  optionDisabled: 'inactive',\n  multiple: true,\n  optionValue: 'code',\n  disabled: false,\n  styleClass: 'selectbutton-default',\n};\n\nexport const DefaultMini = Template.bind({});\nDefaultMini.args = {\n  ...Default.args,\n  styleClass: 'p-selectbutton-default p-selectbutton-mini',\n};\n\nexport const Danger = Template.bind({});\nDanger.args = {\n  ...Default.args,\n  styleClass: 'p-selectbutton-danger',\n};\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ToolbarConfig",
            "id": "interface-ToolbarConfig-0a203a854c9653daf78eda9f9cd55ce1",
            "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\n\nexport type SelectionType = 'single' | 'checkbox';\nexport type MenuItemSize = 'standard' | 'enlarged';\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\n\nexport interface NavMenuEvent {\n  item: ZyfraMenuItem,\n  groupIndex?: number\n}\n\nexport interface NavMenuSelectionEvent {\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\n  groupIndex?: number\n}\n\nexport interface SettingsConfig {\n  singleGroup?: boolean,\n  selectionMode?: SelectionType,\n  selectedSize?: MenuItemSize;\n}\n\nexport const DEFAULT_SETTINGS: SettingsConfig = {\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n};\n\nexport type HeaderConfig = {\n  settings?: boolean,\n  home?: boolean\n};\n\nexport interface ToolbarConfig {\n  filter?: boolean,\n  group?: boolean,\n  filesMode?: boolean,\n  rubricatorMode?: boolean,\n  search?: boolean,\n  closeAll?: boolean,\n  refresh?: boolean,\n}\n\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}\n",
            "properties": [
                {
                    "name": "closeAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "filesMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "rubricatorMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "TToggleButtonClick",
            "id": "interface-TToggleButtonClick-4df1c4e5b84c529f740f9b74f58407ae",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface TToggleButtonClick {\n  originalEvent: PointerEvent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'zyfra-toggle-button',\n  templateUrl: './zyfra-toggle-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraToggleButtonComponent {\n  @Input() model = true;\n  @Input() onLabel: string = 'confirm';\n  @Input() offLabel: string;\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\n  @Input() offIcon = 'zyfra-icon cancel-close';\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public handleChange(event: TToggleButtonClick): void {\n    this.model = event.checked;\n    this.onChange.emit(this.model);\n  }\n}\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraAccordionOpenClose",
            "id": "interface-ZyfraAccordionOpenClose-af81d128095b1acb9f95589396b699df",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy, OnInit {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngOnInit(): void {\n    // Иначе в group-panels работает не корректно\n    this.accordion.collapseIcon = this.collapseIcon;\n    this.accordion.expandIcon = this.expandIcon;\n  }\n  \n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  public reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointerEvent",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraDatePickerLocaleInterface",
            "id": "interface-ZyfraDatePickerLocaleInterface-1d94b4649c3d7d1ba5649705c97416ac",
            "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraDatePickerLocaleInterface {\n  locale: Locale;\n}\n",
            "properties": [
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Locale",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppItem",
            "id": "interface-ZyfraMenuAppItem-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransition",
            "id": "interface-ZyfraMenuAppTransition-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "delay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "timingFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuAppTransitionSettings",
            "id": "interface-ZyfraMenuAppTransitionSettings-86087e2d854af989d8e86d5b115f5f3c",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface ZyfraMenuAppTransition {\n  delay: number;\n  duration: number;\n  timingFunction: string;\n}\n\nexport interface ZyfraMenuAppTransitionSettings {\n  open: ZyfraMenuAppTransition;\n  close: ZyfraMenuAppTransition;\n}\n\nexport interface ZyfraMenuAppItem {\n  title: string;\n  icon: string;\n  description?: string;\n}\n",
            "properties": [
                {
                    "name": "close",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "open",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppTransition",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraMenuItem",
            "id": "interface-ZyfraMenuItem-4d725699fc7bc004fee192d4f124803c",
            "file": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { QueryParamsHandling } from '@angular/router';\n\nexport interface ZyfraMenuItem {\n  label?: string;\n  icon?: string;\n  command?: (event?: any) => void;\n  url?: string;\n  items?: ZyfraMenuItem[];\n  expanded?: boolean;\n  disabled?: boolean;\n  visible?: boolean;\n  target?: string;\n  escape?: boolean;\n  routerLinkActiveOptions?: any;\n  separator?: boolean;\n  badge?: string;\n  tooltip?: string;\n  tooltipPosition?: string;\n  badgeStyleClass?: string;\n  style?: any;\n  styleClass?: string;\n  title?: string;\n  id?: string;\n  automationId?: any;\n  tabindex?: string;\n  routerLink?: any;\n  queryParams?: {\n    [k: string]: any;\n  };\n  fragment?: string;\n  queryParamsHandling?: QueryParamsHandling;\n  preserveFragment?: boolean;\n  skipLocationChange?: boolean;\n  replaceUrl?: boolean;\n  state?: {\n    [k: string]: any;\n  };\n  tooltipOptions?: {\n    tooltipLabel?: string;\n    tooltipPosition?: string;\n    tooltipEvent?: string;\n    appendTo?: any;\n    positionStyle?: string;\n    tooltipStyleClass?: string;\n    tooltipZIndex?: string;\n    escape?: boolean;\n    disabled?: boolean;\n    positionTop?: number;\n    positionLeft?: number;\n    showDelay?: number;\n    hideDelay?: number;\n    life?: number;\n  };\n}\n",
            "properties": [
                {
                    "name": "automationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "badgeStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "command",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "escape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "fragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "preserveFragment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "queryParams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "queryParamsHandling",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryParamsHandling",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "replaceUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "routerLinkActiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "separator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "skipLocationChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tooltipOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "tooltipPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ZyfraTime",
            "id": "interface-ZyfraTime-48553cf49e7181a783e262b93613e299",
            "file": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ZyfraTime {\n  value: string;\n  date: Date;\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "NavMenuService",
            "id": "injectable-NavMenuService-a6a22676a5688fda45feb2d8aae1bb97",
            "file": "libs/components/src/lib/nav-menu/service/selection.service.ts",
            "properties": [
                {
                    "name": "selection",
                    "defaultValue": "new BehaviorSubject<TreeNode>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selection$",
                    "defaultValue": "this.selection.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "selectionChange",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Injectable()\nexport class NavMenuService {\n  private selection = new BehaviorSubject<TreeNode>(null);\n  selection$ = this.selection.asObservable();\n\n  public selectionChange(node: TreeNode): void {\n    if (this.selection.value) {\n      this.selection.value.styleClass = '';\n    }\n    if (node) {\n      node.styleClass = 'active';\n    }\n    this.selection.next(node);\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "ZyfraDropdownWithContentService",
            "id": "injectable-ZyfraDropdownWithContentService-1aceb7f9dad377ae6bbfea0840f30e99",
            "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getHiddenElementDimensions",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Dimensions",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getViewport",
                    "args": [],
                    "optional": false,
                    "returnType": "Dimensions",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "relativePosition",
                    "args": [
                        {
                            "name": "dropdownPanelElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dropdownPanelElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDropdownPanelPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { ElementRef, Inject, Injectable } from '@angular/core';\n\ninterface Dimensions {\n  width: number;\n  height: number;\n}\n\n@Injectable()\nexport class ZyfraDropdownWithContentService {\n  constructor(@Inject(DOCUMENT) private document: Document, private element: ElementRef) {}\n\n  public setDropdownPanelPosition(): void {\n    const dropdownPanel: HTMLElement = this.element.nativeElement.querySelector('.p-dropdown-panel');\n    const targetHeightElement: HTMLElement = this.element.nativeElement.firstElementChild;\n    dropdownPanel.style.visibility = 'hidden';\n\n    setTimeout(() => {\n      this.relativePosition(dropdownPanel, targetHeightElement);\n      dropdownPanel.style.visibility = 'visible';\n    });\n  }\n\n  // https://github.com/primefaces/primeng/blob/master/src/app/components/dom/domhandler.ts#L94\n  private relativePosition(dropdownPanelElement: HTMLElement, target: HTMLElement): void {\n    const elementDimensions = dropdownPanelElement.offsetParent\n      ? { width: dropdownPanelElement.offsetWidth, height: dropdownPanelElement.offsetHeight }\n      : this.getHiddenElementDimensions(dropdownPanelElement);\n\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const viewport = this.getViewport();\n\n    let top: number, left: number;\n\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = -1 * elementDimensions.height;\n      dropdownPanelElement.style.transformOrigin = 'bottom';\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight;\n      dropdownPanelElement.style.transformOrigin = 'top';\n    }\n\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = targetOffset.left * -1;\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = 0;\n    }\n\n    dropdownPanelElement.style.top = top + 'px';\n    dropdownPanelElement.style.left = left + 'px';\n  }\n\n  private getHiddenElementDimensions(element: HTMLElement): Dimensions {\n    const dimensions: Dimensions = {\n      width: 0,\n      height: 0,\n    };\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n\n    return dimensions;\n  }\n\n  private getViewport(): Dimensions {\n    const win = this.document.defaultView,\n      d = this.document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\n\n    return { width: w, height: h };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ZyfraDynamicDialogService",
            "id": "injectable-ZyfraDynamicDialogService-d2dd181d89aebf5fb4b2137806855cdb",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogComponentRefMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<DynamicDialogRef | ComponentRef<DynamicDialogComponent>>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "appendDialogComponentToBody",
                    "args": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicDialogRef",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "DynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ZyfraDynamicDialogRef",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "componentType",
                            "type": "Type<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "config",
                            "type": "ZyfraDynamicDialogConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeDialogComponentFromBody",
                    "args": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dialogRef",
                            "type": "DynamicDialogRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n} from '@angular/core';\nimport {\n  DynamicDialogComponent,\n  DynamicDialogConfig,\n  DynamicDialogInjector,\n  DynamicDialogRef,\n} from 'primeng/dynamicdialog';\nimport { ZyfraDynamicDialogRef } from '.';\nimport { ZyfraDynamicDialogConfig } from './zyfra-dynamic-dialog-config';\n\n@Injectable()\nexport class ZyfraDynamicDialogService {\n  // TODO: check why it's not exported from the module\n\n  public dialogComponentRefMap: Map<DynamicDialogRef, ComponentRef<DynamicDialogComponent>> = new Map();\n  public config: ZyfraDynamicDialogConfig;\n  public ref: ZyfraDynamicDialogRef;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {}\n\n  public open(componentType: Type<unknown>, config: ZyfraDynamicDialogConfig): ZyfraDynamicDialogRef {\n    const dialogRef = this.appendDialogComponentToBody(config);\n    this.config = config;\n    this.ref = dialogRef;\n    this.dialogComponentRefMap.get(dialogRef).instance.childComponentType = componentType;\n\n    return dialogRef;\n  }\n\n  private appendDialogComponentToBody(config: DynamicDialogConfig): DynamicDialogRef {\n    const map = new WeakMap();\n    map.set(DynamicDialogConfig, config);\n\n    const dialogRef = new DynamicDialogRef();\n    map.set(DynamicDialogRef, dialogRef);\n\n    const sub = dialogRef.onClose.subscribe(() => {\n      this.dialogComponentRefMap.get(dialogRef).instance.close();\n    });\n\n    const destroySub = dialogRef.onDestroy.subscribe(() => {\n      this.removeDialogComponentFromBody(dialogRef);\n      destroySub.unsubscribe();\n      sub.unsubscribe();\n    });\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\n    const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\n\n    this.appRef.attachView(componentRef.hostView);\n\n    const domElem = (componentRef.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n\n    this.dialogComponentRefMap.set(dialogRef, componentRef);\n\n    return dialogRef;\n  }\n\n  private removeDialogComponentFromBody(dialogRef: DynamicDialogRef): void {\n    if (!dialogRef || !this.dialogComponentRefMap.has(dialogRef)) {\n      return;\n    }\n\n    const dialogComponentRef = this.dialogComponentRefMap.get(dialogRef);\n    this.appRef.detachView(dialogComponentRef.hostView);\n    dialogComponentRef.destroy();\n    this.dialogComponentRefMap.delete(dialogRef);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "componentFactoryResolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appRef",
                        "type": "ApplicationRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ZyfraTooltipOverlayManager",
            "id": "injectable-ZyfraTooltipOverlayManager-ea060072b673eefcf5185f00bf9be7f5",
            "file": "libs/components/src/lib/tooltip/zyfra-tooltip-overlay-manager.service.ts",
            "properties": [
                {
                    "name": "className",
                    "defaultValue": "'zyfra-tooltip-overlay-container'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        143
                    ]
                },
                {
                    "name": "innerContainer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "append",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZyfraTooltipOverlayManager {\n  private innerContainer: HTMLElement = null;\n  private readonly className = 'zyfra-tooltip-overlay-container';\n  private renderer: Renderer2;\n\n  constructor(@Inject(DOCUMENT) private document: Document, rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private get container(): HTMLElement {\n    if (!this.innerContainer) {\n      this.innerContainer = this.document.querySelector(`.${this.className}`);\n      if (!this.innerContainer) {\n        this.innerContainer = this.renderer.createElement('div');\n        this.renderer.addClass(this.innerContainer, this.className);\n        this.renderer.setStyle(\n          this.innerContainer,\n          'cssText',\n          'position:fixed; top:0; left:0; width:100%; height:100%; pointer-events:none; z-index:99999;'\n        );\n        this.document.body.appendChild(this.innerContainer);\n      }\n    }\n    return this.innerContainer;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public create(): void {}\n\n  public append(element: HTMLElement): void {\n    this.container.appendChild(element);\n  }\n\n  public remove(element: HTMLElement): void {\n    this.container.removeChild(element);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "rendererFactory",
                        "type": "RendererFactory2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "container": {
                    "name": "container",
                    "getSignature": {
                        "name": "container",
                        "type": "",
                        "returnType": "HTMLElement",
                        "line": 16
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AccessorImplClass",
            "id": "class-AccessorImplClass-6cab31f45a46daad439a310471e755bb",
            "file": "libs/components/src/lib/@core/value-accessor/accessor-impl.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlValueAccessor } from '@angular/forms';\n\nexport abstract class AccessorImplClass implements ControlValueAccessor {\n  public accessorValue: unknown;\n  public accessorOnChangeFn: (_: unknown) => unknown;\n  public accessorOnTouchedFn: VoidFunction;\n  public accessorIsDisabled: boolean;\n\n  public writeValue(obj: unknown): void {\n    this.accessorValue = obj;\n  }\n\n  public registerOnChange(fn: (_: unknown) => unknown): void {\n    this.accessorOnChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: VoidFunction): void {\n    this.accessorOnTouchedFn = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.accessorIsDisabled = isDisabled;\n  }\n}\n",
            "properties": [
                {
                    "name": "accessorIsDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "accessorOnChangeFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "accessorOnTouchedFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoidFunction",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "accessorValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "ZyfraDynamicDialogConfig",
            "id": "class-ZyfraDynamicDialogConfig-af1f6fb73f9cfd1ff7bca03df59a1c9e",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogConfig } from 'primeng/dynamicdialog';\n\nexport class ZyfraDynamicDialogConfig extends DynamicDialogConfig { }\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogConfig",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraDynamicDialogRef",
            "id": "class-ZyfraDynamicDialogRef-20789316f44d4fd356aa68b4329be764",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicDialogRef } from 'primeng/dynamicdialog';\n\nexport class ZyfraDynamicDialogRef extends DynamicDialogRef { }\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "DynamicDialogRef",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ZyfraTooltipOptionsModel",
            "id": "class-ZyfraTooltipOptionsModel-b1f49e848111ff8239b41a80c1945f1c",
            "file": "libs/components/src/lib/tooltip/zyfra-tooltip.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport class ZyfraTooltipOptionsModel {\n  left?: number;\n  top?: number;\n  className?: string;\n  content?: string | TemplateRef<any>;\n  context: Record<string, unknown>;\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | TemplateRef<any>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BaseTableTemplateDirective",
            "id": "directive-BaseTableTemplateDirective-fefb25a955e97e3483bdf0db16e97dc2",
            "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\nexport type TableTemplateType =\n  'caption'\n  | 'header'\n  | 'headergrouped'\n  | 'body'\n  | 'loadingbody'\n  | 'footer'\n  | 'footergrouped'\n  | 'summary'\n  | 'colgroup'\n  | 'rowexpansion'\n  | 'groupheader'\n  | 'rowspan'\n  | 'groupfooter'\n  | 'frozenrows'\n  | 'frozenheader'\n  | 'frozenbody'\n  | 'frozenfooter'\n  | 'frozencolgroup'\n  | 'frozenrowexpansion'\n  | 'emptymessage'\n  | 'paginatorleft'\n  | 'paginatorright'\n  | 'paginatordropdownitem'\n  | 'input'\n  | 'output'\n  | 'filter';\n\n@Directive()\nexport class BaseTableTemplateDirective {\n  @Input() zyfraTableTemplate: TableTemplateType;\n\n  constructor(public templateRef: TemplateRef<unknown>) {}\n\n  get template(): TemplateRef<unknown> {\n    return this.templateRef;\n  }\n\n  public getType(): TableTemplateType {\n    return this.zyfraTableTemplate;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTableTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "TableTemplateType"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "TableTemplateType",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "template": {
                    "name": "template",
                    "getSignature": {
                        "name": "template",
                        "type": "",
                        "returnType": "TemplateRef<>",
                        "line": 37
                    }
                }
            }
        },
        {
            "name": "ValueAccessorFormComponent",
            "id": "directive-ValueAccessorFormComponent-150ceddbe1a202529098cc3537f907c5",
            "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, Provider, Type, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, DefaultValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AccessorImplClass } from './accessor-impl.class';\n\nexport function provideValueAccessor(type: Type<unknown>): Provider {\n  return {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: type,\n    multi: true,\n  };\n}\n\n@Directive()\nexport abstract class ValueAccessorFormComponent\n  extends AccessorImplClass\n  implements ControlValueAccessor, AfterViewInit\n{\n  @ViewChild(DefaultValueAccessor) private valueAccessor: DefaultValueAccessor;\n\n  ngAfterViewInit(): void {\n    this.valueAccessor.writeValue(this.accessorValue);\n    this.valueAccessor.registerOnChange(this.accessorOnChangeFn);\n    this.valueAccessor.registerOnTouched(this.accessorOnTouchedFn);\n    this.valueAccessor.setDisabledState(this.accessorIsDisabled);\n\n    this.valueAccessor.onChange = this.accessorOnChangeFn;\n    this.valueAccessor.onTouched = this.accessorOnTouchedFn;\n  }\n\n  public override writeValue(obj: unknown): void {\n    super.writeValue(obj);\n\n    this.valueAccessor?.writeValue(obj);\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    super.setDisabledState(isDisabled);\n    this.valueAccessor?.setDisabledState(isDisabled);\n  }\n}\n",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "valueAccessor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultValueAccessor",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "DefaultValueAccessor"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "ControlValueAccessor",
                "AfterViewInit"
            ]
        },
        {
            "name": "WrappedFormComponent",
            "id": "directive-WrappedFormComponent-ee6b87b3d2a54f632088a12d0f482564",
            "file": "libs/components/src/lib/@core/value-accessor/wrapped-form.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Injector, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { AccessorImplClass } from './accessor-impl.class';\n\n@Directive()\nexport abstract class WrappedFormComponent extends AccessorImplClass implements ControlValueAccessor {\n  public readonly formControl: FormControl;\n\n  constructor(public readonly injector: Injector, @Optional() @Self() public readonly ngControl: NgControl) {\n    super();\n\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n      this.formControl = ngControl.control as FormControl;\n    }\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.formControl.disable({ emitEvent: false });\n    } else {\n      this.formControl.enable({ emitEvent: false });\n    }\n    super.setDisabledState(this.accessorIsDisabled);\n  }\n}\n",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ]
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "ControlValueAccessor"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraAutofocusDirective",
            "id": "directive-ZyfraAutofocusDirective-ce76f5cf7c981f9e672cf040d7e1dfbe",
            "file": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive, ElementRef,\n  Input, OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[zyfraAutofocus]'\n})\nexport class ZyfraAutofocusDirective implements OnInit {\n  @Input() set zyfraAutofocus(condition: boolean) {\n    this.focus = condition !== false;\n  }\n\n  private focus = true;\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit(): void {\n    if (this.focus) {\n      this.el.nativeElement.focus();\n    }\n  }\n}\n",
            "selector": "[zyfraAutofocus]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraAutofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "focus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "zyfraAutofocus": {
                    "name": "zyfraAutofocus",
                    "setSignature": {
                        "name": "zyfraAutofocus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 10,
                        "jsdoctags": [
                            {
                                "name": "condition",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraBaseSearchCellComponent",
            "id": "directive-ZyfraBaseSearchCellComponent-f219d315967ab5a7c125fae1047da76b",
            "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HostBinding,\n  Input,\n  Output,\n  EventEmitter,\n  Directive\n} from '@angular/core';\n\ntype ValueChangeEvent = {\n  field: string;\n  value: string;\n};\n\n@Directive()\nexport abstract class ZyfraBaseSearchCellComponent {\n  @Input() placeholder = '';\n  @Input() field: string;\n  /**\n   * If the value is true, then the native filtering of the table will be used,\n   * otherwise the valueChange event will be emitted\n   */\n  @Input() isNativeFiltering = true;\n  @Input() matchMode = 'contains';\n\n  @Output() valueChange = new EventEmitter<ValueChangeEvent>();\n\n  @HostBinding('class') hostClass = 'search-cell';\n\n  public readonly abstract table: any;\n\n\n  // TODO refactor this, need form control\n  public filter(value: any, field: string, matchMode: string): void {\n    if (this.isNativeFiltering) {\n      this.table.filter(value, field, matchMode);\n    } else {\n      this.valueChange.emit({ field, value });\n    }\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "isNativeFiltering",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted",
                    "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "matchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<ValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "hostClass",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        143,
                        126
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraBaseTableComponent",
            "id": "directive-ZyfraBaseTableComponent-085f089418f5816f0cd08808386cdf72",
            "file": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, Output, QueryList, SimpleChanges, TemplateRef } from '@angular/core';\nimport { SortMeta } from 'primeng/api';\nimport { TableSortEvent } from '../../table/zyfra-table.types';\nimport { BaseTableTemplateDirective } from './directives/base-table-template.directive';\nimport { SortOrder } from './shared-table.types';\n\n@Directive()\nexport abstract class ZyfraBaseTableComponent<T = unknown> {\n  @Output() abstract activeElementChange: EventEmitter<T>;\n\n  styleClasses = 'p-datatable-gridlines';\n\n  public bodyTemplate: TemplateRef<any>;\n  public captionTemplate: TemplateRef<any>;\n  public colGroupTemplate: TemplateRef<any>;\n  public emptyMessageTemplate: TemplateRef<any>;\n  public footerTemplate: TemplateRef<any>;\n  public frozenBodyTemplate: TemplateRef<any>;\n  public frozenColGroupTemplate: TemplateRef<any>;\n  public frozenFooterTemplate: TemplateRef<any>;\n  public frozenHeaderTemplate: TemplateRef<any>;\n  public headerTemplate: TemplateRef<any>;\n  public paginatorDropdownItemTemplate: TemplateRef<any>;\n  public paginatorLeftTemplate: TemplateRef<any>;\n  public paginatorRightTemplate: TemplateRef<any>;\n  public summaryTemplate: TemplateRef<any>;\n\n  //region Inputs\n  /**\n   * Table title\n   */\n  @Input() title = '';\n  /**\n   * An array of objects to display\n   */\n  @Input() value: T[] = [];\n  /**\n   * An array of objects to represent dynamic columns\n   */\n  @Input() columns: any[];\n  /**\n   * Inline style of the component\n   */\n  @Input() style: any;\n  /**\n   * Style class of the component\n   */\n  @Input() styleClass: string;\n  /**\n   * Inline style of the table\n   */\n  @Input() tableStyle: Record<string, string>;\n  /**\n   * Style class of the table\n   */\n  @Input() tableStyleClass: string;\n  /**\n   * Whether the cell widths scale according to their content or not\n   */\n  @Input() autoLayout: boolean;\n  /**\n   * Defines if data is loaded and interacted with in lazy manner\n   */\n  @Input() lazy = false;\n  /**\n   * Whether to call lazy loading on initialization\n   */\n  @Input() lazyLoadOnInit = true;\n  /**\n   * When specified as true, enables the pagination\n   */\n  @Input() paginator: boolean;\n  /**\n   * Number of rows to display per page\n   */\n  @Input() rows = 10;\n  /**\n   * Index of the first row to be displayed\n   */\n  @Input() first = 0;\n  /**\n   * Number of total records, defaults to length of value when not defined\n   */\n  @Input() pageLinks = 5;\n  /**\n   * Number of page links to display in paginator\n   */\n  @Input() rowsPerPageOptions: any[];\n  /**\n   * Whether to show it even there is only one page\n   */\n  @Input() alwaysShowPaginator = true;\n  /**\n   * Position of the paginator, options are \"top\",\"bottom\" or \"both\"\n   */\n  @Input() paginatorPosition: 'top' | 'bottom' | 'both' = 'bottom';\n  /**\n   * Target element to attach the paginator dropdown overlay,\n   * valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)\n   */\n  @Input() paginatorDropdownAppendTo: any;\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate = '{currentPage} of {totalPages}';\n  /**\n   * Whether to display current page report\n   */\n  @Input() showCurrentPageReport: boolean;\n  /**\n   * Whether to display a dropdown to navigate to any page\n   */\n  @Input() showJumpToPageDropdown: boolean;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Whether to show page links\n   */\n  @Input() showPageLinks = true;\n  /**\n   * Context menu selection\n   */\n  @Input() contextMenuSelection: any;\n  /**\n   * Context menu selection mode\n   */\n  @Input() contextMenuSelectionMode: 'separate' | 'joint' = 'separate';\n  /**\n   * Sort order to use when an unsorted column gets sorted by user interaction\n   */\n  @Input() defaultSortOrder = 1;\n  /**\n   * Defines whether sorting works on single column or on multiple columns\n   */\n  @Input() sortMode: 'single' | 'multiple' = 'single';\n  /**\n   * When true, resets paginator to first page after sorting\n   */\n  @Input() resetPageOnSort = true;\n  /**\n   * Whether to use the default sorting or a custom one using sortFunction\n   */\n  @Input() customSort: boolean;\n  /**\n   * Specifies the selection mode, valid values are \"single\" and \"multiple\"\n   */\n  @Input() selectionMode: 'single' | 'multiple';\n  /**\n   * A property to uniquely identify a record in data\n   */\n  @Input() dataKey: string;\n  /**\n   * Defines whether metaKey is should be considered for the selection.\n   * On touch enabled devices, metaKeySelection is turned off automatically\n   */\n  @Input() metaKeySelection: boolean;\n  /**\n   * Algorithm to define if a row is selected,\n   * valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields\n   */\n  @Input() compareSelectionBy: 'deepEquals' | 'equals' = 'deepEquals';\n  /**\n   * Adds hover effect to rows without the need for selectionMode\n   */\n  @Input() rowHover: boolean;\n  /**\n   * Displays a loader to indicate data load is in progress\n   */\n  @Input() loading: boolean;\n  /**\n   * The icon to show while indicating data load is in progress\n   */\n  @Input() loadingIcon = 'pi pi-spinner';\n  /**\n   * Whether to show the loading mask when loading property is true\n   */\n  @Input() showLoader = true;\n  /**\n   * When specifies, enables horizontal and/or vertical scrolling\n   */\n  @Input() scrollable: boolean;\n  /**\n   * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size\n   */\n  @Input() scrollHeight: string;\n  /**\n   * Whether the data should be loaded on demand during scroll\n   */\n  @Input() virtualScroll: boolean;\n  /**\n   * Height of a row to use in calculations of virtual scrolling\n   */\n  @Input() virtualRowHeight = 32;\n  /**\n   * Minimum amount of content buffer (in pixels) that the viewport must render\n   */\n  @Input() minBufferPx: number;\n  /**\n   * Configures how much buffer space to render back up to when it detects that more buffer is required\n   */\n  @Input() maxBufferPx: number;\n  /**\n   * Width of the frozen columns container\n   */\n  @Input() frozenWidth: string;\n  /**\n   * An array of objects to represent dynamic columns that are frozen\n   */\n  @Input() frozenColumns: any[];\n  /**\n   * When enabled, columns can be resized using drag and drop\n   */\n  @Input() resizableColumns: boolean;\n  /**\n   * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"\n   */\n  @Input() columnResizeMode: 'fit' | 'expand' = 'fit';\n  /**\n   * When enabled, columns can be reordered using drag and drop\n   */\n  @Input() reorderableColumns: boolean;\n  /**\n   * Local ng-template varilable of a ContextMenu\n   */\n  @Input() contextMenu: any;\n  /**\n   * An array of fields as string to use in global filtering\n   */\n  @Input() globalFilterFields: string[];\n  /**\n   * Delay in milliseconds before filtering the data\n   */\n  @Input() filterDelay = 300;\n  /**\n   * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n   */\n  @Input() filterMode: 'lenient' | 'strict' = 'lenient';\n  /**\n   * Locale to use in filtering. The default locale is the host environment's current locale.\n   */\n  @Input() filterLocale: string;\n  /**\n   * Number of total records, defaults to length of value when not defined\n   */\n  @Input() totalRecords: number;\n  /**\n   * Name of the field to sort data by default\n   */\n  @Input() sortField: string;\n  /**\n   * Order to sort when default sorting is enabled\n   */\n  @Input() sortOrder: number;\n  /**\n   * An array of SortMeta objects to sort the data by default in multiple sort mode\n   */\n  @Input() multiSortMeta: SortMeta[];\n  /**\n   * Selected row in single mode or an array of values in multiple mode\n   */\n  @Input() selection: any;\n  /**\n   * When true turns on striped display mode\n   */\n  @Input() stripedMode = false;\n  //endregion\n\n  //region Outputs\n  /**\n   * Callback to invoke when data is filtered\n   */\n  @Output() onFilter = new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>();\n  /**\n   * Callback to invoke when pagination occurs\n   */\n  @Output() page = new EventEmitter<{ first: number; rows: number }>();\n  /**\n   * Callback to invoke when a column gets sorted\n   */\n  @Output() onSort = new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>();\n\n  /**\n   * Callback to invoke when paging, sorting or filtering happens in lazy mode\n   */\n  @Output() lazyLoad = new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>();\n\n  /**\n   * A function to implement custom sorting\n   */\n  @Output() sortFunction = new EventEmitter<TableSortEvent>();\n  /**\n   * Callback to invoke when a node is selected with right click\n   */\n  @Output() contextMenuSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a column is resized\n   */\n  @Output() colResize = new EventEmitter<{ element: unknown; delta: unknown }>();\n\n  /**\n   * Callback to invoke when a column is reordered\n   */\n  @Output() colReorder = new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>();\n  /**\n   * Callback to invoke when a cell switches to edit mode.\n   */\n  @Output() editInit = new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>();\n  /**\n   * Callback to invoke when cell edit is completed\n   */\n  @Output() editComplete = new EventEmitter<{ column: unknown; data: unknown }>();\n  /**\n   * Callback to invoke when cell edit is cancelled with escape key\n   */\n  @Output() editCancel = new EventEmitter<{ column: unknown; data: unknown }>();\n  /**\n   * Callback to invoke when state of header checkbox changes\n   */\n  @Output() headerCheckboxToggle = new EventEmitter<{ originalEvent: Event; checked: boolean }>();\n  /**\n   * Callback to invoke when selection is changed\n   */\n  @Output() selectionChange = new EventEmitter<unknown>();\n  //endregion\n\n  private initialData: T[];\n  private _activeElement: T;\n\n  protected abstract getContentTemplate(): QueryList<BaseTableTemplateDirective>;\n  protected abstract getTable(): any;\n  protected abstract initTemplateByType(item: BaseTableTemplateDirective);\n\n  ngOnChanges(changes): void {\n    if (changes.value && changes.value.firstChange) {\n      this.initialData = [...changes.value.currentValue];\n    }\n\n    this.checkUpdateStyleClasses(changes);\n  }\n\n  ngAfterContentInit(): void {\n    this.getContentTemplate().forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n        default:\n          this.initTemplateByType(item);\n      }\n    });\n  }\n\n  public setValue(value: T[]): void {\n    this.value = value;\n  }\n\n  public resetScrollTop(): void {\n    this.getTable().resetScrollTop();\n  }\n\n  public scrollToVirtualIndex(index: number): void {\n    this.getTable().scrollToVirtualIndex(index);\n  }\n\n  public scrollTo(options: any): void {\n    this.getTable().scrollTo(options);\n  }\n\n  public resetSort(): void {\n    const table = this.getTable();\n\n    table._sortField = null;\n    table._sortOrder = 0;\n    table._multiSortMeta = null;\n    table.tableService.onSort(null);\n\n    if (this.lazy) {\n      table.onLazyLoad.emit(table.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = table._value ? table._value.length : 0;\n      this.setValue([...this.initialData]);\n    }\n\n    this.onSort.emit(null);\n  }\n\n  public filter(value: any, field: string, matchMode: string): void {\n    this.getTable().filter(value, field, matchMode);\n  }\n\n  public filterGlobal(value, matchMode): void {\n    return this.getTable().filterGlobal(value, matchMode);\n  }\n\n  public isSelected(rowData): boolean {\n    return this.getTable().isSelected(rowData);\n  }\n\n  protected updateStyleClasses(): void {\n    const classes = ['p-datatable-gridlines'];\n\n    if (this.paginator) {\n      classes.push('zyfra-table_paginator');\n    }\n\n    if (this.stripedMode) {\n      classes.push('zyfra-table_striped');\n    }\n\n    classes.push(this.styleClass);\n\n    this.styleClasses = classes.join(' ');\n  }\n\n  protected checkUpdateStyleClasses(changes: SimpleChanges): void {\n    if (changes.styleClass || changes.paginator || changes.stripedMode) {\n      this.updateStyleClasses();\n    }\n  }\n\n  set activeElement(activeElement) {\n    if (this.activeElement === activeElement) {\n      return;\n    }\n\n    this._activeElement = activeElement;\n    this.activeElementChange.emit(this.activeElement);\n  }\n\n  get activeElement(): T {\n    return this._activeElement;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\""
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]"
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\""
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any"
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any"
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\""
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string"
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string"
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number"
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string"
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\""
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number"
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]"
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string"
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]"
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean"
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string"
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number"
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean"
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number"
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]"
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean"
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any"
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\""
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean"
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean"
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean"
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean"
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number"
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]"
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string"
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean"
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean"
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean"
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean"
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean"
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string"
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number"
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>"
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number"
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]"
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter<T>"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter"
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter"
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter"
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter"
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter"
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter"
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter"
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter"
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter"
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 343,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 483,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 455,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 459,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ]
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 346,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ]
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 347,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 463,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 357,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 425,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 421,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 467,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "accessors": {
                "activeElement": {
                    "name": "activeElement",
                    "setSignature": {
                        "name": "activeElement",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "activeElement",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 489,
                        "jsdoctags": [
                            {
                                "name": "activeElement",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeElement",
                        "type": "",
                        "returnType": "T",
                        "line": 498
                    }
                }
            }
        },
        {
            "name": "ZyfraCancelEditableRowDirective",
            "id": "directive-ZyfraCancelEditableRowDirective-71cd51b19c1d5afff8372e03301c38e9",
            "file": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { CancelEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraCancelEditableRow]'\n})\nexport class ZyfraCancelEditableRowDirective extends CancelEditableRow {}\n",
            "selector": "[zyfraCancelEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraDropdownTemplateDirective",
            "id": "directive-ZyfraDropdownTemplateDirective-5c9410dce8b5b2ec7a30324a86954dcc",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\ntype DropdownTemplateType = 'item' | 'group' | 'selectedItem' | 'header' | 'empty' | 'emptyfilter' | 'footer';\n\n@Directive({\n  selector: '[zyfraDropdownTemplate]',\n})\nexport class ZyfraDropdownTemplateDirective {\n  @Input() zyfraDropdownTemplate: DropdownTemplateType;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n\n  get template(): TemplateRef<any> {\n    return this.templateRef;\n  }\n\n  public getType(): DropdownTemplateType {\n    return this.zyfraDropdownTemplate;\n  }\n}\n",
            "selector": "[zyfraDropdownTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraDropdownTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "DropdownTemplateType"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "DropdownTemplateType",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "template": {
                    "name": "template",
                    "getSignature": {
                        "name": "template",
                        "type": "",
                        "returnType": "TemplateRef<any>",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "ZyfraEditableColumnDirective",
            "id": "directive-ZyfraEditableColumnDirective-b5cf3d315e8e37c44dfc0824566ff674",
            "file": "libs/components/src/lib/table/directives/editable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\nimport { EditableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraEditableColumn]',\n  providers: [{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }]\n})\nexport class ZyfraEditableColumnDirective extends EditableColumn {\n  public override onClick(event: MouseEvent): void {\n    // doing nothing, redefining parent class method\n  }\n\n  @HostListener('dblclick', ['$event'])\n  public onDblClick(event: MouseEvent): void {\n    super.onClick(event);\n  }\n}\n",
            "selector": "[zyfraEditableColumn]",
            "providers": [
                {
                    "name": "{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dblclick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDblClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dblclick', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraEditableRowDirective",
            "id": "directive-ZyfraEditableRowDirective-c75efebbffa486b8a1549e5df6639a88",
            "file": "libs/components/src/lib/table/directives/editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { EditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraEditableRow]',\n  providers: [{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }]\n})\nexport class ZyfraEditableRowDirective extends EditableRow {\n  @Input('zyfraEditableRow') override data: any;\n  @Input('zyfraEditableRowDisabled') override pEditableRowDisabled: boolean;\n}\n",
            "selector": "[zyfraEditableRow]",
            "providers": [
                {
                    "name": "{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }",
                    "type": "directive"
                }
            ],
            "inputsClass": [
                {
                    "name": "zyfraEditableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "zyfraEditableRowDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraFrozenColumnDirective",
            "id": "directive-ZyfraFrozenColumnDirective-d2603186c956f8524cc63eed167bb755",
            "file": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { FrozenColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraFrozenColumn]'\n})\nexport class ZyfraFrozenColumnDirective extends FrozenColumn {}\n",
            "selector": "[zyfraFrozenColumn]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraInitEditableRowDirective",
            "id": "directive-ZyfraInitEditableRowDirective-248811e1c9696973f26574dc265a66e8",
            "file": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { InitEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraInitEditableRow]'\n})\nexport class ZyfraInitEditableRowDirective extends InitEditableRow {}\n",
            "selector": "[zyfraInitEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraNavMenuGroupDirective",
            "id": "directive-ZyfraNavMenuGroupDirective-718853d33f9d28e5c4c8ba46d826fc98",
            "file": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ZyfraMenuItem } from '../model/zyfra-menu-item.interface';\n@Directive({\n  selector: '[zyfraNavMenuGroup]'\n})\nexport class ZyfraNavMenuGroupDirective {\n  @Input() items: ZyfraMenuItem[] = [];\n  @Input() header: string;\n}\n",
            "selector": "[zyfraNavMenuGroup]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "ZyfraMenuItem[]"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableColumnDirective",
            "id": "directive-ZyfraReordableColumnDirective-f69ab62fa3f1b21b016ce24f93235548",
            "file": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { ReorderableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableColumn]',\n})\nexport class ZyfraReordableColumnDirective extends ReorderableColumn {\n  @Input('zyfraReordableColumnDisabled') override pReorderableColumnDisabled: boolean;\n\n  @HostBinding('attr.preorderablecolumn') reorderableColumnAttribute = true;\n}\n",
            "selector": "[zyfraReordableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.preorderablecolumn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "reorderableColumnAttribute",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.preorderablecolumn'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableRowDirective",
            "id": "directive-ZyfraReordableRowDirective-da9c8ba399008a7ec37248476e0dd3b1",
            "file": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ReorderableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableRow]'\n})\nexport class ZyfraReordableRowDirective extends ReorderableRow {\n  @Input('zyfraReordableRow') override index: number;\n}\n",
            "selector": "[zyfraReordableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraReordableRowHandlerDirective",
            "id": "directive-ZyfraReordableRowHandlerDirective-26f4079cc204e2725aae4e0cc7bc9231",
            "file": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { ReorderableRowHandle } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraReordableRowHandler]'\n})\nexport class ZyfraReordableRowHandlerDirective extends ReorderableRowHandle {\n  @Input('zyfraReordableRowHandler') override index: number;\n}\n",
            "selector": "[zyfraReordableRowHandler]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraReordableRowHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraResizableColumnDirective",
            "id": "directive-ZyfraResizableColumnDirective-b56e8c3e883ec33df639fb45f4d54253",
            "file": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ResizableColumn } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraResizableColumn]'\n})\nexport class ZyfraResizableColumnDirective extends ResizableColumn {}\n",
            "selector": "[zyfraResizableColumn]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraRowBaseDirective",
            "id": "directive-ZyfraRowBaseDirective-debd822e559c27a9864e14870347f84b",
            "file": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, HostListener, Input } from '@angular/core';\nimport { ZyfraBaseTableComponent } from '../zyfra-base-table.directive';\n\n@Directive()\nexport abstract class ZyfraRowBaseDirective<T> {\n  @Input('zyfraRow') data: T;\n  @Input('zyfraRowStatus') status: 'primary' | 'error' | 'warning' | 'info' = 'primary';\n\n  protected constructor(private readonly targetTable: ZyfraBaseTableComponent<T>) {}\n\n  @HostBinding('class')\n  get rowStatusClass(): string {\n    return `row_status-${this.status}`;\n  }\n\n  @HostBinding('class.zyfra-active-element')\n  get isActiveElement(): boolean {\n    return this.data === this.targetTable.activeElement;\n  }\n\n  @HostListener('click')\n  public onRowClick(): void {\n    this.targetTable.activeElement = this.data;\n  }\n}\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 6,
                    "type": "T"
                },
                {
                    "name": "zyfraRowStatus",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "\"primary\" | \"error\" | \"warning\" | \"info\""
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "class.zyfra-active-element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRowClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "targetTable",
                        "type": "ZyfraBaseTableComponent<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "modifierKind": [
                    122
                ],
                "jsdoctags": [
                    {
                        "name": "targetTable",
                        "type": "ZyfraBaseTableComponent<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "rowStatusClass": {
                    "name": "rowStatusClass",
                    "getSignature": {
                        "name": "rowStatusClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 12
                    }
                },
                "isActiveElement": {
                    "name": "isActiveElement",
                    "getSignature": {
                        "name": "isActiveElement",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 17
                    }
                }
            }
        },
        {
            "name": "ZyfraRowDirective",
            "id": "directive-ZyfraRowDirective-0cc05a6ffb3e1d3667a36efb49207adc",
            "file": "libs/components/src/lib/table/directives/row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ZyfraRowBaseDirective } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n@Directive({\n  selector: '[zyfraRow]',\n})\nexport class ZyfraRowDirective extends ZyfraRowBaseDirective<unknown> {\n  constructor(private readonly table: ZyfraTableComponent) {\n    super(table);\n  }\n}\n",
            "selector": "[zyfraRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraRowGroupHeaderDirective",
            "id": "directive-ZyfraRowGroupHeaderDirective-841799675a0b8c97091bc0c75d744dd8",
            "file": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { RowGroupHeader } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraRowGroupHeader]'\n})\nexport class ZyfraRowGroupHeaderDirective extends RowGroupHeader {}\n",
            "selector": "[zyfraRowGroupHeader]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraSaveEditableRowDirective",
            "id": "directive-ZyfraSaveEditableRowDirective-4f1a0be52f62f94903735338e9f25b47",
            "file": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { SaveEditableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraSaveEditableRow]'\n})\nexport class ZyfraSaveEditableRowDirective extends SaveEditableRow {}\n",
            "selector": "[zyfraSaveEditableRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraSelectableRowDirective",
            "id": "directive-ZyfraSelectableRowDirective-05f3ba9959a5822fa7a6b8553a2181f6",
            "file": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { SelectableRow } from 'primeng/table';\n\n@Directive({\n  selector: '[zyfraSelectableRow]',\n})\nexport class ZyfraSelectableRowDirective extends SelectableRow {\n  @Input('zyfraSelectableRow') override data: any;\n  @Input('zyfraSelectableRowIndex') override index: number;\n\n  @HostBinding('class.p-highlight')\n  get isSelected(): boolean {\n    return this.dt.isSelected(this.data);\n  }\n}\n",
            "selector": "[zyfraSelectableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraSelectableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraSelectableRowIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.p-highlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "accessors": {
                "isSelected": {
                    "name": "isSelected",
                    "getSignature": {
                        "name": "isSelected",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "ZyfraSortableColumnDirective",
            "id": "directive-ZyfraSortableColumnDirective-3b38eefc28e309c1f95c18f3410bd146",
            "file": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { SortableColumn } from 'primeng/table';\nimport { onSortColumnClick } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n@Directive({\n  selector: '[zyfraSortableColumn]',\n})\nexport class ZyfraSortableColumnDirective extends SortableColumn {\n  @Input('zyfraSortableColumn') override field: string;\n  @Input('zyfraSortableColumnDisabled') override pSortableColumnDisabled: boolean;\n\n  constructor(private zyfraTable: ZyfraTableComponent) {\n    super(zyfraTable.table);\n  }\n\n  public override onClick(event: MouseEvent): void {\n    onSortColumnClick.call(this, event);\n  }\n\n  private canClick(event: MouseEvent): boolean {\n    return this.isEnabled() && !this.isFilterElement(event.target as HTMLElement);\n  }\n\n  private shouldReset(): boolean {\n    return (\n      (this.zyfraTable.defaultSortOrder === 1 && this.sortOrder === 'descending') ||\n      (this.zyfraTable.defaultSortOrder === -1 && this.sortOrder === 'ascending')\n    );\n  }\n\n  private emitSort(event: { originalEvent: MouseEvent }): void {\n    this.dt.sort({\n      originalEvent: event,\n      field: this.field,\n    });\n  }\n}\n",
            "selector": "[zyfraSortableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraSortableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "zyfraSortableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "canClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldReset",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraSplitterTemplateDirective",
            "id": "directive-ZyfraSplitterTemplateDirective-5bd86f6200c6f62cf387f3733632a0f2",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraSplitterTemplate]',\n})\nexport class ZyfraSplitterTemplateDirective {\n  @Input() type: string;\n\n  constructor(public template: TemplateRef<any>) {}\n}\n",
            "selector": "[zyfraSplitterTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "template",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTableTemplateDirective",
            "id": "directive-ZyfraTableTemplateDirective-c0d2213e95ac08d75d1d0876e1df1d74",
            "file": "libs/components/src/lib/table/directives/table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\n\n@Directive({\n  selector: '[zyfraTableTemplate]'\n})\nexport class ZyfraTableTemplateDirective extends BaseTableTemplateDirective{\n  constructor(templateRef: TemplateRef<any>) {\n    super(templateRef);\n  }\n}\n",
            "selector": "[zyfraTableTemplate]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTemplateDirective",
            "id": "directive-ZyfraTemplateDirective-7cbec8aeb993dd1865024e088d986b16",
            "file": "libs/components/src/lib/@core/shared/zyfra-template.directives.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[zyfraTemplate]',\n})\nexport class ZyfraTemplateDirective {\n  @Input() zyfraTemplate: string;\n\n  constructor(public templateRef: TemplateRef<unknown>) {}\n}\n",
            "selector": "[zyfraTemplate]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTooltipDirective",
            "id": "directive-ZyfraTooltipDirective-b0c0db97ea2022f3bdbbb7fac07945e5",
            "file": "libs/components/src/lib/tooltip/zyfra-tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Inject,\n  ComponentFactoryResolver,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  ComponentRef,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges,\n  AfterViewInit,\n  TemplateRef,\n  HostListener,\n  Renderer2, NgZone,\n} from '@angular/core';\nimport { ZyfraTooltipComponent } from './zyfra-tooltip.component';\nimport { ZyfraTooltipOverlayManager } from './zyfra-tooltip-overlay-manager.service';\n\n@Directive({\n  selector: '[zyfraTooltip]',\n  exportAs: 'zyfraTooltip',\n})\nexport class ZyfraTooltipDirective implements OnDestroy, OnChanges, AfterViewInit {\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    @Inject(ComponentFactoryResolver)\n    private resolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private zyfraTooltipOverlayManager: ZyfraTooltipOverlayManager,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n  ) {}\n\n  @Input() zyfraTooltip: string | TemplateRef<any> = null;\n  @Input() zyfraTooltipContext: Record<string, unknown>;\n  @Input() zyfraTooltipShow = false;\n  @Input() zyfraTooltipDelay = 400;\n  @Input() zyfraTooltipColor: 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\n  @Input() zyfraTooltipClass: string | string[] = '';\n  @Input() zyfraTooltipPosition: 'left' | 'right' | 'above' | 'below' = 'right';\n  @Input() zyfraTooltipOverflowText: HTMLElement;\n\n  /**\n   * MARGIN = 2 + 4\n   * 2 - базовый отступ согласно https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\n   * 4 - ширина указателя тултипа\n   */\n  private readonly MARGIN = 6;\n  private tooltipStyle: string;\n  private mutationObserver: MutationObserver;\n  private componentFactory = this.resolver.resolveComponentFactory(ZyfraTooltipComponent);\n  private tooltipCmpRef: ComponentRef<ZyfraTooltipComponent> = null;\n  private tooltipElement: HTMLElement = null;\n  private coordinates = { left: 0, top: 0 };\n  private tooltipTimerId = null;\n\n  @HostListener('click', ['$event'])\n  public clickEvent(event: MouseEvent): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  public mouseenter(event: MouseEvent): void {\n    if (!this.zyfraTooltipShow) {\n      this.show();\n    }\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  public mouseleave(event: MouseEvent): void {\n    if (!this.tooltipCmpRef) {\n      clearTimeout(this.tooltipTimerId);\n      this.zyfraTooltipShow = false;\n    } else {\n      this.hide();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.zyfraTooltipShow) {\n      this.show();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.tooltipCmpRef) {\n      let wereChanges = false;\n\n      if (changes.zyfraTooltipPosition) {\n        const change = changes.zyfraTooltipPosition;\n\n        if (!change.firstChange) {\n          this._setTooltipClasses();\n          wereChanges = true;\n        }\n      }\n\n      if (changes.zyfraTooltip) {\n        const change = changes.zyfraTooltip;\n        if (!change.firstChange) {\n          this.tooltipCmpRef.instance.options.content = change.currentValue;\n          wereChanges = true;\n        }\n      }\n\n      if (wereChanges) {\n        this.tooltipCmpRef.changeDetectorRef.detectChanges();\n        this._setOptions();\n      }\n    }\n  }\n\n  private _setTooltipClasses(): void {\n    this.tooltipCmpRef.instance.hostClasses = `\n      zyfra-tooltip\n      ${this.zyfraTooltipClass}\n      ${this.tooltipStyle}\n      zyfra-tooltip_color_${this.zyfraTooltipColor}\n      zyfra-tooltip_position_${this.zyfraTooltipPosition}\n    `;\n  }\n\n  ngOnDestroy(): void {\n    if (this.tooltipCmpRef) {\n      this.tooltipCmpRef.destroy();\n      this.tooltipCmpRef = null;\n    }\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    this.hide();\n  }\n\n  public toggle(): void {\n    if (this.zyfraTooltipShow) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  public tooltipForOverflowText(): boolean {\n    return this.zyfraTooltipOverflowText ? this.zyfraTooltipOverflowText.offsetWidth < this.zyfraTooltipOverflowText.scrollWidth : true;\n  }\n\n  public show(): void {\n    if (this.zyfraTooltip && this.tooltipForOverflowText()) {\n      this._showTooltip();\n      this.zyfraTooltipShow = true;\n    }\n  }\n\n  public hide(): void {\n    clearTimeout(this.tooltipTimerId);\n    if (this.tooltipCmpRef) {\n      this.renderer.setStyle(this.tooltipCmpRef.location.nativeElement, 'animation', 'tooltipOut 0.3s');\n    }\n    this.zyfraTooltipShow = false;\n  }\n\n  private _setOptions(): void {\n    const elementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const tooltipRect = this.tooltipElement.getBoundingClientRect();\n\n    this._setPosition(elementRect, tooltipRect);\n    this._setCoordinatesLeftAndTop(elementRect, tooltipRect);\n\n    this.tooltipCmpRef.instance.options.left = this.coordinates.left;\n    this.tooltipCmpRef.instance.options.top = this.coordinates.top;\n    this._setTooltipClasses();\n    this.tooltipCmpRef.changeDetectorRef.detectChanges();\n  }\n\n  private _setPosition(element: DOMRect, tooltip: DOMRect): void {\n    switch (this.zyfraTooltipPosition) {\n      case 'left':\n        if (element.left < tooltip.width + this.MARGIN) {\n          this.zyfraTooltipPosition = 'right';\n        }\n        break;\n      case 'right':\n        if (window.innerWidth - element.right < tooltip.width + this.MARGIN) {\n          this.zyfraTooltipPosition = 'left';\n        }\n        break;\n      case 'above':\n        if (element.top < tooltip.height + this.MARGIN) {\n          this.zyfraTooltipPosition = 'below';\n        }\n        break;\n      case 'below':\n        if (window.innerHeight - (element.top + element.height) < tooltip.height + this.MARGIN) {\n          this.zyfraTooltipPosition = 'above';\n        }\n        break;\n    }\n  }\n\n  private _setCoordinatesLeftAndTop(element: DOMRect, tooltip: DOMRect): void {\n    switch (this.zyfraTooltipPosition) {\n      case 'right': {\n        this.coordinates.top = this.getTopPositionForLeftAndRight(element, tooltip);\n        this.coordinates.left = element.right + this.MARGIN;\n        break;\n      }\n      case 'left': {\n        this.coordinates.top = this.getTopPositionForLeftAndRight(element, tooltip);\n        this.coordinates.left = element.left - tooltip.width - this.MARGIN;\n        break;\n      }\n      case 'above': {\n        this.coordinates.left = this.getLeftPositionForAboveAndBelow(element, tooltip);\n        this.coordinates.top = element.top - tooltip.height - this.MARGIN;\n        break;\n      }\n      case 'below': {\n        this.coordinates.left = this.getLeftPositionForAboveAndBelow(element, tooltip);\n        this.coordinates.top = element.bottom + this.MARGIN;\n        break;\n      }\n      default: {\n        this.coordinates.left = element.right + this.MARGIN;\n        this.coordinates.top = element.top;\n        break;\n      }\n    }\n  }\n\n  private getTopPositionForLeftAndRight(element: DOMRect, tooltip: DOMRect): number {\n    return (tooltip.height <= element.height)\n      ? element.top\n      : element.top - (tooltip.height - element.height) / 2;\n  }\n\n  private getLeftPositionForAboveAndBelow(element: DOMRect, tooltip: DOMRect): number {\n    if (element.width >= tooltip.width) {\n      return element.left + (element.width - tooltip.width) / 2;\n    } else if (element.left < tooltip.width / 2) {\n      return element.left;\n    } else if (element.left + tooltip.width >= window.innerWidth) {\n      return element.left - tooltip.width / 2;\n    } else {\n      return element.left - (tooltip.width - element.width) / 2;\n    }\n  }\n\n  private _showTooltip(): void {\n    this.tooltipTimerId = setTimeout(() => {\n      this.zyfraTooltipOverlayManager.create();\n\n      this.tooltipCmpRef = this.viewContainerRef.createComponent(this.componentFactory);\n      this.tooltipStyle = '';\n      this.tooltipCmpRef.instance.options = {\n        left: -1000,\n        top: -1000,\n        content: this.zyfraTooltip,\n        context: this.zyfraTooltipContext,\n      };\n      this._setTooltipClasses();\n      this.tooltipElement = this.tooltipCmpRef.location.nativeElement;\n      this.zyfraTooltipOverlayManager.append(this.tooltipElement);\n\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\n            mutations.forEach((mutation: MutationRecord) => {\n              if (mutation.type === 'childList') {\n                this._setOptions();\n              }\n            });\n          });\n\n          this.mutationObserver.observe(this.tooltipElement, {\n            childList: true,\n          });\n\n          this.tooltipCmpRef.instance.close.subscribe(() => {\n            this.tooltipCmpRef.destroy();\n            this.tooltipCmpRef = null;\n\n            if (this.mutationObserver) {\n              this.mutationObserver.disconnect();\n            }\n          });\n          this._setOptions();\n          this.tooltipCmpRef.changeDetectorRef.detectChanges();\n        });\n      });\n    }, this.zyfraTooltipDelay);\n  }\n}\n",
            "selector": "[zyfraTooltip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTooltip",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | TemplateRef<any>"
                },
                {
                    "name": "zyfraTooltipClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | string[]"
                },
                {
                    "name": "zyfraTooltipColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\""
                },
                {
                    "name": "zyfraTooltipContext",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Record<string | >"
                },
                {
                    "name": "zyfraTooltipDelay",
                    "defaultValue": "400",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number"
                },
                {
                    "name": "zyfraTooltipOverflowText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "HTMLElement"
                },
                {
                    "name": "zyfraTooltipPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\""
                },
                {
                    "name": "zyfraTooltipShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71
                }
            ],
            "propertiesClass": [
                {
                    "name": "componentFactory",
                    "defaultValue": "this.resolver.resolveComponentFactory(ZyfraTooltipComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coordinates",
                    "defaultValue": "{ left: 0, top: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "MARGIN",
                    "defaultValue": "6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>MARGIN = 2 + 4\n2 - базовый отступ согласно <a href=\"https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\">https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903</a>\n4 - ширина указателя тултипа</p>\n",
                    "line": 49,
                    "rawdescription": "\n\nMARGIN = 2 + 4\n2 - базовый отступ согласно https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\n4 - ширина указателя тултипа\n",
                    "modifierKind": [
                        121,
                        143
                    ]
                },
                {
                    "name": "mutationObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tooltipCmpRef",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<ZyfraTooltipComponent>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tooltipElement",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tooltipStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tooltipTimerId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_setCoordinatesLeftAndTop",
                    "args": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setPosition",
                    "args": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setTooltipClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_showTooltip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 248,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clickEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLeftPositionForAboveAndBelow",
                    "args": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTopPositionForLeftAndRight",
                    "args": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tooltip",
                            "type": "DOMRect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseenter",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mouseleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tooltipForOverflowText",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "implements": [
                "OnDestroy",
                "OnChanges",
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zyfraTooltipOverlayManager",
                        "type": "ZyfraTooltipOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zyfraTooltipOverlayManager",
                        "type": "ZyfraTooltipOverlayManager",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableBaseRowDirective",
            "id": "directive-ZyfraTreeTableBaseRowDirective-0df7109e2f6ef84e1b1d64947f653d48",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-base-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from '@angular/core';\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\nimport { ZyfraRowBaseDirective } from '../../@core/base-table';\n\n@Directive({\n  selector: '[zyfraRow]',\n})\nexport class ZyfraTreeTableBaseRowDirective extends ZyfraRowBaseDirective<unknown> {\n  constructor(private readonly table: ZyfraTreeTableComponent) {\n    super(table);\n  }\n}\n",
            "selector": "[zyfraRow]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableEditableColumnDirective",
            "id": "directive-ZyfraTreeTableEditableColumnDirective-13f94a1c322d5d1b2a2d32c44bcf06bf",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener, Input } from '@angular/core';\nimport { TTEditableColumn } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTEditableColumn]',\n})\nexport class ZyfraTreeTableEditableColumnDirective extends TTEditableColumn {\n  @Input('zyfraTTEditableColumn') override data: any;\n  @Input('zyfraTTEditableColumnField') override field: any;\n  @Input('zyfraTTEditableColumnDisabled') override ttEditableColumnDisabled: boolean;\n\n  public override onClick(event: MouseEvent): void {\n    // doing nothing, redefining parent class method\n  }\n\n  @HostListener('dblclick', ['$event'])\n  public onDblClick(event: MouseEvent): void {\n    super.onClick(event);\n  }\n}\n",
            "selector": "[zyfraTTEditableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTEditableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraTTEditableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "zyfraTTEditableColumnField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dblclick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDblClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dblclick', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraTreeTableReorderableColumnDirective",
            "id": "directive-ZyfraTreeTableReorderableColumnDirective-b79228e3f223bed1688ed9cd79652c2d",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { TTReorderableColumn } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTReorderableColumn]',\n})\nexport class ZyfraTreeTableReorderableColumnDirective extends TTReorderableColumn {\n  @Input('zyfraTTReorderableColumnDisabled') override ttReorderableColumnDisabled: boolean;\n\n  @HostBinding('attr.ttreorderablecolumn') reorderableTTColumnAttribute = true;\n}\n",
            "selector": "[zyfraTTReorderableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTReorderableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "attr.ttreorderablecolumn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "reorderableTTColumnAttribute",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'attr.ttreorderablecolumn'"
                        }
                    ]
                }
            ],
            "methodsClass": []
        },
        {
            "name": "ZyfraTreeTableRowDirective",
            "id": "directive-ZyfraTreeTableRowDirective-228db554ae69572bf7bff44b9f7e087c",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { TTRow } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTRow]'\n})\nexport class ZyfraTreeTableRowDirective extends TTRow {\n  @Input('zyfraTTRow') override rowNode: any;\n}\n",
            "selector": "[zyfraTTRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ZyfraTreeTableSelectableRowDirective",
            "id": "directive-ZyfraTreeTableSelectableRowDirective-9a238304f70e3ddea3a756c7fe9d6b7e",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { TTSelectableRow } from 'primeng/treetable';\n\n@Directive({\n  selector: '[zyfraTTSelectableRow]',\n})\nexport class ZyfraTreeTableSelectableRowDirective extends TTSelectableRow {\n  @Input('zyfraTTSelectableRow') override rowNode: any;\n  @Input('zyfraTTSelectableRowDisabled') override ttSelectableRowDisabled: boolean;\n\n  public override onClick(event): void {\n    if (this.isEnabled()) {\n      this.tt.toggleNodeWithCheckbox({\n        rowNode: this.rowNode,\n        originalEvent: event,\n      });\n    }\n  }\n}\n",
            "selector": "[zyfraTTSelectableRow]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTSelectableRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any"
                },
                {
                    "name": "zyfraTTSelectableRowDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "ZyfraTreeTableSortableColumnDirective",
            "id": "directive-ZyfraTreeTableSortableColumnDirective-2609611d635464b55114900350400ca0",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input } from '@angular/core';\nimport { TTSortableColumn } from 'primeng/treetable';\nimport { onSortColumnClick } from '../../@core/base-table';\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\n\n@Directive({\n  selector: '[zyfraTTSortableColumn]',\n})\nexport class ZyfraTreeTableSortableColumnDirective extends TTSortableColumn {\n  @Input('zyfraTTSortableColumn') override field: string;\n  @Input('zyfraTTSortableColumnDisabled') override ttSortableColumnDisabled: boolean;\n\n  constructor(private zyfraTable: ZyfraTreeTableComponent) {\n    super(zyfraTable.table);\n  }\n\n  public override onClick(event: MouseEvent): void {\n    onSortColumnClick.call(this, event);\n  }\n\n  private canClick(): boolean {\n    return this.isEnabled();\n  }\n\n  private shouldReset(): boolean {\n    const table = this.zyfraTable.table;\n\n    return (\n      (table.defaultSortOrder === 1 && table.sortOrder === -1) ||\n      (table.defaultSortOrder === -1 && table.sortOrder === 1)\n    );\n  }\n\n  private emitSort(event: MouseEvent): void {\n    this.tt.sort({\n      originalEvent: event,\n      field: this.field,\n    });\n  }\n}\n",
            "selector": "[zyfraTTSortableColumn]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "zyfraTTSortableColumn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "zyfraTTSortableColumnDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "canClick",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "emitSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldReset",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "zyfraTable",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ZyfraTreeTableTemplateDirective",
            "id": "directive-ZyfraTreeTableTemplateDirective-13122a8bf121b9ff67d5ba3c5e1af57b",
            "file": "libs/components/src/lib/tree-table/directives/tree-table-template.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\n\n\n@Directive({\n  selector: '[zyfraTableTemplate]'\n})\nexport class ZyfraTreeTableTemplateDirective extends BaseTableTemplateDirective{\n  constructor(templateRef: TemplateRef<any>) {\n    super(templateRef);\n  }\n}\n",
            "selector": "[zyfraTableTemplate]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "CustomCalendarComponent",
            "id": "component-CustomCalendarComponent-ef7062ddcc0e9230f79f2154dd13a568",
            "file": "libs/components/src/lib/datepicker/calendar/story/custom-calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-custom-calendar",
            "styleUrls": [],
            "styles": [],
            "template": "<zyfra-calendar\n  [placeholder]=\"placeholder\"\n  [ngModel]=\"calendarModel\"\n  [showTime]=\"true\"\n  [showSeconds]=\"true\"\n  [label]=\"label\"\n>\n  <div buttons-right>\n    <button class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\n      <zyfra-dropdown\n        [options]=\"times\"\n        [ngModel]=\"timeModel\"\n        [disabled]=\"disabled\"\n        (ngModelChange)=\"setInputTime($event)\"\n        [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n        [styleClass]=\"'zyfra-datepicker-dropdown'\"\n        [dropdownIcon]=\"'zyfra-icon date-update'\"\n        [optionLabel]=\"'value'\"\n      >\n      </zyfra-dropdown>\n    </button>\n  </div>\n</zyfra-calendar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "any"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any"
                },
                {
                    "name": "selectedTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "times",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "ZyfraTime[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "calendarModel",
                    "defaultValue": "'12/22/2021 18:00:00'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTime",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getDate",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setInputTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This component only for example in storybook</p>\n",
            "rawdescription": "\n\nThis component only for example in storybook\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ZyfraTime } from '../../model/zyfra-time.model';\n\n/**\n * This component only for example in storybook\n */\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'zyfra-custom-calendar',\n  template: `\n    <zyfra-calendar\n      [placeholder]=\"placeholder\"\n      [ngModel]=\"calendarModel\"\n      [showTime]=\"true\"\n      [showSeconds]=\"true\"\n      [label]=\"label\"\n    >\n      <div buttons-right>\n        <button class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\n          <zyfra-dropdown\n            [options]=\"times\"\n            [ngModel]=\"timeModel\"\n            [disabled]=\"disabled\"\n            (ngModelChange)=\"setInputTime($event)\"\n            [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n            [styleClass]=\"'zyfra-datepicker-dropdown'\"\n            [dropdownIcon]=\"'zyfra-icon date-update'\"\n            [optionLabel]=\"'value'\"\n          >\n          </zyfra-dropdown>\n        </button>\n      </div>\n    </zyfra-calendar>\n  `,\n})\nexport class CustomCalendarComponent implements OnInit {\n  @Input() placeholder;\n  @Input() times: ZyfraTime[];\n  @Input() disabled;\n  @Input() label;\n  @Input() selectedTime: string;\n\n  public timeModel: ZyfraTime;\n\n  public calendarModel: string = '12/22/2021 18:00:00';\n\n  public setInputTime(time: ZyfraTime): void {\n    this.calendarModel = this.getDate() + ' ' + time.value;\n  }\n\n  ngOnInit(): void {\n    this.timeModel = this.times.find(t => t.value === this.selectedTime);\n    this.calendarModel = this.getDate() + ' ' + this.timeModel.value;\n  }\n\n  private getDate(): string {\n    return this.calendarModel.split(' ')[0];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExampleDynamicDialogComponent",
            "id": "component-ExampleDynamicDialogComponent-922f1abcf3b705857ecf671c04c91178",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  user component\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\n\n@Component({\n  selector: 'storybook-dynamic-dialog',\n  template: `\n  <zyfra-button (click)=\"open()\"\n                label=\"open dialog\"\n                icon=\"pi pi-check\"></zyfra-button>\n  `,\n  providers: [ZyfraDynamicDialogService]\n})\nclass ZyfraDynamicDialogComponent implements OnDestroy {\n\n  @Input() set data(data: unknown) {\n    this.options.data = data;\n  }\n  @Input() set header(header: string) {\n    this.options.header = header;\n  }\n  @Input() set footer(footer: string) {\n    this.options.footer = footer;\n  }\n  @Input() set width(width: string) {\n    this.options.width = width;\n  }\n  @Input() set height(height: string) {\n    this.options.height = height;\n  }\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\n    this.options.closeOnEscape = closeOnEscape;\n  }\n  @Input() set baseZIndex(baseZIndex: number) {\n    this.options.baseZIndex = baseZIndex;\n  }\n  @Input() set autoZIndex(autoZIndex: boolean) {\n    this.options.autoZIndex = autoZIndex;\n  }\n  @Input() set dismissableMask(dismissableMask: boolean) {\n    this.options.dismissableMask = dismissableMask;\n  }\n  @Input() set rtl(rtl: boolean) {\n    this.options.rtl = rtl;\n  }\n  @Input() set style(style: string) {\n    this.options.style = style;\n  }\n  @Input() set contentStyle(contentStyle: string) {\n    this.options.contentStyle = contentStyle;\n  }\n  @Input() set styleClass(styleClass: string) {\n    this.options.styleClass = styleClass;\n  }\n  @Input() set transitionOptions(transitionOptions: string) {\n    this.options.transitionOptions = transitionOptions;\n  }\n  @Input() set closable(closable: boolean) {\n    this.options.closable = closable;\n  }\n  @Input() set showHeader(showHeader: boolean) {\n    this.options.showHeader = showHeader;\n  }\n\n  public options: ZyfraDynamicDialogConfig = {};\n\n  private ref: ZyfraDynamicDialogRef;\n\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\n\n  public open(): void {\n    this.ref = this.dynamicDialogService.open(\n      ExampleDynamicDialogComponent, this.options\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.ref) {\n      this.ref.close();\n    }\n  }\n}\n\n@Component({\n  template: `\n  <div>\n    user component\n  </div>`\n})\nclass ExampleDynamicDialogComponent { }\n\nexport default {\n  title: 'Dialogs/DynamicDialog',\n  component: ZyfraDynamicDialogComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        ZyfraDynamicDialogComponent,\n        ExampleDynamicDialogComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        ZyfraButtonModule,\n        ZyfraDynamicDialogModule\n      ],\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n});\n\n\nexport const Simple = Template.bind({});\nSimple.args = {\n  data: 'Some data',\n  header: \"Header\",\n  footer: \"Footer\",\n  width: \"500px\",\n  height: \"200px\",\n  closeOnEscape: false,\n  baseZIndex: 0,\n  autoZIndex: false,\n  dismissableMask: false,\n  rtl: false,\n  style: '',\n  contentStyle: '',\n  styleClass: '',\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n  closable: true,\n  showHeader: true\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IconComponents",
            "id": "component-IconComponents-590c72481ad2eaac2c9729994c9e17ff",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    "
            ],
            "template": "<div *ngFor=\"let def of defs\">\n  <h4>{{ def.dir }}</h4>\n\n  <div class=\"icons\">\n    <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n      <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n      <div class=\"name\">{{ name }}</div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defs",
                    "defaultValue": "IconDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraIconComponent } from './zyfra-icon.component';\nimport { IconDefs } from './story/icon-definitions';\n\n//@ts-ignore\nimport doc from './zyfra-icon.component.story.doc.mdx';\n\n@Component({\n  template: `\n    <div *ngFor=\"let def of defs\">\n      <h4>{{ def.dir }}</h4>\n\n      <div class=\"icons\">\n        <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n          <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n          <div class=\"name\">{{ name }}</div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    `,\n  ],\n})\nclass IconComponents {\n  defs = IconDefs;\n}\n\nexport default {\n  title: 'Icons/IconComponent',\n  component: IconComponents,\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n      declarations: [ZyfraIconComponent],\n    }),\n  ],\n  parameters: {\n    docs: {\n      page: doc,\n    },\n  },\n} as Meta<ZyfraIconComponent>;\n\nconst Template: Story<IconComponents> = (args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n});\n\nexport const IconsSet = Template.bind({});\nIconsSet.args = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        font-family: Inter;\n      }\n\n      h4 {\n        text-transform: capitalize;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n      }\n    \n"
        },
        {
            "name": "Page1Component",
            "id": "component-Page1Component-d9c683fa9b55f087c900d913456d1be0",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 1",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\n    },\n  },\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page2Component",
            "id": "component-Page2Component-d9c683fa9b55f087c900d913456d1be0",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 2",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\n    },\n  },\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "Page3Component",
            "id": "component-Page3Component-d9c683fa9b55f087c900d913456d1be0",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "Страница 3",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\n    },\n  },\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "WrapperComponent",
            "id": "component-WrapperComponent-d9c683fa9b55f087c900d913456d1be0",
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTemplateDirective",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\nimport { action } from '@storybook/addon-actions';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\nimport { BadgeModule } from 'primeng/badge';\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@Component({ template: 'Страница 1' })\nclass Page1Component {}\n\n@Component({ template: 'Страница 2' })\nclass Page2Component {}\n\n@Component({ template: 'Страница 3' })\nclass Page3Component {}\n\n@Component({\n  selector: 'wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\n})\n\nclass WrapperComponent implements AfterViewInit, OnDestroy {\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\n  tmpl: TemplateRef<any>;\n\n  private destroyed$ = new Subject<void>();\n\n  constructor(private router: Router) { }\n\n  ngAfterViewInit(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.tmpl = this.template.templateRef);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n\nconst routes: Routes = [\n  { path: 'page1', component: Page1Component },\n  { path: 'page2', component: Page2Component },\n  { path: 'page3', component: Page3Component }\n];\n\nexport default {\n  title: 'Menu/NavMenu',\n  component: ZyfraNavMenuComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        Page1Component,\n        Page2Component,\n        Page3Component,\n        WrapperComponent\n      ],\n      imports: [\n        BrowserAnimationsModule,\n        ZyfraNavMenuModule,\n        ZyfraSplitterModule,\n        ZyfraSharedModule,\n        BadgeModule,\n        RouterModule.forRoot(routes, { useHash: true })\n      ],\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\n    },\n  },\n} as Meta<ZyfraNavMenuComponent>;\n\nconst actions = {\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n};\n\nconst BasicTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const Basic = BasicTemplate.bind({});\nBasic.args = {\n  model: [...basic],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const BasicWithIcons = BasicTemplate.bind({});\nBasicWithIcons.args = {\n  model: [...basicWithIcons],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const SubItems = BasicTemplate.bind({});\nSubItems.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  }\n};\n\nexport const EnlargedSize = BasicTemplate.bind({});\nEnlargedSize.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectedSize: 'enlarged'\n  },\n};\n\nconst ExtraItemTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\nExtraTemplates.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения'\n};\n\nexport const MultipleSelection = BasicTemplate.bind({});\nMultipleSelection.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox'\n  }\n};\n\nexport const Search = BasicTemplate.bind({});\nSearch.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  emptyMessage: '<Нет данных для отображения>',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const FolderMode = BasicTemplate.bind({});\nFolderMode.args = {\n  model: [...subItems],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true,\n    closeAll: true\n  }\n};\n\nexport const RubricatorMode = BasicTemplate.bind({});\nRubricatorMode.args = {\n  model: [...subItemsRubricator],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    rubricatorMode: true,\n    search: true\n  }\n};\n\nconst GroupPanelTemplate: Story = (args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n});\n\nexport const GroupPanels = GroupPanelTemplate.bind({});\nGroupPanels.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [ ...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\nSingleGroupPanel.args = {\n  header1: 'Групповая панель 1',\n  header2: 'Групповая панель 2',\n  header3: 'Групповая панель 3',\n  items1: [...subItems],\n  items2: [...basicWithIcons],\n  items3: [...basic],\n  menuTitle: 'Наименование приложения',\n  searchPlaceholder: 'Введите текст',\n  headerConfig: {\n    home: true\n  },\n  settingsConfig: {\n    selectionMode: 'checkbox',\n    singleGroup: true,\n  },\n  toolbarConfig: {\n    filesMode: true,\n    search: true\n  }\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "ZyfraAccordionComponent",
            "id": "component-ZyfraAccordionComponent-af81d128095b1acb9f95589396b699df",
            "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion, deps: [ZyfraAccordionComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion"
                }
            ],
            "selector": "zyfra-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collapseIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "collapse icon class",
                    "description": "<p>collapse icon class</p>\n",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "expandIcon",
                    "defaultValue": "'zyfra-icon chevrons-double-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "expand icon class",
                    "description": "<p>expand icon class</p>\n",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "allow multiple tabs be active at the same time.",
                    "description": "<p>allow multiple tabs be active at the same time.</p>\n",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "inline style",
                    "description": "<p>inline style</p>\n",
                    "line": 39,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "css class",
                    "description": "<p>css class</p>\n",
                    "line": 41,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter",
                    "description": "<p>EventEmitter</p>\n",
                    "line": 48,
                    "type": "EventEmitter<number | []>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on closing tab",
                    "description": "<p>EventEmitter on closing tab</p>\n",
                    "line": 50,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                },
                {
                    "name": "onOpen",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEventEmitter on opening tab",
                    "description": "<p>EventEmitter on opening tab</p>\n",
                    "line": 52,
                    "type": "EventEmitter<ZyfraAccordionOpenClose>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Accordion",
                    "optional": false,
                    "description": "<p>primeng Accordion component</p>\n",
                    "line": 55,
                    "rawdescription": "\nprimeng Accordion component",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Accordion, {static: true}"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraAccordionTabComponent>",
                    "optional": false,
                    "description": "<p>zyfra AccordionTab component</p>\n",
                    "line": 57,
                    "rawdescription": "\nzyfra AccordionTab component",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "name": "tabs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reInitTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { Accordion } from 'primeng/accordion';\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\nimport { Subscription } from 'rxjs';\n\nexport interface ZyfraAccordionOpenClose {\n  originalEvent: PointerEvent;\n  index: number;\n}\n\n@Component({\n  selector: 'zyfra-accordion',\n  templateUrl: './zyfra-accordion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Accordion,\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion,\n      deps: [ZyfraAccordionComponent],\n    },\n  ],\n})\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy, OnInit {\n  /** allow multiple tabs be active at the same time. */\n  @Input() multiple = false;\n  /** inline style */\n  @Input() style: { [key: string]: string | number | null };\n  /** css class */\n  @Input() styleClass: string;\n  /** expand icon class */\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\n  /** collapse icon class */\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\n\n  /** EventEmitter  */\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\n  /** EventEmitter on closing tab */\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n  /** EventEmitter on opening tab */\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\n\n  /** primeng Accordion component */\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\n  /** zyfra AccordionTab component */\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\n\n  private tabs$: Subscription;\n\n  ngOnInit(): void {\n    // Иначе в group-panels работает не корректно\n    this.accordion.collapseIcon = this.collapseIcon;\n    this.accordion.expandIcon = this.expandIcon;\n  }\n  \n  ngAfterViewInit(): void {\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\n    this.reInitTab();\n  }\n\n  public reInitTab(): void {\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\n    this.accordion.tabList.reset(primengAccordionTabs);\n    this.accordion.tabList.notifyOnChanges();\n  }\n\n  ngOnDestroy(): void {\n    this.tabs$?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterViewInit",
                "OnDestroy",
                "OnInit"
            ],
            "templateData": "<p-accordion\n  [multiple]=\"multiple\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [expandIcon]=\"expandIcon\"\n  [collapseIcon]=\"collapseIcon\"\n  (activeIndexChange)=\"activeIndexChange.emit($event)\"\n  (onOpen)=\"onOpen.emit($event)\"\n  (onClose)=\"onClose.emit($event)\"\n>\n  <ng-content></ng-content>\n</p-accordion>\n"
        },
        {
            "name": "ZyfraAccordionTabComponent",
            "id": "component-ZyfraAccordionTabComponent-80ff99dffd4bdbf643b921c4ad33b1b0",
            "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-accordion-tab",
            "styleUrls": [],
            "styles": [
                "\n      :host {\n        display: contents;\n      }\n    "
            ],
            "templateUrl": [
                "./zyfra-accordion-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether a lazy loaded panel should avoid getting loaded again on reselection",
                    "description": "<p>Whether a lazy loaded panel should avoid getting loaded again on reselection</p>\n",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the tab can be selected",
                    "description": "<p>Defines whether the tab can be selected</p>\n",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Title of the tab",
                    "description": "<p>Title of the tab</p>\n",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if the tab is active",
                    "description": "<p>Defines if the tab is active</p>\n",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Transition options of the animation",
                    "description": "<p>Transition options of the animation</p>\n",
                    "line": 38,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\ntab activeness",
                    "description": "<p>tab activeness</p>\n",
                    "line": 42,
                    "type": "EventEmitter<>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "headerFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "iconsFacet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "tab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionTab",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AccordionTab"
                        }
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ZyfraTemplateDirective } from '../../@core/shared/zyfra-template.directives';\nimport { AccordionTab } from 'primeng/accordion';\n\n@Component({\n  selector: 'zyfra-accordion-tab',\n  templateUrl: './zyfra-accordion-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: contents;\n      }\n    `,\n  ],\n})\nexport class ZyfraAccordionTabComponent implements AfterContentInit, AfterViewInit {\n  /** Title of the tab */\n  @Input() header: string;\n  /** Defines whether the tab can be selected */\n  @Input() disabled: boolean;\n  /** Whether a lazy loaded panel should avoid getting loaded again on reselection */\n  @Input() cache = true;\n  /** Transition options of the animation */\n  @Input() transitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /** Defines if the tab is active */\n  @Input() selected: boolean;\n  /** tab activeness */\n  @Output() selectedChange: EventEmitter<unknown> = new EventEmitter();\n\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\n  @ViewChild(AccordionTab) tab: AccordionTab;\n\n  headerFacet: TemplateRef<unknown>;\n  contentFacet: TemplateRef<unknown>;\n  iconsFacet: TemplateRef<unknown>;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((t) => {\n      if (t.zyfraTemplate === 'header') {\n        this.headerFacet = t.templateRef;\n      } else if (t.zyfraTemplate === 'icons') {\n        this.iconsFacet = t.templateRef;\n      } else {\n        this.contentFacet = t.templateRef;\n      }\n    });\n    if (!!this.iconsFacet && !this.headerFacet) {\n      throw new Error('icon template can only be used with header template');\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.cd.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      :host {\n        display: contents;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit"
            ],
            "templateData": "<p-accordionTab\n  [disabled]=\"disabled\"\n  [header]=\"header\"\n  [cache]=\"cache\"\n  [selected]=\"selected\"\n  [transitionOptions]=\"transitionOptions\"\n  (selectedChange)=\"selectedChange.emit($event)\"\n>\n  <ng-template pTemplate=\"header\" *ngIf=\"!!headerFacet\">\n    <div [class.zyfra-accordion-header__left]=\"!!iconsFacet\">\n      <ng-container *ngTemplateOutlet=\"headerFacet\"></ng-container>\n      <div class=\"zyfra-accordion-header-extra-icons\" *ngIf=\"!!iconsFacet\">\n        <ng-container *ngTemplateOutlet=\"iconsFacet\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template pTemplate=\"content\" *ngIf=\"!!contentFacet; else noContentFacet\">\n    <ng-container *ngTemplateOutlet=\"contentFacet\"></ng-container>\n  </ng-template>\n  <ng-template #noContentFacet>\n    <ng-content></ng-content>\n  </ng-template>\n</p-accordionTab>\n"
        },
        {
            "name": "ZyfraAutoCompleteComponent",
            "id": "component-ZyfraAutoCompleteComponent-de57a44c6cd1d944e3ac1927432e2463",
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-auto-complete",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-auto-complete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "any"
                },
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "autoHighlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number"
                },
                {
                    "name": "completeOnFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "delay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "dropdownMode",
                    "defaultValue": "'blank'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "forceSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "immutable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number"
                },
                {
                    "name": "minLength",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "showEmptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "suggestions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "T[]"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "number"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "unique",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "boolean"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "completeMethod",
                    "defaultValue": "new EventEmitter<{ originalEvent: InputEvent | PointerEvent; query: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClear",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeyUp",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "selectedItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.directives';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-auto-complete',\n  templateUrl: './zyfra-auto-complete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraAutoCompleteComponent<T = unknown>\n  extends WrappedFormComponent\n  implements ControlValueAccessor, AfterContentInit\n{\n  @Input() suggestions: T[];\n  @Input() field: string;\n  @Input() scrollHeight = '200px';\n  @Input() dropdown: boolean;\n  @Input() multiple: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() minLength = 1;\n  @Input() delay = 300;\n  @Input() completeOnFocus: boolean;\n  @Input() style: string;\n  @Input() inputStyle: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() inputStyleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() optionGroupLabel: string;\n  @Input() group: boolean;\n  @Input() optionGroupChildren = 'items';\n  @Input() placeholder: string;\n  @Input() readonly: boolean;\n  @Input() disabled: boolean;\n  @Input() maxlength: number;\n  @Input() size: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() dataKey: string;\n  @Input() autoHighlight: boolean;\n  @Input() type = 'text';\n  @Input() showEmptyMessage: boolean;\n  @Input() emptyMessage = 'No records found.';\n  @Input() immutable = true;\n  @Input() required: boolean;\n  @Input() autofocus: boolean;\n  @Input() forceSelection: boolean;\n  @Input() dropdownMode = 'blank';\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaLabel: string;\n  @Input() ariaLabelledBy: string;\n  @Input() unique = true;\n  @Input() autocomplete: string;\n  @Input() virtualScroll: boolean;\n  @Input() itemSize: number;\n  @Input() label = '';\n\n  @Output() completeMethod = new EventEmitter<{ originalEvent: InputEvent | PointerEvent; query: string }>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onKeyUp = new EventEmitter<KeyboardEvent>();\n  @Output() onSelect = new EventEmitter<T>();\n  @Output() onUnselect = new EventEmitter<unknown>();\n  @Output() onDropdownClick = new EventEmitter<PointerEvent>();\n  @Output() onClear = new EventEmitter<InputEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<void>();\n\n  itemTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((template) => {\n      if (template.zyfraTemplate === 'item') {\n        this.itemTemplate = template.templateRef;\n      } else if (template.zyfraTemplate === 'selectedItem') {\n        this.selectedItemTemplate = template.templateRef;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterContentInit"
            ],
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-autoComplete\n    [formControl]=\"$any(ngControl.control)\"\n    [suggestions]=\"suggestions\"\n    [field]=\"field\"\n    [scrollHeight]=\"scrollHeight\"\n    [dropdown]=\"dropdown\"\n    [multiple]=\"multiple\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [minLength]=\"minLength\"\n    [delay]=\"delay\"\n    [completeOnFocus]=\"completeOnFocus\"\n    [style]=\"style\"\n    [inputStyle]=\"inputStyle\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [inputId]=\"inputId\"\n    [name]=\"name\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [group]=\"group\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [placeholder]=\"placeholder\"\n    [readonly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [maxlength]=\"maxlength\"\n    [size]=\"size\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [dataKey]=\"dataKey\"\n    [autoHighlight]=\"autoHighlight\"\n    [type]=\"type\"\n    [showEmptyMessage]=\"showEmptyMessage\"\n    [emptyMessage]=\"emptyMessage\"\n    [required]=\"required\"\n    [autofocus]=\"autofocus\"\n    [forceSelection]=\"forceSelection\"\n    [dropdownMode]=\"dropdownMode\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [unique]=\"unique\"\n    [autocomplete]=\"autocomplete\"\n    [virtualScroll]=\"virtualScroll\"\n    [itemSize]=\"itemSize\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    (completeMethod)=\"completeMethod.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onKeyUp)=\"onKeyUp.emit($event)\"\n    (onSelect)=\"onSelect.emit($event)\"\n    (onUnselect)=\"onUnselect.emit($event)\"\n    (onDropdownClick)=\"onDropdownClick.emit($event)\"\n    (onClear)=\"onClear.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n  >\n    <ng-template [ngIf]=\"dropdown\">\n      <ng-template pTemplate=\"item\" [ngIf]=\"itemTemplate\" [ngIfElse]=\"defaultItem\" let-obj>\n        <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: obj }\"></ng-container>\n      </ng-template>\n      <ng-template #defaultItem>\n        <ng-template let-obj pTemplate=\"item\">\n          {{ obj[field] }}\n        </ng-template>\n      </ng-template>\n\n      <ng-template pTemplate=\"selectedItem\" [ngIf]=\"selectedItemTemplate\" let-obj>\n        <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: obj }\"></ng-container>\n      </ng-template>\n    </ng-template>\n  </p-autoComplete>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraBreadcrumbComponent",
            "id": "component-ZyfraBreadcrumbComponent-49c3cf1a2cc1b40eacd54f0e161bc86a",
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "home",
                    "defaultValue": "{ icon: 'zyfra-icon social-home-breadcrumbs' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MenuItem"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MenuItem[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onItemClick",
                    "defaultValue": "new EventEmitter<ItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\n\ntype ItemClickEvent = { originalEvent: Event; item: MenuItem };\n\n@Component({\n  selector: 'zyfra-breadcrumb',\n  templateUrl: './zyfra-breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraBreadcrumbComponent {\n  @Input() items: MenuItem[] = [];\n  @Input() home: MenuItem = { icon: 'zyfra-icon social-home-breadcrumbs' };\n  @Input() style: string = null;\n  @Input() styleClass: string = null;\n\n  @Output() onItemClick = new EventEmitter<ItemClickEvent>();\n\n  public onItemClickHandler(event: ItemClickEvent): void {\n    this.onItemClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-breadcrumb\n  [model]=\"items\"\n  [home]=\"home\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  (onItemClick)=\"onItemClickHandler($event)\"\n></p-breadcrumb>\n"
        },
        {
            "name": "ZyfraButtonComponent",
            "id": "component-ZyfraButtonComponent-0207528bd44de729b36d0786338f98fa",
            "file": "libs/components/src/lib/button/zyfra-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TZyfraButtonIconPosision"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "blur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\nexport type TZyfraButtonIconPosision = 'left' | 'right' | 'top' | 'bottom';\n\n@Component({\n  selector: 'zyfra-button',\n  templateUrl: './zyfra-button.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraButtonComponent {\n  @Input() label: string;\n  @Input() type = 'button';\n  @Input() icon: string;\n  @Input() iconPos: TZyfraButtonIconPosision = 'left';\n  @Input() disabled: boolean;\n  @Input() badge: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n\n  // останавливаю всплытие клика (именно так. через HostListener не работает)\n  public nativeClick(event: Event): void {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  public click(event: PointerEvent): void {\n    this.onClick.emit(event);\n  }\n\n  public focus(event: FocusEvent): void {\n    this.onFocus.emit(event);\n  }\n\n  public blur(event: FocusEvent): void {\n    this.onBlur.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-button\n  [type]=\"type\"\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [badge]=\"badge\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  (click)=\"nativeClick($event)\"\n  (onClick)=\"click($event)\"\n  (onFocus)=\"focus($event)\"\n  (onBlur)=\"blur($event)\"\n></p-button>\n"
        },
        {
            "name": "ZyfraCalendarComponent",
            "id": "component-ZyfraCalendarComponent-f8404e599e225a8222b278971eaceec2",
            "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CALENDAR_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-calendar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-calendar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "any"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "string"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 156,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 158,
                    "type": "number"
                },
                {
                    "name": "clearButtonStyleClass",
                    "defaultValue": "'p-button-text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 154,
                    "type": "string"
                },
                {
                    "name": "dataType",
                    "defaultValue": "'date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 144,
                    "type": "string"
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "string"
                },
                {
                    "name": "defaultDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 346,
                    "type": "Date"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "any"
                },
                {
                    "name": "disabledDates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 388,
                    "type": "Date[]"
                },
                {
                    "name": "disabledDays",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 399,
                    "type": "number[]"
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 174,
                    "type": "number"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 172,
                    "type": "boolean"
                },
                {
                    "name": "hideOnDateTimeSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 166,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 178,
                    "type": "string"
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'24'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 126,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "defaultValue": "'pi pi-calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "string"
                },
                {
                    "name": "iconAriaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "string"
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "any"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "string"
                },
                {
                    "name": "keepInvalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 164,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 467,
                    "type": ""
                },
                {
                    "name": "maxDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 376,
                    "type": "Date"
                },
                {
                    "name": "maxDateCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 148,
                    "type": "number"
                },
                {
                    "name": "minDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 364,
                    "type": "Date"
                },
                {
                    "name": "monthNavigator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "boolean"
                },
                {
                    "name": "multipleSeparator",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "string"
                },
                {
                    "name": "numberOfMonths",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 455,
                    "type": "number"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 162,
                    "type": "any"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 160,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "string"
                },
                {
                    "name": "rangeSeparator",
                    "defaultValue": "'-'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "string"
                },
                {
                    "name": "readonlyInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 138,
                    "type": "boolean"
                },
                {
                    "name": "responsiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 444,
                    "type": "any[]"
                },
                {
                    "name": "selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 146,
                    "type": "string"
                },
                {
                    "name": "selectOtherMonths",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "boolean"
                },
                {
                    "name": "shortYearCutoff",
                    "defaultValue": "'+10'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "any"
                },
                {
                    "name": "showButtonBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 150,
                    "type": "boolean"
                },
                {
                    "name": "showIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "boolean"
                },
                {
                    "name": "showOnFocus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 140,
                    "type": "boolean"
                },
                {
                    "name": "showOtherMonths",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "boolean"
                },
                {
                    "name": "showSeconds",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 136,
                    "type": "boolean"
                },
                {
                    "name": "showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 427,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 176,
                    "type": "string"
                },
                {
                    "name": "showWeek",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 142,
                    "type": "boolean"
                },
                {
                    "name": "stepHour",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 130,
                    "type": "number"
                },
                {
                    "name": "stepMinute",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 132,
                    "type": "number"
                },
                {
                    "name": "stepSecond",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 134,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 204,
                    "type": "number"
                },
                {
                    "name": "timeOnly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 128,
                    "type": "boolean"
                },
                {
                    "name": "timeSeparator",
                    "defaultValue": "':'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 170,
                    "type": "string"
                },
                {
                    "name": "todayButtonStyleClass",
                    "defaultValue": "'p-button-text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 152,
                    "type": "string"
                },
                {
                    "name": "touchUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 168,
                    "type": "boolean"
                },
                {
                    "name": "view",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 337,
                    "type": "string"
                },
                {
                    "name": "yearNavigator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 124,
                    "type": "boolean"
                },
                {
                    "name": "yearRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 411,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 182,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClearClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 192,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClickOutside",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 198,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 184,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 180,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 188,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMonthChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 194,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 186,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 200,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onTodayClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 190,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onYearChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 196,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_defaultDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 362
                },
                {
                    "name": "_disabledDates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Date>",
                    "optional": false,
                    "description": "",
                    "line": 301
                },
                {
                    "name": "_disabledDays",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<number>",
                    "optional": false,
                    "description": "",
                    "line": 303
                },
                {
                    "name": "_locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LocaleSettings",
                    "optional": false,
                    "description": "",
                    "line": 323
                },
                {
                    "name": "_maxDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 283
                },
                {
                    "name": "_minDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 281
                },
                {
                    "name": "_numberOfMonths",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 331
                },
                {
                    "name": "_responsiveOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 325
                },
                {
                    "name": "_showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 285
                },
                {
                    "name": "_view",
                    "defaultValue": "'date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 333
                },
                {
                    "name": "_yearRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 287
                },
                {
                    "name": "animationEndListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 267
                },
                {
                    "name": "attributeSelector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 329
                },
                {
                    "name": "calendarElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 261
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 474,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "containerViewChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 206,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'container', {static: false}"
                        }
                    ]
                },
                {
                    "name": "contentViewChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 225
                },
                {
                    "name": "convertTo24Hour",
                    "defaultValue": "function (hours: number, pm: boolean) {\n    if (this.hourFormat == '12') {\n      if (hours === 12) {\n        return pm ? 12 : 0;\n      } else {\n        return pm ? hours + 12 : hours;\n      }\n    }\n    return hours;\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 1851
                },
                {
                    "name": "currentHour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 239
                },
                {
                    "name": "currentMinute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 241
                },
                {
                    "name": "currentMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 235
                },
                {
                    "name": "currentSecond",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 243
                },
                {
                    "name": "currentView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 327
                },
                {
                    "name": "currentYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 237
                },
                {
                    "name": "dates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 229
                },
                {
                    "name": "dateTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 291
                },
                {
                    "name": "decadeTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 299
                },
                {
                    "name": "disabledDateTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 297
                },
                {
                    "name": "documentClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 265
                },
                {
                    "name": "documentResizeListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 313
                },
                {
                    "name": "el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 472,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 277
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 273
                },
                {
                    "name": "focusElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 309
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 295
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 293
                },
                {
                    "name": "initialized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 319
                },
                {
                    "name": "inputFieldValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 279
                },
                {
                    "name": "inputfieldViewChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'inputfield', {static: false}"
                        }
                    ]
                },
                {
                    "name": "isKeydown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 275
                },
                {
                    "name": "isMonthNavigate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 317
                },
                {
                    "name": "mask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 247
                },
                {
                    "name": "maskClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 249
                },
                {
                    "name": "months",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 231
                },
                {
                    "name": "navigationState",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 315
                },
                {
                    "name": "onModelChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 257
                },
                {
                    "name": "onModelTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 259
                },
                {
                    "name": "overlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLDivElement",
                    "optional": false,
                    "description": "",
                    "line": 251
                },
                {
                    "name": "overlayService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayService",
                    "optional": false,
                    "description": "",
                    "line": 477,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "overlayVisible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 255
                },
                {
                    "name": "pm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 245
                },
                {
                    "name": "preventDocumentListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 289
                },
                {
                    "name": "preventFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 335
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 473,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "responsiveStyleElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 253
                },
                {
                    "name": "scrollHandler",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 311
                },
                {
                    "name": "selectElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 305
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<any>",
                    "optional": false,
                    "description": "",
                    "line": 202,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "PrimeTemplate"
                        }
                    ]
                },
                {
                    "name": "ticksTo1970",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 269
                },
                {
                    "name": "timePickerTimer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 263
                },
                {
                    "name": "todayElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 307
                },
                {
                    "name": "translationSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 321
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 227
                },
                {
                    "name": "weekDays",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 233
                },
                {
                    "name": "yearOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 271
                }
            ],
            "methodsClass": [
                {
                    "name": "alignOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2299,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "appendOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2286,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindDocumentClickListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2836,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindDocumentResizeListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2862,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "bindScrollListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2876,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearTimePickerTimer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1977,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ month: number; year: number; dates: {}; weekNumbers: {}; }",
                    "typeParameters": [],
                    "line": 639,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createMonths",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 616,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createResponsiveStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2787,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createWeekDays",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 587,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "daylightSavingAdjust",
                    "args": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2751,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementDecade",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 805,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "decrementHour",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1984,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementMinute",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2015,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementSecond",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2035,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 793,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "destroyMask",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2343,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "destroyResponsiveStyleElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2829,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "disableModality",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2335,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enableModality",
                    "args": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2319,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "format",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 2407,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "format",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateTime",
                    "args": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 934,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatTime",
                    "args": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 2505,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDateFormat",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2402,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDaysCountInMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 1045,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDaysCountInPrevMonth",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 1049,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFirstDayOfMonthIndex",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 1035,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMonthName",
                    "args": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 1290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNextMonthAndYear",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ month: any; year: any; }",
                    "typeParameters": [],
                    "line": 1068,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPreviousMonthAndYear",
                    "args": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ month: any; year: any; }",
                    "typeParameters": [],
                    "line": 1054,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSundayIndex",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 1082,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTranslation",
                    "args": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 575,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeekNumber",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 630,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2214,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "incrementDecade",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 809,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "incrementHour",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1906,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "incrementMinute",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2005,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "incrementSecond",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2025,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "incrementYear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 813,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initFocusableCell",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1735,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initTime",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 717,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isComparable",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isDateBetween",
                    "args": [
                        {
                            "name": "start",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDateDisabled",
                    "args": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDateEquals",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDayDisabled",
                    "args": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "day",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isMonthSelected",
                    "args": [
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isMultipleSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isNavIconClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2903,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOutsideClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 2894,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isRangeSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1165,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isSelectable",
                    "args": [
                        {
                            "name": "day",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "otherMonth",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "day",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "otherMonth",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1087,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSingleSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isToday",
                    "args": [
                        {
                            "name": "today",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "day",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "today",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "day",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "month",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isValidSelection",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 2110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isYearSelected",
                    "args": [
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "monthPickerValues",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 597,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navBackward",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 731,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navForward",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 762,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateToMonth",
                    "args": [
                        {
                            "name": "prev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1639,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "prev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 531,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 561,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2931,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 480,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputfield",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1274,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputfield",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClearButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2780,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onContainerButtonKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDateCellKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1353,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "date",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDateSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 835,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1259,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInputFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1329,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMonthCellKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1473,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMonthDropdownChange",
                    "args": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1839,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMonthSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 878,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNextButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOverlayAnimationDone",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOverlayAnimationStart",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOverlayClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOverlayHide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2918,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPrevButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTimePickerElementMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1927,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTimePickerElementMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1941,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTimePickerElementMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1934,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTodayButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2765,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUserInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2087,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2912,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onYearCellKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1560,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onYearDropdownChange",
                    "args": [
                        {
                            "name": "y",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1845,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "y",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onYearSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 890,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "year",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "format",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2574,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "format",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseDateTime",
                    "args": [
                        {
                            "name": "text",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 2150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseTime",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ hour: any; minute: any; second: any; }",
                    "typeParameters": [],
                    "line": 2539,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseValueFromString",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Date | []",
                    "typeParameters": [],
                    "line": 2124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "populateTime",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeString",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ampm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeString",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ampm",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "populateYearOptions",
                    "args": [
                        {
                            "name": "start",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 579,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "start",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2389,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2393,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repeat",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1948,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "interval",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "restoreOverlayAppend",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2293,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectDate",
                    "args": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 963,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentHourPM",
                    "args": [
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 950,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "val",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2397,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldSelectDate",
                    "args": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 872,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateMeta",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2202,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "switchToMonthView",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 825,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchToYearView",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 830,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "switchViewButtonDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 1294,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2225,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleAMPM",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2078,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trapFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1805,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unbindAnimationEndListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2371,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unbindDocumentClickListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2855,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unbindDocumentResizeListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2869,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unbindMaskClickListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2364,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unbindScrollListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2888,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFilledState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2761,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1670,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateInputfield",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 900,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateModel",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 1017,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2045,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateUI",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2185,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateTime",
                    "args": [
                        {
                            "name": "hour",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "minute",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "second",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pm",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 1862,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hour",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "minute",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "second",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pm",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2378,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "yearPickerValues",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 606,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Forked from <a href=\"https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\">https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts</a>\nUpdate this after release primeng,  Last changes 20.12.2021</p>\n",
            "rawdescription": "\n\nForked from https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\nUpdate this after release primeng,  Last changes 20.12.2021\n",
            "type": "component",
            "sourceCode": "import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectorRef, forwardRef, NgZone, Renderer2 } from '@angular/core';\nimport {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ContentChildren,\n  QueryList,\n  ElementRef,\n  TemplateRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OverlayService, PrimeNGConfig, PrimeTemplate, TranslationKeys } from 'primeng/api';\nimport { LocaleSettings } from 'primeng/calendar';\nimport { ConnectedOverlayScrollHandler, DomHandler } from 'primeng/dom';\nimport { UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nimport { Subscription } from 'rxjs';\n\nexport const CALENDAR_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\n  multi: true,\n};\n\n/**\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\n * Update this after release primeng,  Last changes 20.12.2021\n */\n@Component({\n  selector: 'zyfra-calendar',\n  templateUrl: './zyfra-calendar.component.html',\n  animations: [\n    trigger('overlayAnimation', [\n      state(\n        'visibleTouchUI',\n        style({\n          transform: 'translate(-50%,-50%)',\n          opacity: 1,\n        })\n      ),\n      transition('void => visible', [\n        style({ opacity: 0, transform: 'scaleY(0.8)' }),\n        animate('{{showTransitionParams}}', style({ opacity: 1, transform: '*' })),\n      ]),\n      transition('visible => void', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))]),\n      transition('void => visibleTouchUI', [\n        style({ opacity: 0, transform: 'translate3d(-50%, -40%, 0) scale(0.9)' }),\n        animate('{{showTransitionParams}}'),\n      ]),\n      transition('visibleTouchUI => void', [\n        animate(\n          '{{hideTransitionParams}}',\n          style({\n            opacity: 0,\n            transform: 'translate3d(-50%, -40%, 0) scale(0.9)',\n          })\n        ),\n      ]),\n    ]),\n  ],\n  host: {\n    class: 'p-element p-inputwrapper',\n    '[class.p-inputwrapper-filled]': 'filled',\n    '[class.p-inputwrapper-focus]': 'focus',\n  },\n  providers: [CALENDAR_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraCalendarComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  @Input() style: any;\n\n  @Input() styleClass: string;\n\n  @Input() inputStyle: any;\n\n  @Input() label: string;\n\n  @Input() inputId: string;\n\n  @Input() name: string;\n\n  @Input() inputStyleClass: string;\n\n  @Input() placeholder: string;\n\n  @Input() ariaLabelledBy: string;\n\n  @Input() iconAriaLabel: string;\n\n  @Input() disabled: any;\n\n  @Input() dateFormat: string;\n\n  @Input() multipleSeparator: string = ',';\n\n  @Input() rangeSeparator: string = '-';\n\n  @Input() inline: boolean = false;\n\n  @Input() showOtherMonths: boolean = true;\n\n  @Input() selectOtherMonths: boolean;\n\n  @Input() showIcon: boolean;\n\n  @Input() icon: string = 'pi pi-calendar';\n\n  @Input() appendTo: any;\n\n  @Input() readonlyInput: boolean;\n\n  @Input() shortYearCutoff: any = '+10';\n\n  @Input() monthNavigator: boolean;\n\n  @Input() yearNavigator: boolean;\n\n  @Input() hourFormat: string = '24';\n\n  @Input() timeOnly: boolean;\n\n  @Input() stepHour: number = 1;\n\n  @Input() stepMinute: number = 1;\n\n  @Input() stepSecond: number = 1;\n\n  @Input() showSeconds: boolean = false;\n\n  @Input() required: boolean;\n\n  @Input() showOnFocus: boolean = true;\n\n  @Input() showWeek: boolean = false;\n\n  @Input() dataType: string = 'date';\n\n  @Input() selectionMode: string = 'single';\n\n  @Input() maxDateCount: number;\n\n  @Input() showButtonBar: boolean;\n\n  @Input() todayButtonStyleClass: string = 'p-button-text';\n\n  @Input() clearButtonStyleClass: string = 'p-button-text';\n\n  @Input() autoZIndex: boolean = true;\n\n  @Input() baseZIndex: number = 0;\n\n  @Input() panelStyleClass: string;\n\n  @Input() panelStyle: any;\n\n  @Input() keepInvalid: boolean = false;\n\n  @Input() hideOnDateTimeSelect: boolean = true;\n\n  @Input() touchUI: boolean;\n\n  @Input() timeSeparator: string = ':';\n\n  @Input() focusTrap: boolean = true;\n\n  @Input() firstDayOfWeek: number = 0;\n\n  @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n  @Input() hideTransitionOptions: string = '.1s linear';\n\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onInput: EventEmitter<any> = new EventEmitter();\n\n  @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\n\n  @Output() onClearClick: EventEmitter<any> = new EventEmitter();\n\n  @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() onYearChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\n\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n  @Input() tabindex: number;\n\n  @ViewChild('container', { static: false }) containerViewChild: ElementRef;\n\n  @ViewChild('inputfield', { static: false }) inputfieldViewChild: ElementRef;\n\n  @ViewChild('contentWrapper', { static: false }) set content(content: ElementRef) {\n    this.contentViewChild = content;\n\n    if (this.contentViewChild) {\n      if (this.isMonthNavigate) {\n        Promise.resolve(null).then(() => this.updateFocus());\n        this.isMonthNavigate = false;\n      } else {\n        if (!this.focus) {\n          this.initFocusableCell();\n        }\n      }\n    }\n  }\n\n  contentViewChild: ElementRef;\n\n  value: any;\n\n  dates: any[];\n\n  months: any[];\n\n  weekDays: string[];\n\n  currentMonth: number;\n\n  currentYear: number;\n\n  currentHour: number;\n\n  currentMinute: number;\n\n  currentSecond: number;\n\n  pm: boolean;\n\n  mask: HTMLDivElement;\n\n  maskClickListener: Function;\n\n  overlay: HTMLDivElement;\n\n  responsiveStyleElement: any;\n\n  overlayVisible: boolean;\n\n  onModelChange: Function = () => {};\n\n  onModelTouched: Function = () => {};\n\n  calendarElement: any;\n\n  timePickerTimer: any;\n\n  documentClickListener: any;\n\n  animationEndListener: any;\n\n  ticksTo1970: number;\n\n  yearOptions: number[];\n\n  focus: boolean;\n\n  isKeydown: boolean;\n\n  filled: boolean;\n\n  inputFieldValue: string = null;\n\n  _minDate: Date;\n\n  _maxDate: Date;\n\n  _showTime: boolean;\n\n  _yearRange: string;\n\n  preventDocumentListener: boolean;\n\n  dateTemplate: TemplateRef<any>;\n\n  headerTemplate: TemplateRef<any>;\n\n  footerTemplate: TemplateRef<any>;\n\n  disabledDateTemplate: TemplateRef<any>;\n\n  decadeTemplate: TemplateRef<any>;\n\n  _disabledDates: Array<Date>;\n\n  _disabledDays: Array<number>;\n\n  selectElement: any;\n\n  todayElement: any;\n\n  focusElement: any;\n\n  scrollHandler: any;\n\n  documentResizeListener: any;\n\n  navigationState: any = null;\n\n  isMonthNavigate: boolean;\n\n  initialized: boolean;\n\n  translationSubscription: Subscription;\n\n  _locale: LocaleSettings;\n\n  _responsiveOptions: any[];\n\n  currentView: string;\n\n  attributeSelector: string;\n\n  _numberOfMonths: number = 1;\n\n  _view: string = 'date';\n\n  preventFocus: boolean;\n\n  @Input() get view(): string {\n    return this._view;\n  }\n\n  set view(view: string) {\n    this._view = view;\n    this.currentView = this._view;\n  }\n\n  @Input() get defaultDate(): Date {\n    return this._defaultDate;\n  }\n\n  set defaultDate(defaultDate: Date) {\n    this._defaultDate = defaultDate;\n\n    if (this.initialized) {\n      const date = defaultDate || new Date();\n      this.currentMonth = date.getMonth();\n      this.currentYear = date.getFullYear();\n      this.initTime(date);\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  _defaultDate: Date;\n\n  @Input() get minDate(): Date {\n    return this._minDate;\n  }\n\n  set minDate(date: Date) {\n    this._minDate = date;\n\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  @Input() get maxDate(): Date {\n    return this._maxDate;\n  }\n\n  set maxDate(date: Date) {\n    this._maxDate = date;\n\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  @Input() get disabledDates(): Date[] {\n    return this._disabledDates;\n  }\n\n  set disabledDates(disabledDates: Date[]) {\n    this._disabledDates = disabledDates;\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  @Input() get disabledDays(): number[] {\n    return this._disabledDays;\n  }\n\n  set disabledDays(disabledDays: number[]) {\n    this._disabledDays = disabledDays;\n\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  @Input() get yearRange(): string {\n    return this._yearRange;\n  }\n\n  set yearRange(yearRange: string) {\n    this._yearRange = yearRange;\n\n    if (yearRange) {\n      const years = yearRange.split(':');\n      const yearStart = parseInt(years[0]);\n      const yearEnd = parseInt(years[1]);\n\n      this.populateYearOptions(yearStart, yearEnd);\n    }\n  }\n\n  @Input() get showTime(): boolean {\n    return this._showTime;\n  }\n\n  set showTime(showTime: boolean) {\n    this._showTime = showTime;\n\n    if (this.currentHour === undefined) {\n      this.initTime(this.value || new Date());\n    }\n    this.updateInputfield();\n  }\n\n  get locale() {\n    return this._locale;\n  }\n\n  @Input() get responsiveOptions(): any[] {\n    return this._responsiveOptions;\n  }\n\n  set responsiveOptions(responsiveOptions: any[]) {\n    this._responsiveOptions = responsiveOptions;\n\n    this.destroyResponsiveStyleElement();\n    this.createResponsiveStyle();\n  }\n\n  @Input() get numberOfMonths(): number {\n    return this._numberOfMonths;\n  }\n\n  set numberOfMonths(numberOfMonths: number) {\n    this._numberOfMonths = numberOfMonths;\n\n    this.destroyResponsiveStyleElement();\n    this.createResponsiveStyle();\n  }\n\n  @Input()\n  set locale(newLocale: LocaleSettings) {\n    console.warn('Locale property has no effect, use new i18n API instead.');\n  }\n\n  constructor(\n    public el: ElementRef,\n    public renderer: Renderer2,\n    public cd: ChangeDetectorRef,\n    private zone: NgZone,\n    private config: PrimeNGConfig,\n    public overlayService: OverlayService\n  ) {}\n\n  ngOnInit() {\n    this.attributeSelector = UniqueComponentId();\n    const date = this.defaultDate || new Date();\n    this.createResponsiveStyle();\n    this.currentMonth = date.getMonth();\n    this.currentYear = date.getFullYear();\n    this.currentView = this.view;\n\n    if (this.view === 'date') {\n      this.createWeekDays();\n      this.initTime(date);\n      this.createMonths(this.currentMonth, this.currentYear);\n      this.ticksTo1970 =\n        ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) *\n        24 *\n        60 *\n        60 *\n        10000000;\n    }\n\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\n      this.createWeekDays();\n    });\n\n    this.initialized = true;\n\n    this.config.setTranslation({\n      dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n      dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n      dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n      monthNames: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь',\n      ],\n      monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n      today: 'Сегодня',\n      clear: 'Очистить',\n      weekHeader: 'Нед',\n    });\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'date':\n          this.dateTemplate = item.template;\n          break;\n\n        case 'decade':\n          this.decadeTemplate = item.template;\n          break;\n\n        case 'disabledDate':\n          this.disabledDateTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.dateTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.inline) {\n      this.contentViewChild && this.contentViewChild.nativeElement.setAttribute(this.attributeSelector, '');\n\n      if (!this.disabled) {\n        this.initFocusableCell();\n        if (this.numberOfMonths === 1) {\n          this.contentViewChild.nativeElement.style.width =\n            DomHandler.getOuterWidth(this.containerViewChild.nativeElement) + 'px';\n        }\n      }\n    }\n  }\n\n  getTranslation(option: string) {\n    return this.config.getTranslation(option);\n  }\n\n  populateYearOptions(start, end) {\n    this.yearOptions = [];\n\n    for (let i = start; i <= end; i++) {\n      this.yearOptions.push(i);\n    }\n  }\n\n  createWeekDays() {\n    this.weekDays = [];\n    let dayIndex = this.firstDayOfWeek;\n    let dayLabels = this.getTranslation(TranslationKeys.DAY_NAMES_MIN);\n    for (let i = 0; i < 7; i++) {\n      this.weekDays.push(dayLabels[dayIndex]);\n      dayIndex = dayIndex == 6 ? 0 : ++dayIndex;\n    }\n  }\n\n  monthPickerValues() {\n    let monthPickerValues = [];\n    for (let i = 0; i <= 11; i++) {\n      monthPickerValues.push(this.config.getTranslation('monthNamesShort')[i]);\n    }\n\n    return monthPickerValues;\n  }\n\n  yearPickerValues() {\n    let yearPickerValues = [];\n    let base = this.currentYear - (this.currentYear % 10);\n    for (let i = 0; i < 10; i++) {\n      yearPickerValues.push(base + i);\n    }\n\n    return yearPickerValues;\n  }\n\n  createMonths(month: number, year: number) {\n    this.months = this.months = [];\n    for (let i = 0; i < this.numberOfMonths; i++) {\n      let m = month + i;\n      let y = year;\n      if (m > 11) {\n        m = (m % 11) - 1;\n        y = year + 1;\n      }\n\n      this.months.push(this.createMonth(m, y));\n    }\n  }\n\n  getWeekNumber(date: Date) {\n    let checkDate = new Date(date.getTime());\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n    let time = checkDate.getTime();\n    checkDate.setMonth(0);\n    checkDate.setDate(1);\n    return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  createMonth(month: number, year: number) {\n    let dates = [];\n    let firstDay = this.getFirstDayOfMonthIndex(month, year);\n    let daysLength = this.getDaysCountInMonth(month, year);\n    let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\n    let dayNo = 1;\n    let today = new Date();\n    let weekNumbers = [];\n    let monthRows = Math.ceil((daysLength + firstDay) / 7);\n\n    for (let i = 0; i < monthRows; i++) {\n      let week = [];\n\n      if (i == 0) {\n        for (let j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {\n          let prev = this.getPreviousMonthAndYear(month, year);\n          week.push({\n            day: j,\n            month: prev.month,\n            year: prev.year,\n            otherMonth: true,\n            today: this.isToday(today, j, prev.month, prev.year),\n            selectable: this.isSelectable(j, prev.month, prev.year, true),\n          });\n        }\n\n        let remainingDaysLength = 7 - week.length;\n        for (let j = 0; j < remainingDaysLength; j++) {\n          week.push({\n            day: dayNo,\n            month: month,\n            year: year,\n            today: this.isToday(today, dayNo, month, year),\n            selectable: this.isSelectable(dayNo, month, year, false),\n          });\n          dayNo++;\n        }\n      } else {\n        for (let j = 0; j < 7; j++) {\n          if (dayNo > daysLength) {\n            let next = this.getNextMonthAndYear(month, year);\n            week.push({\n              day: dayNo - daysLength,\n              month: next.month,\n              year: next.year,\n              otherMonth: true,\n              today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n              selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true),\n            });\n          } else {\n            week.push({\n              day: dayNo,\n              month: month,\n              year: year,\n              today: this.isToday(today, dayNo, month, year),\n              selectable: this.isSelectable(dayNo, month, year, false),\n            });\n          }\n\n          dayNo++;\n        }\n      }\n\n      if (this.showWeek) {\n        weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\n      }\n\n      dates.push(week);\n    }\n\n    return {\n      month: month,\n      year: year,\n      dates: dates,\n      weekNumbers: weekNumbers,\n    };\n  }\n\n  initTime(date: Date) {\n    this.pm = date.getHours() > 11;\n\n    if (this.showTime) {\n      this.currentMinute = date.getMinutes();\n      this.currentSecond = date.getSeconds();\n      this.setCurrentHourPM(date.getHours());\n    } else if (this.timeOnly) {\n      this.currentMinute = 0;\n      this.currentHour = 0;\n      this.currentSecond = 0;\n    }\n  }\n\n  navBackward(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    this.isMonthNavigate = true;\n\n    if (this.currentView === 'month') {\n      this.decrementYear();\n      setTimeout(() => {\n        this.updateFocus();\n      }, 1);\n    } else if (this.currentView === 'year') {\n      this.decrementDecade();\n      setTimeout(() => {\n        this.updateFocus();\n      }, 1);\n    } else {\n      if (this.currentMonth === 0) {\n        this.currentMonth = 11;\n        this.decrementYear();\n      } else {\n        this.currentMonth--;\n      }\n\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  navForward(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    this.isMonthNavigate = true;\n\n    if (this.currentView === 'month') {\n      this.incrementYear();\n      setTimeout(() => {\n        this.updateFocus();\n      }, 1);\n    } else if (this.currentView === 'year') {\n      this.incrementDecade();\n      setTimeout(() => {\n        this.updateFocus();\n      }, 1);\n    } else {\n      if (this.currentMonth === 11) {\n        this.currentMonth = 0;\n        this.incrementYear();\n      } else {\n        this.currentMonth++;\n      }\n\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n  }\n\n  decrementYear() {\n    this.currentYear--;\n\n    if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n      this.populateYearOptions(\n        this.yearOptions[0] - difference,\n        this.yearOptions[this.yearOptions.length - 1] - difference\n      );\n    }\n  }\n\n  decrementDecade() {\n    this.currentYear = this.currentYear - 10;\n  }\n\n  incrementDecade() {\n    this.currentYear = this.currentYear + 10;\n  }\n\n  incrementYear() {\n    this.currentYear++;\n\n    if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n      this.populateYearOptions(\n        this.yearOptions[0] + difference,\n        this.yearOptions[this.yearOptions.length - 1] + difference\n      );\n    }\n  }\n\n  switchToMonthView(event) {\n    this.currentView = 'month';\n    event.preventDefault();\n  }\n\n  switchToYearView(event) {\n    this.currentView = 'year';\n    event.preventDefault();\n  }\n\n  onDateSelect(event, dateMeta) {\n    if (this.disabled || !dateMeta.selectable) {\n      event.preventDefault();\n      return;\n    }\n\n    if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n      this.value = this.value.filter((date, i) => {\n        return !this.isDateEquals(date, dateMeta);\n      });\n      if (this.value.length === 0) {\n        this.value = null;\n      }\n      this.updateModel(this.value);\n    } else {\n      if (this.shouldSelectDate(dateMeta)) {\n        this.selectDate(dateMeta);\n      }\n    }\n\n    if (this.isSingleSelection() && this.hideOnDateTimeSelect) {\n      setTimeout(() => {\n        event.preventDefault();\n        this.hideOverlay();\n\n        if (this.mask) {\n          this.disableModality();\n        }\n\n        this.cd.markForCheck();\n      }, 150);\n    }\n\n    this.updateInputfield();\n    event.preventDefault();\n  }\n\n  shouldSelectDate(dateMeta) {\n    if (this.isMultipleSelection())\n      return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\n    else return true;\n  }\n\n  onMonthSelect(event, index) {\n    if (this.view === 'month') {\n      this.onDateSelect(event, { year: this.currentYear, month: index, day: 1, selectable: true });\n    } else {\n      this.currentMonth = index;\n      this.currentView = 'date';\n      this.createMonths(this.currentMonth, this.currentYear);\n      this.cd.markForCheck();\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n    }\n  }\n\n  onYearSelect(event, year) {\n    if (this.view === 'year') {\n      this.onDateSelect(event, { year: year, month: 0, day: 1, selectable: true });\n    } else {\n      this.currentYear = year;\n      this.currentView = 'month';\n      this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n    }\n  }\n\n  updateInputfield() {\n    let formattedValue = '';\n\n    if (this.value) {\n      if (this.isSingleSelection()) {\n        formattedValue = this.formatDateTime(this.value);\n      } else if (this.isMultipleSelection()) {\n        for (let i = 0; i < this.value.length; i++) {\n          let dateAsString = this.formatDateTime(this.value[i]);\n          formattedValue += dateAsString;\n          if (i !== this.value.length - 1) {\n            formattedValue += this.multipleSeparator + ' ';\n          }\n        }\n      } else if (this.isRangeSelection()) {\n        if (this.value && this.value.length) {\n          let startDate = this.value[0];\n          let endDate = this.value[1];\n\n          formattedValue = this.formatDateTime(startDate);\n          if (endDate) {\n            formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);\n          }\n        }\n      }\n    }\n\n    this.inputFieldValue = formattedValue;\n    this.updateFilledState();\n    if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n      this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;\n    }\n  }\n\n  formatDateTime(date) {\n    let formattedValue = null;\n    if (date) {\n      if (this.timeOnly) {\n        formattedValue = this.formatTime(date);\n      } else {\n        formattedValue = this.formatDate(date, this.getDateFormat());\n        if (this.showTime) {\n          formattedValue += ' ' + this.formatTime(date);\n        }\n      }\n    }\n\n    return formattedValue;\n  }\n\n  setCurrentHourPM(hours: number) {\n    if (this.hourFormat == '12') {\n      this.pm = hours > 11;\n      if (hours >= 12) {\n        this.currentHour = hours == 12 ? 12 : hours - 12;\n      } else {\n        this.currentHour = hours == 0 ? 12 : hours;\n      }\n    } else {\n      this.currentHour = hours;\n    }\n  }\n\n  selectDate(dateMeta) {\n    let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n\n    if (this.showTime) {\n      if (this.hourFormat == '12') {\n        if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);\n        else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n      } else {\n        date.setHours(this.currentHour);\n      }\n\n      date.setMinutes(this.currentMinute);\n      date.setSeconds(this.currentSecond);\n    }\n\n    if (this.minDate && this.minDate > date) {\n      date = this.minDate;\n      this.setCurrentHourPM(date.getHours());\n      this.currentMinute = date.getMinutes();\n      this.currentSecond = date.getSeconds();\n    }\n\n    if (this.maxDate && this.maxDate < date) {\n      date = this.maxDate;\n      this.setCurrentHourPM(date.getHours());\n      this.currentMinute = date.getMinutes();\n      this.currentSecond = date.getSeconds();\n    }\n\n    if (this.isSingleSelection()) {\n      this.updateModel(date);\n    } else if (this.isMultipleSelection()) {\n      this.updateModel(this.value ? [...this.value, date] : [date]);\n    } else if (this.isRangeSelection()) {\n      if (this.value && this.value.length) {\n        let startDate = this.value[0];\n        let endDate = this.value[1];\n\n        if (!endDate && date.getTime() >= startDate.getTime()) {\n          endDate = date;\n        } else {\n          startDate = date;\n          endDate = null;\n        }\n\n        this.updateModel([startDate, endDate]);\n      } else {\n        this.updateModel([date, null]);\n      }\n    }\n\n    this.onSelect.emit(date);\n  }\n\n  updateModel(value) {\n    this.value = value;\n\n    if (this.dataType == 'date') {\n      this.onModelChange(this.value);\n    } else if (this.dataType == 'string') {\n      if (this.isSingleSelection()) {\n        this.onModelChange(this.formatDateTime(this.value));\n      } else {\n        let stringArrValue = null;\n        if (this.value) {\n          stringArrValue = this.value.map(date => this.formatDateTime(date));\n        }\n        this.onModelChange(stringArrValue);\n      }\n    }\n  }\n\n  getFirstDayOfMonthIndex(month: number, year: number) {\n    let day = new Date();\n    day.setDate(1);\n    day.setMonth(month);\n    day.setFullYear(year);\n\n    let dayIndex = day.getDay() + this.getSundayIndex();\n    return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\n  }\n\n  getDaysCountInMonth(month: number, year: number) {\n    return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\n  }\n\n  getDaysCountInPrevMonth(month: number, year: number) {\n    let prev = this.getPreviousMonthAndYear(month, year);\n    return this.getDaysCountInMonth(prev.month, prev.year);\n  }\n\n  getPreviousMonthAndYear(month: number, year: number) {\n    let m, y;\n\n    if (month === 0) {\n      m = 11;\n      y = year - 1;\n    } else {\n      m = month - 1;\n      y = year;\n    }\n\n    return { month: m, year: y };\n  }\n\n  getNextMonthAndYear(month: number, year: number) {\n    let m, y;\n\n    if (month === 11) {\n      m = 0;\n      y = year + 1;\n    } else {\n      m = month + 1;\n      y = year;\n    }\n\n    return { month: m, year: y };\n  }\n\n  getSundayIndex() {\n    return this.firstDayOfWeek > 0 ? 7 - this.firstDayOfWeek : 0;\n  }\n\n  // @ts-ignore\n  isSelected(dateMeta): boolean {\n    if (this.value) {\n      if (this.isSingleSelection()) {\n        return this.isDateEquals(this.value, dateMeta);\n      } else if (this.isMultipleSelection()) {\n        let selected = false;\n        for (let date of this.value) {\n          selected = this.isDateEquals(date, dateMeta);\n          if (selected) {\n            break;\n          }\n        }\n\n        return selected;\n      } else if (this.isRangeSelection()) {\n        if (this.value[1])\n          return (\n            this.isDateEquals(this.value[0], dateMeta) ||\n            this.isDateEquals(this.value[1], dateMeta) ||\n            this.isDateBetween(this.value[0], this.value[1], dateMeta)\n          );\n        else return this.isDateEquals(this.value[0], dateMeta);\n      }\n    } else {\n      return false;\n    }\n  }\n\n  isComparable() {\n    return this.value != null && typeof this.value !== 'string';\n  }\n\n  isMonthSelected(month) {\n    if (this.isComparable()) {\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\n\n      return !this.isMultipleSelection()\n        ? value.getMonth() === month && value.getFullYear() === this.currentYear\n        : false;\n    }\n\n    return false;\n  }\n\n  isYearSelected(year) {\n    if (this.isComparable()) {\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\n\n      return !this.isMultipleSelection() ? value.getFullYear() === year : false;\n    }\n\n    return false;\n  }\n\n  isDateEquals(value, dateMeta) {\n    if (value)\n      return (\n        value.getDate() === dateMeta.day &&\n        value.getMonth() === dateMeta.month &&\n        value.getFullYear() === dateMeta.year\n      );\n    else return false;\n  }\n\n  isDateBetween(start, end, dateMeta) {\n    let between: boolean = false;\n    if (start && end) {\n      let date: Date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n      return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\n    }\n\n    return between;\n  }\n\n  isSingleSelection(): boolean {\n    return this.selectionMode === 'single';\n  }\n\n  isRangeSelection(): boolean {\n    return this.selectionMode === 'range';\n  }\n\n  isMultipleSelection(): boolean {\n    return this.selectionMode === 'multiple';\n  }\n\n  isToday(today, day, month, year): boolean {\n    return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\n  }\n\n  isSelectable(day, month, year, otherMonth): boolean {\n    let validMin = true;\n    let validMax = true;\n    let validDate = true;\n    let validDay = true;\n\n    if (otherMonth && !this.selectOtherMonths) {\n      return false;\n    }\n\n    if (this.minDate) {\n      if (this.minDate.getFullYear() > year) {\n        validMin = false;\n      } else if (this.minDate.getFullYear() === year) {\n        if (this.minDate.getMonth() > month) {\n          validMin = false;\n        } else if (this.minDate.getMonth() === month) {\n          if (this.minDate.getDate() > day) {\n            validMin = false;\n          }\n        }\n      }\n    }\n\n    if (this.maxDate) {\n      if (this.maxDate.getFullYear() < year) {\n        validMax = false;\n      } else if (this.maxDate.getFullYear() === year) {\n        if (this.maxDate.getMonth() < month) {\n          validMax = false;\n        } else if (this.maxDate.getMonth() === month) {\n          if (this.maxDate.getDate() < day) {\n            validMax = false;\n          }\n        }\n      }\n    }\n\n    if (this.disabledDates) {\n      validDate = !this.isDateDisabled(day, month, year);\n    }\n\n    if (this.disabledDays) {\n      validDay = !this.isDayDisabled(day, month, year);\n    }\n\n    return validMin && validMax && validDate && validDay;\n  }\n\n  isDateDisabled(day: number, month: number, year: number): boolean {\n    if (this.disabledDates) {\n      for (let disabledDate of this.disabledDates) {\n        if (\n          disabledDate.getFullYear() === year &&\n          disabledDate.getMonth() === month &&\n          disabledDate.getDate() === day\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isDayDisabled(day: number, month: number, year: number): boolean {\n    if (this.disabledDays) {\n      let weekday = new Date(year, month, day);\n      let weekdayNumber = weekday.getDay();\n      return this.disabledDays.indexOf(weekdayNumber) !== -1;\n    }\n    return false;\n  }\n\n  onInputFocus(event: Event) {\n    this.focus = true;\n    if (this.showOnFocus) {\n      this.showOverlay();\n    }\n    this.onFocus.emit(event);\n  }\n\n  onInputClick() {\n    if (this.showOnFocus && !this.overlayVisible) {\n      this.showOverlay();\n    }\n  }\n\n  onInputBlur(event: Event) {\n    this.focus = false;\n    this.onBlur.emit(event);\n    if (!this.keepInvalid) {\n      this.updateInputfield();\n    }\n    this.onModelTouched();\n  }\n\n  onButtonClick(event, inputfield) {\n    if (!this.overlayVisible) {\n      inputfield.focus();\n      this.showOverlay();\n    } else {\n      this.hideOverlay();\n    }\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement,\n    });\n  }\n\n  getMonthName(index) {\n    return this.config.getTranslation('monthNames')[index];\n  }\n\n  switchViewButtonDisabled() {\n    return this.numberOfMonths > 1 || this.disabled;\n  }\n\n  onPrevButtonClick(event) {\n    this.navigationState = { backward: true, button: true };\n    this.navBackward(event);\n  }\n\n  onNextButtonClick(event) {\n    this.navigationState = { backward: false, button: true };\n    this.navForward(event);\n  }\n\n  onContainerButtonKeydown(event) {\n    switch (event.which) {\n      //tab\n      case 9:\n        if (!this.inline) {\n          this.trapFocus(event);\n        }\n        break;\n\n      //escape\n      case 27:\n        this.overlayVisible = false;\n        event.preventDefault();\n        break;\n\n      default:\n        //Noop\n        break;\n    }\n  }\n\n  onInputKeydown(event) {\n    this.isKeydown = true;\n    if (event.keyCode === 40 && this.contentViewChild) {\n      this.trapFocus(event);\n    } else if (event.keyCode === 27) {\n      if (this.overlayVisible) {\n        this.overlayVisible = false;\n        event.preventDefault();\n      }\n    } else if (event.keyCode === 13) {\n      if (this.overlayVisible) {\n        this.overlayVisible = false;\n        event.preventDefault();\n      }\n    } else if (event.keyCode === 9 && this.contentViewChild) {\n      DomHandler.getFocusableElements(this.contentViewChild.nativeElement).forEach(\n        el => (el.tabIndex = '-1')\n      );\n      if (this.overlayVisible) {\n        this.overlayVisible = false;\n      }\n    }\n  }\n\n  onDateCellKeydown(event, date, groupIndex) {\n    const cellContent = event.currentTarget;\n    const cell = cellContent.parentElement;\n\n    switch (event.which) {\n      //down arrow\n      case 40: {\n        cellContent.tabIndex = '-1';\n        let cellIndex = DomHandler.index(cell);\n        let nextRow = cell.parentElement.nextElementSibling;\n        if (nextRow) {\n          let focusCell = nextRow.children[cellIndex].children[0];\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigationState = { backward: false };\n            this.navForward(event);\n          } else {\n            nextRow.children[cellIndex].children[0].tabIndex = '0';\n            nextRow.children[cellIndex].children[0].focus();\n          }\n        } else {\n          this.navigationState = { backward: false };\n          this.navForward(event);\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //up arrow\n      case 38: {\n        cellContent.tabIndex = '-1';\n        let cellIndex = DomHandler.index(cell);\n        let prevRow = cell.parentElement.previousElementSibling;\n        if (prevRow) {\n          let focusCell = prevRow.children[cellIndex].children[0];\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigationState = { backward: true };\n            this.navBackward(event);\n          } else {\n            focusCell.tabIndex = '0';\n            focusCell.focus();\n          }\n        } else {\n          this.navigationState = { backward: true };\n          this.navBackward(event);\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //left arrow\n      case 37: {\n        cellContent.tabIndex = '-1';\n        let prevCell = cell.previousElementSibling;\n        if (prevCell) {\n          let focusCell = prevCell.children[0];\n          if (\n            DomHandler.hasClass(focusCell, 'p-disabled') ||\n            DomHandler.hasClass(focusCell.parentElement, 'p-datepicker-weeknumber')\n          ) {\n            this.navigateToMonth(true, groupIndex);\n          } else {\n            focusCell.tabIndex = '0';\n            focusCell.focus();\n          }\n        } else {\n          this.navigateToMonth(true, groupIndex);\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //right arrow\n      case 39: {\n        cellContent.tabIndex = '-1';\n        let nextCell = cell.nextElementSibling;\n        if (nextCell) {\n          let focusCell = nextCell.children[0];\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigateToMonth(false, groupIndex);\n          } else {\n            focusCell.tabIndex = '0';\n            focusCell.focus();\n          }\n        } else {\n          this.navigateToMonth(false, groupIndex);\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //enter\n      //space\n      case 13:\n      case 32: {\n        this.onDateSelect(event, date);\n        event.preventDefault();\n        break;\n      }\n\n      //escape\n      case 27: {\n        this.overlayVisible = false;\n        event.preventDefault();\n        break;\n      }\n\n      //tab\n      case 9: {\n        if (!this.inline) {\n          this.trapFocus(event);\n        }\n        break;\n      }\n\n      default:\n        //no op\n        break;\n    }\n  }\n\n  onMonthCellKeydown(event, index) {\n    const cell = event.currentTarget;\n    switch (event.which) {\n      //arrows\n      case 38:\n      case 40: {\n        cell.tabIndex = '-1';\n        var cells = cell.parentElement.children;\n        var cellIndex = DomHandler.index(cell);\n        let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];\n        if (nextCell) {\n          nextCell.tabIndex = '0';\n          nextCell.focus();\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //left arrow\n      case 37: {\n        cell.tabIndex = '-1';\n        let prevCell = cell.previousElementSibling;\n        if (prevCell) {\n          prevCell.tabIndex = '0';\n          prevCell.focus();\n        } else {\n          this.navigationState = { backward: true };\n          this.navBackward(event);\n        }\n\n        event.preventDefault();\n        break;\n      }\n\n      //right arrow\n      case 39: {\n        cell.tabIndex = '-1';\n        let nextCell = cell.nextElementSibling;\n        if (nextCell) {\n          nextCell.tabIndex = '0';\n          nextCell.focus();\n        } else {\n          this.navigationState = { backward: false };\n          this.navForward(event);\n        }\n\n        event.preventDefault();\n        break;\n      }\n\n      //enter\n      case 13: {\n        this.onMonthSelect(event, index);\n        event.preventDefault();\n        break;\n      }\n\n      //enter\n      //space\n      case 13:\n      case 32: {\n        this.overlayVisible = false;\n        event.preventDefault();\n        break;\n      }\n\n      //escape\n      case 27: {\n        this.overlayVisible = false;\n        event.preventDefault();\n        break;\n      }\n\n      //tab\n      case 9: {\n        if (!this.inline) {\n          this.trapFocus(event);\n        }\n        break;\n      }\n\n      default:\n        //no op\n        break;\n    }\n  }\n\n  onYearCellKeydown(event, index) {\n    const cell = event.currentTarget;\n\n    switch (event.which) {\n      //arrows\n      case 38:\n      case 40: {\n        cell.tabIndex = '-1';\n        var cells = cell.parentElement.children;\n        var cellIndex = DomHandler.index(cell);\n        let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2];\n        if (nextCell) {\n          nextCell.tabIndex = '0';\n          nextCell.focus();\n        }\n        event.preventDefault();\n        break;\n      }\n\n      //left arrow\n      case 37: {\n        cell.tabIndex = '-1';\n        let prevCell = cell.previousElementSibling;\n        if (prevCell) {\n          prevCell.tabIndex = '0';\n          prevCell.focus();\n        } else {\n          this.navigationState = { backward: true };\n          this.navBackward(event);\n        }\n\n        event.preventDefault();\n        break;\n      }\n\n      //right arrow\n      case 39: {\n        cell.tabIndex = '-1';\n        let nextCell = cell.nextElementSibling;\n        if (nextCell) {\n          nextCell.tabIndex = '0';\n          nextCell.focus();\n        } else {\n          this.navigationState = { backward: false };\n          this.navForward(event);\n        }\n\n        event.preventDefault();\n        break;\n      }\n\n      //enter\n      //space\n      case 13:\n      case 32: {\n        this.onYearSelect(event, index);\n        event.preventDefault();\n        break;\n      }\n\n      //escape\n      case 27: {\n        this.overlayVisible = false;\n        event.preventDefault();\n        break;\n      }\n\n      //tab\n      case 9: {\n        this.trapFocus(event);\n        break;\n      }\n\n      default:\n        //no op\n        break;\n    }\n  }\n\n  navigateToMonth(prev, groupIndex) {\n    if (prev) {\n      if (this.numberOfMonths === 1 || groupIndex === 0) {\n        this.navigationState = { backward: true };\n        this.navBackward(event);\n      } else {\n        let prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];\n        let cells = DomHandler.find(\n          prevMonthContainer,\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\n        );\n        let focusCell = cells[cells.length - 1];\n        focusCell.tabIndex = '0';\n        focusCell.focus();\n      }\n    } else {\n      if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {\n        this.navigationState = { backward: false };\n        this.navForward(event);\n      } else {\n        let nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];\n        let focusCell = DomHandler.findSingle(\n          nextMonthContainer,\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\n        );\n        focusCell.tabIndex = '0';\n        focusCell.focus();\n      }\n    }\n  }\n\n  updateFocus() {\n    let cell;\n\n    if (this.navigationState) {\n      if (this.navigationState.button) {\n        this.initFocusableCell();\n\n        if (this.navigationState.backward)\n          DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-prev').focus();\n        else DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-next').focus();\n      } else {\n        if (this.navigationState.backward) {\n          let cells;\n\n          if (this.currentView === 'month') {\n            cells = DomHandler.find(\n              this.contentViewChild.nativeElement,\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\n            );\n          } else if (this.currentView === 'year') {\n            cells = DomHandler.find(\n              this.contentViewChild.nativeElement,\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\n            );\n          } else {\n            cells = DomHandler.find(\n              this.contentViewChild.nativeElement,\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\n            );\n          }\n\n          if (cells && cells.length > 0) {\n            cell = cells[cells.length - 1];\n          }\n        } else {\n          if (this.currentView === 'month') {\n            cell = DomHandler.findSingle(\n              this.contentViewChild.nativeElement,\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\n            );\n          } else if (this.currentView === 'year') {\n            cell = DomHandler.findSingle(\n              this.contentViewChild.nativeElement,\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\n            );\n          } else {\n            cell = DomHandler.findSingle(\n              this.contentViewChild.nativeElement,\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\n            );\n          }\n        }\n\n        if (cell) {\n          cell.tabIndex = '0';\n          cell.focus();\n        }\n      }\n\n      this.navigationState = null;\n    } else {\n      this.initFocusableCell();\n    }\n  }\n\n  initFocusableCell() {\n    let cell;\n\n    if (this.currentView === 'month') {\n      let cells = DomHandler.find(\n        this.contentViewChild.nativeElement,\n        '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\n      );\n      let selectedCell = DomHandler.findSingle(\n        this.contentViewChild.nativeElement,\n        '.p-monthpicker .p-monthpicker-month.p-highlight'\n      );\n      cells.forEach(cell => (cell.tabIndex = -1));\n      cell = selectedCell || cells[0];\n\n      if (cells.length === 0) {\n        let disabledCells = DomHandler.find(\n          this.contentViewChild.nativeElement,\n          '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = \"0\"]'\n        );\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\n      }\n    } else if (this.currentView === 'year') {\n      let cells = DomHandler.find(\n        this.contentViewChild.nativeElement,\n        '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\n      );\n      let selectedCell = DomHandler.findSingle(\n        this.contentViewChild.nativeElement,\n        '.p-yearpicker .p-yearpicker-year.p-highlight'\n      );\n      cells.forEach(cell => (cell.tabIndex = -1));\n      cell = selectedCell || cells[0];\n\n      if (cells.length === 0) {\n        let disabledCells = DomHandler.find(\n          this.contentViewChild.nativeElement,\n          '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = \"0\"]'\n        );\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\n      }\n    } else {\n      cell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'span.p-highlight');\n      if (!cell) {\n        let todayCell = DomHandler.findSingle(\n          this.contentViewChild.nativeElement,\n          'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)'\n        );\n        if (todayCell) cell = todayCell;\n        else\n          cell = DomHandler.findSingle(\n            this.contentViewChild.nativeElement,\n            '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\n          );\n      }\n    }\n\n    if (cell) {\n      cell.tabIndex = '0';\n\n      if (!this.preventFocus && (!this.navigationState || !this.navigationState.button)) {\n        setTimeout(() => {\n          cell.focus();\n        }, 1);\n      }\n\n      this.preventFocus = false;\n    }\n  }\n\n  trapFocus(event) {\n    let focusableElements = DomHandler.getFocusableElements(this.contentViewChild.nativeElement);\n\n    if (focusableElements && focusableElements.length > 0) {\n      if (!focusableElements[0].ownerDocument.activeElement) {\n        focusableElements[0].focus();\n      } else {\n        let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n        if (event.shiftKey) {\n          if (focusedIndex == -1 || focusedIndex === 0) {\n            if (this.focusTrap) {\n              focusableElements[focusableElements.length - 1].focus();\n            } else {\n              if (focusedIndex === -1) return this.hideOverlay();\n              else if (focusedIndex === 0) return;\n            }\n          } else {\n            focusableElements[focusedIndex - 1].focus();\n          }\n        } else {\n          if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) {\n            if (!this.focusTrap && focusedIndex != -1) return this.hideOverlay();\n            else focusableElements[0].focus();\n          } else {\n            focusableElements[focusedIndex + 1].focus();\n          }\n        }\n      }\n    }\n\n    event.preventDefault();\n  }\n\n  onMonthDropdownChange(m: string) {\n    this.currentMonth = parseInt(m);\n    this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n    this.createMonths(this.currentMonth, this.currentYear);\n  }\n\n  onYearDropdownChange(y: string) {\n    this.currentYear = parseInt(y);\n    this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\n    this.createMonths(this.currentMonth, this.currentYear);\n  }\n\n  convertTo24Hour = function (hours: number, pm: boolean) {\n    if (this.hourFormat == '12') {\n      if (hours === 12) {\n        return pm ? 12 : 0;\n      } else {\n        return pm ? hours + 12 : hours;\n      }\n    }\n    return hours;\n  };\n\n  validateTime(hour: number, minute: number, second: number, pm: boolean) {\n    let value = this.value;\n    const convertedHour = this.convertTo24Hour(hour, pm);\n    if (this.isRangeSelection()) {\n      value = this.value[1] || this.value[0];\n    }\n    if (this.isMultipleSelection()) {\n      value = this.value[this.value.length - 1];\n    }\n    const valueDateString = value ? value.toDateString() : null;\n    if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n      if (this.minDate.getHours() > convertedHour) {\n        return false;\n      }\n      if (this.minDate.getHours() === convertedHour) {\n        if (this.minDate.getMinutes() > minute) {\n          return false;\n        }\n        if (this.minDate.getMinutes() === minute) {\n          if (this.minDate.getSeconds() > second) {\n            return false;\n          }\n        }\n      }\n    }\n\n    if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n      if (this.maxDate.getHours() < convertedHour) {\n        return false;\n      }\n      if (this.maxDate.getHours() === convertedHour) {\n        if (this.maxDate.getMinutes() < minute) {\n          return false;\n        }\n        if (this.maxDate.getMinutes() === minute) {\n          if (this.maxDate.getSeconds() < second) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  incrementHour(event) {\n    const prevHour = this.currentHour;\n    let newHour = this.currentHour + this.stepHour;\n    let newPM = this.pm;\n\n    if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;\n    else if (this.hourFormat == '12') {\n      // Before the AM/PM break, now after\n      if (prevHour < 12 && newHour > 11) {\n        newPM = !this.pm;\n      }\n      newHour = newHour >= 13 ? newHour - 12 : newHour;\n    }\n\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n      this.currentHour = newHour;\n      this.pm = newPM;\n    }\n    event.preventDefault();\n  }\n\n  onTimePickerElementMouseDown(event: Event, type: number, direction: number) {\n    if (!this.disabled) {\n      this.repeat(event, null, type, direction);\n      event.preventDefault();\n    }\n  }\n\n  onTimePickerElementMouseUp(event: Event) {\n    if (!this.disabled) {\n      this.clearTimePickerTimer();\n      this.updateTime();\n    }\n  }\n\n  onTimePickerElementMouseLeave() {\n    if (!this.disabled && this.timePickerTimer) {\n      this.clearTimePickerTimer();\n      this.updateTime();\n    }\n  }\n\n  repeat(event: Event, interval: number, type: number, direction: number) {\n    let i = interval || 500;\n\n    this.clearTimePickerTimer();\n    this.timePickerTimer = setTimeout(() => {\n      this.repeat(event, 100, type, direction);\n      this.cd.markForCheck();\n    }, i);\n\n    switch (type) {\n      case 0:\n        if (direction === 1) this.incrementHour(event);\n        else this.decrementHour(event);\n        break;\n\n      case 1:\n        if (direction === 1) this.incrementMinute(event);\n        else this.decrementMinute(event);\n        break;\n\n      case 2:\n        if (direction === 1) this.incrementSecond(event);\n        else this.decrementSecond(event);\n        break;\n    }\n\n    this.updateInputfield();\n  }\n\n  clearTimePickerTimer() {\n    if (this.timePickerTimer) {\n      clearTimeout(this.timePickerTimer);\n      this.timePickerTimer = null;\n    }\n  }\n\n  decrementHour(event) {\n    let newHour = this.currentHour - this.stepHour;\n    let newPM = this.pm;\n\n    if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;\n    else if (this.hourFormat == '12') {\n      // If we were at noon/midnight, then switch\n      if (this.currentHour === 12) {\n        newPM = !this.pm;\n      }\n      newHour = newHour <= 0 ? 12 + newHour : newHour;\n    }\n\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n      this.currentHour = newHour;\n      this.pm = newPM;\n    }\n\n    event.preventDefault();\n  }\n\n  incrementMinute(event) {\n    let newMinute = this.currentMinute + this.stepMinute;\n    newMinute = newMinute > 59 ? newMinute - 60 : newMinute;\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n      this.currentMinute = newMinute;\n    }\n\n    event.preventDefault();\n  }\n\n  decrementMinute(event) {\n    let newMinute = this.currentMinute - this.stepMinute;\n    newMinute = newMinute < 0 ? 60 + newMinute : newMinute;\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n      this.currentMinute = newMinute;\n    }\n\n    event.preventDefault();\n  }\n\n  incrementSecond(event) {\n    let newSecond = this.currentSecond + this.stepSecond;\n    newSecond = newSecond > 59 ? newSecond - 60 : newSecond;\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n      this.currentSecond = newSecond;\n    }\n\n    event.preventDefault();\n  }\n\n  decrementSecond(event) {\n    let newSecond = this.currentSecond - this.stepSecond;\n    newSecond = newSecond < 0 ? 60 + newSecond : newSecond;\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n      this.currentSecond = newSecond;\n    }\n\n    event.preventDefault();\n  }\n\n  updateTime() {\n    let value = this.value;\n    if (this.isRangeSelection()) {\n      value = this.value[1] || this.value[0];\n    }\n    if (this.isMultipleSelection()) {\n      value = this.value[this.value.length - 1];\n    }\n    value = value ? new Date(value.getTime()) : new Date();\n\n    if (this.hourFormat == '12') {\n      if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);\n      else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n    } else {\n      value.setHours(this.currentHour);\n    }\n\n    value.setMinutes(this.currentMinute);\n    value.setSeconds(this.currentSecond);\n    if (this.isRangeSelection()) {\n      if (this.value[1]) value = [this.value[0], value];\n      else value = [value, null];\n    }\n\n    if (this.isMultipleSelection()) {\n      value = [...this.value.slice(0, -1), value];\n    }\n\n    this.updateModel(value);\n    this.onSelect.emit(value);\n    this.updateInputfield();\n  }\n\n  toggleAMPM(event) {\n    const newPM = !this.pm;\n    if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {\n      this.pm = newPM;\n      this.updateTime();\n    }\n    event.preventDefault();\n  }\n\n  onUserInput(event) {\n    // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n    if (!this.isKeydown) {\n      return;\n    }\n    this.isKeydown = false;\n\n    let val = event.target.value;\n    try {\n      let value = this.parseValueFromString(val);\n      if (this.isValidSelection(value)) {\n        this.updateModel(value);\n        this.updateUI();\n      }\n    } catch (err) {\n      //invalid date\n      this.updateModel(null);\n    }\n\n    this.filled = val != null && val.length;\n    this.onInput.emit(event);\n  }\n\n  isValidSelection(value): boolean {\n    let isValid = true;\n    if (this.isSingleSelection()) {\n      if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n        isValid = false;\n      }\n    } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n      if (this.isRangeSelection()) {\n        isValid = value.length > 1 && value[1] > value[0] ? true : false;\n      }\n    }\n    return isValid;\n  }\n\n  parseValueFromString(text: string): Date | Date[] {\n    if (!text || text.trim().length === 0) {\n      return null;\n    }\n\n    let value: any;\n\n    if (this.isSingleSelection()) {\n      value = this.parseDateTime(text);\n    } else if (this.isMultipleSelection()) {\n      let tokens = text.split(this.multipleSeparator);\n      value = [];\n      for (let token of tokens) {\n        value.push(this.parseDateTime(token.trim()));\n      }\n    } else if (this.isRangeSelection()) {\n      let tokens = text.split(' ' + this.rangeSeparator + ' ');\n      value = [];\n      for (let i = 0; i < tokens.length; i++) {\n        value[i] = this.parseDateTime(tokens[i].trim());\n      }\n    }\n\n    return value;\n  }\n\n  parseDateTime(text): Date {\n    let date: Date;\n    let parts: string[] = text.split(' ');\n\n    if (this.timeOnly) {\n      date = new Date();\n      this.populateTime(date, parts[0], parts[1]);\n    } else {\n      const dateFormat = this.getDateFormat();\n      if (this.showTime) {\n        let ampm = this.hourFormat == '12' ? parts.pop() : null;\n        let timeString = parts.pop();\n\n        date = this.parseDate(parts.join(' '), dateFormat);\n        this.populateTime(date, timeString, ampm);\n      } else {\n        date = this.parseDate(text, dateFormat);\n      }\n    }\n\n    return date;\n  }\n\n  populateTime(value, timeString, ampm) {\n    if (this.hourFormat == '12' && !ampm) {\n      throw 'Invalid Time';\n    }\n\n    this.pm = ampm === 'PM' || ampm === 'pm';\n    let time = this.parseTime(timeString);\n    value.setHours(time.hour);\n    value.setMinutes(time.minute);\n    value.setSeconds(time.second);\n  }\n\n  updateUI() {\n    let val = this.value || this.defaultDate || new Date();\n    if (Array.isArray(val)) {\n      val = val[0];\n    }\n\n    this.currentMonth = val.getMonth();\n    this.currentYear = val.getFullYear();\n    this.createMonths(this.currentMonth, this.currentYear);\n\n    if (this.showTime || this.timeOnly) {\n      this.setCurrentHourPM(val.getHours());\n      this.currentMinute = val.getMinutes();\n      this.currentSecond = val.getSeconds();\n    }\n  }\n\n  showOverlay() {\n    if (!this.overlayVisible) {\n      this.updateUI();\n\n      if (!this.touchUI) {\n        this.preventFocus = true;\n      }\n\n      this.overlayVisible = true;\n    }\n  }\n\n  hideOverlay() {\n    this.overlayVisible = false;\n    this.clearTimePickerTimer();\n\n    if (this.touchUI) {\n      this.disableModality();\n    }\n\n    this.cd.markForCheck();\n  }\n\n  toggle() {\n    if (!this.inline) {\n      if (!this.overlayVisible) {\n        this.showOverlay();\n        this.inputfieldViewChild.nativeElement.focus();\n      } else {\n        this.hideOverlay();\n      }\n    }\n  }\n\n  onOverlayAnimationStart(event: AnimationEvent) {\n    // @ts-ignore\n    switch (event.toState) {\n      case 'visible':\n      case 'visibleTouchUI':\n        if (!this.inline) {\n          // @ts-ignore\n          this.overlay = event.element;\n          this.overlay.setAttribute(this.attributeSelector, '');\n          this.appendOverlay();\n          this.updateFocus();\n          if (this.autoZIndex) {\n            if (this.touchUI)\n              ZIndexUtils.set('modal', this.overlay, this.baseZIndex || this.config.zIndex.modal);\n            else ZIndexUtils.set('overlay', this.overlay, this.baseZIndex || this.config.zIndex.overlay);\n          }\n\n          this.alignOverlay();\n          this.onShow.emit(event);\n        }\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        this.onClose.emit(event);\n        break;\n    }\n  }\n\n  onOverlayAnimationDone(event: AnimationEvent) {\n    // @ts-ignore\n    switch (event.toState) {\n      case 'visible':\n      case 'visibleTouchUI':\n        if (!this.inline) {\n          this.bindDocumentClickListener();\n          this.bindDocumentResizeListener();\n          this.bindScrollListener();\n        }\n        break;\n\n      case 'void':\n        if (this.autoZIndex) {\n          // @ts-ignore\n          ZIndexUtils.clear(event.element);\n        }\n        break;\n    }\n  }\n\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);\n      else DomHandler.appendChild(this.overlay, this.appendTo);\n    }\n  }\n\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n\n  alignOverlay() {\n    if (this.touchUI) {\n      this.enableModality(this.overlay);\n    } else if (this.overlay) {\n      if (this.appendTo) {\n        if (this.view === 'date') {\n          this.overlay.style.width = DomHandler.getOuterWidth(this.overlay) + 'px';\n          this.overlay.style.minWidth =\n            DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\n        } else {\n          this.overlay.style.width = DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\n        }\n\n        DomHandler.absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);\n      } else {\n        DomHandler.relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);\n      }\n    }\n  }\n\n  enableModality(element) {\n    if (!this.mask) {\n      this.mask = document.createElement('div');\n      this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);\n      let maskStyleClass =\n        'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter';\n      DomHandler.addMultipleClasses(this.mask, maskStyleClass);\n\n      this.maskClickListener = this.renderer.listen(this.mask, 'click', (event: any) => {\n        this.disableModality();\n      });\n      document.body.appendChild(this.mask);\n      DomHandler.addClass(document.body, 'p-overflow-hidden');\n    }\n  }\n\n  disableModality() {\n    if (this.mask) {\n      DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n      this.animationEndListener = this.destroyMask.bind(this);\n      this.mask.addEventListener('animationend', this.animationEndListener);\n    }\n  }\n\n  destroyMask() {\n    document.body.removeChild(this.mask);\n    let bodyChildren = document.body.children;\n    let hasBlockerMasks: boolean;\n    for (let i = 0; i < bodyChildren.length; i++) {\n      let bodyChild = bodyChildren[i];\n      if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n        hasBlockerMasks = true;\n        break;\n      }\n    }\n\n    if (!hasBlockerMasks) {\n      DomHandler.removeClass(document.body, 'p-overflow-hidden');\n    }\n\n    this.unbindAnimationEndListener();\n    this.unbindMaskClickListener();\n    this.mask = null;\n  }\n\n  unbindMaskClickListener() {\n    if (this.maskClickListener) {\n      this.maskClickListener();\n      this.maskClickListener = null;\n    }\n  }\n\n  unbindAnimationEndListener() {\n    if (this.animationEndListener && this.mask) {\n      this.mask.removeEventListener('animationend', this.animationEndListener);\n      this.animationEndListener = null;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    if (this.value && typeof this.value === 'string') {\n      this.value = this.parseValueFromString(this.value);\n    }\n\n    this.updateInputfield();\n    this.updateUI();\n    this.cd.markForCheck();\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val: boolean): void {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  getDateFormat() {\n    return this.dateFormat || this.getTranslation('dateFormat');\n  }\n\n  // Ported from jquery-ui datepicker formatDate\n  formatDate(date, format) {\n    if (!date) {\n      return '';\n    }\n\n    let iFormat;\n    const lookAhead = match => {\n        const matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\n        if (matches) {\n          iFormat++;\n        }\n        return matches;\n      },\n      formatNumber = (match, value, len) => {\n        let num = '' + value;\n        if (lookAhead(match)) {\n          while (num.length < len) {\n            num = '0' + num;\n          }\n        }\n        return num;\n      },\n      formatName = (match, value, shortNames, longNames) => {\n        return lookAhead(match) ? longNames[value] : shortNames[value];\n      };\n    let output = '';\n    let literal = false;\n\n    if (date) {\n      for (iFormat = 0; iFormat < format.length; iFormat++) {\n        if (literal) {\n          if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n            literal = false;\n          } else {\n            output += format.charAt(iFormat);\n          }\n        } else {\n          switch (format.charAt(iFormat)) {\n            case 'd':\n              output += formatNumber('d', date.getDate(), 2);\n              break;\n            case 'D':\n              output += formatName(\n                'D',\n                date.getDay(),\n                this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\n                this.getTranslation(TranslationKeys.DAY_NAMES)\n              );\n              break;\n            case 'o':\n              output += formatNumber(\n                'o',\n                Math.round(\n                  (new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\n                    new Date(date.getFullYear(), 0, 0).getTime()) /\n                    86400000\n                ),\n                3\n              );\n              break;\n            case 'm':\n              output += formatNumber('m', date.getMonth() + 1, 2);\n              break;\n            case 'M':\n              output += formatName(\n                'M',\n                date.getMonth(),\n                this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\n                this.getTranslation(TranslationKeys.MONTH_NAMES)\n              );\n              break;\n            case 'y':\n              output += lookAhead('y')\n                ? date.getFullYear()\n                : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\n              break;\n            case '@':\n              output += date.getTime();\n              break;\n            case '!':\n              output += date.getTime() * 10000 + this.ticksTo1970;\n              break;\n            case \"'\":\n              if (lookAhead(\"'\")) {\n                output += \"'\";\n              } else {\n                literal = true;\n              }\n              break;\n            default:\n              output += format.charAt(iFormat);\n          }\n        }\n      }\n    }\n    return output;\n  }\n\n  formatTime(date) {\n    if (!date) {\n      return '';\n    }\n\n    let output = '';\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let seconds = date.getSeconds();\n\n    if (this.hourFormat == '12' && hours > 11 && hours != 12) {\n      hours -= 12;\n    }\n\n    if (this.hourFormat == '12') {\n      output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;\n    } else {\n      output += hours < 10 ? '0' + hours : hours;\n    }\n    output += ':';\n    output += minutes < 10 ? '0' + minutes : minutes;\n\n    if (this.showSeconds) {\n      output += ':';\n      output += seconds < 10 ? '0' + seconds : seconds;\n    }\n\n    if (this.hourFormat == '12') {\n      output += date.getHours() > 11 ? ' PM' : ' AM';\n    }\n\n    return output;\n  }\n\n  parseTime(value) {\n    let tokens: string[] = value.split(':');\n    let validTokenLength = this.showSeconds ? 3 : 2;\n\n    if (tokens.length !== validTokenLength) {\n      throw 'Invalid time';\n    }\n\n    let h = parseInt(tokens[0]);\n    let m = parseInt(tokens[1]);\n    let s = this.showSeconds ? parseInt(tokens[2]) : null;\n\n    if (\n      isNaN(h) ||\n      isNaN(m) ||\n      h > 23 ||\n      m > 59 ||\n      (this.hourFormat == '12' && h > 12) ||\n      (this.showSeconds && (isNaN(s) || s > 59))\n    ) {\n      throw 'Invalid time';\n    } else {\n      if (this.hourFormat == '12') {\n        if (h !== 12 && this.pm) {\n          h += 12;\n        } else if (!this.pm && h === 12) {\n          h -= 12;\n        }\n      }\n\n      return { hour: h, minute: m, second: s };\n    }\n  }\n\n  // Ported from jquery-ui datepicker parseDate\n  parseDate(value, format) {\n    if (format == null || value == null) {\n      throw 'Invalid arguments';\n    }\n\n    value = typeof value === 'object' ? value.toString() : value + '';\n    if (value === '') {\n      return null;\n    }\n\n    let iFormat,\n      dim,\n      extra,\n      iValue = 0,\n      shortYearCutoff =\n        typeof this.shortYearCutoff !== 'string'\n          ? this.shortYearCutoff\n          : (new Date().getFullYear() % 100) + parseInt(this.shortYearCutoff, 10),\n      year = -1,\n      month = -1,\n      day = -1,\n      doy = -1,\n      literal = false,\n      date,\n      lookAhead = match => {\n        let matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\n        if (matches) {\n          iFormat++;\n        }\n        return matches;\n      },\n      getNumber = match => {\n        let isDoubled = lookAhead(match),\n          size =\n            match === '@' ? 14 : match === '!' ? 20 : match === 'y' && isDoubled ? 4 : match === 'o' ? 3 : 2,\n          minSize = match === 'y' ? size : 1,\n          digits = new RegExp('^\\\\d{' + minSize + ',' + size + '}'),\n          num = value.substring(iValue).match(digits);\n        if (!num) {\n          throw 'Missing number at position ' + iValue;\n        }\n        iValue += num[0].length;\n        return parseInt(num[0], 10);\n      },\n      getName = (match, shortNames, longNames) => {\n        let index = -1;\n        let arr = lookAhead(match) ? longNames : shortNames;\n        let names = [];\n\n        for (let i = 0; i < arr.length; i++) {\n          names.push([i, arr[i]]);\n        }\n        names.sort((a, b) => {\n          return -(a[1].length - b[1].length);\n        });\n\n        for (let i = 0; i < names.length; i++) {\n          let name = names[i][1];\n          if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n            index = names[i][0];\n            iValue += name.length;\n            break;\n          }\n        }\n\n        if (index !== -1) {\n          return index + 1;\n        } else {\n          throw 'Unknown name at position ' + iValue;\n        }\n      },\n      checkLiteral = () => {\n        if (value.charAt(iValue) !== format.charAt(iFormat)) {\n          throw 'Unexpected literal at position ' + iValue;\n        }\n        iValue++;\n      };\n\n    if (this.view === 'month') {\n      day = 1;\n    }\n\n    for (iFormat = 0; iFormat < format.length; iFormat++) {\n      if (literal) {\n        if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n          literal = false;\n        } else {\n          checkLiteral();\n        }\n      } else {\n        switch (format.charAt(iFormat)) {\n          case 'd':\n            day = getNumber('d');\n            break;\n          case 'D':\n            getName(\n              'D',\n              this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\n              this.getTranslation(TranslationKeys.DAY_NAMES)\n            );\n            break;\n          case 'o':\n            doy = getNumber('o');\n            break;\n          case 'm':\n            month = getNumber('m');\n            break;\n          case 'M':\n            month = getName(\n              'M',\n              this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\n              this.getTranslation(TranslationKeys.MONTH_NAMES)\n            );\n            break;\n          case 'y':\n            year = getNumber('y');\n            break;\n          case '@':\n            date = new Date(getNumber('@'));\n            year = date.getFullYear();\n            month = date.getMonth() + 1;\n            day = date.getDate();\n            break;\n          case '!':\n            date = new Date((getNumber('!') - this.ticksTo1970) / 10000);\n            year = date.getFullYear();\n            month = date.getMonth() + 1;\n            day = date.getDate();\n            break;\n          case \"'\":\n            if (lookAhead(\"'\")) {\n              checkLiteral();\n            } else {\n              literal = true;\n            }\n            break;\n          default:\n            checkLiteral();\n        }\n      }\n    }\n\n    if (iValue < value.length) {\n      extra = value.substr(iValue);\n      if (!/^\\s+/.test(extra)) {\n        throw 'Extra/unparsed characters found in date: ' + extra;\n      }\n    }\n\n    if (year === -1) {\n      year = new Date().getFullYear();\n    } else if (year < 100) {\n      year +=\n        new Date().getFullYear() - (new Date().getFullYear() % 100) + (year <= shortYearCutoff ? 0 : -100);\n    }\n\n    if (doy > -1) {\n      month = 1;\n      day = doy;\n      do {\n        dim = this.getDaysCountInMonth(year, month - 1);\n        if (day <= dim) {\n          break;\n        }\n        month++;\n        day -= dim;\n      } while (true);\n    }\n\n    date = this.daylightSavingAdjust(new Date(year, month - 1, day));\n    if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n      throw 'Invalid date'; // E.g. 31/02/00\n    }\n\n    return date;\n  }\n\n  daylightSavingAdjust(date) {\n    if (!date) {\n      return null;\n    }\n\n    date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n\n    return date;\n  }\n\n  updateFilledState() {\n    this.filled = this.inputFieldValue && this.inputFieldValue != '';\n  }\n\n  onTodayButtonClick(event) {\n    let date: Date = new Date();\n    let dateMeta = {\n      day: date.getDate(),\n      month: date.getMonth(),\n      year: date.getFullYear(),\n      otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\n      today: true,\n      selectable: true,\n    };\n\n    this.onDateSelect(event, dateMeta);\n    this.onTodayClick.emit(event);\n  }\n\n  onClearButtonClick(event) {\n    this.updateModel(null);\n    this.updateInputfield();\n    this.hideOverlay();\n    this.onClearClick.emit(event);\n  }\n\n  createResponsiveStyle() {\n    if (this.numberOfMonths > 1 && this.responsiveOptions) {\n      if (!this.responsiveStyleElement) {\n        this.responsiveStyleElement = document.createElement('style');\n        this.responsiveStyleElement.type = 'text/css';\n        document.body.appendChild(this.responsiveStyleElement);\n      }\n\n      let innerHTML = '';\n      if (this.responsiveOptions) {\n        let responsiveOptions = [...this.responsiveOptions]\n          .filter(o => !!(o.breakpoint && o.numMonths))\n          .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }));\n\n        for (let i = 0; i < responsiveOptions.length; i++) {\n          let { breakpoint, numMonths } = responsiveOptions[i];\n          let styles = `\n                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\n                            display: inline-flex !important;\n                        }\n                    `;\n\n          for (let j = numMonths; j < this.numberOfMonths; j++) {\n            styles += `\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\n                                display: none !important;\n                            }\n                        `;\n          }\n\n          innerHTML += `\n                        @media screen and (max-width: ${breakpoint}) {\n                            ${styles}\n                        }\n                    `;\n        }\n      }\n\n      this.responsiveStyleElement.innerHTML = innerHTML;\n    }\n  }\n\n  destroyResponsiveStyleElement() {\n    if (this.responsiveStyleElement) {\n      this.responsiveStyleElement.remove();\n      this.responsiveStyleElement = null;\n    }\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      this.zone.runOutsideAngular(() => {\n        const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n        this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n          if (this.isOutsideClicked(event) && this.overlayVisible) {\n            this.zone.run(() => {\n              this.hideOverlay();\n              this.onClickOutside.emit(event);\n\n              this.cd.markForCheck();\n            });\n          }\n        });\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    if (!this.documentResizeListener && !this.touchUI) {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hideOverlay();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  isOutsideClicked(event: Event) {\n    return !(\n      this.el.nativeElement.isSameNode(event.target) ||\n      this.isNavIconClicked(event) ||\n      this.el.nativeElement.contains(event.target) ||\n      (this.overlay && this.overlay.contains(<Node>event.target))\n    );\n  }\n\n  isNavIconClicked(event: Event) {\n    return (\n      DomHandler.hasClass(event.target, 'p-datepicker-prev') ||\n      DomHandler.hasClass(event.target, 'p-datepicker-prev-icon') ||\n      DomHandler.hasClass(event.target, 'p-datepicker-next') ||\n      DomHandler.hasClass(event.target, 'p-datepicker-next-icon')\n    );\n  }\n\n  onWindowResize() {\n    if (this.overlayVisible && !DomHandler.isAndroid()) {\n      this.hideOverlay();\n    }\n  }\n\n  onOverlayHide() {\n    this.currentView = this.view;\n\n    if (this.mask) {\n      this.destroyMask();\n    }\n\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n  }\n\n  ngOnDestroy() {\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.translationSubscription) {\n      this.translationSubscription.unsubscribe();\n    }\n\n    if (this.overlay && this.autoZIndex) {\n      ZIndexUtils.clear(this.overlay);\n    }\n\n    this.destroyResponsiveStyleElement();\n    this.clearTimePickerTimer();\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "overlayService",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 469,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "overlayService",
                        "type": "OverlayService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "ControlValueAccessor"
            ],
            "accessors": {
                "content": {
                    "name": "content",
                    "setSignature": {
                        "name": "content",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "content",
                                "type": "ElementRef",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 210,
                        "jsdoctags": [
                            {
                                "name": "content",
                                "type": "ElementRef",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "view": {
                    "name": "view",
                    "setSignature": {
                        "name": "view",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "view",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 341,
                        "jsdoctags": [
                            {
                                "name": "view",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "view",
                        "type": "string",
                        "returnType": "string",
                        "line": 337
                    }
                },
                "defaultDate": {
                    "name": "defaultDate",
                    "setSignature": {
                        "name": "defaultDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "defaultDate",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 350,
                        "jsdoctags": [
                            {
                                "name": "defaultDate",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "defaultDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 346
                    }
                },
                "minDate": {
                    "name": "minDate",
                    "setSignature": {
                        "name": "minDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "date",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 368,
                        "jsdoctags": [
                            {
                                "name": "date",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "minDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 364
                    }
                },
                "maxDate": {
                    "name": "maxDate",
                    "setSignature": {
                        "name": "maxDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "date",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 380,
                        "jsdoctags": [
                            {
                                "name": "date",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "maxDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 376
                    }
                },
                "disabledDates": {
                    "name": "disabledDates",
                    "setSignature": {
                        "name": "disabledDates",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabledDates",
                                "type": "Date[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 392,
                        "jsdoctags": [
                            {
                                "name": "disabledDates",
                                "type": "Date[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabledDates",
                        "type": "[]",
                        "returnType": "Date[]",
                        "line": 388
                    }
                },
                "disabledDays": {
                    "name": "disabledDays",
                    "setSignature": {
                        "name": "disabledDays",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabledDays",
                                "type": "number[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 403,
                        "jsdoctags": [
                            {
                                "name": "disabledDays",
                                "type": "number[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabledDays",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 399
                    }
                },
                "yearRange": {
                    "name": "yearRange",
                    "setSignature": {
                        "name": "yearRange",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "yearRange",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 415,
                        "jsdoctags": [
                            {
                                "name": "yearRange",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "yearRange",
                        "type": "string",
                        "returnType": "string",
                        "line": 411
                    }
                },
                "showTime": {
                    "name": "showTime",
                    "setSignature": {
                        "name": "showTime",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "showTime",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 431,
                        "jsdoctags": [
                            {
                                "name": "showTime",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "showTime",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 427
                    }
                },
                "locale": {
                    "name": "locale",
                    "setSignature": {
                        "name": "locale",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newLocale",
                                "type": "LocaleSettings",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 467,
                        "jsdoctags": [
                            {
                                "name": "newLocale",
                                "type": "LocaleSettings",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "locale",
                        "type": "",
                        "returnType": "",
                        "line": 440
                    }
                },
                "responsiveOptions": {
                    "name": "responsiveOptions",
                    "setSignature": {
                        "name": "responsiveOptions",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "responsiveOptions",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 448,
                        "jsdoctags": [
                            {
                                "name": "responsiveOptions",
                                "type": "any[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "responsiveOptions",
                        "type": "[]",
                        "returnType": "any[]",
                        "line": 444
                    }
                },
                "numberOfMonths": {
                    "name": "numberOfMonths",
                    "setSignature": {
                        "name": "numberOfMonths",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "numberOfMonths",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 459,
                        "jsdoctags": [
                            {
                                "name": "numberOfMonths",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "numberOfMonths",
                        "type": "number",
                        "returnType": "number",
                        "line": 455
                    }
                }
            },
            "templateData": "<span\n  #container\n  [ngClass]=\"{\n    'p-calendar-w-btn': showIcon,\n    'p-calendar-timeonly': timeOnly,\n    'p-calendar-disabled': disabled,\n    'p-focus': focus\n  }\"\n  [ngStyle]=\"style\"\n  class=\"{{ styleClass }} p-calendar zyfra-input\"\n>\n  <ng-template [ngIf]=\"!inline\">\n    <div class=\"p-inputgroup\" [class.zyfra-input-group_disabled]=\"disabled\">\n      <span class=\"zyfra-input p-float-label\" [class.zyfra-input_disabled]=\"disabled\">\n        <input\n          #inputfield\n          type=\"text\"\n          [attr.id]=\"inputId\"\n          [attr.name]=\"name\"\n          [attr.required]=\"required\"\n          [attr.aria-required]=\"required\"\n          [value]=\"inputFieldValue\"\n          (focus)=\"onInputFocus($event)\"\n          (keydown)=\"onInputKeydown($event)\"\n          (click)=\"onInputClick()\"\n          (blur)=\"onInputBlur($event)\"\n          [readonly]=\"readonlyInput\"\n          (input)=\"onUserInput($event)\"\n          [ngStyle]=\"inputStyle\"\n          [class]=\"inputStyleClass\"\n          [placeholder]=\"placeholder || ''\"\n          [disabled]=\"disabled\"\n          [attr.tabindex]=\"tabindex\"\n          [attr.inputmode]=\"touchUI ? 'off' : null\"\n          [ngClass]=\"'p-inputtext p-component'\"\n          autocomplete=\"off\"\n          [attr.aria-labelledby]=\"ariaLabelledBy\"\n        />\n        <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"iconAriaLabel\"\n          [icon]=\"icon\"\n          pButton\n          pRipple\n          *ngIf=\"showIcon\"\n          (click)=\"onButtonClick($event, inputfield)\"\n          class=\"p-datepicker-trigger\"\n          [disabled]=\"disabled\"\n          tabindex=\"0\"\n        ></button>\n        <ng-content select=\"[buttons-right]\"></ng-content>\n      </span>\n    </div>\n  </ng-template>\n  <div\n    #contentWrapper\n    [class]=\"panelStyleClass\"\n    [ngStyle]=\"panelStyle\"\n    [ngClass]=\"{\n      'p-datepicker p-component': true,\n      'p-datepicker-inline': inline,\n      'p-disabled': disabled,\n      'p-datepicker-timeonly': timeOnly,\n      'p-datepicker-multiple-month': this.numberOfMonths > 1,\n      'p-datepicker-monthpicker': view === 'month',\n      'p-datepicker-touch-ui': touchUI\n    }\"\n    [@overlayAnimation]=\"\n      touchUI\n        ? {\n            value: 'visibleTouchUI',\n            params: {\n              showTransitionParams: showTransitionOptions,\n              hideTransitionParams: hideTransitionOptions\n            }\n          }\n        : {\n            value: 'visible',\n            params: {\n              showTransitionParams: showTransitionOptions,\n              hideTransitionParams: hideTransitionOptions\n            }\n          }\n    \"\n    [@.disabled]=\"inline === true\"\n    (@overlayAnimation.start)=\"onOverlayAnimationStart($any($event))\"\n    (@overlayAnimation.done)=\"onOverlayAnimationDone($any($event))\"\n    (click)=\"onOverlayClick($event)\"\n    *ngIf=\"inline || overlayVisible\"\n  >\n    <ng-content select=\"p-header\"></ng-content>\n    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n    <ng-container *ngIf=\"!timeOnly\">\n      <div class=\"p-datepicker-group-container\">\n        <div class=\"p-datepicker-group\" *ngFor=\"let month of months; let i = index\">\n          <div class=\"p-datepicker-header\">\n            <button\n              (keydown)=\"onContainerButtonKeydown($event)\"\n              class=\"p-datepicker-prev p-link\"\n              (click)=\"onPrevButtonClick($event)\"\n              *ngIf=\"i === 0\"\n              type=\"button\"\n              pRipple\n            >\n              <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\n            </button>\n            <div class=\"p-datepicker-title\">\n              <button\n                type=\"button\"\n                (click)=\"switchToMonthView($event)\"\n                (keydown)=\"onContainerButtonKeydown($event)\"\n                *ngIf=\"currentView === 'date'\"\n                class=\"p-datepicker-month p-link\"\n                [disabled]=\"switchViewButtonDisabled()\"\n              >\n                {{ getMonthName(month.month) }}\n              </button>\n              <button\n                type=\"button\"\n                (click)=\"switchToYearView($event)\"\n                (keydown)=\"onContainerButtonKeydown($event)\"\n                *ngIf=\"currentView !== 'year'\"\n                class=\"p-datepicker-year p-link\"\n                [disabled]=\"switchViewButtonDisabled()\"\n              >\n                {{ currentYear }}\n              </button>\n              <span class=\"p-datepicker-decade\" *ngIf=\"currentView === 'year'\">\n                <ng-container *ngIf=\"!decadeTemplate\"\n                  >{{ yearPickerValues()[0] }} -\n                  {{ yearPickerValues()[yearPickerValues().length - 1] }}</ng-container\n                >\n                <ng-container\n                  *ngTemplateOutlet=\"decadeTemplate; context: { $implicit: yearPickerValues }\"\n                ></ng-container>\n              </span>\n            </div>\n            <button\n              (keydown)=\"onContainerButtonKeydown($event)\"\n              class=\"p-datepicker-next p-link\"\n              (click)=\"onNextButtonClick($event)\"\n              type=\"button\"\n              pRipple\n            >\n              <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\n            </button>\n          </div>\n          <div class=\"p-datepicker-calendar-container\" *ngIf=\"currentView === 'date'\">\n            <table class=\"p-datepicker-calendar\">\n              <thead>\n                <tr>\n                  <th *ngIf=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\n                    <span>{{ getTranslation('weekHeader') }}</span>\n                  </th>\n                  <th scope=\"col\" *ngFor=\"let weekDay of weekDays; let begin = first; let end = last\">\n                    <span>{{ weekDay }}</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let week of month.dates; let j = index\">\n                  <td *ngIf=\"showWeek\" class=\"p-datepicker-weeknumber\">\n                    <span class=\"p-disabled\">\n                      {{ month.weekNumbers[j] }}\n                    </span>\n                  </td>\n                  <td\n                    *ngFor=\"let date of week\"\n                    [ngClass]=\"{\n                      'p-datepicker-other-month': date.otherMonth,\n                      'p-datepicker-today': date.today\n                    }\"\n                  >\n                    <ng-container *ngIf=\"date.otherMonth ? showOtherMonths : true\">\n                      <span\n                        [ngClass]=\"{ 'p-highlight': isSelected(date), 'p-disabled': !date.selectable }\"\n                        (click)=\"onDateSelect($event, date)\"\n                        draggable=\"false\"\n                        (keydown)=\"onDateCellKeydown($event, date, i)\"\n                        pRipple\n                      >\n                        <ng-container *ngIf=\"!dateTemplate\">{{ date.day }}</ng-container>\n                        <ng-container\n                          *ngTemplateOutlet=\"dateTemplate; context: { $implicit: date }\"\n                        ></ng-container>\n                      </span>\n                    </ng-container>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div class=\"p-monthpicker\" *ngIf=\"currentView === 'month'\">\n        <span\n          *ngFor=\"let m of monthPickerValues(); let i = index\"\n          (click)=\"onMonthSelect($event, i)\"\n          (keydown)=\"onMonthCellKeydown($event, i)\"\n          class=\"p-monthpicker-month\"\n          [ngClass]=\"{\n            'p-highlight': isMonthSelected(i),\n            'p-disabled': !isSelectable(1, i, this.currentYear, false)\n          }\"\n          pRipple\n        >\n          {{ m }}\n        </span>\n      </div>\n      <div class=\"p-yearpicker\" *ngIf=\"currentView === 'year'\">\n        <span\n          *ngFor=\"let y of yearPickerValues()\"\n          (click)=\"onYearSelect($event, y)\"\n          (keydown)=\"onYearCellKeydown($event, y)\"\n          class=\"p-yearpicker-year\"\n          [ngClass]=\"{ 'p-highlight': isYearSelected(y) }\"\n          pRipple\n        >\n          {{ y }}\n        </span>\n      </div>\n    </ng-container>\n    <div class=\"p-timepicker\" *ngIf=\"showTime || timeOnly\">\n      <div class=\"p-hour-picker\">\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"incrementHour($event)\"\n          (keydown.space)=\"incrementHour($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 0, 1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-up\"></span>\n        </button>\n        <span><ng-container *ngIf=\"currentHour < 10\">0</ng-container>{{ currentHour }}</span>\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"decrementHour($event)\"\n          (keydown.space)=\"decrementHour($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 0, -1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-down\"></span>\n        </button>\n      </div>\n      <div class=\"p-separator\">\n        <span>{{ timeSeparator }}</span>\n      </div>\n      <div class=\"p-minute-picker\">\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"incrementMinute($event)\"\n          (keydown.space)=\"incrementMinute($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 1, 1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-up\"></span>\n        </button>\n        <span><ng-container *ngIf=\"currentMinute < 10\">0</ng-container>{{ currentMinute }}</span>\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"decrementMinute($event)\"\n          (keydown.space)=\"decrementMinute($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 1, -1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-down\"></span>\n        </button>\n      </div>\n      <div class=\"p-separator\" *ngIf=\"showSeconds\">\n        <span>{{ timeSeparator }}</span>\n      </div>\n      <div class=\"p-second-picker\" *ngIf=\"showSeconds\">\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"incrementSecond($event)\"\n          (keydown.space)=\"incrementSecond($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 2, 1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-up\"></span>\n        </button>\n        <span><ng-container *ngIf=\"currentSecond < 10\">0</ng-container>{{ currentSecond }}</span>\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (keydown.enter)=\"decrementSecond($event)\"\n          (keydown.space)=\"decrementSecond($event)\"\n          (mousedown)=\"onTimePickerElementMouseDown($event, 2, -1)\"\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-down\"></span>\n        </button>\n      </div>\n      <div class=\"p-ampm-picker\" *ngIf=\"hourFormat === '12'\">\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (click)=\"toggleAMPM($event)\"\n          (keydown.enter)=\"toggleAMPM($event)\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-up\"></span>\n        </button>\n        <span>{{ pm ? 'PM' : 'AM' }}</span>\n        <button\n          class=\"p-link\"\n          type=\"button\"\n          (keydown)=\"onContainerButtonKeydown($event)\"\n          (click)=\"toggleAMPM($event)\"\n          (keydown.enter)=\"toggleAMPM($event)\"\n          pRipple\n        >\n          <span class=\"pi pi-chevron-down\"></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"p-datepicker-buttonbar\" *ngIf=\"showButtonBar\">\n      <button\n        type=\"button\"\n        [label]=\"getTranslation('today')\"\n        (keydown)=\"onContainerButtonKeydown($event)\"\n        (click)=\"onTodayButtonClick($event)\"\n        pButton\n        pRipple\n        [ngClass]=\"[todayButtonStyleClass]\"\n      ></button>\n      <button\n        type=\"button\"\n        [label]=\"getTranslation('clear')\"\n        (keydown)=\"onContainerButtonKeydown($event)\"\n        (click)=\"onClearButtonClick($event)\"\n        pButton\n        pRipple\n        [ngClass]=\"[clearButtonStyleClass]\"\n      ></button>\n    </div>\n    <ng-content select=\"p-footer\"></ng-content>\n    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n  </div>\n</span>\n"
        },
        {
            "name": "ZyfraCellEditorComponent",
            "id": "component-ZyfraCellEditorComponent-9a4ca43f88dfcf5b82c80c13be008fff",
            "file": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-cell-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cell-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { ZyfraTableTemplateDirective } from '../directives/table-template.directive';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'zyfra-cell-editor',\n  templateUrl: './cell-editor.component.html',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraCellEditorComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  @Input() value = '';\n  @Output() valueChange = new EventEmitter<string>();\n\n  inputTemplate: TemplateRef<unknown>;\n\n  public stopPropagation(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  ngAfterContentInit(): void {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-cellEditor>\n  <ng-template pTemplate=\"input\">\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-template #defaultInputTemplate>\n      <input\n        type=\"text\"\n        [value]=\"value\"\n        (input)=\"valueChange.emit($any($event.target).value)\"\n        (click)=\"stopPropagation($event)\"\n      >\n    </ng-template>\n  </ng-template>\n\n  <ng-template pTemplate=\"output\">\n    <ng-content></ng-content>\n  </ng-template>\n</p-cellEditor>\n"
        },
        {
            "name": "ZyfraCheckboxComponent",
            "id": "component-ZyfraCheckboxComponent-21a15d0a0afe74f9ca3e3f6f760eaa36",
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR"
                }
            ],
            "selector": "zyfra-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "binary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "checkboxIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Checkbox } from 'primeng/checkbox';\n\nconst CHECKBOX_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'zyfra-checkbox',\n  templateUrl: './zyfra-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CHECKBOX_VALUE_ACCESSOR],\n})\nexport class ZyfraCheckboxComponent extends Checkbox implements ControlValueAccessor {\n  @Input() override binary = true;\n  @Input() override checkboxIcon = 'zyfra-icon selection-check-simple';\n  @Input() override model: boolean;\n  @Input() override disabled: boolean;\n  @Output() modelChange = new EventEmitter<boolean | null>();\n\n  constructor(cd: ChangeDetectorRef) {\n    super(cd);\n  }\n\n  public onChangeHandler(event: { checked: boolean; originalEvent: PointerEvent }): void {\n    if (this.formControl) {\n      this.formControl.setValue(event.checked);\n    } else {\n      this.model = event.checked;\n    }\n    this.modelChange.emit(this.model);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "Checkbox",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-checkbox\n  [(ngModel)]=\"model\"\n  [name]=\"name\"\n  [value]=\"value\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [binary]=\"binary\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [labelStyleClass]=\"labelStyleClass\"\n  [checkboxIcon]=\"checkboxIcon\"\n  [readonly]=\"readonly\"\n  [required]=\"required\"\n  (onChange)=\"onChangeHandler($event)\"\n></p-checkbox>\n"
        },
        {
            "name": "ZyfraChipComponent",
            "id": "component-ZyfraChipComponent-dad73b0159d03ce97eb2e728d191b7ed",
            "file": "libs/components/src/lib/chip/zyfra-chip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "removable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "removeIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onRemove",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onRemoveHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-chip',\n  templateUrl: './zyfra-chip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraChipComponent {\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() image: string;\n  @Input() removable: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() removeIcon: string = 'zyfra-icon cancel-close';\n\n  /* onRemove */\n  @Output() onRemove: EventEmitter<unknown> = new EventEmitter();\n\n  public onRemoveHandler(event: unknown): void {\n    this.onRemove.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-chip\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [image]=\"image\"\n  [removable]=\"removable\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [removeIcon]=\"removeIcon\"\n  (onRemove)=\"onRemoveHandler($event)\"\n></p-chip>\n"
        },
        {
            "name": "ZyfraConfirmDialogComponent",
            "id": "component-ZyfraConfirmDialogComponent-282bbded4a7f9366a9caf2b174c71256",
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService"
                }
            ],
            "selector": "zyfra-confirm-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-confirm-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Function"
                },
                {
                    "name": "acceptButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "acceptIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "acceptLabel",
                    "defaultValue": "'yes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "acceptMessages",
                    "defaultValue": "[\n    { severity: '', summary: '', detail: '' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "literal type[]"
                },
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "closeOnEscape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "defaultFocus",
                    "defaultValue": "'accept'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "position",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "reject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Function"
                },
                {
                    "name": "rejectButtonStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "rejectIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "rejectLabel",
                    "defaultValue": "'no'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "rejectMessages",
                    "defaultValue": "[\n    { severity: '', summary: '', detail: '' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "literal type[]"
                },
                {
                    "name": "rejectVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'400ms cubic-bezier(0.25, 0.8, 0.25, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<ConfirmEventType>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onHideHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "ConfirmEventType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ConfirmEventType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ConfirmationService, ConfirmEventType, Message } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-confirm-dialog',\n  templateUrl: './zyfra-confirm-dialog.component.html',\n  providers: [ConfirmationService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraConfirmDialogComponent {\n  @Input() message = '';\n  @Input() key: string;\n  @Input() icon: string;\n  @Input() header: string = '';\n  @Input() accept: Function;\n  @Input() reject: Function;\n  @Input() acceptMessages: { severity: string; summary: string; detail: string }[] = [\n    { severity: '', summary: '', detail: '' },\n  ];\n  @Input() rejectMessages: { severity: string; summary: string; detail: string }[] = [\n    { severity: '', summary: '', detail: '' },\n  ];\n  @Input() acceptLabel: string = 'yes';\n  @Input() rejectLabel: string = 'no';\n  @Input() acceptIcon: string;\n  @Input() rejectIcon: string;\n  @Input() acceptButtonStyleClass: string;\n  @Input() rejectButtonStyleClass: string;\n  @Input() acceptVisible: boolean = true;\n  @Input() rejectVisible: boolean = true;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() maskStyleClass: string;\n  @Input() blockScroll: boolean = true;\n  @Input() closeOnEscape: boolean = true;\n  @Input() closable: boolean = false;\n  @Input() focusTrap: boolean = true;\n  @Input() appendTo: any;\n  @Input() dismissableMask: boolean;\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() breakpoints: object;\n  @Input() transitionOptions: string = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\n  @Input() defaultFocus: string = 'accept';\n  @Input() position: string = 'center';\n\n  @Output() onHide: EventEmitter<ConfirmEventType> = new EventEmitter();\n\n  msgs: Message[] = [];\n\n  constructor(private confirmationService: ConfirmationService) {}\n\n  public onClick(): void {\n    this.confirmationService.confirm({\n      message: this.message,\n      header: this.header,\n      icon: this.icon,\n      accept: () => {\n        this.msgs = this.acceptMessages;\n        this.accept?.();\n      },\n      reject: () => {\n        this.msgs = this.rejectMessages;\n        this.reject?.();\n      },\n    });\n  }\n\n  public onHideHandler(event: ConfirmEventType): void {\n    this.onHide.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-confirmDialog\n  [message]=\"message\"\n  [key]=\"key\"\n  [icon]=\"icon\"\n  [header]=\"header\"\n  [acceptLabel]=\"acceptLabel\"\n  [rejectLabel]=\"rejectLabel\"\n  [acceptIcon]=\"acceptIcon\"\n  [rejectIcon]=\"rejectIcon\"\n  [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n  [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n  [acceptVisible]=\"acceptVisible\"\n  [rejectVisible]=\"rejectVisible\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [maskStyleClass]=\"maskStyleClass\"\n  [blockScroll]=\"blockScroll\"\n  [closeOnEscape]=\"closeOnEscape\"\n  [dismissableMask]=\"dismissableMask\"\n  [closable]=\"closable\"\n  [focusTrap]=\"focusTrap\"\n  [appendTo]=\"appendTo\"\n  [defaultFocus]=\"defaultFocus\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [breakpoints]=\"breakpoints\"\n  [transitionOptions]=\"transitionOptions\"\n  [position]=\"position\"\n  (onHide)=\"onHideHandler($event)\"\n></p-confirmDialog>\n"
        },
        {
            "name": "ZyfraDatepickerComponent",
            "id": "component-ZyfraDatepickerComponent-4d0a27eba041e7b4292ab185bcbefbb9",
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-datepicker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "calendarBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string"
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean"
                },
                {
                    "name": "disabledDates",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "Date[]"
                },
                {
                    "name": "disabledDays",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "number[]"
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "number"
                },
                {
                    "name": "hideOnDateTimeSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "inputClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "defaultValue": "ZyfraLocale.ru",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "ZyfraLocale"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string | number | Date"
                },
                {
                    "name": "monthNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean"
                },
                {
                    "name": "numberOfMonths",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "returnFormatValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "ZyfraDatePickerValueType"
                },
                {
                    "name": "selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "showCalendarBtn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean"
                },
                {
                    "name": "showDate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "showOnFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean"
                },
                {
                    "name": "showWeek",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string"
                },
                {
                    "name": "yearNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean"
                },
                {
                    "name": "yearRange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_defaultDateValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_defaultTimeValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "calendar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Calendar",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'calendar', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "controlRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentValueType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "datepickerValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datepickerValueShowBtn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dateValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultDateFormat",
                    "defaultValue": "'dd.MM.yyyy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "defaultTimeFormat",
                    "defaultValue": "'HH:mm:ss'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formatDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "formattedValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formatTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "invalidDateMessage",
                    "defaultValue": "'Invalid date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "localeFns",
                    "defaultValue": "{\n    locale: ruFns,\n   }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDatePickerLocaleInterface",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnChangeCallback",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoidFunction",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTime[]",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timestampFormat",
                    "defaultValue": "'x'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "timeValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeControlState",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 445,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | string | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkAbsoluteTime",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 300,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "generateFormattedValueFromCalendarValue",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 340,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateFormattedValueFromInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 386,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getCurrentValueType",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 557,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValidatorRequiredControl",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValueOutput",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | number | Date",
                    "typeParameters": [],
                    "line": 518,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCalendarDateChange",
                    "args": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "datepickerValue",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChangeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 512,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | Date | number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDatepickerNgModelChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openCalendar",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "OnChangeCallback",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnValidatorChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replaceSymbols",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 577,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveCalendarDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFormattedValue",
                    "args": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 450,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "defaultDateValue",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInputTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "ZyfraTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLocalizationCalendar",
                    "args": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 495,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "locale",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "outsideValue",
                            "type": "string | number | Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnChanges,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  SimpleChanges,\n  OnDestroy,\n  Optional,\n  Self,\n  AfterViewInit,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl,\n} from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Calendar } from 'primeng/calendar';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { en } from './i18n/en_US';\nimport { ru } from './i18n/ru_RU';\nimport { isIsoDate } from './utils/is-iso-date';\nimport { generateTimeArray } from './utils/generate-time-array';\nimport { ZyfraLocale } from './model/zyfra-date-picker-locale.enum';\nimport { ZyfraDatePickerValueType } from './model/zyfra-date-picker-value-type.enum';\nimport { ZyfraTime } from './model/zyfra-time.model';\nimport { format, isValid, parse, parseISO } from 'date-fns';\nimport { ru as ruFns, enUS as enFns } from 'date-fns/esm/locale';\nimport { ZyfraDatePickerLocaleInterface } from './model/zyfra-date-picker.model';\n\ntype OnChangeCallback = (value: string | number | Date) => void;\n\n@Component({\n  selector: 'zyfra-datepicker',\n  templateUrl: './zyfra-datepicker.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraDatepickerComponent\n  implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() model: string | number | Date;\n  @Input() placeholder: string;\n  @Input() disabled: boolean;\n  @Input() required: boolean;\n  @Input() label: string;\n  @Input() spanClass: string;\n  @Input() showClear: boolean;\n  @Input() showDate: boolean = true;\n  @Input() showTime: boolean;\n  @Input() inputClass: string = '';\n  @Input() monthNavigator: boolean = false;\n  @Input() yearNavigator: boolean = false;\n  @Input() yearRange: string = null;\n  @Input() showCalendarBtn: boolean = true;\n  @Input() calendarBtnLabel: string;\n  @Input() hideOnDateTimeSelect: boolean = true;\n  @Input() numberOfMonths: number = 1;\n  @Input() selectionMode: string = 'single';\n  @Input() disabledDates: Date[] = null;\n  @Input() disabledDays: number[] = null;\n  @Input() firstDayOfWeek: number = 1;\n  @Input() showOnFocus: boolean = false;\n  @Input() showWeek: boolean = false;\n  @Input() locale: ZyfraLocale = ZyfraLocale.ru;\n  @Input() set dateFormat(formatDate: string) {\n    this.formatDate = this.replaceSymbols(formatDate) || this.defaultDateFormat;\n  }\n  @Input() set timeFormat(formatTime: string) {\n    this.formatTime = this.replaceSymbols(formatTime) || this.defaultTimeFormat;\n  }\n\n  @Input()\n  returnFormatValue: ZyfraDatePickerValueType;\n\n  @ViewChild('calendar', { static: false }) private calendar: Calendar;\n\n  public controlRequired: boolean;\n  public datepickerValue: Date;\n  public datepickerValueShowBtn: Date;\n  public timeArray: ZyfraTime[];\n  public formattedValue: string = '';\n  private currentValueType: string;\n  private _defaultDateValue: Date = null;\n  private _defaultTimeValue: Date = null;\n  private destroyed$: Subject<void> = new Subject<void>();\n  private defaultDateFormat = 'dd.MM.yyyy';\n  private defaultTimeFormat = 'HH:mm:ss';\n  private dateValue: string = '';\n  private invalidDateMessage: string = 'Invalid date';\n  private formatDate: string;\n  private formatTime: string;\n  private timeValue: string = '';\n  private timestampFormat: string = 'x';\n  private localeFns: ZyfraDatePickerLocaleInterface = {\n    locale: ruFns,\n   };\n\n  constructor(\n    @Self() @Optional() public ngControl: NgControl,\n    private primeNGConfig: PrimeNGConfig,\n    private cdr: ChangeDetectorRef\n  ) {\n    if (ngControl) {\n      ngControl.valueAccessor = this;\n    }\n  }\n  public onChange: OnChangeCallback;\n  public onTouched: VoidFunction;\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public registerOnValidatorChange?(fn: () => void): void {}\n\n\n  public registerOnChange(fn: OnChangeCallback): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: VoidFunction): void {\n    this.onTouched = fn;\n  }\n\n  public writeValue(outsideValue: string | number | Date | null): void {\n    this.model = outsideValue;\n    if (this.model) {\n      this.currentValueType = this.getCurrentValueType(this.model);\n    }\n    this.changeControlState(this.model);\n    this.cdr.markForCheck();\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  public ngOnInit(): void {\n    if (this.ngControl) {\n      this.getValidatorRequiredControl(this.ngControl);\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.ngControl) {\n      this.ngControl.statusChanges\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\n    }\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.showTime && changes.showTime.currentValue && this.formatTime) {\n      this.timeArray = generateTimeArray(this.formatTime);\n    }\n\n    if (changes.locale && changes.locale.currentValue) {\n      this.setLocalizationCalendar(changes.locale.currentValue);\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public openCalendar(event: Event): void {\n    this.calendar.onButtonClick(\n      event,\n      this.calendar.inputfieldViewChild.nativeElement\n    );\n    event.stopPropagation();\n  }\n\n  public onDatepickerNgModelChange(event: string): void {\n    this.formattedValue = event;\n    this.checkAbsoluteTime();\n  }\n\n  public onCalendarDateChange(datepickerValue: Date): void {\n    if (!this.showCalendarBtn || this.hideOnDateTimeSelect) {\n      this.datepickerValue = datepickerValue;\n      this.generateFormattedValueFromCalendarValue(datepickerValue);\n    } else {\n      this.datepickerValueShowBtn = datepickerValue;\n    }\n    this.cdr.detectChanges();\n  }\n\n  public onCalendarClose(): void {\n    if (this.showCalendarBtn && !this.hideOnDateTimeSelect) {\n      this.calendar.value = this.datepickerValue;\n    }\n  }\n\n  public saveCalendarDate(): void {\n    this.datepickerValue = this.datepickerValueShowBtn;\n    this.generateFormattedValueFromCalendarValue(this.datepickerValue);\n    this.cdr.detectChanges();\n    this.calendar.hideOverlay();\n  }\n\n  public onInputBlur(): void {\n    if (this.formattedValue) {\n      if (\n        this.dateValue === this.invalidDateMessage ||\n        this.timeValue === this.invalidDateMessage\n      ) {\n        this.formattedValue = '';\n        return;\n      }\n\n      if (this.showDate && this.showTime) {\n        this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n      } else if (this.showDate) {\n        this.formattedValue = this.dateValue;\n      } else if (this.showTime) {\n        this.formattedValue = this.timeValue;\n      }\n\n      if (isValid(parseISO(this.dateValue))) {\n        this.datepickerValue = parse(\n          this.dateValue,\n          this.formatDate,\n          new Date(),\n          this.localeFns\n        );\n      }\n\n      this.datepickerValue = parse(this.dateValue, this.formatDate, new Date());\n\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\n      this.onChangeValue(\n        this.getValueOutput(\n          parse(dateValue, formatValue, new Date(), this.localeFns)\n        )\n      );\n    }\n  }\n\n  public setInputTime(time: ZyfraTime): void {\n    this._defaultTimeValue = time.date;\n    this.timeValue = format(\n      this._defaultTimeValue,\n      this.formatTime,\n      this.localeFns\n    );\n    this.formattedValue = this.timeValue;\n    let fullFormatString = this.formatTime;\n\n    if (this.showDate) {\n      if (!this._defaultDateValue || !isValid(this._defaultDateValue)) {\n        this._defaultDateValue = new Date();\n        this.dateValue = format(\n          this._defaultDateValue,\n          this.formatDate,\n          this.localeFns\n        );\n      }\n\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n      fullFormatString = `${this.formatDate} ${this.formatTime}`;\n    }\n\n    this.onChangeValue(\n      this.getValueOutput(\n        parse(this.formattedValue, fullFormatString, new Date(), this.localeFns)\n      )\n    );\n  }\n\n  public clearValue(): void {\n    this.formattedValue = '';\n\n    if (this.ngControl && this.ngControl.control) {\n      this.ngControl.control.markAsDirty();\n    }\n\n    this.cdr.detectChanges();\n    this.datepickerValue = null;\n    this.datepickerValueShowBtn = null;\n    this.onChangeValue(null);\n  }\n\n  private getValidatorRequiredControl(ngControl: NgControl): void {\n    if (ngControl.control && ngControl.control.validator && this.label) {\n      const validators = ngControl.control.validator({} as AbstractControl);\n      this.controlRequired = validators && validators.required;\n    } else {\n      this.controlRequired = false;\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  private checkAbsoluteTime(): void {\n    if (!this.formattedValue) {\n      this._defaultDateValue = null;\n      this._defaultTimeValue = null;\n      this.dateValue = '';\n      this.timeValue = '';\n      this.onChangeValue(null);\n      return;\n    }\n\n    let validationString: string = '';\n\n    if (this.showDate) {\n      validationString += this.formatDate;\n    }\n\n    if (this.showTime) {\n      validationString += this.showDate\n        ? ` ${this.formatTime}`\n        : this.formatTime;\n    }\n\n    const newDate = parse(\n      this.formattedValue,\n      validationString,\n      new Date(),\n      this.localeFns\n    );\n\n    if (isValid(newDate)) {\n      if (this.showDate) {\n        this._defaultDateValue = newDate;\n        this.dateValue = format(newDate, this.formatDate, this.localeFns);\n      }\n      if (this.showTime) {\n        this.timeValue = format(newDate, this.formatTime, this.localeFns);\n      }\n    }\n  }\n\n  private generateFormattedValueFromCalendarValue(datepickerValue: Date): void {\n    if (this.selectionMode === 'range') {\n      this.formattedValue = '';\n      this._defaultDateValue = this.calendar.value;\n      const dateRange: string[] = [];\n      for (let i=0; i<2; i++) {\n        this.dateValue = format(\n        this._defaultDateValue[i],\n        this.formatDate,\n        this.localeFns\n      );\n      dateRange.push(this.dateValue);\n    }\n      this.formattedValue = dateRange.join(' - ');\n    } else {\n      this._defaultDateValue = datepickerValue;\n      this.dateValue = format(\n        this._defaultDateValue,\n        this.formatDate,\n        this.localeFns\n      );\n      this.formattedValue = this.dateValue;\n      if (!this._defaultTimeValue || !isValid(this._defaultTimeValue)) {\n        this._defaultTimeValue = this._defaultDateValue;\n      }\n\n      this.timeValue = format(\n        this._defaultTimeValue,\n        this.formatTime,\n        this.localeFns\n      );\n\n      if (this.showTime) {\n        this.formattedValue += ` ${this.timeValue}`;\n      }\n\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\n      this.onChangeValue(\n        this.getValueOutput(\n          parse(dateValue, formatValue, new Date(), this.localeFns)\n        )\n      );\n    }\n  }\n\n  private generateFormattedValueFromInput(): void {\n    let dateParam: Date;\n\n    switch (this.currentValueType) {\n      case ZyfraDatePickerValueType.null:\n        this._defaultDateValue = null;\n        break;\n\n      case ZyfraDatePickerValueType.timestamp:\n        dateParam = parse(\n          this.model as string,\n          this.timestampFormat,\n          new Date(),\n          this.localeFns\n        );\n        if (isValid(dateParam)) {\n          this.datepickerValue = dateParam;\n        }\n        this._defaultDateValue = dateParam;\n        break;\n\n      case ZyfraDatePickerValueType.date:\n        dateParam = this.model as Date;\n        if (isValid(dateParam)) {\n          this.datepickerValue = this.model as Date;\n        }\n        this._defaultDateValue = dateParam;\n        break;\n\n      case ZyfraDatePickerValueType.string:\n        dateParam = parse(\n          this.model as string,\n          this.formatDate,\n          new Date(),\n          this.localeFns\n        );\n        if (isValid(dateParam)) {\n          this.datepickerValue = dateParam;\n        }\n\n        this._defaultDateValue = parse(\n          this.model as string,\n          `${this.formatDate} ${this.formatTime}`,\n          new Date(),\n          this.localeFns\n        );\n        break;\n\n      case ZyfraDatePickerValueType.isoString:\n        dateParam = parseISO(this.model as string);\n        if (isValid(dateParam)) {\n          this.datepickerValue = new Date(this.model);\n        }\n        this._defaultDateValue = dateParam;\n        break;\n    }\n    this.setFormattedValue(this._defaultDateValue);\n  }\n\n  private changeControlState(value: Date | string | number | null): void {\n    this.currentValueType = this.getCurrentValueType(value);\n    this.generateFormattedValueFromInput();\n  }\n\n  private setFormattedValue(defaultDateValue: Date | null): void {\n    this._defaultTimeValue = defaultDateValue ? defaultDateValue : new Date();\n    this.dateValue = format(\n      this._defaultTimeValue,\n      this.formatDate,\n      this.localeFns\n    );\n    this.timeValue = format(\n      this._defaultTimeValue,\n      this.formatTime,\n      this.localeFns\n    );\n\n    if (this.showDate && this.showTime) {\n      if (\n        this.dateValue === this.invalidDateMessage ||\n        this.timeValue === this.invalidDateMessage\n      ) {\n        this.formattedValue = '';\n        this.cdr.detectChanges();\n        return;\n      }\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\n    } else if (this.showDate) {\n      this.dateValue = format(\n        this._defaultDateValue,\n        this.formatDate,\n        this.localeFns\n      );\n      this.formattedValue =\n        this.dateValue === this.invalidDateMessage ? '' : this.dateValue;\n    } else if (this.showTime) {\n      this._defaultTimeValue = this._defaultDateValue;\n      this.timeValue = format(\n        this._defaultTimeValue,\n        this.formatTime,\n        this.localeFns\n      );\n      this.formattedValue =\n        this.timeValue === this.invalidDateMessage ? '' : this.timeValue;\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private setLocalizationCalendar(locale: string): void {\n    let currentLocale: unknown;\n\n    switch (locale) {\n      case ZyfraLocale.en:\n        currentLocale = en;\n        this.localeFns.locale = enFns;\n        break;\n      case ZyfraLocale.ru:\n      default:\n        currentLocale = ru;\n        this.localeFns.locale = ruFns ;\n        break;\n    }\n    this.primeNGConfig.setTranslation(currentLocale);\n  }\n\n  private onChangeValue(value: string | Date | number | null): void {\n    // this.modelChange.emit(value);\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  private getValueOutput(date: Date): string | number | Date {\n    const returnValueType = this.returnFormatValue || this.currentValueType;\n    let resultDate: string | number | Date;\n    let formatValue: string;\n\n    switch (returnValueType) {\n      case ZyfraDatePickerValueType.timestamp:\n        resultDate = date.valueOf();\n        break;\n\n      case ZyfraDatePickerValueType.string:\n\n        if (this.formatDate && this.showDate) {\n          formatValue = this.formatDate;\n        }\n\n        if (this.formatTime && this.showTime) {\n          formatValue =\n            this.formatDate && this.showDate\n              ? `${this.formatDate} ${this.formatTime}`\n              : this.formatTime;\n        }\n\n        resultDate = format(date, formatValue, this.localeFns);\n        break;\n\n      case ZyfraDatePickerValueType.isoString:\n        resultDate = date.toISOString();\n        break;\n\n      case ZyfraDatePickerValueType.date:\n      default:\n        resultDate = date;\n        break;\n    }\n\n    return resultDate;\n  }\n\n  private getCurrentValueType(value: string | number | Date | null): string {\n    if (value === null) {\n      return ZyfraDatePickerValueType.null;\n    }\n\n    if (typeof value === 'number') {\n      return ZyfraDatePickerValueType.timestamp;\n    }\n\n    if ((value as unknown) instanceof Date) {\n      return ZyfraDatePickerValueType.date;\n    }\n\n    if (isIsoDate(value as string)) {\n      return ZyfraDatePickerValueType.isoString;\n    }\n\n    return ZyfraDatePickerValueType.string;\n  }\n\n  private replaceSymbols(str: string): string {\n    if (!str) {\n      return str;\n    }\n    const year = /Y/g;\n    const day = /D/g;\n    const hour = /h/g;\n    const sec = /S/g;\n    return str\n      .replace(year, 'y')\n      .replace(day, 'd')\n      .replace(hour, 'H')\n      .replace(sec, 'H');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 102,
                "jsdoctags": [
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primeNGConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnChanges",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "dateFormat": {
                    "name": "dateFormat",
                    "setSignature": {
                        "name": "dateFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "formatDate",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "timeFormat": {
                    "name": "timeFormat",
                    "setSignature": {
                        "name": "timeFormat",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 74,
                        "jsdoctags": [
                            {
                                "name": "formatTime",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"zyfra-datepicker\">\n  <zyfra-input\n    [(ngModel)]=\"formattedValue\"\n    type=\"text\"\n    (ngModelChange)=\"onDatepickerNgModelChange($event)\"\n    (onBlur)=\"onInputBlur()\"\n    [placeholder]=\"placeholder\"\n    [label]=\"label\"\n    [inputClass]=\"{\n      'ng-invalid': !!ngControl?.invalid,\n      'ng-valid': !!ngControl?.valid,\n      'ng-dirty': !!ngControl?.dirty,\n      'ng-touched': !!ngControl?.touched\n    }\"\n    [required]=\"required || controlRequired\"\n    [disabled]=\"disabled\"\n  >\n    <div right class=\"zyfra-datepicker-controls\">\n      <button\n        type=\"button\"\n        *ngIf=\"showClear\"\n        (click)=\"clearValue()\"\n        [disabled]=\"disabled\"\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\n      >\n        <i class=\"zyfra-icon tools-broom\"></i>\n      </button>\n      <div class=\"zyfra-datepicker-control\" *ngIf=\"showDate\">\n        <button [disabled]=\"disabled\" class=\"zyfra-datepicker-button\" (click)=\"openCalendar($event)\" type=\"button\">\n          <i class=\"zyfra-icon date-calendar-blank\"></i>\n        </button>\n        <p-calendar\n          #calendar\n          [ngModel]=\"datepickerValue\"\n          [panelStyleClass]=\"'zyfra-datepicker-calendar'\"\n          [locale]=\"$any(locale)\"\n          [selectionMode]=\"selectionMode\"\n          [showOnFocus]=\"showOnFocus\"\n          [showWeek]=\"showWeek\"\n          [monthNavigator]=\"monthNavigator\"\n          [yearNavigator]=\"yearNavigator\"\n          [yearRange]=\"yearRange\"\n          [hideOnDateTimeSelect]=\"hideOnDateTimeSelect\"\n          [numberOfMonths]=\"numberOfMonths\"\n          [disabledDates]=\"disabledDates\"\n          [disabledDays]=\"disabledDays\"\n          [firstDayOfWeek]=\"firstDayOfWeek\"\n          [tabindex]=\"-1\"\n          (onSelect)=\"onCalendarDateChange($event)\"\n          (onClickOutside)=\"onCalendarClose()\"\n        >\n          <ng-template pTemplate=\"footer\" *ngIf=\"showCalendarBtn\">\n            <div class=\"zyfra-datepicker-calendar-footer\">\n              <zyfra-button\n                [label]=\"calendarBtnLabel\"\n                [styleClass]=\"'p-button-mini button-success-style'\"\n                (onClick)=\"saveCalendarDate()\"\n              >\n              </zyfra-button>\n            </div>\n          </ng-template>\n        </p-calendar>\n      </div>\n\n      <!--  // TODO need button with dropdown -->\n      <button *ngIf=\"showTime\" class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\n        <zyfra-dropdown\n          [options]=\"timeArray\"\n          [ngModel]=\"null\"\n          [disabled]=\"disabled\"\n          (ngModelChange)=\"setInputTime($event)\"\n          [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n          [styleClass]=\"'zyfra-datepicker-dropdown'\"\n          [dropdownIcon]=\"'zyfra-icon date-update'\"\n          [optionLabel]=\"'value'\"\n          [tabindex]=\"-1\"\n        >\n        </zyfra-dropdown>\n      </button>\n\n      <ng-content select=\"[buttons]\"></ng-content>\n    </div>\n  </zyfra-input>\n</div>\n"
        },
        {
            "name": "ZyfraDatepickerModeSelectComponent",
            "id": "component-ZyfraDatepickerModeSelectComponent-faf3e688e1ff8333acfd3a4cc2ae72a9",
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-datepicker-mode-select",
            "styleUrls": [
                "./zyfra-datepicker-mode-select.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-datepicker-mode-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "mode",
                    "defaultValue": "ZyfraDatePickerMode.absolute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDropdownComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown'"
                        }
                    ]
                },
                {
                    "name": "modes",
                    "defaultValue": "[\n    {\n      name: 'Абсолютное время',\n      value: ZyfraDatePickerMode.absolute,\n      icon: 'date-update',\n    },\n    {\n      name: 'Относительное время',\n      value: ZyfraDatePickerMode.relative,\n      icon: 'date-clock',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        143
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ZyfraDropdownComponent } from '../../dropdown';\nimport { ZyfraDatePickerMode } from '../model/zyfra-date-picker-mode.enum';\n\n@Component({\n  selector: 'zyfra-datepicker-mode-select',\n  templateUrl: './zyfra-datepicker-mode-select.component.html',\n  styleUrls: ['./zyfra-datepicker-mode-select.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDatepickerModeSelectComponent {\n  @Input() disabled: boolean;\n  @Input() mode = ZyfraDatePickerMode.absolute;\n  @ViewChild('dropdown') dropdown: ZyfraDropdownComponent;\n\n  @Output() selectChanged = new EventEmitter();\n\n  public readonly modes = [\n    {\n      name: 'Абсолютное время',\n      value: ZyfraDatePickerMode.absolute,\n      icon: 'date-update',\n    },\n    {\n      name: 'Относительное время',\n      value: ZyfraDatePickerMode.relative,\n      icon: 'date-clock',\n    },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./zyfra-datepicker-mode-select.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<zyfra-dropdown\n  #dropdown\n  [ngModel]=\"mode\"\n  [options]=\"$any(modes)\"\n  (ngModelChange)=\"selectChanged.emit($event)\"\n  [disabled]=\"disabled\"\n  [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n  [styleClass]=\"'zyfra-datepicker-dropdown'\"\n  [dropdownIcon]=\"'zyfra-icon chevrons-dropdown'\"\n  [optionLabel]=\"'name'\"\n  [optionValue]=\"'value'\"\n  class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\n>\n  <ng-template let-modeItem zyfraDropdownTemplate=\"item\">\n    <div class=\"mode-item\">\n      <i class=\"zyfra-icon {{ modeItem.icon }}\"></i>\n      <div>{{ modeItem.name }}</div>\n    </div>\n  </ng-template>\n</zyfra-dropdown>\n"
        },
        {
            "name": "ZyfraDatepickerMultiComponent",
            "id": "component-ZyfraDatepickerMultiComponent-fe56b6c54af991213bf202aa8247487a",
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-datepicker-multi",
            "styleUrls": [
                "./zyfra-datepicker-multi.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-datepicker-multi.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "any"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "number"
                },
                {
                    "name": "calendarBtnLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "clearButtonStyleClass",
                    "defaultValue": "'p-button-text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "string"
                },
                {
                    "name": "dataType",
                    "defaultValue": "'date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string"
                },
                {
                    "name": "dateFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "disabledDates",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Date[]"
                },
                {
                    "name": "disabledDays",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number[]"
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "boolean"
                },
                {
                    "name": "hideOnDateTimeSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "string"
                },
                {
                    "name": "hourFormat",
                    "defaultValue": "'24'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "defaultValue": "'pi pi-calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "iconAriaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean"
                },
                {
                    "name": "inputClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "any"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string"
                },
                {
                    "name": "keepInvalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "defaultValue": "ZyfraLocale.ru",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "ZyfraLocale"
                },
                {
                    "name": "maxDateCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "number"
                },
                {
                    "name": "mode",
                    "defaultValue": "ZyfraDatePickerMode.absolute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | number | Date"
                },
                {
                    "name": "monthNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "multipleSeparator",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "numberOfMonths",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "any"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "rangeSeparator",
                    "defaultValue": "'-'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "string"
                },
                {
                    "name": "readonlyInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean"
                },
                {
                    "name": "relativeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "returnFormatValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "ZyfraDatePickerValueType"
                },
                {
                    "name": "selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string"
                },
                {
                    "name": "selectOtherMonths",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "boolean"
                },
                {
                    "name": "shortYearCutoff",
                    "defaultValue": "'+10'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "any"
                },
                {
                    "name": "showButtonBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "boolean"
                },
                {
                    "name": "showCalendarBtn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "showDate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "showIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "boolean"
                },
                {
                    "name": "showOnFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean"
                },
                {
                    "name": "showOtherMonths",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "boolean"
                },
                {
                    "name": "showSeconds",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "boolean"
                },
                {
                    "name": "showTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "string"
                },
                {
                    "name": "showWeek",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "stepHour",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "number"
                },
                {
                    "name": "stepMinute",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "number"
                },
                {
                    "name": "stepSecond",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "number"
                },
                {
                    "name": "timeFormat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "timeOnly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "boolean"
                },
                {
                    "name": "timeSeparator",
                    "defaultValue": "':'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "string"
                },
                {
                    "name": "todayButtonStyleClass",
                    "defaultValue": "'p-button-text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "touchUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "yearNavigator",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "yearRange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "modeChange",
                    "defaultValue": "new EventEmitter<ZyfraDatePickerMode>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "EventEmitter"
                },
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClearClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClickOutside",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMonthChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 105,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 108,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onTodayClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onYearChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClickButtonSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "select",
                            "type": "ZyfraDatepickerModeSelectComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "select",
                            "type": "ZyfraDatepickerModeSelectComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectChanged",
                    "args": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "ZyfraDatePickerMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ZyfraLocale } from '../model/zyfra-date-picker-locale.enum';\nimport { ZyfraDatePickerMode } from '../model/zyfra-date-picker-mode.enum';\nimport { ZyfraDatePickerValueType } from '../model/zyfra-date-picker-value-type.enum';\nimport { ZyfraDatepickerModeSelectComponent } from '../zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component';\n\n@Component({\n  selector: 'zyfra-datepicker-multi',\n  templateUrl: './zyfra-datepicker-multi.component.html',\n  styleUrls: ['./zyfra-datepicker-multi.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDatepickerMultiComponent {\n  // Base from relative & absolute components\n  @Input() public label: string;\n  @Input() public placeholder: string;\n  @Input() public disabled: boolean;\n  @Input() public showClear: boolean;\n\n  // Current component 'multi'\n  @Input() mode = ZyfraDatePickerMode.absolute;\n\n  // wrapper for relative component\n  @Input() public relativeValue: string;\n\n  // wrapper for absolute component\n  @Input() model: string | number | Date;\n  @Input() required: boolean;\n  @Input() spanClass: string;\n  @Input() showDate: boolean = true;\n  @Input() showTime: boolean;\n  @Input() inputClass: string = '';\n  @Input() monthNavigator: boolean = false;\n  @Input() yearNavigator: boolean = false;\n  @Input() yearRange: string = null;\n  @Input() showCalendarBtn: boolean = true;\n  @Input() calendarBtnLabel: string;\n  @Input() hideOnDateTimeSelect: boolean = true;\n  @Input() numberOfMonths: number = 1;\n  @Input() selectionMode: string = 'single';\n  @Input() disabledDates: Date[] = null;\n  @Input() disabledDays: number[] = null;\n  @Input() firstDayOfWeek: number = 1;\n  @Input() showOnFocus: boolean = false;\n  @Input() showWeek: boolean = false;\n  @Input() locale: ZyfraLocale = ZyfraLocale.ru;\n  @Input() dateFormat: string;\n  @Input() timeFormat: string;\n  @Input() returnFormatValue: ZyfraDatePickerValueType;\n\n  @Input() style: any;\n  @Input() styleClass: string;\n  @Input() inputStyle: any;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() inputStyleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() iconAriaLabel: string;\n  @Input() multipleSeparator: string = ',';\n  @Input() rangeSeparator: string = '-';\n  @Input() inline: boolean = false;\n  @Input() showOtherMonths: boolean = true;\n  @Input() selectOtherMonths: boolean;\n  @Input() showIcon: boolean;\n  @Input() icon: string = 'pi pi-calendar';\n  @Input() appendTo: any;\n  @Input() readonlyInput: boolean;\n  @Input() shortYearCutoff: any = '+10';\n  @Input() hourFormat: string = '24';\n  @Input() timeOnly: boolean;\n  @Input() stepHour: number = 1;\n  @Input() stepMinute: number = 1;\n  @Input() stepSecond: number = 1;\n  @Input() showSeconds: boolean = false;\n  @Input() dataType: string = 'date';\n  @Input() maxDateCount: number;\n  @Input() showButtonBar: boolean;\n  @Input() todayButtonStyleClass: string = 'p-button-text';\n  @Input() clearButtonStyleClass: string = 'p-button-text';\n  @Input() autoZIndex: boolean = true;\n  @Input() baseZIndex: number = 0;\n  @Input() panelStyleClass: string;\n  @Input() panelStyle: any;\n  @Input() keepInvalid: boolean = false;\n  @Input() touchUI: boolean;\n  @Input() timeSeparator: string = ':';\n  @Input() focusTrap: boolean = true;\n  @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions: string = '.1s linear';\n  @Input() tabindex: number;\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n  @Output() onInput: EventEmitter<any> = new EventEmitter();\n  @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\n  @Output() onClearClick: EventEmitter<any> = new EventEmitter();\n  @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\n  @Output() onYearChange: EventEmitter<any> = new EventEmitter();\n  @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\n  @Output() public valueChange = new EventEmitter<any>();\n  @Output() public modeChange = new EventEmitter<ZyfraDatePickerMode>();\n\n  constructor(private readonly cdr: ChangeDetectorRef) {}\n\n  // TODO need button with dropdown\n  public onClickButtonSelect(event: MouseEvent, select: ZyfraDatepickerModeSelectComponent): void {\n    if (!select.dropdown.dropdown.overlayVisible) {\n      select.dropdown.dropdown.onMouseclick(event);\n      event.stopPropagation();\n    }\n  }\n\n  public onSelectChanged(mode: ZyfraDatePickerMode): void {\n    this.modeChange.emit(mode);\n    this.mode = mode;\n    this.cdr.detectChanges();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./zyfra-datepicker-multi.component.less"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 110,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-container *ngIf=\"mode === 'relative'; else absoluteTemplate\">\n  <zyfra-relative-datepicker\n    [label]=\"label\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [showClear]=\"showClear\"\n    [ngModel]=\"relativeValue\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n  >\n    <ng-container buttons>\n      <ng-container *ngTemplateOutlet=\"selectButtonTemplate\"></ng-container>\n    </ng-container>\n  </zyfra-relative-datepicker>\n</ng-container>\n\n<ng-template #absoluteTemplate>\n  <zyfra-datepicker\n    [ngModel]=\"model\"\n    (ngModelChange)=\"valueChange.emit($event)\"\n    [dateFormat]=\"dateFormat\"\n    [timeFormat]=\"timeFormat\"\n    [returnFormatValue]=\"returnFormatValue\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [label]=\"label\"\n    [spanClass]=\"spanClass\"\n    [locale]=\"locale\"\n    [showClear]=\"showClear\"\n    [showDate]=\"showDate\"\n    [showTime]=\"showTime\"\n    [monthNavigator]=\"monthNavigator\"\n    [yearNavigator]=\"yearNavigator\"\n    [yearRange]=\"yearRange\"\n    [showCalendarBtn]=\"showCalendarBtn\"\n    [calendarBtnLabel]=\"calendarBtnLabel\"\n    [numberOfMonths]=\"numberOfMonths\"\n    [selectionMode]=\"selectionMode\"\n    [disabledDates]=\"disabledDates\"\n    [firstDayOfWeek]=\"firstDayOfWeek\"\n  >\n    <ng-container buttons>\n      <ng-container *ngTemplateOutlet=\"selectButtonTemplate\"></ng-container>\n    </ng-container>\n  </zyfra-datepicker>\n</ng-template>\n\n<ng-template #selectButtonTemplate>\n  <button\n    type=\"button\"\n    (click)=\"onClickButtonSelect($event, select)\"\n    class=\"zyfra-datepicker-control zyfra-datepicker-button\"\n  >\n    <zyfra-datepicker-mode-select\n      #select\n      [mode]=\"mode\"\n      (selectChanged)=\"onSelectChanged($event)\"\n    ></zyfra-datepicker-mode-select>\n  </button>\n</ng-template>\n"
        },
        {
            "name": "ZyfraDialogComponent",
            "id": "component-ZyfraDialogComponent-51e9c3503d32af92aa22cc56169cdc90",
            "file": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "acceptVisible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "blockScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "breakpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "object"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "object"
                },
                {
                    "name": "contentStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "focusOnShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "focusTrap",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "htmlTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "SafeHtml"
                },
                {
                    "name": "keepInViewport",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "maskStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "maximizable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean"
                },
                {
                    "name": "maximizeIcon",
                    "defaultValue": "'zyfra-icon arrows-expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "minimizeIcon",
                    "defaultValue": "'zyfra-icon arrows-collapse'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "minX",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "minY",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "position",
                    "defaultValue": "'center'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "resizable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean"
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "defaultValue": "'150ms cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "visible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onDragEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onMaximize",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onResizeInit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDragEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHideHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onMaximizeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResizeInitHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'zyfra-dialog',\n  templateUrl: './zyfra-dialog.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDialogComponent {\n  @Input() htmlTemplate: SafeHtml;\n\n  @Input() header: string;\n  @Input() draggable: boolean = true;\n  @Input() acceptVisible: boolean = true;\n  @Input() keepInViewport: boolean = true;\n  @Input() resizable: boolean = true;\n  @Input() contentStyle: object;\n  @Input() visible: boolean;\n  @Input() modal: boolean;\n  @Input() position: string = 'center';\n  @Input() blockScroll: boolean;\n  @Input() closeOnEscape: boolean;\n  @Input() dismissableMask: boolean;\n  @Input() rtl: boolean;\n  @Input() closable: boolean = true;\n  @Input() appendTo: any;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() maskStyleClass: string;\n  @Input() contentStyleClass: string;\n  @Input() showHeader: boolean = true;\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() minX: number = 0;\n  @Input() minY: number = 0;\n  @Input() focusOnShow: boolean = true;\n  @Input() focusTrap: boolean = true;\n  @Input() maximizable: boolean;\n  @Input() breakpoints: object;\n  @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n  @Input() closeIcon: string = 'zyfra-icon cancel-close';\n  @Input() minimizeIcon: string = 'zyfra-icon arrows-collapse';\n  @Input() maximizeIcon: string = 'zyfra-icon arrows-expand';\n\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\n  @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\n  @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\n  @Output() onMaximize: EventEmitter<any> = new EventEmitter();\n\n  public onHideHandler(event: unknown): void {\n    this.visible = false;\n    this.onHide.emit(this.visible);\n  }\n\n  public onShowHandler(event: unknown): void {\n    this.visible = true;\n    this.onShow.emit(this.visible);\n  }\n\n  public onResizeInitHandler(event: unknown): void {\n    this.onResizeInit.emit(event);\n  }\n\n  public onResizeEndHandler(event: unknown): void {\n    this.onResizeEnd.emit(event);\n  }\n\n  public onDragEndHandler(event: unknown): void {\n    this.onDragEnd.emit(event);\n  }\n\n  public onInit(): void {\n    this.visible = true;\n  }\n\n  public onMaximizeHandler(event: unknown): void {\n    this.onMaximize.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-dialog\n  [header]=\"header\"\n  [draggable]=\"draggable\"\n  [keepInViewport]=\"keepInViewport\"\n  [resizable]=\"resizable\"\n  [contentStyle]=\"contentStyle\"\n  [(visible)]=\"visible\"\n  [modal]=\"modal\"\n  [position]=\"position\"\n  [blockScroll]=\"blockScroll\"\n  [closeOnEscape]=\"closeOnEscape\"\n  [dismissableMask]=\"dismissableMask\"\n  [rtl]=\"rtl\"\n  [closable]=\"closable\"\n  [appendTo]=\"appendTo\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [maskStyleClass]=\"maskStyleClass\"\n  [contentStyleClass]=\"contentStyleClass\"\n  [showHeader]=\"showHeader\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [minX]=\"minX\"\n  [minY]=\"minY\"\n  [focusOnShow]=\"focusOnShow\"\n  [focusTrap]=\"focusTrap\"\n  [maximizable]=\"maximizable\"\n  [breakpoints]=\"breakpoints\"\n  [transitionOptions]=\"transitionOptions\"\n  [closeIcon]=\"closeIcon\"\n  [minimizeIcon]=\"minimizeIcon\"\n  [maximizeIcon]=\"maximizeIcon\"\n  (onShow)=\"onShowHandler($event)\"\n  (onHide)=\"onHideHandler($event)\"\n  (onResizeInit)=\"onResizeInitHandler($event)\"\n  (onResizeEnd)=\"onResizeEndHandler($event)\"\n  (onDragEnd)=\"onDragEndHandler($event)\"\n  (onMaximize)=\"onMaximizeHandler($event)\"\n>\n  <div [innerHTML]=\"htmlTemplate\"></div>\n</p-dialog>\n"
        },
        {
            "name": "ZyfraDropdownComponent",
            "id": "component-ZyfraDropdownComponent-adca5e7836b3b65b296b80d2964de02d",
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-dropdown",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "any"
                },
                {
                    "name": "ariaFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "autoDisplayFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean"
                },
                {
                    "name": "autofocusFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "number"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "string"
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean"
                },
                {
                    "name": "emptyFilterMessage",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "filterMatchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\""
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "boolean"
                },
                {
                    "name": "groupTemplateClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "number"
                },
                {
                    "name": "mini",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "optionDisabled",
                    "defaultValue": "'disabled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "T[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "any"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean"
                },
                {
                    "name": "resetFilterOnHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "number"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "string"
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "string"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<DropdownChangeEvent<T>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dropdown",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown'"
                        }
                    ]
                },
                {
                    "name": "emptyfilterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "emptyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "groupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "selectedItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraDropdownTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Dropdown } from 'primeng/dropdown';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\nexport interface DropdownChangeEvent<T> {\n  originalEvent: PointerEvent;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-dropdown',\n  templateUrl: './zyfra-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraDropdownComponent<T = unknown>\n  extends WrappedFormComponent\n  implements ControlValueAccessor, AfterContentInit\n{\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode:\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'equals'\n    | 'notEquals'\n    | 'in'\n    | 'lt'\n    | 'lte'\n    | 'gt'\n    | 'gte' = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean; // TODO(rustam) remove this prop use control disable\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: any;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n  @Input() mini: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n\n  @ViewChild('dropdown') dropdown: Dropdown;\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\n\n  itemTemplate: TemplateRef<unknown>;\n  groupTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n  headerTemplate: TemplateRef<unknown>;\n  emptyTemplate: TemplateRef<unknown>;\n  emptyfilterTemplate: TemplateRef<unknown>;\n  footerTemplate: TemplateRef<unknown>;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyfilterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  public override setDisabledState(): void {\n    // do nothing, because have `disabled` input\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterContentInit"
            ],
            "templateData": "<span\n  class=\"zyfra-input\"\n  [class.zyfra-input_disabled]=\"disabled\"\n  [class.zyfra-dropdown_mini]=\"mini\"\n  [class.p-float-label]=\"label\"\n>\n  <p-dropdown\n    #dropdown\n    [formControl]=\"$any(ngControl.control)\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [name]=\"name\"\n    [scrollHeight]=\"scrollHeight\"\n    [virtualScroll]=\"virtualScroll\"\n    [style]=\"style\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [filter]=\"filter\"\n    [filterValue]=\"filterValue\"\n    [filterBy]=\"filterBy\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterPlaceholder]=\"filterPlaceholder\"\n    [filterLocale]=\"filterLocale\"\n    [required]=\"required\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [editable]=\"editable\"\n    [maxlength]=\"maxlength\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [placeholder]=\"placeholder\"\n    [inputId]=\"inputId\"\n    [dataKey]=\"dataKey\"\n    [autofocus]=\"autofocus\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [autoDisplayFirst]=\"autoDisplayFirst\"\n    [group]=\"group\"\n    [showClear]=\"showClear\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaFilterLabel]=\"ariaFilterLabel\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onShow)=\"onShow.emit($event)\"\n    (onHide)=\"onHide.emit($event)\"\n  >\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\n      <ng-container\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\n      ></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n    </ng-template>\n  </p-dropdown>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraDropdownWithContentComponent",
            "id": "component-ZyfraDropdownWithContentComponent-111a52ff5d9a7ecf9482f195335e0aa3",
            "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ZyfraDropdownWithContentService"
                }
            ],
            "selector": "zyfra-dropdown-with-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-dropdown-with-content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "any"
                },
                {
                    "name": "ariaFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string"
                },
                {
                    "name": "autoDisplayFirst",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "boolean"
                },
                {
                    "name": "autofocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean"
                },
                {
                    "name": "autofocusFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean"
                },
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "number"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean"
                },
                {
                    "name": "dropdownIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "editable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "emptyFilterMessage",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "'No records found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string"
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "filterMatchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\""
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "filterValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                },
                {
                    "name": "groupTemplateClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'.1s linear'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "string"
                },
                {
                    "name": "itemSize",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "number"
                },
                {
                    "name": "mini",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "boolean"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "optionDisabled",
                    "defaultValue": "'disabled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "optionGroupChildren",
                    "defaultValue": "'items'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "optionGroupLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "T[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "any"
                },
                {
                    "name": "panelStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "panelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "resetFilterOnHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "boolean"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "number"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "string"
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "EventEmitter"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<DropdownChangeEvent<T>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "EventEmitter"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<PointerEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "EventEmitter"
                },
                {
                    "name": "onHide",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter"
                },
                {
                    "name": "onShow",
                    "defaultValue": "new EventEmitter<AnimationEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dropdown",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown'"
                        }
                    ]
                },
                {
                    "name": "emptyfilterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "emptyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "groupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "isOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "itemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "selectedItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraDropdownTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleOnHide",
                    "args": [
                        {
                            "name": "e",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOnShow",
                    "args": [
                        {
                            "name": "e",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Dropdown } from 'primeng/dropdown';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\nimport { ZyfraDropdownWithContentService } from './zyfra-dropdown-with-content.service';\nimport { ZyfraDropdownTemplateDirective } from '../dropdown/zyfra-dropdown-template.directive';\nimport { DropdownChangeEvent } from '../dropdown/zyfra-dropdown.component';\n\n@Component({\n  selector: 'zyfra-dropdown-with-content',\n  templateUrl: './zyfra-dropdown-with-content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ZyfraDropdownWithContentService],\n})\nexport class ZyfraDropdownWithContentComponent<T = unknown>\n  extends WrappedFormComponent\n  implements ControlValueAccessor, AfterContentInit\n{\n  @Input() options: T[];\n  @Input() optionLabel = 'label';\n  @Input() optionValue;\n  @Input() optionDisabled = 'disabled';\n  @Input() optionGroupLabel = 'label';\n  @Input() optionGroupChildren = 'items';\n  @Input() name: string;\n  @Input() scrollHeight = '200px';\n  @Input() style: string;\n  @Input() panelStyle: string;\n  @Input() styleClass: string;\n  @Input() panelStyleClass: string;\n  @Input() filter: boolean;\n  @Input() filterValue: string;\n  @Input() filterBy: string;\n  @Input() filterMatchMode:\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'equals'\n    | 'notEquals'\n    | 'in'\n    | 'lt'\n    | 'lte'\n    | 'gt'\n    | 'gte' = 'contains';\n  @Input() filterPlaceholder: string;\n  @Input() filterLocale: string;\n  @Input() required: boolean;\n  @Input() disabled: boolean;  // TODO(rustam) remove this prop use control disable\n  @Input() readonly: boolean;\n  @Input() emptyMessage = 'No records found';\n  @Input() emptyFilterMessage = 'No results found';\n  @Input() ariaLabelledBy: string;\n  @Input() editable: boolean;\n  @Input() maxlength: number;\n  @Input() appendTo: any;\n  @Input() tabindex: number;\n  @Input() placeholder: string;\n  @Input() inputId: string;\n  @Input() dataKey: string;\n  @Input() autofocus: boolean;\n  @Input() autofocusFilter: boolean;\n  @Input() resetFilterOnHide: boolean;\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\n  @Input() autoDisplayFirst = true;\n  @Input() group: boolean;\n  @Input() groupTemplateClass: string;\n  @Input() showClear: boolean;\n  @Input() baseZIndex = 0;\n  @Input() autoZIndex = true;\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n  @Input() hideTransitionOptions = '.1s linear';\n  @Input() ariaFilterLabel: string;\n  @Input() tooltip: any;\n  @Input() tooltipStyleClass: string;\n  @Input() tooltipPosition = 'top';\n  @Input() tooltipPositionStyle = 'absolute';\n  @Input() itemSize = 30;\n  @Input() label = '';\n  @Input() virtualScroll: boolean;\n  @Input() mini: boolean;\n\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<T>>();\n  @Output() onClick = new EventEmitter<PointerEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onShow = new EventEmitter<AnimationEvent>();\n  @Output() onHide = new EventEmitter<AnimationEvent>();\n\n  @ViewChild('dropdown') dropdown: Dropdown;\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\n\n  itemTemplate: TemplateRef<unknown>;\n  groupTemplate: TemplateRef<unknown>;\n  selectedItemTemplate: TemplateRef<unknown>;\n  headerTemplate: TemplateRef<unknown>;\n  emptyTemplate: TemplateRef<unknown>;\n  emptyfilterTemplate: TemplateRef<unknown>;\n  footerTemplate: TemplateRef<unknown>;\n\n  isOpen: boolean;\n\n  constructor(\n    injector: Injector,\n    ngControl: NgControl,\n    private dropdownService: ZyfraDropdownWithContentService\n  ) {\n    super(injector, ngControl);\n  }\n\n  ngAfterContentInit(): void {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n        case 'emptyfilter':\n          this.emptyfilterTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  public handleOnShow(e: AnimationEvent): void {\n    this.isOpen = true;\n    this.dropdownService.setDropdownPanelPosition();\n    this.onShow.emit(e);\n  }\n\n  public handleOnHide(e: AnimationEvent): void {\n    this.isOpen = false;\n    this.onHide.emit(e);\n  }\n\n  public override setDisabledState(): void {\n    // do nothing, because have `disabled` input\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dropdownService",
                        "type": "ZyfraDropdownWithContentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 113,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dropdownService",
                        "type": "ZyfraDropdownWithContentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor",
                "AfterContentInit"
            ],
            "templateData": "<span\n  class=\"zyfra-dropdown-with-content\"\n  [class.zyfra-dropdown-with-content_mini]=\"mini\"\n  [class.zyfra-dropdown-with-content_disabled]=\"disabled\"\n  [class.p-float-label]=\"label\"\n  [style]=\"style\"\n>\n  <div class=\"zyfra-dropdown-with-content__left\">\n    <label\n      *ngIf=\"label\"\n      [class.label-required]=\"required\"\n      [class.label-top]=\"isOpen || dropdown.focused || dropdown.filled\"\n      >{{ label }}</label\n    >\n    <ng-content select=\"[left]\"></ng-content>\n  </div>\n\n  <p-dropdown\n    #dropdown\n    [formControl]=\"$any(ngControl.control)\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [name]=\"name\"\n    [scrollHeight]=\"scrollHeight\"\n    [virtualScroll]=\"virtualScroll\"\n    [panelStyle]=\"panelStyle\"\n    [styleClass]=\"styleClass\"\n    [panelStyleClass]=\"panelStyleClass\"\n    [filter]=\"filter\"\n    [filterValue]=\"filterValue\"\n    [filterBy]=\"filterBy\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterPlaceholder]=\"filterPlaceholder\"\n    [filterLocale]=\"filterLocale\"\n    [required]=\"required\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [editable]=\"editable\"\n    [maxlength]=\"maxlength\"\n    [appendTo]=\"appendTo\"\n    [tabindex]=\"tabindex\"\n    [placeholder]=\"placeholder\"\n    [inputId]=\"inputId\"\n    [dataKey]=\"dataKey\"\n    [autofocus]=\"autofocus\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [autoDisplayFirst]=\"autoDisplayFirst\"\n    [group]=\"group\"\n    [showClear]=\"showClear\"\n    [baseZIndex]=\"baseZIndex\"\n    [autoZIndex]=\"autoZIndex\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [ariaFilterLabel]=\"ariaFilterLabel\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    (onChange)=\"onChange.emit($event)\"\n    (onClick)=\"onClick.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onShow)=\"handleOnShow($event)\"\n    (onHide)=\"handleOnHide($event)\"\n  >\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\n      <ng-container\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\n      ></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\n    </ng-template>\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n    </ng-template>\n  </p-dropdown>\n\n  <div class=\"zyfra-dropdown-with-content__right\">\n    <ng-content select=\"[right]\"></ng-content>\n  </div>\n</span>\n"
        },
        {
            "name": "ZyfraDynamicDialogComponent",
            "id": "component-ZyfraDynamicDialogComponent-922f1abcf3b705857ecf671c04c91178",
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ZyfraDynamicDialogService"
                }
            ],
            "selector": "storybook-dynamic-dialog",
            "styleUrls": [],
            "styles": [],
            "template": "<zyfra-button (click)=\"open()\"\n              label=\"open dialog\"\n              icon=\"pi pi-check\"></zyfra-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number"
                },
                {
                    "name": "closable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean"
                },
                {
                    "name": "closeOnEscape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "contentStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": ""
                },
                {
                    "name": "dismissableMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "rtl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean"
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "transitionOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogConfig",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraDynamicDialogRef",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\n\n@Component({\n  selector: 'storybook-dynamic-dialog',\n  template: `\n  <zyfra-button (click)=\"open()\"\n                label=\"open dialog\"\n                icon=\"pi pi-check\"></zyfra-button>\n  `,\n  providers: [ZyfraDynamicDialogService]\n})\nclass ZyfraDynamicDialogComponent implements OnDestroy {\n\n  @Input() set data(data: unknown) {\n    this.options.data = data;\n  }\n  @Input() set header(header: string) {\n    this.options.header = header;\n  }\n  @Input() set footer(footer: string) {\n    this.options.footer = footer;\n  }\n  @Input() set width(width: string) {\n    this.options.width = width;\n  }\n  @Input() set height(height: string) {\n    this.options.height = height;\n  }\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\n    this.options.closeOnEscape = closeOnEscape;\n  }\n  @Input() set baseZIndex(baseZIndex: number) {\n    this.options.baseZIndex = baseZIndex;\n  }\n  @Input() set autoZIndex(autoZIndex: boolean) {\n    this.options.autoZIndex = autoZIndex;\n  }\n  @Input() set dismissableMask(dismissableMask: boolean) {\n    this.options.dismissableMask = dismissableMask;\n  }\n  @Input() set rtl(rtl: boolean) {\n    this.options.rtl = rtl;\n  }\n  @Input() set style(style: string) {\n    this.options.style = style;\n  }\n  @Input() set contentStyle(contentStyle: string) {\n    this.options.contentStyle = contentStyle;\n  }\n  @Input() set styleClass(styleClass: string) {\n    this.options.styleClass = styleClass;\n  }\n  @Input() set transitionOptions(transitionOptions: string) {\n    this.options.transitionOptions = transitionOptions;\n  }\n  @Input() set closable(closable: boolean) {\n    this.options.closable = closable;\n  }\n  @Input() set showHeader(showHeader: boolean) {\n    this.options.showHeader = showHeader;\n  }\n\n  public options: ZyfraDynamicDialogConfig = {};\n\n  private ref: ZyfraDynamicDialogRef;\n\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\n\n  public open(): void {\n    this.ref = this.dynamicDialogService.open(\n      ExampleDynamicDialogComponent, this.options\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.ref) {\n      this.ref.close();\n    }\n  }\n}\n\n@Component({\n  template: `\n  <div>\n    user component\n  </div>`\n})\nclass ExampleDynamicDialogComponent { }\n\nexport default {\n  title: 'Dialogs/DynamicDialog',\n  component: ZyfraDynamicDialogComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        ZyfraDynamicDialogComponent,\n        ExampleDynamicDialogComponent\n      ],\n      imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        ZyfraButtonModule,\n        ZyfraDynamicDialogModule\n      ],\n    })\n  ],\n  parameters: {\n    docs: {\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\n    },\n  },\n} as Meta;\n\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n});\n\n\nexport const Simple = Template.bind({});\nSimple.args = {\n  data: 'Some data',\n  header: \"Header\",\n  footer: \"Footer\",\n  width: \"500px\",\n  height: \"200px\",\n  closeOnEscape: false,\n  baseZIndex: 0,\n  autoZIndex: false,\n  dismissableMask: false,\n  rtl: false,\n  style: '',\n  contentStyle: '',\n  styleClass: '',\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\n  closable: true,\n  showHeader: true\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 71,
                "jsdoctags": [
                    {
                        "name": "dynamicDialogService",
                        "type": "ZyfraDynamicDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "data",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "footer": {
                    "name": "footer",
                    "setSignature": {
                        "name": "footer",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "footer",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "width": {
                    "name": "width",
                    "setSignature": {
                        "name": "width",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "width",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "height": {
                    "name": "height",
                    "setSignature": {
                        "name": "height",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "height",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closeOnEscape": {
                    "name": "closeOnEscape",
                    "setSignature": {
                        "name": "closeOnEscape",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 35,
                        "jsdoctags": [
                            {
                                "name": "closeOnEscape",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "baseZIndex": {
                    "name": "baseZIndex",
                    "setSignature": {
                        "name": "baseZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 38,
                        "jsdoctags": [
                            {
                                "name": "baseZIndex",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "autoZIndex": {
                    "name": "autoZIndex",
                    "setSignature": {
                        "name": "autoZIndex",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "autoZIndex",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "dismissableMask": {
                    "name": "dismissableMask",
                    "setSignature": {
                        "name": "dismissableMask",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "dismissableMask",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "rtl": {
                    "name": "rtl",
                    "setSignature": {
                        "name": "rtl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 47,
                        "jsdoctags": [
                            {
                                "name": "rtl",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "style": {
                    "name": "style",
                    "setSignature": {
                        "name": "style",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "style",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "contentStyle": {
                    "name": "contentStyle",
                    "setSignature": {
                        "name": "contentStyle",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "contentStyle",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "styleClass": {
                    "name": "styleClass",
                    "setSignature": {
                        "name": "styleClass",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 56,
                        "jsdoctags": [
                            {
                                "name": "styleClass",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "transitionOptions": {
                    "name": "transitionOptions",
                    "setSignature": {
                        "name": "transitionOptions",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "transitionOptions",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "closable": {
                    "name": "closable",
                    "setSignature": {
                        "name": "closable",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 62,
                        "jsdoctags": [
                            {
                                "name": "closable",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "showHeader": {
                    "name": "showHeader",
                    "setSignature": {
                        "name": "showHeader",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "showHeader",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "ZyfraIconComponent",
            "id": "component-ZyfraIconComponent-bdbb89651e3b5dfecd64f43c2d966a71",
            "file": "libs/components/src/lib/icon/zyfra-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-icon",
            "styleUrls": [
                "./zyfra-icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-icon',\n  templateUrl: './zyfra-icon.component.html',\n  styleUrls: ['./zyfra-icon.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraIconComponent {\n  @Input() iconClass: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    .zyfra-icon-color {\n        fill: none;\n    }\n}",
                    "styleUrl": "./zyfra-icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"zyfra-icon\" [ngClass]=\"iconClass\"></span>"
        },
        {
            "name": "ZyfraInputComponent",
            "id": "component-ZyfraInputComponent-fa624e3285cf735ef2ba390d35fe4c9d",
            "file": "libs/components/src/lib/input/zyfra-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "inputClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string | string[] | Set<string> | literal type"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"left\" | \"right\" | \"above\" | \"below\""
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { AbstractControl, ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-input',\n  templateUrl: './zyfra-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() type: string;\n  @Input() id: string;\n  @Input() placeholder: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() spanClass: string;\n  @Input() inputClass:\n    | string\n    | string[]\n    | Set<string>\n    | {\n        [klass: string]: any;\n      };\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() required: boolean;\n  @Input() tooltip: string;\n  @Input() tooltipPosition: 'left' | 'right' | 'above' | 'below'  = 'right';\n\n  @Output() onBlur = new EventEmitter<unknown>();\n\n  public get controlRequired(): boolean{\n    return !!this.ngControl.control.validator({} as AbstractControl)?.required\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "controlRequired": {
                    "name": "controlRequired",
                    "getSignature": {
                        "name": "controlRequired",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                }
            },
            "templateData": "<div class=\"p-inputgroup\" [class.zyfra-input-group_disabled]=\"disabled\">\n  <span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n    <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\n\n    <ng-content select=\"[left]\"></ng-content>\n\n    <input\n      pInputText\n      autocomplete=\"off\"\n      [type]=\"type\"\n      [id]=\"id\"\n      [formControl]=\"$any(ngControl.control)\"\n      (ngModelChange)=\"accessorOnChangeFn($event)\"\n      (blur)=\"onBlur.emit($event)\"\n      [placeholder]=\"placeholder\"\n      [ngClass]=\"\n        ngControl\n          ? {\n              'ng-invalid': ngControl.invalid,\n              'ng-valid': ngControl.valid,\n              'ng-dirty': ngControl.dirty,\n              'ng-touched': ngControl.touched\n            }\n          : inputClass\n      \"\n      [disabled]=\"disabled || accessorIsDisabled\"\n      [required]=\"required\"\n      [zyfraTooltip]=\"tooltip ? tooltip : null\"\n      [zyfraTooltipPosition]=\"tooltipPosition\"\n    />\n    <label *ngIf=\"label\" [class.label-required]=\"required || controlRequired\">{{ label }}</label>\n\n    <ng-content select=\"[right]\"></ng-content>\n  </span>\n</div>\n"
        },
        {
            "name": "ZyfraInputMaskComponent",
            "id": "component-ZyfraInputMaskComponent-cf1e81ecf5b9e425ef93b350003b8a9b",
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-mask",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-mask.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean"
                },
                {
                    "name": "autoClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "autoFocus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "characterPattern",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "mask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "slotChar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "unmask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                },
                {
                    "name": "onComplete",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                },
                {
                    "name": "onKeydown",
                    "defaultValue": "new EventEmitter<KeyboardEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-input-mask',\n  templateUrl: './zyfra-input-mask.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputMaskComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() mask: string;\n  @Input() type: string;\n  @Input() slotChar: string;\n  @Input() autoClear: boolean;\n  @Input() unmask: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string;\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() readonly: boolean;\n  @Input() name: string;\n  @Input() inputId: string;\n  @Input() required: boolean;\n  @Input() characterPattern: string;\n  @Input() autoFocus: boolean;\n  @Input() autocomplete: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() title: string;\n  @Input() label = '';\n\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onComplete = new EventEmitter<void>();\n  @Output() onKeydown = new EventEmitter<KeyboardEvent>();\n  @Output() onInput = new EventEmitter<KeyboardEvent>();\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-inputMask\n    [formControl]=\"$any(ngControl.control)\"\n    [mask]=\"mask\"\n    [type]=\"type\"\n    [slotChar]=\"slotChar\"\n    [autoClear]=\"autoClear\"\n    [unmask]=\"unmask\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    [placeholder]=\"placeholder\"\n    [size]=\"size\"\n    [maxlength]=\"maxlength\"\n    [tabindex]=\"tabindex\"\n    [disabled]=\"disabled\"\n    [readonly]=\"readonly\"\n    [name]=\"name\"\n    [inputId]=\"inputId\"\n    [required]=\"required\"\n    [characterPattern]=\"characterPattern\"\n    [autoFocus]=\"autoFocus\"\n    [autocomplete]=\"autocomplete\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaRequired]=\"ariaRequired\"\n    [title]=\"title\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onComplete)=\"onComplete.emit($event)\"\n    (onInput)=\"onInput.emit($event)\"\n    (onKeydown)=\"onKeydown.emit($event)\"\n  ></p-inputMask>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraInputNumberComponent",
            "id": "component-ZyfraInputNumberComponent-c7757aeb2e91c66b69d350f83768525c",
            "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-number",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-number.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "ariaRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "autocomplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "buttonLayout",
                    "defaultValue": "'stacked'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string"
                },
                {
                    "name": "currencyDisplay",
                    "defaultValue": "'symbol'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "decrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "decrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-down'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean"
                },
                {
                    "name": "format",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "iClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "incrementButtonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "incrementButtonIcon",
                    "defaultValue": "'zyfra-icon chevrons-up'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "localeMatcher",
                    "defaultValue": "'best fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number"
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number"
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number"
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number"
                },
                {
                    "name": "mode",
                    "defaultValue": "'decimal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "showButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "number"
                },
                {
                    "name": "spanClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onInput",
                    "defaultValue": "new EventEmitter<InputEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\nexport interface InputEvent {\n  originalEvent: KeyboardEvent;\n  value: number;\n}\n\n@Component({\n  selector: 'zyfra-input-number',\n  templateUrl: './zyfra-input-number.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputNumberComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() value: number;\n  @Input() format = true;\n  @Input() showButtons: boolean;\n  @Input() buttonLayout = 'stacked';\n  @Input() spanClass: string;\n  @Input() label: string;\n  @Input() iClass: string;\n  @Input() incrementButtonClass: string;\n  @Input() decrementButtonClass: string;\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\n  @Input() locale: string;\n  @Input() localeMatcher = 'best fit';\n  @Input() mode = 'decimal';\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() currency: string;\n  @Input() currencyDisplay = 'symbol';\n  @Input() useGrouping = true;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() step = 1;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() inputId: string;\n  @Input() inputStyle: string;\n  @Input() inputStyleClass: string;\n  @Input() placeholder: string;\n  @Input() size: number;\n  @Input() maxlength: number;\n  @Input() tabindex: string = '0';\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() title: string;\n  @Input() ariaLabel: string;\n  @Input() ariaRequired: boolean;\n  @Input() name: string;\n  @Input() autocomplete: string;\n\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onInput = new EventEmitter<InputEvent>();\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\n\n  <p-inputNumber\n    [formControl]=\"$any(ngControl.control)\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    [format]=\"format\"\n    [showButtons]=\"showButtons\"\n    [buttonLayout]=\"buttonLayout\"\n    [incrementButtonClass]=\"incrementButtonClass\"\n    [decrementButtonClass]=\"decrementButtonClass\"\n    [incrementButtonIcon]=\"incrementButtonIcon\"\n    [decrementButtonIcon]=\"decrementButtonIcon\"\n    [locale]=\"locale\"\n    [localeMatcher]=\"localeMatcher\"\n    [mode]=\"mode\"\n    [prefix]=\"prefix\"\n    [suffix]=\"suffix\"\n    [placeholder]=\"placeholder\"\n    [currency]=\"currency\"\n    [currencyDisplay]=\"currencyDisplay\"\n    [useGrouping]=\"useGrouping\"\n    [minFractionDigits]=\"minFractionDigits\"\n    [maxFractionDigits]=\"maxFractionDigits\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    [inputId]=\"inputId\"\n    [inputStyle]=\"inputStyle\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [size]=\"size\"\n    [maxlength]=\"maxlength\"\n    [tabindex]=\"tabindex\"\n    [disabled]=\"disabled\"\n    [title]=\"title\"\n    [ariaLabel]=\"ariaLabel\"\n    [ariaRequired]=\"ariaRequired\"\n    [name]=\"name\"\n    [autocomplete]=\"autocomplete\"\n    (onFocus)=\"onFocus.emit($event)\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onInput)=\"onInput.emit($event)\"\n  >\n  </p-inputNumber>\n\n  <label\n    *ngIf=\"label\"\n    [class.label-required]=\"ariaRequired\"\n    [style.padding-left]=\"showButtons && buttonLayout === 'horizontal' ? '38px' : ''\"\n    >{{ label }}</label\n  >\n</span>\n"
        },
        {
            "name": "ZyfraInputSwitchComponent",
            "id": "component-ZyfraInputSwitchComponent-0231b1219e4fec8bd0fc07532c736e46",
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-input-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-input-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-input-switch',\n  templateUrl: './zyfra-input-switch.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraInputSwitchComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() readonly: boolean;\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-inputSwitch\n  [formControl]=\"$any(ngControl.control)\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [name]=\"name\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [disabled]=\"disabled\"\n  [readonly]=\"readonly\"\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\n></p-inputSwitch>\n"
        },
        {
            "name": "ZyfraMenuApplicationsComponent",
            "id": "component-ZyfraMenuApplicationsComponent-2e76a9980876f34f013bbceab80902e6",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "ZyfraMenuAppItem | null"
                },
                {
                    "name": "bottomMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "ZyfraMenuAppItem[]"
                },
                {
                    "name": "tooltipDelay",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "number"
                },
                {
                    "name": "topMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "ZyfraMenuAppItem[]"
                },
                {
                    "name": "transition",
                    "defaultValue": "{\n    open: {\n      duration: 300,\n      delay: 500,\n      timingFunction: 'ease-in',\n    },\n    close: {\n      duration: 300,\n      delay: 300,\n      timingFunction: 'ease-out',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "ZyfraMenuAppTransitionSettings"
                }
            ],
            "outputsClass": [
                {
                    "name": "selectItem",
                    "defaultValue": "new EventEmitter<ZyfraMenuAppItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleState",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "transitionDelayEnable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "wrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'wrapper', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "closeWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnterHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onMouseOutHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "openWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectItemHandler",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuAppItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialPanelSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggle",
                    "args": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "withDelay",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleWithDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "toggleWithoutDelay",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ZyfraMenuAppItem, ZyfraMenuAppTransitionSettings } from './zyfra-menu-applications.interface';\n\n@Component({\n  selector: 'zyfra-menu-applications',\n  templateUrl: './zyfra-menu-applications.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraMenuApplicationsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('wrapper', { static: true }) wrapper: ElementRef<HTMLDivElement>;\n\n  @Input() transition: ZyfraMenuAppTransitionSettings = {\n    open: {\n      duration: 300,\n      delay: 500,\n      timingFunction: 'ease-in',\n    },\n    close: {\n      duration: 300,\n      delay: 300,\n      timingFunction: 'ease-out',\n    },\n  };\n  @Input() tooltipDelay = 1000;\n  @Input() topMenuItems: ZyfraMenuAppItem[] = [];\n  @Input() bottomMenuItems: ZyfraMenuAppItem[] = [];\n  @Input() activeItem: ZyfraMenuAppItem | null = null;\n\n  @Output() selectItem = new EventEmitter<ZyfraMenuAppItem>();\n  @Output() toggleState = new EventEmitter<boolean>();\n\n  transitionDelayEnable = true;\n  private destroy$ = new Subject();\n  private _isOpen = true;\n\n  set isOpen(isOpen: boolean) {\n    this._isOpen = isOpen;\n    this.toggleState.emit(this.isOpen);\n    this.cdr.detectChanges();\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.setInitialPanelSizes();\n  }\n\n  private setInitialPanelSizes(): void {\n    const menuSplitter = this.elementRef.nativeElement.querySelector('.menu-splitter');\n    const panelBottom = this.elementRef.nativeElement.querySelector('.menu-applications-list__bottom');\n    const splitterPanels = this.elementRef.nativeElement.querySelectorAll('.menu-splitter__panel');\n\n    if (!menuSplitter || !panelBottom || !splitterPanels.length || splitterPanels.length !== 2) {\n      return;\n    }\n\n    const bottomPanelSize = Math.ceil((panelBottom.offsetHeight / menuSplitter.offsetHeight) * 100);\n\n    this.renderer.setStyle(splitterPanels[0], 'flex-basis', 'calc(' + (100 - bottomPanelSize) + '%)');\n    this.renderer.setStyle(splitterPanels[1], 'flex-basis', 'calc(' + bottomPanelSize + '%)');\n  }\n\n  get transitionStyles(): Record<string, string> {\n    let transitionDelay: number;\n\n    if (this.transitionDelayEnable) {\n      transitionDelay = this.isOpen ? this.transition.open.delay : this.transition.close.delay;\n    } else {\n      transitionDelay = 0;\n    }\n\n    return {\n      'transition-delay': `${transitionDelay}ms`,\n      'transition-duration': `${\n        this.isOpen ? this.transition.open.duration : this.transition.close.duration\n      }ms`,\n      'transition-timing-function': this.isOpen\n        ? this.transition.open.timingFunction\n        : this.transition.close.timingFunction,\n    };\n  }\n\n  @HostListener('mouseenter')\n  public onMouseEnterHandler(): void {\n    this.open(true);\n  }\n\n  @HostListener('mouseleave')\n  public onMouseOutHandler(): void {\n    this.close(true);\n  }\n\n  public toggle(withDelay = false): void {\n    if (withDelay) {\n      this.toggleWithDelay();\n    } else {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  private toggleWithDelay(): void {\n    this.transitionDelayEnable = true;\n    this.isOpen = !this.isOpen;\n  }\n\n  private toggleWithoutDelay(): void {\n    this.transitionDelayEnable = false;\n    this.isOpen = !this.isOpen;\n  }\n\n  public open(withDelay = false): void {\n    if (withDelay) {\n      this.openWithDelay();\n    } else {\n      this.openWithoutDelay();\n    }\n  }\n\n  private openWithDelay(): void {\n    if (!this.isOpen) {\n      this.toggleWithDelay();\n    }\n  }\n\n  private openWithoutDelay(): void {\n    if (!this.isOpen) {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  public close(withDelay = false): void {\n    if (withDelay) {\n      this.closeWithDelay();\n    } else {\n      this.closeWithoutDelay();\n    }\n  }\n\n  private closeWithDelay(): void {\n    if (this.isOpen) {\n      this.toggleWithDelay();\n    }\n  }\n\n  private closeWithoutDelay(): void {\n    if (this.isOpen) {\n      this.toggleWithoutDelay();\n    }\n  }\n\n  public selectItemHandler(item: ZyfraMenuAppItem): void {\n    this.selectItem.emit(item);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "isOpen": {
                    "name": "isOpen",
                    "setSignature": {
                        "name": "isOpen",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 52,
                        "jsdoctags": [
                            {
                                "name": "isOpen",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 58
                    }
                },
                "transitionStyles": {
                    "name": "transitionStyles",
                    "getSignature": {
                        "name": "transitionStyles",
                        "type": "",
                        "returnType": "Record<string, string>",
                        "line": 83
                    }
                }
            },
            "templateData": "<div\n  #wrapper\n  class=\"menu-applications\"\n  [class]=\"isOpen ? 'menu-applications_opened' : 'menu-applications_closed'\"\n  [style]=\"transitionStyles\"\n>\n  <div class=\"menu-applications-wrapper\">\n    <zyfra-splitter [minSizes]=\"[2, 1]\" styleClass=\"menu-splitter\" panelStyleClass=\"menu-splitter__panel\">\n      <ng-template zyfraSplitterTemplate>\n        <ul class=\"menu-applications-list menu-applications-list__top\">\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: topMenuItems }\"></ng-container>\n        </ul>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <ul class=\"menu-applications-list menu-applications-list__bottom\">\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: bottomMenuItems }\"></ng-container>\n        </ul>\n      </ng-template>\n    </zyfra-splitter>\n  </div>\n</div>\n\n<ng-template #itemList let-items>\n  <zyfra-menu-applications-item\n    *ngFor=\"let item of items\"\n    [item]=\"item\"\n    [isActive]=\"item === activeItem\"\n    [zyfraTooltip]=\"tooltip\"\n    [zyfraTooltipContext]=\"item\"\n    [zyfraTooltipDelay]=\"tooltipDelay\"\n    (click)=\"selectItemHandler(item)\"\n  ></zyfra-menu-applications-item>\n</ng-template>\n\n<ng-template #tooltip let-item>\n  <div class=\"menu-applications-tooltip\">\n    <div class=\"menu-applications-tooltip__title\">{{ item.title }}</div>\n    <div class=\"menu-applications-tooltip__desc\" *ngIf=\"item.description\">{{ item.description }}</div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "ZyfraMenuApplicationsItemComponent",
            "id": "component-ZyfraMenuApplicationsItemComponent-15d38aa4b7d7102517885c7d07ece501",
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-applications-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-menu-applications-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ZyfraMenuAppItem"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ZyfraMenuAppItem } from '../zyfra-menu-applications.interface';\n\n@Component({\n  selector: 'zyfra-menu-applications-item',\n  templateUrl: './zyfra-menu-applications-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraMenuApplicationsItemComponent {\n  @Input() item: ZyfraMenuAppItem;\n  @Input() isActive = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<button\n  class=\"zyfra-menu-applications-item\"\n  [class.zyfra-menu-applications-item_active]=\"isActive\"\n  type=\"button\"\n>\n  <zyfra-icon [iconClass]=\"item.icon\" class=\"zyfra-menu-applications-item__icon\"></zyfra-icon>\n  <span class=\"zyfra-menu-applications-item__title\">{{ item.title }}</span>\n  <zyfra-icon class=\"zyfra-menu-applications-item__arrow\" iconClass=\"arrows-arrow-right\"></zyfra-icon>\n</button>\n"
        },
        {
            "name": "ZyfraMessageComponent",
            "id": "component-ZyfraMessageComponent-4f14b72e47de785505c60449db5286fc",
            "file": "libs/components/src/lib/message/zyfra-message.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "enableService",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "escape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "style",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Message[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Message, MessageService, PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-message',\n  templateUrl: './zyfra-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [],\n  providers: [MessageService],\n})\nexport class ZyfraMessageComponent {\n  //---- message component --------\n  @Input() value: Message[];\n  @Input() closable: boolean = true;\n  @Input() style: string = '';\n  @Input() styleClass: string = '';\n  @Input() enableService: boolean = true;\n  @Input() escape: boolean = true;\n  @Input() showTransitionOptions: string = '300ms ease-out';\n  @Input() hideTransitionOptions: string = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n  // --- for message service -----\n  // @Input() severity:string;\n  // @Input() summary:string;\n  // @Input() detail:string;\n  // @Input() id:any;\n  // @Input() life:number    = 3000;\n  // @Input() sticky:boolean = false;\n  // @Input() data:any;\n\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\n    this.primengConfig.ripple = true;\n  }\n\n  public clear(): void {\n    this.value = [];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-messages\n  [(value)]=\"value\"\n  [closable]=\"closable\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [enableService]=\"enableService\"\n  [escape]=\"escape\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n></p-messages>\n"
        },
        {
            "name": "ZyfraNavMenuComponent",
            "id": "component-ZyfraNavMenuComponent-7b364c0cd15d4076448640023dc97977",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "headerConfig",
                    "defaultValue": "{\n    settings: false,\n    home: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "HeaderConfig"
                },
                {
                    "name": "menuTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "[]"
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "[]"
                },
                {
                    "name": "searchPlaceholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "settingsConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "SettingsConfig"
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "ToolbarConfig"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "EventEmitter"
                },
                {
                    "name": "homeClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "EventEmitter"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter<NavMenuEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<NavMenuSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_settings",
                    "defaultValue": "DEFAULT_SETTINGS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "groupNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[][]",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "headerExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "itemExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'navMenu'"
                        }
                    ]
                },
                {
                    "name": "menuGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraNavMenuGroupDirective>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "name": "settingsPanelConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "toolbarExtraTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [
                {
                    "name": "activeElement",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLElement",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "applySettings",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "copyConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "expandBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasActive",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToActiveElement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "groupIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { ZyfraNavMenuGroupDirective } from '../../directives/nav-menu-group.directive';\nimport { Router } from '@angular/router';\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\nimport { Subject } from 'rxjs';\nimport { convertToNode } from '../../utils/treeNode.functions';\nimport {\n  DEFAULT_SETTINGS,\n  HeaderConfig,\n  NavMenuEvent,\n  NavMenuSelectionEvent,\n  SettingsConfig,\n  ToolbarConfig\n} from '../../model/nav-menu-config';\nimport { ZyfraTemplateDirective } from '../../../@core/shared/zyfra-template.directives';\n\n@Component({\n  selector: 'zyfra-nav-menu',\n  templateUrl: './zyfra-nav-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuComponent implements AfterViewInit, AfterContentInit, OnDestroy {\n  @ViewChild('navMenu') menu: ElementRef;\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\n  @ContentChildren(ZyfraNavMenuGroupDirective) menuGroups: QueryList<ZyfraNavMenuGroupDirective>;\n  @Input() menuTitle: string;\n  @Input() emptyMessage: string;\n  @Input() searchPlaceholder: string = '';\n  @Input() toolbarConfig: ToolbarConfig;\n\n  @Input() get settingsConfig(): SettingsConfig {\n    return this._settings;\n  }\n\n  set settingsConfig(settings: SettingsConfig) {\n    if (!settings) {\n      return;\n    }\n    this._settings = { ...DEFAULT_SETTINGS, ...settings };\n  };\n\n  @Input() headerConfig: HeaderConfig = {\n    settings: false,\n    home: false\n  };\n\n  @Input() set model(items: ZyfraMenuItem[]) {\n    this.nodes = (items || []).map(item => convertToNode(item));\n  }\n\n  @Input() set nodes(nodes: TreeNode[]) {\n    this._nodes = nodes;\n  }\n\n  get nodes(): TreeNode[] {\n    return this._nodes;\n  }\n\n  @Output() homeClick = new EventEmitter<void>();\n  @Output() selectionChange = new EventEmitter<NavMenuSelectionEvent>();\n  @Output() nodeExpand = new EventEmitter<NavMenuEvent>();\n  @Output() nodeCollapse = new EventEmitter<NavMenuEvent>();\n  @Output() activeItemChange = new EventEmitter<NavMenuEvent>();\n\n\n  headerExtraTemplate: TemplateRef<any>;\n  toolbarExtraTemplate: TemplateRef<any>;\n  itemExtraTemplate: TemplateRef<any>;\n\n  settingsPanelConfig: SettingsConfig;\n  activeNode: TreeNode;\n  groupNodes: TreeNode[][] = [];\n  activeGroup: number;\n\n  private _activeNode: TreeNode;\n  private _settings: SettingsConfig = DEFAULT_SETTINGS;\n  private _nodes: TreeNode[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private renderer: Renderer2,\n              private viewContainerRef: ViewContainerRef,\n              private cdr: ChangeDetectorRef,\n              private router: Router\n  ) {\n  }\n\n  ngAfterContentInit(): void {\n    if (this.menuGroups) {\n      this.menuGroups.forEach(({ items }: ZyfraNavMenuGroupDirective) => {\n        this.groupNodes.push(items.map((item: ZyfraMenuItem) => convertToNode(item)));\n      });\n    }\n\n    this.templates.forEach((item) => {\n      switch (item.zyfraTemplate) {\n        case 'header':\n          this.headerExtraTemplate = item.templateRef;\n          break;\n        case 'toolbar':\n          this.toolbarExtraTemplate = item.templateRef;\n          break;\n        case 'menuitem':\n          this.itemExtraTemplate = item.templateRef;\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    let activeGroup;\n    if (this.groupNodes.length) {\n      this.groupNodes.some((nodes, groupIndex) =>\n        nodes.some((node) => {\n          const isActiveGroup = this.hasActive(node);\n          if (isActiveGroup) {\n            activeGroup = groupIndex;\n          }\n          return isActiveGroup;\n        }));\n    } else {\n      this.nodes.some(node => this.hasActive(node));\n    }\n    requestAnimationFrame(() => {\n      this.activeNode = this._activeNode;\n      this.activeGroup = activeGroup;\n      if (this.activeNode) {\n        this.expandBranchFrom(this.activeNode);\n        setTimeout(() => this.scrollToActiveElement(), 500);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public nodeCollapseHandler(node: TreeNode, groupIndex?: number): void {\n    this.nodeCollapse.emit({ item: node.data, groupIndex });\n  }\n\n  public nodeExpandHandler(node: TreeNode, groupIndex?: number): void {\n    this.nodeExpand.emit({ item: node.data, groupIndex });\n  }\n\n  public updateActiveItem(node: TreeNode, groupIndex?: number): void {\n    this.activeItemChange.emit({ item: node.data, groupIndex });\n  }\n\n  public copyConfig(): void {\n    this.settingsPanelConfig = { ...this.settingsConfig };\n  }\n\n  public applySettings(): void {\n    this.settingsConfig = this.settingsPanelConfig;\n  }\n\n  public selectionChangeHandler(selection: TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[], groupIndex?: number): void {\n    let selectionData;\n    if (selection) {\n      selectionData = Array.isArray(selection)\n        ? selection.map(node => node.data)\n        : selection.data;\n    }\n    this.selectionChange.emit({ selection: selectionData, groupIndex });\n  }\n\n  private hasActive(node: TreeNode): boolean {\n    if (this.isSelected(node)) {\n      return true;\n    }\n    if (node.children) {\n      return node.children.some(childNode => this.isSelected(childNode) || this.hasActive(childNode));\n    }\n    return this.isSelected(node);\n  }\n\n  private isSelected(node: TreeNode): boolean {\n    if (node.data.routerLink) {\n      const isActive = this.isActive(node.data);\n      if (isActive) {\n        node.styleClass = 'active';\n        this._activeNode = node;\n      }\n      return isActive;\n    }\n    return false;\n  }\n\n  private isActive(item: ZyfraMenuItem): boolean {\n    return item.routerLink && this.router.isActive(this.router.createUrlTree(item.routerLink), {\n      paths: 'subset',\n      queryParams: 'subset',\n      fragment: 'ignored',\n      matrixParams: 'ignored'\n    });\n  }\n\n  private expandBranchFrom(node: TreeNode): void {\n    if (node.parent) {\n      node.parent.expanded = true;\n      this.expandBranchFrom(node.parent);\n    } else {\n      node.expanded = true;\n    }\n    this.cdr.markForCheck();\n  }\n\n  private scrollToActiveElement(): void {\n    const activeItem = this.activeElement();\n    if (activeItem) {\n      activeItem.scrollIntoView({ block: 'center', behavior: 'smooth' })\n    }\n  }\n\n  private activeElement(): HTMLElement {\n    return this.menu.nativeElement.querySelector('.p-treenode.active');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 96,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterContentInit",
                "OnDestroy"
            ],
            "accessors": {
                "settingsConfig": {
                    "name": "settingsConfig",
                    "setSignature": {
                        "name": "settingsConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "settings",
                                "type": "SettingsConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "settingsConfig",
                        "type": "",
                        "returnType": "SettingsConfig",
                        "line": 49
                    }
                },
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "ZyfraMenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 69,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 73
                    }
                }
            },
            "templateData": "<div class=\"zyfra-nav-menu p-component\" #navMenu>\n\n  <div class=\"header\" #header>\n    <div class=\"app-name\">{{menuTitle}}</div>\n    <div class=\"right-side\">\n      <ng-container *ngTemplateOutlet=\"headerExtraTemplate\"></ng-container>\n      <i *ngIf=\"headerConfig?.settings\" class=\"toolbar-button zyfra-icon settings-tune\"\n         (click)=\"copyConfig(); settingPanel.show($event, header)\"></i>\n      <i *ngIf=\"headerConfig?.home\" class=\"toolbar-button zyfra-icon social-home\"\n         (click)=\"homeClick.emit()\"></i>\n    </div>\n  </div>\n\n  <div class=\"nav-menu-content\"\n       [ngClass]=\"settingsConfig?.selectedSize\">\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\n      <zyfra-accordion [multiple]=\"!settingsConfig.singleGroup\">\n        <zyfra-accordion-tab *ngFor=\"let group of menuGroups; let i = index\" [selected]=\"i === activeGroup\">\n          <ng-template zyfraTemplate=\"header\">\n            <span class=\"p-accordion-header-text groupHeader\">\n                <i class=\"zyfra-icon vectors-circle\"></i>{{group.header}}\n            </span>\n          </ng-template>\n          <zyfra-menu-group-content [nodes]=\"groupNodes[i]\"\n                                    [selectionMode]=\"settingsConfig.selectionMode\"\n                                    [activeNode]=\"activeGroup === i ? activeNode : null\"\n                                    [searchPlaceholder]=\"searchPlaceholder\"\n                                    [toolbarConfig]=\"toolbarConfig\"\n                                    [toolbarExtra]=\"toolbarExtraTemplate\"\n                                    [itemExtra]=\"itemExtraTemplate\"\n                                    [emptyMessage]=\"emptyMessage\"\n                                    (activeItemChange)=\"updateActiveItem($event, i)\"\n                                    (selectionChange)=\"selectionChangeHandler($event, i)\"\n                                    (nodeCollapse)=\"nodeCollapseHandler($event, i)\"\n                                    (nodeExpand)=\"nodeExpandHandler($event, i)\">\n          </zyfra-menu-group-content>\n        </zyfra-accordion-tab>\n      </zyfra-accordion>\n    </ng-container>\n\n    <ng-template #noGroups>\n      <zyfra-menu-group-content [nodes]=\"nodes\"\n                                [activeNode]=\"activeNode\"\n                                [selectionMode]=\"settingsConfig.selectionMode\"\n                                [searchPlaceholder]=\"searchPlaceholder\"\n                                [toolbarConfig]=\"toolbarConfig\"\n                                [toolbarExtra]=\"toolbarExtraTemplate\"\n                                [itemExtra]=\"itemExtraTemplate\"\n                                [emptyMessage]=\"emptyMessage\"\n                                (activeItemChange)=\"updateActiveItem($event)\"\n                                (selectionChange)=\"selectionChangeHandler($event)\"\n                                (nodeCollapse)=\"nodeCollapseHandler($event)\"\n                                (nodeExpand)=\"nodeExpandHandler($event)\">\n      </zyfra-menu-group-content>\n    </ng-template>\n  </div>\n\n  <p-overlayPanel #settingPanel\n                  styleClass=\"settingsPanel\"\n                  [dismissable]=\"false\"\n                  [appendTo]=\"header\">\n    <ng-template pTemplate>\n      <div>Настройки навигационой панели</div>\n      <div class=\"settings-block\">\n        <span>Представление</span>\n        <zyfra-checkbox label=\"Одиночный режим групповых панелей\"\n                        [(model)]=\"settingsPanelConfig.singleGroup\"></zyfra-checkbox>\n        <zyfra-checkbox label=\"Режим множественного выбора элементов\"\n                        [model]=\"settingsPanelConfig.selectionMode === 'checkbox'\"\n                        (modelChange)=\"settingsPanelConfig.selectionMode = $event ? 'checkbox' : 'single'\"></zyfra-checkbox>\n      </div>\n      <div class=\"settings-block\">\n        <span>Степень компактности</span>\n        <p-radioButton name=\"size\"\n                       value=\"standard\"\n                       label=\"Стандартный вид\"\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\n        <p-radioButton name=\"size\"\n                       value=\"enlarged\"\n                       label=\"Увеличенный вид\"\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\n      </div>\n      <div>\n        <zyfra-button styleClass=\"p-button-secondary p-button-mini\"\n                      label=\"Отмена\"\n                      (onClick)=\"settingPanel.hide()\"></zyfra-button>\n        <zyfra-button styleClass=\"p-button-mini\"\n                      label=\"Подтвердить\"\n                      (onClick)=\"applySettings(); settingPanel.hide()\"></zyfra-button>\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n</div>\n"
        },
        {
            "name": "ZyfraNavMenuGroupComponent",
            "id": "component-ZyfraNavMenuGroupComponent-db477eaf37b1d02e02ea7025ae500f19",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-menu-group-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": ""
                },
                {
                    "name": "emptyMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "nodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "[]"
                },
                {
                    "name": "search",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "searchPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": ""
                },
                {
                    "name": "toolbarConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": ""
                },
                {
                    "name": "toolbarExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "TemplateRef<any>"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeItemChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "nodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "EventEmitter<TreeNode>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter<TreeNode | []>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_nodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_selectionMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectionType",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_toolbarConfig",
                    "defaultValue": "DEFAULT_TOOLBAR_CONFIG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeRootNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentFolder",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "folderIcons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'folderIcons'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "folderPath",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isToolbarNotEmpty",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "pathToActiveNode",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rubricatorNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tree",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "Tree"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "treeWrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "viewMode",
                    "defaultValue": "'hierarchy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewMode",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "viewNodes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "methodsClass": [
                {
                    "name": "changeActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 264,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "changeSearchValue",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeViewMode",
                    "args": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "triggeredMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearSearchField",
                    "args": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "collapseAllNodes",
                    "args": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "excludeBranch",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranch",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "collapseBranchFrom",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nodeCollapseHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nodeExpandHandler",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetActiveParent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectionChangeHandler",
                    "args": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "selection",
                            "type": "TreeNode | TreeNode[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setActiveNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCurrentNode",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 229,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toLevelUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateIfHasActiveChild",
                    "args": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 302,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "node",
                            "type": "TreeNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateViewNodes",
                    "args": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 309,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "newMode",
                            "type": "ViewMode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { Tree } from 'primeng/tree';\nimport { TreeNode } from 'primeng/api';\nimport { NavMenuService } from '../../service/selection.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { fromRubricatorNodes, getPath } from '../../utils/treeNode.functions';\nimport {\n  DEFAULT_TOOLBAR_CONFIG,\n  SelectionType,\n  ToolbarConfig,\n  ViewMode\n} from '../../model/nav-menu-config';\n\n@Component({\n  selector: 'zyfra-menu-group-content',\n  templateUrl: './zyfra-nav-menu-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuGroupComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild(Tree) public tree: Tree;\n  @ViewChild('folderIcons') public folderIcons: TemplateRef<any>;\n  @Input() itemExtra: TemplateRef<any>;\n  @Input() toolbarExtra: TemplateRef<any>;\n  @Input() emptyMessage: string;\n  @Input() search: boolean = false;\n  @Input() searchPlaceholder: string;\n\n  @Input() set activeNode(node: TreeNode) {\n    if (!node) {\n      return;\n    }\n    this.currentFolder = node.parent;\n    this.setActiveNode(node);\n  }\n\n  get activeNode(): TreeNode {\n    return this._activeNode;\n  }\n\n  @Input() set nodes(nodes: TreeNode[]) {\n    if (!nodes) {\n      return;\n    }\n\n    this._nodes = nodes;\n    this.viewNodes = nodes;\n    if (this.toolbarConfig.rubricatorMode) {\n      this.rubricatorNodes = fromRubricatorNodes(this.nodes);\n    }\n  }\n\n  get nodes(): TreeNode[] {\n    return this._nodes;\n  }\n\n  @Input() set selectionMode(mode: SelectionType) {\n    this._selectionMode = mode;\n    if (this.tree && this.tree.selection) {\n      if (Array.isArray(this.tree.selection) && this._selectionMode === 'single') {\n        this.setActiveNode(this.activeNode);\n      }\n      if (!Array.isArray(this.tree.selection) && this._selectionMode === 'checkbox') {\n        this.tree.selection = [this.tree.selection];\n      }\n    }\n  }\n\n  get selectionMode(): SelectionType {\n    return this._selectionMode;\n  }\n\n  @Input() set toolbarConfig(config: ToolbarConfig) {\n    if (!config) {\n      return;\n    }\n    this._toolbarConfig = { ...DEFAULT_TOOLBAR_CONFIG, ...config };\n    this.isToolbarNotEmpty = Object.values(this._toolbarConfig).some(value => value);\n  }\n\n  get toolbarConfig(): ToolbarConfig {\n    return this._toolbarConfig;\n  }\n\n  @Output() selectionChange: EventEmitter<TreeNode | TreeNode[]> = new EventEmitter();\n  @Output() activeItemChange: EventEmitter<TreeNode> = new EventEmitter();\n  @Output() nodeExpand: EventEmitter<TreeNode> = new EventEmitter();\n  @Output() nodeCollapse: EventEmitter<TreeNode> = new EventEmitter();\n\n  isToolbarNotEmpty: boolean = false;\n  viewNodes: TreeNode[] = [];\n  viewMode: ViewMode = 'hierarchy';\n  currentFolder: TreeNode = null;\n\n  private _selectionMode: SelectionType = 'single';\n  private _nodes: TreeNode[] = [];\n  private _activeNode: TreeNode;\n  private _toolbarConfig: ToolbarConfig = DEFAULT_TOOLBAR_CONFIG;\n  private activeRootNode: TreeNode;\n  private treeWrapper: Element;\n  private rubricatorNodes: TreeNode[] = [];\n  private pathToActiveNode = [];\n  private folderPath = [];\n  private destroyed$ = new Subject();\n\n  constructor(private renderer: Renderer2,\n              private viewContainerRef: ViewContainerRef,\n              private cdr: ChangeDetectorRef,\n              private navMenuService: NavMenuService\n  ) { }\n\n  ngOnInit(): void {\n    this.navMenuService.selection$\n      .pipe(\n        filter(() => Boolean(this.tree)),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(value => {\n        if (value !== this.activeNode) {\n          this.resetActiveParent();\n          if (this.selectionMode === 'single') {\n            if (this.tree.selection) {\n              this.tree.selection = null;\n              this.selectionChange.emit(this.tree.selection);\n            }\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    const embeddedViewRef = this.viewContainerRef.createEmbeddedView(this.folderIcons);\n    this.treeWrapper = this.tree.el.nativeElement.querySelector('.p-tree-wrapper');\n    this.renderer.appendChild(this.treeWrapper, embeddedViewRef.rootNodes[0]);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public selectionChangeHandler(selection: TreeNode | TreeNode[]): void {\n    this.selectionChange.emit(selection);\n  };\n\n  public nodeCollapseHandler(node: TreeNode): void {\n    this.nodeCollapse.emit(node);\n    this.currentFolder = node.parent;\n    this.updateIfHasActiveChild(node);\n  }\n\n  public nodeExpandHandler(node: TreeNode): void {\n    if (node === this.activeRootNode) {\n      this.changeActiveParent();\n    }\n    this.setCurrentNode(node);\n    this.nodeExpand.emit(node);\n  }\n\n  public setActiveNode(node: TreeNode): void {\n    this.resetActiveParent();\n    if (this.selectionMode === 'single') {\n      this.tree.selection = node;\n      this.selectionChange.emit(this.tree.selection);\n      this._activeNode = node;\n      this.navMenuService.selectionChange(node);\n    } else {\n      if (this._activeNode) {\n        this._activeNode.styleClass = '';\n      }\n      this._activeNode = node;\n      this._activeNode.styleClass = 'active';\n    }\n    this.pathToActiveNode = getPath(node);\n    if (this.viewMode === 'folder') {\n      this.pathToActiveNode = [...this.folderPath, getPath(node)[1]];\n    }\n    this.activeItemChange.emit(node);\n  }\n\n  public toLevelUp(): void {\n    this.currentFolder.expanded = false;\n    this.nodeCollapseHandler(this.currentFolder);\n    this.currentFolder = this.folderPath.pop();\n    this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\n    this.cdr.markForCheck();\n  }\n\n  public toTop(): void {\n    this.collapseBranchFrom(this.currentFolder);\n    this.currentFolder = null;\n    this.viewNodes = this.nodes;\n    this.cdr.markForCheck();\n  }\n\n  public closeAll(): void {\n    if (this.viewMode === 'folder') {\n      this.toTop();\n    } else {\n      this.collapseAllNodes();\n    }\n    this.currentFolder = null;\n  }\n\n  public changeViewMode(triggeredMode: ViewMode): void {\n    if (this.viewMode === 'rubricator') {\n      this.currentFolder = null;\n    }\n    this.viewMode = this.viewMode === triggeredMode\n      ? 'hierarchy'\n      : triggeredMode;\n    this.updateViewNodes(this.viewMode);\n  }\n\n  public toggleSearch(): void {\n    this.changeSearchValue('');\n    this.search = !this.search;\n  }\n\n  public changeSearchValue(searchString: string): void {\n    this.tree._filter(searchString);\n  }\n\n  public clearSearchField(field: HTMLInputElement): void {\n    field.value = '';\n    this.changeSearchValue('');\n    field.focus();\n  }\n\n\n  private setCurrentNode(node: TreeNode): void {\n    if (this.viewMode === 'folder') {\n      this.folderPath.push(this.currentFolder);\n      this.viewNodes = [node];\n    }\n    this.currentFolder = node;\n  }\n\n  private resetActiveParent(): void {\n    if (this.activeRootNode && this.pathToActiveNode) {\n      this.pathToActiveNode.forEach(node => {\n        if (node) {\n          node.styleClass = '';\n        }\n      });\n      this.activeRootNode = null;\n    }\n  }\n\n  private changeActiveParent(): void {\n    if (this.activeRootNode) {\n      this.activeRootNode.styleClass = '';\n      this.activeRootNode = this.pathToActiveNode.find(node => node?.styleClass === 'active-root');\n    }\n  }\n\n  private collapseBranchFrom(node: TreeNode): void {\n    this.updateIfHasActiveChild(node);\n    node.expanded = false;\n    while (this.folderPath.length) {\n      const parent = this.folderPath.pop();\n      if (parent) {\n        parent.expanded = false;\n      }\n      this.updateIfHasActiveChild(parent);\n    }\n  }\n\n  private collapseAllNodes(excludeBranch?: TreeNode): void {\n    this.viewNodes.forEach(node => {\n      if (node !== excludeBranch) {\n        this.collapseBranch(node);\n      }\n    });\n  }\n\n  private collapseBranch(node: TreeNode): void {\n    node.expanded = false;\n    if (node.children) {\n      node.children.forEach(childNode => {\n        this.updateIfHasActiveChild(childNode);\n        this.collapseBranch(childNode);\n      });\n    }\n    this.updateIfHasActiveChild(node);\n  }\n\n  private updateIfHasActiveChild(node: TreeNode): void {\n    if (node && this.pathToActiveNode.includes(node)) {\n      this.activeRootNode = node;\n      this.activeRootNode.styleClass = 'active-root';\n    }\n  }\n\n  private updateViewNodes(newMode: ViewMode): void {\n    if (newMode === 'rubricator') {\n      if (!this.rubricatorNodes.length) {\n        this.rubricatorNodes = fromRubricatorNodes(this.nodes);\n      }\n      this.viewNodes = this.rubricatorNodes;\n    } else if (newMode === 'folder') {\n      if (this.currentFolder) {\n        this.folderPath = getPath(this.currentFolder);\n        this.collapseAllNodes(this.folderPath[1] || this.currentFolder);\n        this.currentFolder.expanded = true;\n      }\n      this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\n    } else {\n      this.viewNodes = this.nodes;\n    }\n    if (this.search) {\n      this.toggleSearch();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 118,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navMenuService",
                        "type": "NavMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnDestroy"
            ],
            "accessors": {
                "activeNode": {
                    "name": "activeNode",
                    "setSignature": {
                        "name": "activeNode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 43,
                        "jsdoctags": [
                            {
                                "name": "node",
                                "type": "TreeNode",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "activeNode",
                        "type": "",
                        "returnType": "TreeNode",
                        "line": 51
                    }
                },
                "nodes": {
                    "name": "nodes",
                    "setSignature": {
                        "name": "nodes",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 55,
                        "jsdoctags": [
                            {
                                "name": "nodes",
                                "type": "TreeNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nodes",
                        "type": "[]",
                        "returnType": "TreeNode[]",
                        "line": 67
                    }
                },
                "selectionMode": {
                    "name": "selectionMode",
                    "setSignature": {
                        "name": "selectionMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 71,
                        "jsdoctags": [
                            {
                                "name": "mode",
                                "type": "SelectionType",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "selectionMode",
                        "type": "",
                        "returnType": "SelectionType",
                        "line": 83
                    }
                },
                "toolbarConfig": {
                    "name": "toolbarConfig",
                    "setSignature": {
                        "name": "toolbarConfig",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 87,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "ToolbarConfig",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "toolbarConfig",
                        "type": "",
                        "returnType": "ToolbarConfig",
                        "line": 95
                    }
                }
            },
            "templateData": "<p-tree #headerToolbar\n        filterBy=\"label\"\n        filterMode=\"strict\"\n        [value]=\"viewNodes\"\n        [class.folder-open]=\"viewMode === 'folder' && currentFolder\"\n        [emptyMessage]=\"'<Нет данных для отображения>'\"\n        [selectionMode]=\"selectionMode\"\n        [filterPlaceholder]=\"searchPlaceholder\"\n        (selectionChange)=\"selectionChangeHandler($event)\"\n        (onNodeCollapse)=\"nodeCollapseHandler($event.node)\"\n        (onNodeExpand)=\"nodeExpandHandler($event.node)\">\n\n    <ng-template *ngIf=\"isToolbarNotEmpty || toolbarExtra\" pTemplate=\"header\">\n        <div class=\"header header-toolbar\">\n            <div class=\"right-side\">\n                <ng-container *ngTemplateOutlet=\"toolbarExtra\"></ng-container>\n                <i *ngIf=\"toolbarConfig.filesMode\" class=\"toolbar-button zyfra-icon files-mode\"\n                   [class.active]=\"viewMode === 'folder'\"\n                   (click)=\"changeViewMode('folder')\"></i>\n                <i *ngIf=\"toolbarConfig.rubricatorMode\" class=\"toolbar-button zyfra-icon editor-alfavit\"\n                   [class.active]=\"viewMode === 'rubricator'\"\n                   (click)=\"changeViewMode('rubricator')\"></i>\n                <i *ngIf=\"toolbarConfig.closeAll\" class=\"toolbar-button zyfra-icon chevrons-close-all\"\n                   (click)=\"closeAll()\"></i>\n                <i *ngIf=\"toolbarConfig.search\" class=\"toolbar-button zyfra-icon sort-zoom-in\"\n                   [class.active]=\"search\"\n                   (click)=\"toggleSearch()\"></i>\n            </div>\n        </div>\n\n        <div *ngIf=\"search\"\n             class=\"header header-search-bar\">\n            <span class=\"search-bar p-input-icon-left p-input-icon-right\">\n                <i class=\"toolbar-button zyfra-icon sort-zoom-in\"></i>\n                <i class=\"toolbar-button zyfra-icon tools-broom\"\n                   [class.hidden]=\"!searchField.value\"\n                   (click)=\"clearSearchField(searchField)\"></i>\n                <input #searchField\n                       class=\"search-bar-field\"\n                       pInputText\n                       [zyfraAutofocus]=\"false\"\n                       type=\"text\"\n                       [placeholder]=\"searchPlaceholder\"\n                       (input)=\"changeSearchValue($any($event.target).value)\"/>\n            </span>\n        </div>\n    </ng-template>\n\n    <ng-template let-node pTemplate=\"default\">\n        <zyfra-nav-menu-item [item]=\"node.data\"\n                             (itemClick)=\"setActiveNode(node)\" [itemExtra]=\"itemExtra\">\n        </zyfra-nav-menu-item>\n    </ng-template>\n</p-tree>\n\n<ng-template #folderIcons>\n    <div class=\"folder-icons\" [class.visible]=\"this.viewMode === 'folder' && currentFolder\">\n        <i class=\"toolbar-button zyfra-icon arrows-corner-left-up\" (click)=\"toLevelUp()\"></i>\n        <i class=\"toolbar-button zyfra-icon arrows-arrow-up-level\" (click)=\"toTop()\"></i>\n    </div>\n</ng-template>\n"
        },
        {
            "name": "ZyfraNavMenuItemComponent",
            "id": "component-ZyfraNavMenuItemComponent-137355427b5e6b359d33bfe55368bf3c",
            "file": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-nav-menu-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-nav-menu-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ZyfraMenuItem"
                },
                {
                    "name": "itemExtra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TemplateRef<any>"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<ZyfraMenuItem>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "itemClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "ZyfraMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\n\n@Component({\n  selector: 'zyfra-nav-menu-item',\n  templateUrl: './zyfra-nav-menu-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraNavMenuItemComponent {\n  @Input() item: ZyfraMenuItem;\n  @Input() itemExtra: TemplateRef<any>;\n\n  @Output() itemClick: EventEmitter<ZyfraMenuItem> = new EventEmitter();\n\n  public itemClickHandler(event: MouseEvent, item: ZyfraMenuItem): void {\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!item.url) {\n      event.preventDefault();\n    }\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item\n      });\n    }\n    this.itemClick.emit(item);\n  }\n\n  public onItemKeyDown(event): void {\n    const listItem = event.currentTarget.parentElement;\n    switch (event.code) {\n      case 'Space':\n      case 'Enter':\n        if (listItem) {\n          listItem.children[0].click();\n        }\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"p-menuitem-wrapper\" (click)=\"$event.stopPropagation()\">\n    <div class=\"p-menuitem-content\"\n         pTooltip\n         [class]=\"item.styleClass\"\n         [ngClass]=\"{'p-hidden': item.visible === false}\"\n         [ngStyle]=\"item.style\"\n         [tooltipOptions]=\"item.tooltipOptions\">\n        <a *ngIf=\"!item.routerLink\"\n           class=\"p-menuitem-link\"\n           role=\"menuitem\"\n           [attr.href]=\"item.url||null\"\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\n           [attr.data-automationid]=\"item.automationId\"\n           [attr.target]=\"item.target\"\n           [attr.title]=\"item.title\"\n           [attr.id]=\"item.id\"\n           [ngClass]=\"{'p-disabled':item.disabled}\"\n           (keydown)=\"onItemKeyDown($event)\"\n           (click)=\"itemClickHandler($event, item)\">\n            <span *ngIf=\"item.icon\"\n                  class=\"p-menuitem-icon\"\n                  [ngClass]=\"item.icon\">\n            </span>\n            <span *ngIf=\"item.escape !== false; else htmlLabel\"\n                  #label\n                  class=\"p-menuitem-text\"\n                  [zyfraTooltip]=\"item.label\"\n                  zyfraTooltipPosition=\"below\"\n                  [zyfraTooltipOverflowText]=\"label\">{{item.label}}\n            </span>\n            <ng-template #htmlLabel>\n                <span #label\n                      class=\"p-menuitem-text\"\n                      [zyfraTooltip]=\"item.label\"\n                      zyfraTooltipPosition=\"below\"\n                      [zyfraTooltipOverflowText]=\"label\"\n                      [innerHTML]=\"item.label\">\n                </span>\n            </ng-template>\n        </a>\n        <a *ngIf=\"item.routerLink\"\n           class=\"p-menuitem-link\"\n           role=\"menuitem\"\n           [routerLink]=\"item.routerLink\"\n           [attr.data-automationid]=\"item.automationId\"\n           [queryParams]=\"item.queryParams\"\n           [routerLinkActive]=\"'p-menuitem-link-active'\"\n           [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n           [attr.target]=\"item.target\"\n           [attr.id]=\"item.id\"\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\n           [attr.title]=\"item.title\"\n           [ngClass]=\"{'p-disabled':item.disabled}\"\n           [fragment]=\"item.fragment\"\n           [queryParamsHandling]=\"item.queryParamsHandling\"\n           [preserveFragment]=\"item.preserveFragment\"\n           [skipLocationChange]=\"item.skipLocationChange\"\n           [replaceUrl]=\"item.replaceUrl\"\n           [state]=\"item.state\"\n           (keydown)=\"onItemKeyDown($event)\"\n           (click)=\"itemClickHandler($event, item)\">\n            <span *ngIf=\"item.icon\"\n                  class=\"p-menuitem-icon\"\n                  [ngClass]=\"item.icon\">\n            </span>\n            <span *ngIf=\"item.escape !== false; else htmlRouteLabel\"\n                  #label\n                  class=\"p-menuitem-text\"\n                  [zyfraTooltip]=\"item.label\"\n                  zyfraTooltipPosition=\"below\"\n                  [zyfraTooltipOverflowText]=\"label\">{{item.label}}\n            </span>\n            <ng-template #htmlRouteLabel>\n                <span #label\n                      class=\"p-menuitem-text\"\n                      [zyfraTooltip]=\"item.label\"\n                      zyfraTooltipPosition=\"below\"\n                      [zyfraTooltipOverflowText]=\"label\"\n                      [innerHTML]=\"item.label\">\n                </span>\n            </ng-template>\n        </a>\n\n        <ng-container *ngTemplateOutlet=\"itemExtra; context: { $implicit: item }\"></ng-container>\n    </div>\n</div>\n"
        },
        {
            "name": "ZyfraPaginatorComponent",
            "id": "component-ZyfraPaginatorComponent-644869aac8f0efe887115b4b7bdbba11",
            "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-paginator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alwaysShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page.",
                    "description": "<p>Whether to show it even there is only one page.</p>\n",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "currentPageReportTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "dropdownAppendTo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).",
                    "description": "<p>Target element to attach the dropdown overlay, valid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name).</p>\n",
                    "line": 71,
                    "type": "any"
                },
                {
                    "name": "dropdownItemTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the dropdown item inside in the paginator.",
                    "description": "<p>Template instance to inject into the dropdown item inside in the paginator.</p>\n",
                    "line": 66,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "dropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.",
                    "description": "<p>Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</p>\n",
                    "line": 75,
                    "type": "string"
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Zero-relative number of the first row to be displayed.",
                    "description": "<p>Zero-relative number of the first row to be displayed.</p>\n",
                    "line": 29,
                    "type": "number"
                },
                {
                    "name": "pageLinkSize",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display.",
                    "description": "<p>Number of page links to display.</p>\n",
                    "line": 33,
                    "type": "number"
                },
                {
                    "name": "rows",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Data count to display per page.",
                    "description": "<p>Data count to display per page.</p>\n",
                    "line": 25,
                    "type": "number"
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Array of integer/object values to display inside rows per page dropdown.\nA object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]",
                    "description": "<p>Array of integer/object values to display inside rows per page dropdown.\nA object that have &#39;showAll&#39; key can be added to it to show all data. Exp; [10,20,30,{showAll:&#39;All&#39;}]</p>\n",
                    "line": 38,
                    "type": "PageOption[]"
                },
                {
                    "name": "showCurrentPageReport",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report.",
                    "description": "<p>Whether to display current page report.</p>\n",
                    "line": 84,
                    "type": "boolean"
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page.",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page.</p>\n",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "showJumpToPageDropdown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page.",
                    "description": "<p>Whether to display a dropdown to navigate to any page.</p>\n",
                    "line": 88,
                    "type": "boolean"
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links.",
                    "description": "<p>Whether to show page links.</p>\n",
                    "line": 92,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "templateLeft",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the left side of the paginator.",
                    "description": "<p>Template instance to inject into the left side of the paginator.</p>\n",
                    "line": 58,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "templateRight",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template instance to inject into the right side of the paginator.",
                    "description": "<p>Template instance to inject into the right side of the paginator.</p>\n",
                    "line": 62,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records.",
                    "description": "<p>Number of total records.</p>\n",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<PageChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\ntype PageOption = number | Record<string, unknown>;\n\nexport interface PageChangeEvent {\n  first: number;\n  rows: number;\n  page: number;\n  pageCount: number;\n}\n\n@Component({\n  selector: 'zyfra-paginator',\n  templateUrl: './zyfra-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraPaginatorComponent {\n  /**\n   * Number of total records.\n   */\n  @Input() totalRecords = 0;\n  /**\n   *  Data count to display per page.\n   */\n  @Input() rows = 0;\n  /**\n   * \tZero-relative number of the first row to be displayed.\n   */\n  @Input() first = 0;\n  /**\n   * \tNumber of page links to display.\n   */\n  @Input() pageLinkSize = 5;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown.\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\n   */\n  @Input() rowsPerPageOptions: PageOption[] = null;\n  /**\n   * \tInline style of the component.\n   */\n  @Input() style: string = null;\n  /**\n   * \tStyle class of the component.\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Whether to show it even there is only one page.\n   */\n  @Input() alwaysShow = true;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   */\n  @Input() showFirstLastIcon = true;\n  /**\n   * Template instance to inject into the left side of the paginator.\n   */\n  @Input() templateLeft: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the right side of the paginator.\n   */\n  @Input() templateRight: TemplateRef<any> = null;\n  /**\n   * Template instance to inject into the dropdown item inside in the paginator.\n   */\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\n  /**\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   */\n  @Input() dropdownAppendTo: any = null;\n  /**\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n   */\n  @Input() dropdownScrollHeight = '200px';\n  /**\n   * Template of the current page report element.\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   */\n  @Input() currentPageReportTemplate: string;\n  /**\n   * Whether to display current page report.\n   */\n  @Input() showCurrentPageReport = false;\n  /**\n   * \tWhether to display a dropdown to navigate to any page.\n   */\n  @Input() showJumpToPageDropdown = false;\n  /**\n   * \tWhether to show page links.\n   */\n  @Input() showPageLinks = true;\n\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\n\n  public onPageChange(event: PageChangeEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-paginator\n  class=\"zyfra-paginator\"\n  [rows]=\"rows\"\n  [totalRecords]=\"totalRecords\"\n  [pageLinkSize]=\"pageLinkSize\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [alwaysShow]=\"alwaysShow\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [templateLeft]=\"templateLeft\"\n  [templateRight]=\"templateRight\"\n  [dropdownItemTemplate]=\"dropdownItemTemplate\"\n  [dropdownAppendTo]=\"dropdownAppendTo\"\n  [dropdownScrollHeight]=\"dropdownScrollHeight\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showPageLinks]=\"showPageLinks\"\n  (onPageChange)=\"onPageChange($event)\"\n></p-paginator>\n"
        },
        {
            "name": "ZyfraPasswordComponent",
            "id": "component-ZyfraPasswordComponent-b7c65423565a8d9b8635743fec6a96ca",
            "file": "libs/components/src/lib/password/zyfra-password.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "feedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any"
                },
                {
                    "name": "inputStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "mediumLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "mediumRegex",
                    "defaultValue": "'^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,}).'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "promptLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "strongLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "strongRegex",
                    "defaultValue": "'^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "toggleMask",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "weakLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter<FocusEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-password',\n  templateUrl: './zyfra-password.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraPasswordComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() promptLabel: string;\n  @Input() mediumRegex = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,}).';\n  @Input() strongRegex = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\n  @Input() weakLabel: string;\n  @Input() mediumLabel: string;\n  @Input() strongLabel: string;\n  @Input() feedback = true;\n  @Input() toggleMask: boolean;\n  @Input() appendTo: string;\n  @Input() inputStyle: any;\n  @Input() inputStyleClass: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() disabled: boolean;\n  @Input() label = '';\n  @Input() required: boolean;\n\n  @Output() onBlur = new EventEmitter<FocusEvent>();\n  @Output() onFocus = new EventEmitter<FocusEvent>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <p-password\n    [formControl]=\"$any(ngControl.control)\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    [promptLabel]=\"promptLabel\"\n    [mediumRegex]=\"mediumRegex\"\n    [strongRegex]=\"strongRegex\"\n    [weakLabel]=\"weakLabel\"\n    [disabled]=\"disabled\"\n    [mediumLabel]=\"mediumLabel\"\n    [strongLabel]=\"strongLabel\"\n    [feedback]=\"feedback\"\n    [toggleMask]=\"toggleMask\"\n    [appendTo]=\"appendTo\"\n    [inputStyle]=\"inputStyle\"\n    [inputStyleClass]=\"inputStyleClass\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    (onBlur)=\"onBlur.emit($event)\"\n    (onFocus)=\"onFocus.emit($event)\"\n  ></p-password>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraProgressBarComponent",
            "id": "component-ZyfraProgressBarComponent-bacb56dc5913e4a610298dedec45c923",
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-progress-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\""
                },
                {
                    "name": "mode",
                    "defaultValue": "'determinate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"determinate\" | \"indeterminate\""
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"normal\" | \"mini\""
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "unit",
                    "defaultValue": "'%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-progress-bar',\n  templateUrl: './zyfra-progress-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraProgressBarComponent {\n  @Input() value: number = null;\n  @Input() showValue: boolean = true;\n  @Input() unit: string = '%';\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\n  @Input() style: { [key: string]: string | null } = null;\n  @Input() styleClass: string = null;\n  @Input() size: 'normal' | 'mini' = 'normal';\n  @Input() color: 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success' = 'primary';\n\n  public get styleClasses(): string {\n    return `zyfra-progress_size-${this.size} zyfra-progress_color-${this.color} ${this.styleClass}`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "styleClasses": {
                    "name": "styleClasses",
                    "getSignature": {
                        "name": "styleClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 18
                    }
                }
            },
            "templateData": "<p-progressBar\n  [value]=\"value\"\n  [showValue]=\"showValue\"\n  [unit]=\"unit\"\n  [mode]=\"mode\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n></p-progressBar>\n"
        },
        {
            "name": "ZyfraRadioButtonComponent",
            "id": "component-ZyfraRadioButtonComponent-db75d3ca80205d44a383aae8c84e5b65",
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-radio-button",
            "styleUrls": [
                "./zyfra-radio-button.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "FormControl"
                },
                {
                    "name": "formControlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "labelStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "T"
                }
            ],
            "outputsClass": [
                {
                    "name": "onBlur",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<FocusEvent>"
                },
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onFocus",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<FocusEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-radio-button',\n  templateUrl: './zyfra-radio-button.component.html',\n  styleUrls: ['./zyfra-radio-button.component.less'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraRadioButtonComponent<T> extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() name: string;\n  @Input() value: T;\n  @Input() label: string;\n  @Input() disabled: boolean;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n  @Input() ariaLabel: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() labelStyleClass: string;\n  @Input() formControlName: string;\n  @Input() override formControl: FormControl;\n\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\n  @Output() onFocus: EventEmitter<FocusEvent> = new EventEmitter();\n  @Output() onBlur: EventEmitter<FocusEvent> = new EventEmitter();\n\n  public handleClick(event: PointerEvent): void {\n    this.onClick.emit(event);\n  }\n\n  public handleFocus(event: FocusEvent): void {\n    this.onFocus.emit(event);\n  }\n\n  public handleBlur(event: FocusEvent): void {\n    this.onBlur.emit(event);\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/typography/typography-const.less';\n\n@radioButtonSize: @20px;\n@radioButtonCoreSize: @8px;\n@radioButtonMiniSize: @16px;\n@radioButtonMiniCoreSize: @4px;\n@radioBorderAccent: @2px solid var(--radioButtonHover);\n\nzyfra-radio-button {\n  display: inline-block;\n}\n\np-radiobutton {\n  font-family: var(--fontFamily);\n  cursor: pointer;\n  \n  label {\n    cursor: pointer;\n  }\n\n  &:hover {\n    .p-radiobutton .p-radiobutton-box:not(.p-disabled):not(.p-highlight) {\n      border-color: var(--radioButtonHover);\n    }\n  }\n}\n\n.radio-disabled() {\n  background: var(--radioButtonDisabledBg);\n  border-color: var(--radioButtonDisabled);\n}\n\n.p-radiobutton-label {\n  margin-left: @8px;\n  line-height: @radioButtonSize;\n}\n\n.p-radiobutton {\n  width: @radioButtonSize;\n  height: @radioButtonSize;\n  vertical-align: middle;\n\n  &-mini {\n    width: @radioButtonMiniSize;\n    height: @radioButtonMiniSize;\n  }\n\n  &-group p-radiobutton {\n    margin-bottom: @6px;\n  }\n\n  &-disabled {\n    cursor: default;\n  }\n\n  .p-disabled.p-disabled {\n    opacity: initial;\n    .radio-disabled();\n  }\n\n  &-focused:not(.p-disabled) {\n    border-color: var(--radioButtonHover);\n  }\n\n  .p-radiobutton-box {\n    border: @radioBorderAccent;\n    background: var(--radioButtonBg);\n    width: @radioButtonSize;\n    height: @radioButtonSize;\n    &:not(:hover):not(.p-disabled) {\n      border-color: var(--radioButton);\n    }\n\n    .p-radiobutton-mini& {\n      width: @radioButtonMiniSize;\n      height: @radioButtonMiniSize;\n    }\n\n    .p-radiobutton-icon {\n      background-color: var(--radioButtonBg);\n      border: @radioBorderAccent;\n      width: @radioButtonCoreSize;\n      height: @radioButtonCoreSize;\n      transform: none;\n\n      .p-radiobutton-mini& {\n        width: @radioButtonMiniCoreSize;\n        height: @radioButtonMiniCoreSize;\n      }\n    }\n\n    &:not(.p-disabled) {\n      &.p-focus {\n        border-color: var(--radioButtonActive);\n      }\n\n      &:not(.p-highlight):hover {\n        border-color: var(--radioButtonHover);\n      }\n    }\n\n    &.p-highlight {\n      &.p-disabled {\n        &,\n        .p-radiobutton-icon {\n          .radio-disabled();\n        }\n      }\n      &:not(.p-disabled),\n      &:not(.p-disabled):hover {\n        background: var(--radioButtonBg);\n        border-color: var(--radioButtonHover);;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./zyfra-radio-button.component.less"
                }
            ],
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-radioButton\n  [name]=\"name\"\n  [formControl]=\"$any(ngControl.control)\"\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\n  [value]=\"value\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [ariaLabel]=\"ariaLabel\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [labelStyleClass]=\"labelStyleClass\"\n  (onClick)=\"handleClick($event)\"\n  (onFocus)=\"handleFocus($event)\"\n  (onBlur)=\"handleBlur($event)\"\n></p-radioButton>\n"
        },
        {
            "name": "ZyfraRelativeDatepickerComponent",
            "id": "component-ZyfraRelativeDatepickerComponent-f088363392d788016145bc068b3551ee",
            "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ZyfraRelativeDatepickerComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "zyfra-relative-datepicker",
            "styleUrls": [
                "./zyfra-relative-datepicker.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./zyfra-relative-datepicker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "showClear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeDirectionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateDirectionId",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeNumber",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activePeriodId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDatePeriodId",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeTimeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateTimeId",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "directionItems",
                    "defaultValue": "[...MenuItems.direction]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDateDirectionId>[]",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123,
                        143
                    ]
                },
                {
                    "name": "onChangeFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VoidFunction",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "periodItems",
                    "defaultValue": "[...MenuItems.period]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDatePeriodId>[]",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121,
                        143
                    ]
                },
                {
                    "name": "timeItems",
                    "defaultValue": "[...MenuItems.time]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItem<RelativeDateTimeId>[]",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "new FormControl('', Validators.pattern(ValidationPattern))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "actualizeInput",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet control input as text\n",
                    "description": "<p>Set control input as text</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "actualizeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActualize menu items, as radio group button\n",
                    "description": "<p>Actualize menu items, as radio group button</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "clearValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMenuItemClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "RelativeDateMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAction click item menu\n",
                    "description": "<p>Action click item menu</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "RelativeDateMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseInputValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nParses control input value\n",
                    "description": "<p>Parses control input value</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "VoidFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  forwardRef,\n  OnDestroy,\n  Injector,\n  ChangeDetectorRef, AfterViewInit\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport {\n  getDefaultRelativeDateMenuItems,\n  IdByGroup,\n  RelativeDateDirectionId,\n  RelativeDateMenuItem,\n  RelativeDateMenuItems,\n  RelativeDatePeriodId,\n  RelativeDateTimeId,\n} from './relative-datepicker.models';\nimport { ParseTextInput, RenderText, UpdateActiveItem } from './relative-datepicker.utils';\n\nconst MenuItems: RelativeDateMenuItems = getDefaultRelativeDateMenuItems();\nconst ValidationPattern = '(T|\\\\*)(\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s)';\n\n@Component({\n  selector: 'zyfra-relative-datepicker',\n  templateUrl: './zyfra-relative-datepicker.component.html',\n  styleUrls: ['./zyfra-relative-datepicker.component.less'],\n  providers:[\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ZyfraRelativeDatepickerComponent),\n      multi: true\n    }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraRelativeDatepickerComponent implements AfterViewInit, ControlValueAccessor, OnDestroy {\n  @Input() public label: string;\n  @Input() public placeholder: string;\n  @Input() public disabled: boolean;\n  @Input() public showClear: boolean;\n\n  public value = new FormControl('', Validators.pattern(ValidationPattern));\n  public timeItems: RelativeDateMenuItem<RelativeDateTimeId>[] = [...MenuItems.time];\n  public directionItems: RelativeDateMenuItem<RelativeDateDirectionId>[] = [...MenuItems.direction];\n  public periodItems: RelativeDateMenuItem<RelativeDatePeriodId>[] = [...MenuItems.period];\n\n  private activeTimeId: RelativeDateTimeId;\n  private activeDirectionId: RelativeDateDirectionId;\n  private activePeriodId: RelativeDatePeriodId;\n  private activeNumber: string = '0';\n\n  onChangeFn: (_: unknown) => unknown;\n  onTouched: VoidFunction;\n\n  private readonly subscriptions = new Subscription();\n\n  constructor(public readonly injector: Injector, private readonly cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    const control = this.injector.get(NgControl);\n    this.value.addValidators(control.validator);\n\n    this.subscriptions.add(\n      this.value.valueChanges.subscribe(() => {\n        this.parseInputValue();\n        this.actualizeMenu();\n        this.onChangeFn(this.value.value)\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  public writeValue(value: number): void {\n    this.value.markAsDirty();\n    this.value.setValue(value);\n  }\n\n  public registerOnChange(fn: (_: unknown) => void): void {\n    this.onChangeFn = fn;\n  }\n\n  public registerOnTouched(fn: VoidFunction): void {\n    this.onTouched = fn;\n  }\n\n  public clearValue(): void {\n    this.value.setValue(\"\");\n  }\n\n  /**\n   * Action click item menu\n   */\n  public onMenuItemClick(item: RelativeDateMenuItem): void {\n    switch (item.groupId) {\n      case 'time':\n        this.activeTimeId = <IdByGroup<'time'>>item.id;\n        break;\n\n      case 'direction':\n        this.activeDirectionId = <IdByGroup<'direction'>>item.id;\n        break;\n\n      case 'period':\n        this.activePeriodId = <IdByGroup<'period'>>item.id;\n        break;\n    }\n\n    this.actualizeMenu();\n    this.actualizeInput();\n    this.onChangeFn(this.value.value)\n\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Parses control input value\n   */\n  private parseInputValue(): void {\n    const textInput = this.value.value;\n\n    const model = ParseTextInput(textInput);\n\n    this.activeTimeId = model.time;\n    this.activeDirectionId = model.direction;\n    this.activeNumber = model.number;\n    this.activePeriodId = model.period;\n  }\n\n  /**\n   * Set control input as text\n   */\n  private actualizeInput(): void {\n    const stringValue = RenderText({\n      time: this.activeTimeId,\n      number: this.activeNumber,\n      direction: this.activeDirectionId,\n      period: this.activePeriodId,\n    });\n\n    this.value.setValue(stringValue);\n  }\n\n  /**\n   * Actualize menu items, as radio group button\n   */\n  private actualizeMenu(): void {\n    this.timeItems = UpdateActiveItem(this.timeItems, this.activeTimeId);\n    this.directionItems = UpdateActiveItem(this.directionItems, this.activeDirectionId);\n    this.periodItems = UpdateActiveItem(this.periodItems, this.activePeriodId);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../styles/typography/typography-const.less';\n\n.zyfra-datepicker-relative-menu {\n  list-style: none;\n  margin: 0;\n  padding: @8px 0;\n}\n\n.relative-menu-item {\n  height: @44px;\n  padding: 0 @24px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &-icon {\n    font-size: @28px;\n    display: inherit;\n  }\n\n  &-label {\n    padding-left: @8px;\n  }\n\n  &-divider {\n    margin: @2px 0;\n    border-bottom: @1px solid var(--standartBorder);\n  }\n\n  &:hover {\n    background: var(--listItemHover);\n  }\n\n  &-active {\n    background: var(--listItemActive);\n    color: var(--listItemBg);\n\n    &:hover {\n      background: var(--listItemActive);\n    }\n  }\n}\n",
                    "styleUrl": "./zyfra-relative-datepicker.component.less"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "ControlValueAccessor",
                "OnDestroy"
            ],
            "templateData": "<div class=\"zyfra-datepicker\">\n  <zyfra-input\n    style=\"order: 1\"\n    type=\"text\"\n    [formControl]=\"value\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    [label]=\"label\"\n    [inputClass]=\"{\n      'ng-invalid': !!value?.invalid,\n      'ng-valid': !!value?.valid,\n      'ng-dirty': !!value?.dirty,\n      'ng-touched': !!value?.touched\n    }\"\n  >\n    <div right>\n      <button\n        type=\"button\"\n        *ngIf=\"showClear\"\n        (click)=\"clearValue()\"\n        [disabled]=\"disabled\"\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\n      >\n        <i class=\"zyfra-icon tools-broom\"></i>\n      </button>\n      <button\n        type=\"button\"\n        [disabled]=\"disabled\"\n        (click)=\"op.toggle($event)\"\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\n      >\n        <i class=\"zyfra-icon date-clock\"></i>\n      </button>\n\n      <p-overlayPanel #op styleClass=\"p-overlay-clear-view\">\n        <ng-template pTemplate>\n          <ul role=\"listbox\" class=\"zyfra-datepicker-relative-menu\">\n            <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: timeItems }\"></ng-container>\n            <li class=\"relative-menu-item-divider\"></li>\n            <ng-container\n              *ngTemplateOutlet=\"menuItemsTemplate; context: { items: directionItems }\"\n            ></ng-container>\n            <li class=\"relative-menu-item-divider\"></li>\n            <ng-container\n              *ngTemplateOutlet=\"menuItemsTemplate; context: { items: periodItems }\"\n            ></ng-container>\n\n            <ng-template #menuItemsTemplate let-items=\"items\">\n              <li\n                *ngFor=\"let item of items\"\n                [class.relative-menu-item-active]=\"item.active\"\n                (click)=\"onMenuItemClick(item)\"\n                class=\"relative-menu-item\"\n                role=\"button\"\n                tabindex=\"0\"\n              >\n                <div class=\"relative-menu-item-icon\">\n                  <i class=\"zyfra-icon {{ item.icon }}\"></i>\n                </div>\n                <div class=\"relative-menu-item-label\">{{ item.label }}</div>\n              </li>\n            </ng-template>\n          </ul>\n        </ng-template>\n      </p-overlayPanel>\n\n      <ng-content select=\"[buttons]\"></ng-content>\n    </div>\n  </zyfra-input>\n</div>\n"
        },
        {
            "name": "ZyfraRowTogglerComponent",
            "id": "component-ZyfraRowTogglerComponent-09f3709c47671ec4e0f302a6ce79d025",
            "file": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-row-toggler",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./row-toggler.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-row-toggler',\n  templateUrl: './row-toggler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraRowTogglerComponent {\n  @Input() data: any;\n  @Input() expanded: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<button class=\"zyfra-row-toggler\" type=\"button\" [pRowToggler]=\"data\">\n  <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n</button>\n"
        },
        {
            "name": "ZyfraSearchCellComponent",
            "id": "component-ZyfraSearchCellComponent-1985377e6a1d9ee90523f70c175d7994",
            "file": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[zyfra-search-cell]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search-cell.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "isNativeFiltering",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted",
                    "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "matchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<ValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTableComponent",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "hostClass",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ZyfraBaseSearchCellComponent } from '../../@core/base-table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[zyfra-search-cell]',\n  templateUrl: './search-cell.component.html',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSearchCellComponent extends ZyfraBaseSearchCellComponent {\n  constructor(public readonly table: ZyfraTableComponent) {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ZyfraBaseSearchCellComponent",
            "templateData": "<input\n  class=\"search-cell__input\"\n  type=\"text\"\n  (input)=\"filter($any($event.target).value, field, matchMode)\"\n  [value]=\"$any(table.filters[field])?.value || ''\"\n  [placeholder]=\"placeholder\"\n>\n<i class=\"search-cell__icon pi pi-search\"></i>\n"
        },
        {
            "name": "ZyfraSelectButtonComponent",
            "id": "component-ZyfraSelectButtonComponent-5fd075fcacb6a9b464269a4ada961fd6",
            "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-select-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-select-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "multiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "optionDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "optionLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "OPTION[]"
                },
                {
                    "name": "optionValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change emitter\n",
                    "description": "<p>Optional Change emitter</p>\n",
                    "line": 35,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "onOptionClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick emitter\n",
                    "description": "<p>Optional OptionClick emitter</p>\n",
                    "line": 40,
                    "type": "EventEmitter<SelectButtonOptionClick<OPTION>>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional Change handler\n",
                    "description": "<p>Optional Change handler</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonChange<VALUE>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOptionClick",
                    "args": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional OptionClick handler\n",
                    "description": "<p>Optional OptionClick handler</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SelectButtonOptionClick<OPTION>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface SelectButtonOptionClick<T> {\n  index: number;\n  option: T;\n  originalEvent: PointerEvent;\n}\n\nexport interface SelectButtonChange<T> {\n  index: number;\n  value: T;\n}\n\n@Component({\n  selector: 'zyfra-select-button',\n  templateUrl: './zyfra-select-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\n  @Input() options: OPTION[];\n  @Input() optionLabel: string;\n  @Input() optionValue: string;\n  @Input() optionDisabled: string;\n  @Input() multiple: boolean;\n  @Input() tabindex: number = 0;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() ariaLabelledBy: string;\n  @Input() disabled: boolean;\n  @Input() dataKey: string;\n\n  /**\n   * Optional Change emitter\n   */\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\n\n  /**\n   * Optional OptionClick emitter\n   */\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\n\n  /**\n   * Optional Change handler\n   */\n  public handleChange(data: SelectButtonChange<VALUE>): void {\n    this.onChange.emit(data.value);\n  }\n\n  /**\n   * Optional OptionClick handler\n   */\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\n    this.onOptionClick.emit(data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-selectButton\n  [options]=\"options\"\n  [optionLabel]=\"optionLabel\"\n  [optionValue]=\"optionValue\"\n  [optionDisabled]=\"optionDisabled\"\n  [multiple]=\"multiple\"\n  [tabindex]=\"tabindex\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [disabled]=\"disabled\"\n  [dataKey]=\"dataKey\"\n  (onChange)=\"handleChange($event)\"\n  (onOptionClick)=\"handleOptionClick($event)\"\n></p-selectButton>\n"
        },
        {
            "name": "ZyfraSliderComponent",
            "id": "component-ZyfraSliderComponent-98aa3e050c8e53bf3355408cac352b48",
            "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "orientation",
                    "defaultValue": "'horizontal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SliderOrientation"
                },
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onSlideEnd",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "onSlideEndHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\ntype SliderOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'zyfra-slider',\n  templateUrl: './zyfra-slider.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSliderComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() animate: boolean;\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() orientation: SliderOrientation = 'horizontal';\n  @Input() step: number = 1;\n  @Input() range: boolean;\n  @Input() style: string;\n  @Input() styleClass: string = '';\n  @Input() tabindex: number;\n  @Input() ariaLabelledBy: string;\n\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\n\n  get styleClasses(): string {\n    return `${this.range ? 'zyfra-slider_range ' : ''} ${this.styleClass}`;\n  }\n\n  public onSlideEndHandler(event): void {\n    this.onSlideEnd.emit(event);\n  }\n\n  public override setDisabledState(isDisabled: boolean): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "styleClasses": {
                    "name": "styleClasses",
                    "getSignature": {
                        "name": "styleClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 27
                    }
                }
            },
            "templateData": "<p-slider\n  [formControl]=\"$any(ngControl.control)\"\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\n  [animate]=\"animate\"\n  [disabled]=\"disabled\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [orientation]=\"orientation\"\n  [step]=\"step\"\n  [range]=\"range\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n  [tabindex]=\"tabindex\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  (onSlideEnd)=\"onSlideEndHandler($event)\"\n></p-slider>\n"
        },
        {
            "name": "ZyfraSortIconComponent",
            "id": "component-ZyfraSortIconComponent-51af22eeb8a6321e2d82ea0a03e31362",
            "file": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-sort-icon",
            "styleUrls": [
                "./sort-icon.component.less"
            ],
            "styles": [],
            "templateUrl": [
                "./sort-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-sort-icon',\n  templateUrl: './sort-icon.component.html',\n  styleUrls: ['./sort-icon.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSortIconComponent {\n  @Input() field: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  float: right;\n}\n",
                    "styleUrl": "./sort-icon.component.less"
                }
            ],
            "stylesData": "",
            "templateData": "<p-sortIcon [field]=\"field\"></p-sortIcon>\n"
        },
        {
            "name": "ZyfraSpinnerComponent",
            "id": "component-ZyfraSpinnerComponent-9ad3adba298ff8f6095209b92e42092f",
            "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animationDuration",
                    "defaultValue": "'2s'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "SpinnerColor"
                },
                {
                    "name": "fill",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Record<string | string | number>"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\ntype SpinnerColor = 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success';\n\n@Component({\n  selector: 'zyfra-spinner',\n  templateUrl: './zyfra-spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSpinnerComponent {\n  @Input() size = '100px';\n  @Input() style: Record<string, string | number>;\n  @Input() styleClass: string;\n  @Input() strokeWidth = '2';\n  @Input() fill = 'none';\n  @Input() animationDuration = '2s';\n  @Input() color: SpinnerColor = 'primary';\n\n  get spinnerStyle(): Record<string, string | number> {\n    return {\n      ...this.style,\n      width: this.size,\n      height: this.size,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "spinnerStyle": {
                    "name": "spinnerStyle",
                    "getSignature": {
                        "name": "spinnerStyle",
                        "type": "",
                        "returnType": "Record<string, string | number>",
                        "line": 19
                    }
                }
            },
            "templateData": "<p-progressSpinner\n  [class]=\"'zyfra-spinner zyfra-spinner_color-' + color\"\n  [style]=\"spinnerStyle\"\n  [styleClass]=\"styleClass\"\n  [strokeWidth]=\"strokeWidth\"\n  [fill]=\"fill\"\n  [animationDuration]=\"animationDuration\"\n></p-progressSpinner>\n"
        },
        {
            "name": "ZyfraSplitButtonComponent",
            "id": "component-ZyfraSplitButtonComponent-fdc23f5c5388a4c7edc14b4fd47806a6",
            "file": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-split-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-split-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any"
                },
                {
                    "name": "dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'195ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "menuStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "menuStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "MenuItem[]"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'225ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<PointerEvent>"
                },
                {
                    "name": "onDropdownClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<PointerEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "nativeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDropdownClickHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { MenuItem } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-split-button',\n  templateUrl: './zyfra-split-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSplitButtonComponent {\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() menuStyle: string;\n  @Input() menuStyleClass: string;\n  @Input() styleClass: string;\n  @Input() appendTo: any;\n  @Input() dir: string;\n  @Input() tabindex: number;\n  @Input() model: MenuItem[];\n  @Input() showTransitionOptions = '225ms ease-out';\n  @Input() hideTransitionOptions = '195ms ease-in';\n\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\n  @Output() onDropdownClick: EventEmitter<PointerEvent> = new EventEmitter();\n\n  public nativeClick(event: Event): void {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  public onClickHandler(event: PointerEvent): void {\n    this.onClick.emit(event);\n  }\n\n  public onDropdownClickHandler(event: PointerEvent): void {\n    this.onDropdownClick.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-splitButton\n  [model]=\"model\"\n  [label]=\"label\"\n  [icon]=\"icon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [menuStyle]=\"menuStyle\"\n  [menuStyleClass]=\"menuStyleClass\"\n  [appendTo]=\"appendTo\"\n  [tabindex]=\"tabindex\"\n  [dir]=\"dir\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n  (click)=\"nativeClick($event)\"\n  (onClick)=\"onClickHandler($event)\"\n  (onDropdownClick)=\"onDropdownClickHandler($event)\"\n></p-splitButton>\n"
        },
        {
            "name": "ZyfraSplitterComponent",
            "id": "component-ZyfraSplitterComponent-6ad04f6270b9c87c3a18d791ecfe4391",
            "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-splitter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-splitter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "gutterSize",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the divider in pixels.",
                    "description": "<p>Size of the divider in pixels.</p>\n",
                    "line": 41,
                    "type": "number"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Orientation of the panels, valid values are \"horizontal\" and \"vertical\".",
                    "description": "<p>Orientation of the panels, valid values are &quot;horizontal&quot; and &quot;vertical&quot;.</p>\n",
                    "line": 36,
                    "type": "\"horizontal\" | \"vertical\""
                },
                {
                    "name": "minSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum size of the elements relative to 100%.",
                    "description": "<p>Minimum size of the elements relative to 100%.</p>\n",
                    "line": 31,
                    "type": "number[]"
                },
                {
                    "name": "panelSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Size of the elements relative to 100%.",
                    "description": "<p>Size of the elements relative to 100%.</p>\n",
                    "line": 26,
                    "type": "number[]"
                },
                {
                    "name": "panelStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the pnanel.",
                    "description": "<p>Inline style of the pnanel.</p>\n",
                    "line": 71,
                    "type": "literal type"
                },
                {
                    "name": "panelStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the panel.",
                    "description": "<p>Style class of the panel.</p>\n",
                    "line": 66,
                    "type": "string"
                },
                {
                    "name": "stateKey",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Storage identifier of a stateful Splitter.",
                    "description": "<p>Storage identifier of a stateful Splitter.</p>\n",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.",
                    "description": "<p>Defines where a stateful splitter keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage.</p>\n",
                    "line": 51,
                    "type": "\"session\" | \"local\""
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component.",
                    "description": "<p>Inline style of the component.</p>\n",
                    "line": 56,
                    "type": "literal type"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component.",
                    "description": "<p>Style class of the component.</p>\n",
                    "line": 61,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResizeEnd",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize ends.\n\n",
                    "description": "<p>Callback to invoke when resize ends.</p>\n",
                    "line": 90,
                    "type": "EventEmitter"
                },
                {
                    "name": "onResizeStart",
                    "defaultValue": "new EventEmitter<onResizeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when resize starts.\n\n",
                    "description": "<p>Callback to invoke when resize starts.</p>\n",
                    "line": 84,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "panels",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraSplitterTemplateDirective>",
                    "optional": false,
                    "description": "<p>Template html.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nTemplate html.\n\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResizeStartHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\ntype onResizeEvent = { originalEvent: MouseEvent; sizes: [number, number] };\n\n@Component({\n  selector: 'zyfra-splitter',\n  templateUrl: './zyfra-splitter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraSplitterComponent implements AfterContentInit {\n  // Вся информация о методах и свойствах хранится тут import { Splitter } from 'primeng/splitter';\n  /**\n   * Size of the elements relative to 100%.\n   *\n   */\n  @Input() panelSizes: number[] = [];\n  /**\n   * Minimum size of the elements relative to 100%.\n   *\n   */\n  @Input() minSizes: number[] = [];\n  /**\n   * Orientation of the panels, valid values are \"horizontal\" and \"vertical\".\n   *\n   */\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\n  /**\n   * Size of the divider in pixels.\n   *\n   */\n  @Input() gutterSize = 8;\n  /**\n   * Storage identifier of a stateful Splitter.\n   *\n   */\n  @Input() stateKey: string = null;\n  /**\n   * Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\n   *\n   */\n  @Input() stateStorage: 'session' | 'local' = 'session';\n  /**\n   * Inline style of the component.\n   *\n   */\n  @Input() style: { [key: string]: string | null } = null;\n  /**\n   * Style class of the component.\n   *\n   */\n  @Input() styleClass: string = null;\n  /**\n   * Style class of the panel.\n   *\n   */\n  @Input() panelStyleClass: string = null;\n  /**\n   * Inline style of the pnanel.\n   *\n   */\n  @Input() panelStyle: { [key: string]: string | null } = null;\n\n  /**\n   * Template html.\n   *\n   */\n  @ContentChildren(ZyfraSplitterTemplateDirective)\n  templates: QueryList<ZyfraSplitterTemplateDirective>;\n\n  /**\n   * Callback to invoke when resize starts.\n   *\n   */\n  @Output() onResizeStart = new EventEmitter<onResizeEvent>();\n\n  /**\n   * Callback to invoke when resize ends.\n   *\n   */\n  @Output() onResizeEnd = new EventEmitter<onResizeEvent>();\n\n  panels = [];\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      this.panels.push(item.template);\n    });\n  }\n\n  public onResizeStartHandler(event): void {\n    this.onResizeStart.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-splitter\n  [panelSizes]=\"panelSizes\"\n  [minSizes]=\"minSizes\"\n  [layout]=\"layout\"\n  [gutterSize]=\"gutterSize\"\n  [stateKey]=\"stateKey\"\n  [stateStorage]=\"stateStorage\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [panelStyleClass]=\"panelStyleClass\"\n  [panelStyle]=\"panelStyle\"\n  (onResizeStart)=\"onResizeStartHandler($event)\"\n  (onResizeEnd)=\"onResizeEnd.emit($event)\"\n>\n  <ng-template pTemplate *ngFor=\"let item of panels; let i = index\">\n    <ng-container *ngTemplateOutlet=\"item\"></ng-container>\n  </ng-template>\n</p-splitter>\n"
        },
        {
            "name": "ZyfraTableCheckboxComponent",
            "id": "component-ZyfraTableCheckboxComponent-2e84bac77a78abae209153ffa7123747",
            "file": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-table-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-table-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableCheckbox",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'checkbox', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional, ViewChild } from '@angular/core';\nimport { ZyfraSelectableRowDirective } from '../directives/selectable-row.directive';\nimport { TableCheckbox } from 'primeng/table';\n\n@Component({\n  selector: 'zyfra-table-checkbox',\n  templateUrl: './zyfra-table-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTableCheckboxComponent {\n  @ViewChild('checkbox', { static: true }) checkbox: TableCheckbox;\n\n  @Input() disabled: boolean;\n  @Input() value: any;\n  @Input() index: number;\n  @Input() inputId: string;\n  @Input() name: string;\n  @Input() required: boolean;\n  @Input() ariaLabel: string;\n\n  constructor(\n    @Optional() private zyfraSelectableRow: ZyfraSelectableRowDirective\n  ) {}\n\n  public onClick(event: Event): void {\n    if (this.zyfraSelectableRow) {\n      event.stopPropagation();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "zyfraSelectableRow",
                        "type": "ZyfraSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "zyfraSelectableRow",
                        "type": "ZyfraSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-tableCheckbox\n  #checkbox\n  [value]=\"value\"\n  [disabled]=\"disabled\"\n  [index]=\"index\"\n  [inputId]=\"inputId\"\n  [name]=\"name\"\n  [required]=\"required\"\n  [ariaLabel]=\"ariaLabel\"\n  (click)=\"onClick($event)\"\n></p-tableCheckbox>\n"
        },
        {
            "name": "ZyfraTableColumnFilterComponent",
            "id": "component-ZyfraTableColumnFilterComponent-6e3ce3d09aa45a06b423e468112d8b55",
            "file": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table, deps: [ZyfraTableComponent]\n}",
                    "type": "component",
                    "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable"
                }
            ],
            "selector": "zyfra-table-column-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-column-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string"
                },
                {
                    "name": "currencyDisplay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "display",
                    "defaultValue": "'row'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "hideOnClear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "locale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "string"
                },
                {
                    "name": "localeMatcher",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string"
                },
                {
                    "name": "matchMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "matchModeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "SelectItem[]"
                },
                {
                    "name": "maxConstraints",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number"
                },
                {
                    "name": "maxFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number"
                },
                {
                    "name": "minFractionDigits",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number"
                },
                {
                    "name": "operator",
                    "defaultValue": "FilterOperator.AND",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string"
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "showAddButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "showApplyButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "showClearButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean"
                },
                {
                    "name": "showMatchModes",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "showMenu",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean"
                },
                {
                    "name": "showOperator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string"
                },
                {
                    "name": "useGrouping",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport { FilterOperator, SelectItem } from 'primeng/api';\nimport { Table } from 'primeng/table';\nimport { ZyfraTableComponent } from '../zyfra-table.component';\nimport { ZyfraTableTemplateDirective } from '../directives/table-template.directive';\n\n@Component({\n  selector: 'zyfra-table-column-filter',\n  templateUrl: './table-column-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: Table,\n      useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table,\n      deps: [ZyfraTableComponent]\n    }\n  ],\n})\nexport class ZyfraTableColumnFilterComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  headerTemplate: TemplateRef<any>;\n  filterTemplate: TemplateRef<any>;\n  footerTemplate: TemplateRef<any>;\n\n  @Input() field: string;\n  @Input() type = 'text';\n  @Input() display = 'row';\n  @Input() showMenu = true;\n  @Input() matchMode: string;\n  @Input() operator: string = FilterOperator.AND;\n  @Input() showOperator = true;\n  @Input() showClearButton = true;\n  @Input() showApplyButton = true;\n  @Input() showMatchModes = true;\n  @Input() showAddButton = true;\n  @Input() hideOnClear = false;\n  @Input() placeholder: string;\n  @Input() matchModeOptions: SelectItem[];\n  @Input() maxConstraints = 2;\n  @Input() minFractionDigits: number;\n  @Input() maxFractionDigits: number;\n  @Input() prefix: string;\n  @Input() suffix: string;\n  @Input() locale: string;\n  @Input() localeMatcher: string;\n  @Input() currency: string;\n  @Input() currencyDisplay: string;\n  @Input() useGrouping = true;\n\n  ngAfterContentInit(): void {\n    this.templates.forEach((item) => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'filter':\n          this.filterTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-columnFilter\n  [field]=\"field\"\n  [type]=\"type\"\n  [display]=\"display\"\n  [showMenu]=\"showMenu\"\n  [matchMode]=\"matchMode\"\n  [operator]=\"operator\"\n  [showOperator]=\"showOperator\"\n  [showClearButton]=\"showClearButton\"\n  [showApplyButton]=\"showApplyButton\"\n  [showMatchModes]=\"showMatchModes\"\n  [showAddButton]=\"showAddButton\"\n  [hideOnClear]=\"hideOnClear\"\n  [placeholder]=\"placeholder\"\n  [matchModeOptions]=\"matchModeOptions\"\n  [maxConstraints]=\"maxConstraints\"\n  [minFractionDigits]=\"minFractionDigits\"\n  [maxFractionDigits]=\"maxFractionDigits\"\n  [prefix]=\"prefix\"\n  [suffix]=\"suffix\"\n  [locale]=\"locale\"\n  [localeMatcher]=\"localeMatcher\"\n  [currency]=\"currency\"\n  [currencyDisplay]=\"currencyDisplay\"\n  [useGrouping]=\"useGrouping\"\n>\n  <ng-template pTemplate=\"header\" let-field *ngIf=\"headerTemplate\">\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: field }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"filter\" let-value let-filterCallback=\"filterCallback\" *ngIf=\"filterTemplate\">\n    <ng-container *ngTemplateOutlet=\"filterTemplate; context: {\n      $implicit: value,\n      filterCallback: filterCallback\n    }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" let-field *ngIf=\"footerTemplate\">\n    <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: field }\"></ng-container>\n  </ng-template>\n</p-columnFilter>\n"
        },
        {
            "name": "ZyfraTableComponent",
            "id": "component-ZyfraTableComponent-a96cf0c2a4b187f467063110598702de",
            "file": "libs/components/src/lib/table/zyfra-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TableService"
                },
                {
                    "name": "FilterService"
                },
                {
                    "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table, deps: [ZyfraTableComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable"
                }
            ],
            "selector": "zyfra-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "breakpoint",
                    "defaultValue": "'960px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The breakpoint to define the maximum width boundary when using stack responsive layout",
                    "description": "<p>The breakpoint to define the maximum width boundary when using stack responsive layout</p>\n",
                    "line": 64,
                    "type": "string"
                },
                {
                    "name": "csvSeparator",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Character to use as the csv separator",
                    "description": "<p>Character to use as the csv separator</p>\n",
                    "line": 81,
                    "type": "string"
                },
                {
                    "name": "editingRowKeys",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Map instance to keep the rows being edited where key of the map is the data key of the row",
                    "description": "<p>Map instance to keep the rows being edited where key of the map is the data key of the row</p>\n",
                    "line": 143,
                    "type": "literal type"
                },
                {
                    "name": "editMode",
                    "defaultValue": "'cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the editing mode, valid values are \"cell\" and \"row\"",
                    "description": "<p>Defines the editing mode, valid values are &quot;cell&quot; and &quot;row&quot;</p>\n",
                    "line": 139,
                    "type": "\"cell\" | \"row\""
                },
                {
                    "name": "expandedRowKeys",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Map instance to keep the expanded rows where key of the map is the data key of the row",
                    "description": "<p>Map instance to keep the expanded rows where key of the map is the data key of the row</p>\n",
                    "line": 103,
                    "type": "literal type"
                },
                {
                    "name": "exportFilename",
                    "defaultValue": "'download'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the exported file",
                    "description": "<p>Name of the exported file</p>\n",
                    "line": 85,
                    "type": "string"
                },
                {
                    "name": "exportFunction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A function to implement custom export. Need to return string value",
                    "description": "<p>A function to implement custom export. Need to return string value</p>\n",
                    "line": 127,
                    "type": "function"
                },
                {
                    "name": "filters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of FilterMetadata objects to provide external filters",
                    "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                    "line": 93,
                    "type": ""
                },
                {
                    "name": "frozenValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display as frozen",
                    "description": "<p>An array of objects to display as frozen</p>\n",
                    "line": 56,
                    "type": "any[]"
                },
                {
                    "name": "groupRowsBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "One or more field names to use in row grouping",
                    "description": "<p>One or more field names to use in row grouping</p>\n",
                    "line": 147,
                    "type": "string | string[]"
                },
                {
                    "name": "groupRowsByOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default row grouping is enabled",
                    "description": "<p>Order to sort when default row grouping is enabled</p>\n",
                    "line": 151,
                    "type": "number"
                },
                {
                    "name": "paginatorDropdownScrollHeight",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value",
                    "description": "<p>Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value</p>\n",
                    "line": 123,
                    "type": "string"
                },
                {
                    "name": "responsive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if the columns should be stacked in smaller screens",
                    "description": "<p>Defines if the columns should be stacked in smaller screens</p>\n",
                    "line": 119,
                    "type": "boolean"
                },
                {
                    "name": "responsiveLayout",
                    "defaultValue": "'stack'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines the responsive mode",
                    "description": "<p>Defines the responsive mode</p>\n",
                    "line": 60,
                    "type": "\"stack\" | \"scroll\""
                },
                {
                    "name": "rowExpandMode",
                    "defaultValue": "'multiple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether multiple rows can be expanded at any time",
                    "description": "<p>Whether multiple rows can be expanded at any time</p>\n",
                    "line": 107,
                    "type": "\"single\" | \"multiple\""
                },
                {
                    "name": "rowGroupMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Type of the row grouping",
                    "description": "<p>Type of the row grouping</p>\n",
                    "line": 68,
                    "type": "\"subheader\" | \"rowspan\""
                },
                {
                    "name": "rowTrackBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
                    "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
                    "line": 77,
                    "type": "function"
                },
                {
                    "name": "scrollDirection",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Orientation of the scrolling",
                    "description": "<p>Orientation of the scrolling</p>\n",
                    "line": 111,
                    "type": "\"vertical\" | \"horizontal\" | \"both\""
                },
                {
                    "name": "showInitialSortBadge",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the initial sort badge or not",
                    "description": "<p>Whether to use the initial sort badge or not</p>\n",
                    "line": 73,
                    "type": "boolean"
                },
                {
                    "name": "stateKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Unique identifier of a stateful table to use in state storage",
                    "description": "<p>Unique identifier of a stateful table to use in state storage</p>\n",
                    "line": 131,
                    "type": "string"
                },
                {
                    "name": "stateStorage",
                    "defaultValue": "'session'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage",
                    "description": "<p>Defines where a stateful table keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage</p>\n",
                    "line": 135,
                    "type": "\"session\" | \"local\""
                },
                {
                    "name": "virtualScrollDelay",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Threshold in milliseconds to delay lazy loading during scrolling",
                    "description": "<p>Threshold in milliseconds to delay lazy loading during scrolling</p>\n",
                    "line": 115,
                    "type": "number"
                },
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange active element\n",
                    "description": "<p>Change active element</p>\n",
                    "line": 158,
                    "type": "EventEmitter<T>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "firstChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke first is changed\n",
                    "description": "<p>Callback to invoke first is changed</p>\n",
                    "line": 190,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowCollapse",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is collapsed\n",
                    "description": "<p>Callback to invoke when a row is collapsed</p>\n",
                    "line": 174,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowExpand",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is expanded\n",
                    "description": "<p>Callback to invoke when a row is expanded</p>\n",
                    "line": 170,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is reordered\n",
                    "description": "<p>Callback to invoke when a row is reordered</p>\n",
                    "line": 178,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowSelect",
                    "defaultValue": "new EventEmitter<RowSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is selected\n",
                    "description": "<p>Callback to invoke when a row is selected</p>\n",
                    "line": 162,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowUnselect",
                    "defaultValue": "new EventEmitter<RowSelectionEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a row is unselected\n",
                    "description": "<p>Callback to invoke when a row is unselected</p>\n",
                    "line": 166,
                    "type": "EventEmitter"
                },
                {
                    "name": "stateRestore",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke table state is restored\n",
                    "description": "<p>Callback to invoke table state is restored</p>\n",
                    "line": 186,
                    "type": "EventEmitter"
                },
                {
                    "name": "stateSave",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke table state is saved\n",
                    "description": "<p>Callback to invoke table state is saved</p>\n",
                    "line": 182,
                    "type": "EventEmitter"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onSort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_filters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Filters",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "expandedRowTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footerGroupedTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenExpandedRowTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "frozenRowsTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "groupFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "groupHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerGroupedTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rowspanTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Table",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'ptable', {static: true}"
                        }
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 343,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "exportCSV",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "Table",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "ZyfraTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ZyfraTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 483,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 455,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 459,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 463,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 357,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 425,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 421,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 467,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { FilterService } from 'primeng/api';\nimport { Table, TableService } from 'primeng/table';\nimport { ZyfraBaseTableComponent } from '../@core/base-table';\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\nimport { ZyfraTableTemplateDirective } from './directives/table-template.directive';\nimport { Filters, RowSelectionEvent } from './zyfra-table.types';\n\n@Component({\n  selector: 'zyfra-table',\n  templateUrl: './zyfra-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    TableService,\n    FilterService,\n    {\n      provide: Table,\n      useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table,\n      deps: [ZyfraTableComponent],\n    },\n  ],\n})\nexport class ZyfraTableComponent<T = unknown>\n  extends ZyfraBaseTableComponent<T>\n  implements AfterContentInit, OnChanges\n{\n  @ViewChild('ptable', { static: true }) table: Table;\n  @ContentChildren(ZyfraTableTemplateDirective) templates: QueryList<ZyfraTableTemplateDirective>;\n\n  public expandedRowTemplate: TemplateRef<any>;\n  public footerGroupedTemplate: TemplateRef<any>;\n  public frozenExpandedRowTemplate: TemplateRef<any>;\n  public frozenRowsTemplate: TemplateRef<any>;\n  public groupFooterTemplate: TemplateRef<unknown>;\n  public groupHeaderTemplate: TemplateRef<unknown>;\n  public headerGroupedTemplate: TemplateRef<any>;\n  public loadingBodyTemplate: TemplateRef<any>;\n  public rowspanTemplate: TemplateRef<any>;\n\n  //region Inputs\n  /**\n   * An array of objects to display as frozen\n   */\n  @Input() frozenValue: any[];\n  /**\n   * Defines the responsive mode\n   */\n  @Input() responsiveLayout: 'stack' | 'scroll' = 'stack';\n  /**\n   * The breakpoint to define the maximum width boundary when using stack responsive layout\n   */\n  @Input() breakpoint = '960px';\n  /**\n   * Type of the row grouping\n   */\n  @Input() rowGroupMode: 'subheader' | 'rowspan';\n\n  /**\n   * Whether to use the initial sort badge or not\n   */\n  @Input() showInitialSortBadge = true;\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\n   */\n  @Input() rowTrackBy: (...args: any[]) => any;\n  /**\n   * Character to use as the csv separator\n   */\n  @Input() csvSeparator = ',';\n  /**\n   * Name of the exported file\n   */\n  @Input() exportFilename = 'download';\n\n  private _filters: Filters = {};\n\n  /**\n   * An array of FilterMetadata objects to provide external filters\n   */\n  @Input()\n  set filters(filters: Filters) {\n    this._filters = filters;\n  }\n\n  get filters(): Filters {\n    return this.table.filters;\n  }\n  /**\n   * Map instance to keep the expanded rows where key of the map is the data key of the row\n   */\n  @Input() expandedRowKeys: { [s: string]: boolean } = {};\n  /**\n   * Whether multiple rows can be expanded at any time\n   */\n  @Input() rowExpandMode: 'single' | 'multiple' = 'multiple';\n  /**\n   * Orientation of the scrolling\n   */\n  @Input() scrollDirection: 'vertical' | 'horizontal' | 'both' = 'vertical';\n  /**\n   * Threshold in milliseconds to delay lazy loading during scrolling\n   */\n  @Input() virtualScrollDelay = 250;\n  /**\n   * Defines if the columns should be stacked in smaller screens\n   */\n  @Input() responsive = false;\n  /**\n   * Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value\n   */\n  @Input() paginatorDropdownScrollHeight = '200px';\n  /**\n   * A function to implement custom export. Need to return string value\n   */\n  @Input() exportFunction: (event: { data: any; field: any }) => string;\n  /**\n   * Unique identifier of a stateful table to use in state storage\n   */\n  @Input() stateKey: string;\n  /**\n   * Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage\n   */\n  @Input() stateStorage: 'session' | 'local' = 'session';\n  /**\n   * Defines the editing mode, valid values are \"cell\" and \"row\"\n   */\n  @Input() editMode: 'cell' | 'row' = 'cell';\n  /**\n   * Map instance to keep the rows being edited where key of the map is the data key of the row\n   */\n  @Input() editingRowKeys: { [s: string]: boolean } = {};\n  /**\n   * One or more field names to use in row grouping\n   */\n  @Input() groupRowsBy: string | string[];\n  /**\n   * Order to sort when default row grouping is enabled\n   */\n  @Input() groupRowsByOrder = 1;\n  //endregion\n\n  //region Outputs\n  /**\n   * Change active element\n   */\n  @Output() activeElementChange: EventEmitter<T> = new EventEmitter<T>();\n  /**\n   * Callback to invoke when a row is selected\n   */\n  @Output() rowSelect = new EventEmitter<RowSelectionEvent>();\n  /**\n   * Callback to invoke when a row is unselected\n   */\n  @Output() rowUnselect = new EventEmitter<RowSelectionEvent>();\n  /**\n   * Callback to invoke when a row is expanded\n   */\n  @Output() rowExpand = new EventEmitter<{ originalEvent: Event; data: unknown }>();\n  /**\n   * Callback to invoke when a row is collapsed\n   */\n  @Output() rowCollapse = new EventEmitter<{ originalEvent: Event; data: unknown }>();\n  /**\n   * Callback to invoke when a row is reordered\n   */\n  @Output() rowReorder = new EventEmitter<{ dragIndex: number; dropIndex: number }>();\n  /**\n   * Callback to invoke table state is saved\n   */\n  @Output() stateSave = new EventEmitter<unknown>();\n  /**\n   * Callback to invoke table state is restored\n   */\n  @Output() stateRestore = new EventEmitter<unknown>();\n  /**\n   * Callback to invoke first is changed\n   */\n  @Output() firstChange = new EventEmitter<number>();\n  //endregion\n\n  //region Base class overrides\n  public override getContentTemplate(): QueryList<BaseTableTemplateDirective> {\n    return this.templates;\n  }\n\n  public override getTable(): Table {\n    return this.table;\n  }\n\n  public override initTemplateByType(item: ZyfraTableTemplateDirective): void {\n    switch (item.getType()) {\n      case 'headergrouped':\n        this.headerGroupedTemplate = item.template;\n        break;\n\n      case 'loadingbody':\n        this.loadingBodyTemplate = item.template;\n        break;\n\n      case 'footergrouped':\n        this.footerGroupedTemplate = item.template;\n        break;\n\n      case 'rowexpansion':\n        this.expandedRowTemplate = item.template;\n        break;\n\n      case 'groupheader':\n        this.groupHeaderTemplate = item.template;\n        break;\n\n      case 'rowspan':\n        this.rowspanTemplate = item.template;\n        break;\n\n      case 'groupfooter':\n        this.groupFooterTemplate = item.template;\n        break;\n\n      case 'frozenrows':\n        this.frozenRowsTemplate = item.template;\n        break;\n\n      case 'frozenheader':\n        this.frozenHeaderTemplate = item.template;\n        break;\n\n      case 'frozenbody':\n        this.frozenBodyTemplate = item.template;\n        break;\n\n      case 'frozenfooter':\n        this.frozenFooterTemplate = item.template;\n        break;\n\n      case 'frozencolgroup':\n        this.frozenColGroupTemplate = item.template;\n        break;\n\n      case 'frozenrowexpansion':\n        this.frozenExpandedRowTemplate = item.template;\n        break;\n    }\n  }\n  //endregion\n\n  public exportCSV(options?: any): void {\n    return this.table.exportCSV(options);\n  }\n\n  public clear(): void {\n    this.table.clear();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "ZyfraBaseTableComponent",
            "implements": [
                "AfterContentInit",
                "OnChanges"
            ],
            "accessors": {
                "filters": {
                    "name": "filters",
                    "setSignature": {
                        "name": "filters",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "filters",
                                "type": "Filters",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "rawdescription": "An array of FilterMetadata objects to provide external filters",
                        "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                        "jsdoctags": [
                            {
                                "name": "filters",
                                "type": "Filters",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "filters",
                        "type": "",
                        "returnType": "Filters",
                        "line": 97
                    }
                }
            },
            "templateData": "<p-table\n  class=\"zyfra-table\"\n  #ptable\n  [value]=\"value\"\n  [columns]=\"columns\"\n  [frozenColumns]=\"frozenColumns\"\n  [frozenValue]=\"frozenValue\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n  [tableStyle]=\"tableStyle\"\n  [tableStyleClass]=\"tableStyleClass\"\n  [paginator]=\"paginator\"\n  [rows]=\"rows\"\n  [first]=\"first\"\n  [totalRecords]=\"totalRecords\"\n  [pageLinks]=\"pageLinks\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [paginatorPosition]=\"paginatorPosition\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showPageLinks]=\"showPageLinks\"\n  [sortMode]=\"sortMode\"\n  [sortField]=\"sortField\"\n  [sortOrder]=\"sortOrder\"\n  [multiSortMeta]=\"multiSortMeta\"\n  [defaultSortOrder]=\"defaultSortOrder\"\n  [customSort]=\"customSort\"\n  [showInitialSortBadge]=\"showInitialSortBadge\"\n  [selectionMode]=\"selectionMode\"\n  [selection]=\"selection\"\n  [contextMenuSelection]=\"contextMenuSelection\"\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\n  [dataKey]=\"dataKey\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [rowTrackBy]=\"rowTrackBy\"\n  [lazy]=\"lazy\"\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\n  [compareSelectionBy]=\"compareSelectionBy\"\n  [csvSeparator]=\"csvSeparator\"\n  [exportFilename]=\"exportFilename\"\n  [filters]=\"filters\"\n  [filterDelay]=\"filterDelay\"\n  [globalFilterFields]=\"globalFilterFields\"\n  [filterLocale]=\"filterLocale\"\n  [expandedRowKeys]=\"expandedRowKeys\"\n  [rowExpandMode]=\"rowExpandMode\"\n  [scrollable]=\"scrollable\"\n  [scrollDirection]=\"scrollDirection\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualScrollDelay]=\"virtualScrollDelay\"\n  [virtualRowHeight]=\"virtualRowHeight\"\n  [responsive]=\"responsive\"\n  [contextMenu]=\"contextMenu\"\n  [resizableColumns]=\"resizableColumns\"\n  [columnResizeMode]=\"columnResizeMode\"\n  [reorderableColumns]=\"reorderableColumns\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [showLoader]=\"showLoader\"\n  [rowHover]=\"rowHover\"\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\n  [paginatorDropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n  [autoLayout]=\"autoLayout\"\n  [resetPageOnSort]=\"resetPageOnSort\"\n  [exportFunction]=\"exportFunction\"\n  [stateKey]=\"stateKey\"\n  [stateStorage]=\"stateStorage\"\n  [editMode]=\"editMode\"\n  [editingRowKeys]=\"editingRowKeys\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [groupRowsBy]=\"groupRowsBy\"\n  [rowGroupMode]=\"rowGroupMode\"\n  (onRowSelect)=\"rowSelect.emit($event)\"\n  (onRowUnselect)=\"rowUnselect.emit($event)\"\n  (onPage)=\"page.emit($event)\"\n  (onSort)=\"onSort.emit($event)\"\n  (onFilter)=\"onFilter.emit($event)\"\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\n  (onRowExpand)=\"rowExpand.emit($event)\"\n  (onRowCollapse)=\"rowCollapse.emit($event)\"\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\n  (onColResize)=\"colResize.emit($event)\"\n  (onColReorder)=\"colReorder.emit($event)\"\n  (onRowReorder)=\"rowReorder.emit($event)\"\n  (onEditInit)=\"editInit.emit($event)\"\n  (onEditComplete)=\"editComplete.emit($event)\"\n  (onEditCancel)=\"editCancel.emit($event)\"\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\n  (onStateSave)=\"stateSave.emit($event)\"\n  (onStateRestore)=\"stateRestore.emit($event)\"\n  (sortFunction)=\"sortFunction.emit($event)\"\n  (firstChange)=\"firstChange.emit($event)\"\n  (selectionChange)=\"selectionChange.emit($event)\"\n>\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\n    <div class=\"zyfra-table-title\">{{ title }}</div>\n    <ng-container *ngIf=\"captionTemplate\">\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\" *ngIf=\"headerTemplate\" let-columns>\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"groupheader\" let-item *ngIf=\"groupHeaderTemplate\">\n    <ng-container *ngTemplateOutlet=\"groupHeaderTemplate; context: { $implicit: item }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"groupfooter\" let-item *ngIf=\"groupFooterTemplate\">\n    <ng-container *ngTemplateOutlet=\"groupFooterTemplate; context: { $implicit: item }\"></ng-container>\n  </ng-template>\n\n  <ng-template\n    pTemplate=\"body\"\n    let-item\n    let-rowIndex=\"rowIndex\"\n    let-rowgroup=\"rowgroup\"\n    let-rowspan=\"rowspan\"\n    let-expanded=\"expanded\"\n    let-editing=\"editing\"\n    let-columns=\"columns\"\n    *ngIf=\"bodyTemplate\"\n  >\n    <ng-container\n      *ngTemplateOutlet=\"\n        bodyTemplate;\n        context: {\n          $implicit: item,\n          rowIndex: rowIndex,\n          rowgroup: rowgroup,\n          rowspan: rowspan,\n          expanded: expanded,\n          editing: editing,\n          columns: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"frozenbody\" let-item let-rowIndex=\"rowIndex\" *ngIf=\"frozenBodyTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        frozenBodyTemplate;\n        context: {\n          $implicit: item,\n          rowIndex: rowIndex\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"loadingbody\" let-columns=\"columns\" *ngIf=\"loadingBodyTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        loadingBodyTemplate;\n        context: {\n          columns: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"rowexpansion\" let-item *ngIf=\"expandedRowTemplate\">\n    <ng-container *ngTemplateOutlet=\"expandedRowTemplate; context: { $implicit: item }\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" *ngIf=\"footerTemplate\">\n    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"emptymessage\" *ngIf=\"emptyMessageTemplate\">\n    <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\n  </ng-template>\n</p-table>\n"
        },
        {
            "name": "ZyfraTableHeaderCheckboxComponent",
            "id": "component-ZyfraTableHeaderCheckboxComponent-20f4f14cf667f7aadfcfb46ab6938b65",
            "file": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-table-header-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-header-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-table-header-checkbox',\n  templateUrl: './table-header-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTableHeaderCheckboxComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n"
        },
        {
            "name": "ZyfraTabMenuComponent",
            "id": "component-ZyfraTabMenuComponent-6a078b552bc8822c74ec0f4ff05b18ed",
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "MenuItem"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "[]"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_model",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "backLabel",
                    "defaultValue": "'Вернуться'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentMenu",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentMenuIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<Element>",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navListElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scroll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Event>",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "stopOutsideClickListener$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subMenuContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabSubmenuContainer'"
                        }
                    ]
                },
                {
                    "name": "subMenuObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MutationObserver",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabMenu",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabMenu"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initClickListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "initOutsideClickListener",
                    "args": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initSubmenuObserver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isPartlyVisible",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "overlayPanel",
                            "type": "OverlayPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "overlayPanel",
                            "type": "OverlayPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "menu",
                            "type": "SlideMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateActiveItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCurrentIndex",
                    "args": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  HostBinding,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TabMenu } from 'primeng/tabmenu';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, filter, first, takeUntil } from 'rxjs/operators';\r\nimport { SlideMenu } from 'primeng/slidemenu';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { OverlayPanel } from 'primeng/overlaypanel';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-menu',\r\n  templateUrl: './zyfra-tab-menu.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraTabMenuComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\r\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\r\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\r\n  @ViewChild(TabMenu) public tabMenu: TabMenu;\r\n  @ViewChild('tabSubmenuContainer') subMenuContainer: ElementRef;\r\n  @ViewChild('prevControl') public prevControl: ElementRef;\r\n  @ViewChild('nextControl') public nextControl: ElementRef;\r\n  @Input() activeItem: MenuItem = null;\r\n  @Input() style: string = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() set model(items: MenuItem[]) {\r\n    this._model = items;\r\n    this.tabsChanged = true;\r\n  }\r\n  get model(): MenuItem[] {\r\n    return this._model;\r\n  }\r\n  public backLabel = 'Вернуться';\r\n  public openedItem: MenuItem;\r\n\r\n  private _model: MenuItem[] = null;\r\n  private tabsChanged: boolean;\r\n  private maxScrollDistance: number;\r\n  private navLinks: NodeListOf<Element>;\r\n  private navListElement: HTMLElement;\r\n  private currentMenu = null;\r\n  private currentMenuIndex: number;\r\n  private subMenuObserver: MutationObserver;\r\n  private destroyed$ = new Subject();\r\n  private scroll$: Observable<Event>;\r\n  private stopOutsideClickListener$ = new Subject();\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.navListElement = this.tabMenu.navbar.nativeElement;\r\n    this.navLinks = this.navListElement.querySelectorAll('a.p-menuitem-link');\r\n    this.initClickListeners();\r\n    this.scroll$ = fromEvent(this.navListElement, 'scroll').pipe(debounceTime(50));\r\n    this.scroll$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.updateControlsState());\r\n    this.initSubmenuObserver();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    if (this.tabsChanged) {\r\n      this.tabsChanged = false;\r\n      requestAnimationFrame(() => {\r\n        this.hasOverflow = this.navListElement.scrollWidth > this.navListElement.offsetWidth;\r\n        this.updateControlsState();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subMenuObserver.disconnect();\r\n    this.stopOutsideClickListener$.next();\r\n    this.stopOutsideClickListener$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public toggleMenu(event: MouseEvent, menu: SlideMenu, index: number): void {\r\n    const currentTarget = (event.target as HTMLElement).closest('li');\r\n    if (this.currentMenu && this.currentMenu !== menu) {\r\n      this.currentMenu.hide();\r\n    }\r\n    const toggleMenu = (): void => {\r\n      menu.toggle({ currentTarget });\r\n      this.currentMenu = menu;\r\n      this.currentMenuIndex = index;\r\n    };\r\n\r\n    if (this.isPartlyVisible(event.target as HTMLElement)) {\r\n      currentTarget.scrollIntoView({ inline: 'nearest' });\r\n      this.scroll$.pipe(first(), takeUntil(this.destroyed$)).subscribe(() => toggleMenu());\r\n    } else {\r\n      toggleMenu();\r\n    }\r\n    event.stopImmediatePropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  public initOutsideClickListener(menu): void {\r\n    this.stopOutsideClickListener$.next();\r\n    fromEvent(this.document, 'click')\r\n      .pipe(takeUntil(this.stopOutsideClickListener$))\r\n      .subscribe((e: Event) => {\r\n        const clickInside = e.composedPath().includes(this.subMenuContainer.nativeElement);\r\n        if (!clickInside) {\r\n          menu.hide();\r\n          this.stopOutsideClickListener$.next();\r\n        }\r\n      });\r\n  }\r\n\r\n  public selectTabFromList(index: number, overlayPanel: OverlayPanel): void {\r\n    if (this.model[index].disabled) return;\r\n    this.activeItem = this.model[index];\r\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\r\n    (this.navLinks.item(index) as HTMLElement).click();\r\n    overlayPanel.hide();\r\n  }\r\n\r\n  public scrollPrevious(): void {\r\n    this.navListElement.scrollLeft -= this.navListElement.offsetWidth;\r\n  }\r\n\r\n  public scrollNext(): void {\r\n    this.navListElement.scrollLeft += this.navListElement.offsetWidth;\r\n  }\r\n\r\n  private updateControlsState(): void {\r\n    if (this.hasOverflow) {\r\n      this.maxScrollDistance = this.navListElement.scrollWidth - this.navListElement.offsetWidth;\r\n      this.disablePrevControl = this.navListElement.scrollLeft === 0;\r\n      this.disableNextControl = this.maxScrollDistance - this.navListElement.scrollLeft < 1;\r\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\r\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\r\n    }\r\n  }\r\n\r\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\r\n    if (isDisabled) {\r\n      this.renderer.addClass(el, 'disabled');\r\n    } else {\r\n      this.renderer.removeClass(el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private isPartlyVisible(target: HTMLElement): boolean {\r\n    const offsetParent = target.offsetParent as HTMLElement;\r\n    const isLeftSideHidden =\r\n      offsetParent.offsetLeft - this.navListElement.scrollLeft < this.nextControl.nativeElement.offsetWidth;\r\n    const isRightSideHidden =\r\n      offsetParent.offsetLeft +\r\n        offsetParent.offsetWidth -\r\n        this.nextControl.nativeElement.offsetWidth -\r\n        this.navListElement.scrollLeft >\r\n      this.navListElement.offsetWidth;\r\n    return isLeftSideHidden || isRightSideHidden;\r\n  }\r\n\r\n  private initClickListeners(): void {\r\n    fromEvent(this.navListElement, 'click')\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((e: Event) => {\r\n        this.updateCurrentIndex(e.target as HTMLElement);\r\n        this.updateActiveItem();\r\n      });\r\n\r\n    fromEvent(this.subMenuContainer.nativeElement, 'click')\r\n      .pipe(\r\n        filter(\r\n          (e: Event) => !(e.target as HTMLElement).nextElementSibling && e.target instanceof HTMLAnchorElement\r\n        ),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateActiveItem();\r\n      });\r\n  }\r\n\r\n  private initSubmenuObserver(): void {\r\n    const target = this.subMenuContainer.nativeElement;\r\n    const config = {\r\n      childList: true,\r\n    };\r\n    const callback = (mutations: MutationRecord[]): void => {\r\n      mutations.forEach(() => {\r\n        this.openedItem = this.subMenuContainer.nativeElement.hasChildNodes()\r\n          ? this.model[this.currentMenuIndex]\r\n          : null;\r\n        this.cdr.markForCheck();\r\n      });\r\n    };\r\n    this.subMenuObserver = new MutationObserver(callback);\r\n    this.subMenuObserver.observe(target, config);\r\n  }\r\n\r\n  private updateActiveItem(): void {\r\n    this.activeItem = this.model[this.currentMenuIndex];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateCurrentIndex(target: HTMLElement): void {\r\n    this.navLinks.forEach((value, key) => {\r\n      if (value === target.closest('a')) {\r\n        this.currentMenuIndex = key;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "accessors": {
                "model": {
                    "name": "model",
                    "setSignature": {
                        "name": "model",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "items",
                                "type": "MenuItem[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "model",
                        "type": "[]",
                        "returnType": "MenuItem[]",
                        "line": 48
                    }
                }
            },
            "templateData": "<div class=\"tab-container\" [class]=\"styleClass\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <button class=\"control-group__item\" (click)=\"scrollPrevious()\">\n        <i #prevControl class=\"pi pi-angle-left control-icon\"></i>\n      </button>\n    </div>\n  </div>\n\n  <p-tabMenu [model]=\"model\" [activeItem]=\"activeItem\" [style]=\"style\" [styleClass]=\"styleClass\">\n    <ng-template pTemplate=\"item\" let-item let-i=\"index\">\n      <i *ngIf=\"item.icon\" class=\"p-menuitem-icon pi pi-fw {{ item.icon }}\"></i>\n      <span class=\"p-menuitem-text\">{{ item?.label }}</span>\n      <ng-container *ngIf=\"item.items && item.items\">\n        <i\n          class=\"menu-toggle-icon zyfra-icon {{\n            this.openedItem === item ? 'chevrons-dropdown' : 'chevrons-menu-right'\n          }}\"\n          (click)=\"toggleMenu($event, menu, i)\"\n        ></i>\n        <p-slideMenu\n          #menu\n          [model]=\"$any(item.items)\"\n          [popup]=\"true\"\n          [appendTo]=\"tabSubmenuContainer\"\n          [backLabel]=\"backLabel\"\n          (onShow)=\"initOutsideClickListener(menu)\"\n        ></p-slideMenu>\n      </ng-container>\n    </ng-template>\n  </p-tabMenu>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <button class=\"control-group__item\" (click)=\"op.toggle($event)\">\n        <i class=\"pi pi-ellipsis-v control-icon\"></i>\n      </button>\n      <button class=\"control-group__item\" (click)=\"scrollNext()\">\n        <i #nextControl class=\"pi pi-angle-right control-icon\"></i>\n      </button>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <li\n        *ngFor=\"let tab of model; let i = index\"\n        [class.p-disabled]=\"tab.disabled\"\n        class=\"tab-list-item text-overflow\"\n        [zyfraTooltip]=\"tab.label\"\n        zyfraTooltipPosition=\"below\"\n        (click)=\"selectTabFromList(i, op)\"\n      >\n        {{ tab.label }}\n      </li>\n    </ng-template>\n  </p-overlayPanel>\n\n  <ul #tabListContainer class=\"tab-list-panel-container\"></ul>\n</div>\n<div #tabSubmenuContainer class=\"tab-submenu-container\"></div>\n"
        },
        {
            "name": "ZyfraTabPanelComponent",
            "id": "component-ZyfraTabPanelComponent-d477ee69df051c665f6349ff6dccfd52",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cache",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean"
                },
                {
                    "name": "closable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string"
                },
                {
                    "name": "headerStyle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "headerStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "leftIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string"
                },
                {
                    "name": "rightIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "string"
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "tooltip",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any"
                },
                {
                    "name": "tooltipPosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "\"right\" | \"left\" | \"top\" | \"bottom\""
                },
                {
                    "name": "tooltipPositionStyle",
                    "defaultValue": "'absolute'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string"
                },
                {
                    "name": "tooltipStyleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "propChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_header",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_leftIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_rightIcon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contentTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'header'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "implicitContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tab-panel',\n  templateUrl: './zyfra-tab-panel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTabPanelComponent {\n  @ContentChild('header') public headerTemplate: TemplateRef<any>;\n  @ContentChild('content') public contentTemplate: TemplateRef<any>;\n\n  @ViewChild(TemplateRef) implicitContent: TemplateRef<any>;\n  @Input() selected: boolean = false;\n  @Input() closable: boolean = false;\n  @Input() headerStyle: string = null;\n  @Input() headerStyleClass: string = null;\n  @Input() cache: boolean = true;\n  @Input() tooltip: any = null;\n  @Input() tooltipStyleClass: string = null;\n  @Input() tooltipPosition: 'right' | 'left' | 'top' | 'bottom' = 'top';\n  @Input() tooltipPositionStyle: string = 'absolute';\n\n  @Input() set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.propChange.emit();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @Input() set header(header: string) {\n    this._header = header;\n    this.propChange.emit();\n  }\n\n  get header(): string {\n    return this._header;\n  }\n\n  @Input() set leftIcon(leftIcon: string) {\n    this._leftIcon = leftIcon;\n    this.propChange.emit();\n  }\n\n  get leftIcon(): string {\n    return this._leftIcon;\n  }\n\n  @Input() set rightIcon(rightIcon: string) {\n    this._rightIcon = rightIcon;\n    this.propChange.emit();\n  }\n\n  get rightIcon(): string {\n    return this._rightIcon;\n  }\n\n  @Output() propChange: EventEmitter<void> = new EventEmitter();\n\n  private _header: string = null;\n  private _disabled: boolean = false;\n  private _leftIcon: string = null;\n  private _rightIcon: string = null;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 32,
                        "jsdoctags": [
                            {
                                "name": "disabled",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "disabled",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                },
                "header": {
                    "name": "header",
                    "setSignature": {
                        "name": "header",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "header",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "header",
                        "type": "string",
                        "returnType": "string",
                        "line": 46
                    }
                },
                "leftIcon": {
                    "name": "leftIcon",
                    "setSignature": {
                        "name": "leftIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 50,
                        "jsdoctags": [
                            {
                                "name": "leftIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "leftIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 55
                    }
                },
                "rightIcon": {
                    "name": "rightIcon",
                    "setSignature": {
                        "name": "rightIcon",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 59,
                        "jsdoctags": [
                            {
                                "name": "rightIcon",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "rightIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 64
                    }
                }
            },
            "templateData": "<ng-template><ng-content></ng-content></ng-template>\n"
        },
        {
            "name": "ZyfraTabViewComponent",
            "id": "component-ZyfraTabViewComponent-f875703315f6dc2dc49a5630316842da",
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tab-view",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tab-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number | null"
                },
                {
                    "name": "controlClose",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | null"
                },
                {
                    "name": "styleClass",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string | null"
                }
            ],
            "outputsClass": [
                {
                    "name": "activeIndexChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "disableNextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-end'"
                        }
                    ]
                },
                {
                    "name": "disablePrevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.scrolled-to-start'"
                        }
                    ]
                },
                {
                    "name": "hasOverflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.has-overflow'"
                        }
                    ]
                },
                {
                    "name": "keyDownHandler",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "lastFocused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "maxScrollDistance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navContentElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "navLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeListOf<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'nextControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "prevControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'prevControl'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabClosed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTabPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTabPanelComponent"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTabPanelComponent[]",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabsChanged",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabsChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabView",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TabView"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activeIndexChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeFocus",
                    "args": [
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 246,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "Element",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "focusNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "focusPrev",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initialPrepare",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeListeners",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "scrollNext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectTabFromList",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tabsInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateControlsStyles",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "el",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.has-overflow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean"
                },
                {
                    "name": "class.scrolled-to-start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean"
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { TabView } from 'primeng/tabview';\nimport { ZyfraTabPanelComponent } from '../zyfra-tab-panel/zyfra-tab-panel.component';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'zyfra-tab-view',\n  templateUrl: './zyfra-tab-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ZyfraTabViewComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\n  @ViewChild(TabView) public tabView: TabView;\n  @ViewChild('prevControl') public prevControl: ElementRef;\n  @ViewChild('nextControl') public nextControl: ElementRef;\n  @ContentChildren(ZyfraTabPanelComponent) tabPanels: QueryList<ZyfraTabPanelComponent>;\n  @Input() activeIndex: number | null = null;\n  @Input() controlClose = false;\n  @Input() style: string | null = null;\n  @Input() styleClass: string | null = null;\n\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  public tabs: ZyfraTabPanelComponent[] = [];\n  public tabList: { header: string; index: number; disabled: boolean }[] = [];\n\n  private tabsChanged = true;\n  private tabClosed = false;\n  private maxScrollDistance: number;\n  private navLinks: NodeListOf<HTMLElement>;\n  private lastFocused: Element;\n  private navContentElement: HTMLElement;\n  private destroyed$: Subject<any> = new Subject();\n  private tabsChanged$: Subject<any> = new Subject();\n  private keyDownHandler = (e: KeyboardEvent): void => {\n    // use an arrow function to access the context of the component\n    if (e.key !== 'ArrowRight' && e.key !== 'ArrowLeft') {\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowLeft':\n        this.focusPrev();\n        break;\n      case 'ArrowRight':\n        this.focusNext();\n        break;\n    }\n  };\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public ngAfterContentInit(): void {\n    this.tabsInit();\n    this.tabPanels.changes.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      this.tabsChanged$.next();\n      this.tabsInit();\n    });\n  }\n\n  public ngAfterViewInit(): void {\n    this.navContentElement = this.tabView.content.nativeElement;\n    this.navContentElement.addEventListener('keydown', this.keyDownHandler);\n    fromEvent(this.navContentElement, 'scroll')\n      .pipe(debounceTime(50), takeUntil(this.destroyed$))\n      .subscribe(() => this.updateControlsState());\n  }\n\n  private initialPrepare(): void {\n    this.navLinks = this.navContentElement.querySelectorAll('a.p-tabview-nav-link');\n    const highlight = this.navContentElement.querySelector('li.p-highlight');\n    let focusPresent = false;\n    this.navLinks.forEach((value) => {\n      if (this.lastFocused === value) {\n        focusPresent = true;\n      }\n    });\n    if (!focusPresent) {\n      this.lastFocused = highlight ? highlight.firstElementChild : this.navLinks.item(0);\n    }\n  }\n\n  public ngAfterViewChecked(): void {\n    if (this.tabsChanged || this.tabClosed) {\n      requestAnimationFrame(() => {\n        this.hasOverflow = this.navContentElement.scrollWidth > this.navContentElement.offsetWidth;\n        this.updateControlsState();\n        if (this.tabsChanged) {\n          this.initialPrepare();\n        }\n        this.tabsChanged = false;\n        this.tabClosed = false;\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.removeListeners();\n    this.tabsChanged$.next();\n    this.tabsChanged$.complete();\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  public activeIndexChangeHandler(event): void {\n    this.activeIndex = event;\n    this.activeIndexChange.emit(event);\n  }\n\n  public handleChange(event): void {\n    this.onChange.emit(event);\n    this.changeFocus(this.navLinks.item(event.index));\n  }\n\n  public handleClose(event): void {\n    const closedTab = event.originalEvent.target.offsetParent;\n    this.tabClosed = true;\n    this.tabList = this.tabList.filter(({ index }) => index !== event.index);\n    if (this.lastFocused === closedTab) {\n      this.changeFocus(this.navLinks.item(this.tabList[0].index));\n    }\n    this.onClose.emit(event);\n  }\n\n  public scrollPrevious(): void {\n    this.navContentElement.scrollLeft -= this.navContentElement.offsetWidth;\n  }\n\n  public scrollNext(): void {\n    this.navContentElement.scrollLeft += this.navContentElement.offsetWidth;\n  }\n\n  public selectTabFromList(event: MouseEvent, index: number): void {\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\n    if (!this.tabList[index].disabled && this.activeIndex !== index) {\n      this.activeIndex = index;\n      this.changeFocus(this.navLinks.item(index));\n      this.onChange.emit({ originalEvent: event, index });\n    }\n  }\n\n  private tabsInit(): void {\n    this.tabs = this.tabPanels.toArray();\n    this.tabList = this.tabs.map((value, index) => ({\n      header: value.header,\n      index,\n      disabled: value.disabled,\n    }));\n    this.tabsChanged = true;\n    merge(...this.tabs.map((value) => value.propChange))\n      .pipe(takeUntil(this.tabsChanged$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n    this.cdr.markForCheck();\n  }\n\n  private updateControlsState(): void {\n    if (this.hasOverflow) {\n      this.maxScrollDistance = this.navContentElement.scrollWidth - this.navContentElement.offsetWidth;\n      this.disablePrevControl = this.navContentElement.scrollLeft === 0;\n      this.disableNextControl = this.maxScrollDistance - this.navContentElement.scrollLeft < 1;\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\n    }\n  }\n\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\n    if (isDisabled) {\n      this.renderer.addClass(el, 'disabled');\n    } else {\n      this.renderer.removeClass(el, 'disabled');\n    }\n  }\n\n  private removeListeners(): void {\n    this.navContentElement.removeEventListener('keydown', this.keyDownHandler);\n  }\n\n  private focusPrev(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.previousElementSibling) {\n      return;\n    }\n    const next = current.parentElement.previousElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(next);\n    next.focus();\n    if (next.offsetLeft < this.navContentElement.scrollLeft) {\n      this.navContentElement.scrollLeft =\n        next.offsetLeft + next.offsetWidth - this.navContentElement.offsetWidth;\n    }\n  }\n\n  private focusNext(): void {\n    const current = this.document.activeElement;\n    if (!current.parentElement.nextElementSibling) {\n      return;\n    }\n    const next = current.parentElement.nextElementSibling.firstChild as HTMLElement;\n    if (!next) {\n      return;\n    }\n    this.changeFocus(next);\n    next.focus();\n    if (\n      next.offsetLeft + next.offsetWidth >\n      this.navContentElement.offsetWidth + this.navContentElement.scrollLeft\n    ) {\n      this.navContentElement.scrollLeft = next.offsetLeft;\n    }\n  }\n\n  private changeFocus(next: Element): void {\n    this.lastFocused = next;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 74,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterContentInit",
                "AfterViewInit",
                "AfterViewChecked",
                "OnDestroy"
            ],
            "templateData": "<div class=\"tab-container\" [class]=\"styleClass\">\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\n    <div class=\"control-group\">\n      <button class=\"control-group__item\" (click)=\"scrollPrevious()\">\n        <i #prevControl class=\"pi pi-angle-left control-icon\"></i>\n      </button>\n    </div>\n  </div>\n\n  <p-tabView\n    [activeIndex]=\"activeIndex\"\n    [controlClose]=\"controlClose\"\n    [style]=\"style\"\n    [styleClass]=\"styleClass\"\n    (activeIndexChange)=\"activeIndexChangeHandler($event)\"\n    (onChange)=\"handleChange($event)\"\n    (onClose)=\"handleClose($event)\"\n  >\n    <ng-container *ngFor=\"let tab of tabs\">\n      <p-tabPanel\n        [header]=\"tab.header\"\n        [selected]=\"tab.selected\"\n        [disabled]=\"tab.disabled\"\n        [closable]=\"tab.closable\"\n        [leftIcon]=\"tab.leftIcon\"\n        [rightIcon]=\"tab.rightIcon\"\n        [headerStyle]=\"tab.headerStyle\"\n        [headerStyleClass]=\"tab.headerStyleClass\"\n        [cache]=\"tab.cache\"\n        [tooltip]=\"tab.tooltip\"\n        [tooltipPosition]=\"tab.tooltipPosition\"\n        [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n      >\n        <ng-template *ngIf=\"tab.headerTemplate\" pTemplate=\"header\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.headerTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-template *ngIf=\"tab.contentTemplate\" pTemplate=\"content\">\n          <ng-container\n            [ngTemplateOutlet]=\"tab.contentTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n          ></ng-container>\n        </ng-template>\n\n        <ng-container\n          [ngTemplateOutlet]=\"tab.implicitContent\"\n          [ngTemplateOutletContext]=\"{ $implicit: tab }\"\n        ></ng-container>\n      </p-tabPanel>\n    </ng-container>\n  </p-tabView>\n\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\n    <div class=\"control-group\">\n      <button class=\"control-group__item\" (click)=\"op.toggle($event)\">\n        <i class=\"pi pi-ellipsis-v control-icon\"></i>\n      </button>\n      <button class=\"control-group__item\" (click)=\"scrollNext()\">\n        <i #nextControl class=\"pi pi-angle-right control-icon\"></i>\n      </button>\n    </div>\n  </div>\n\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\n    <ng-template pTemplate>\n      <div\n        *ngFor=\"let tab of tabList\"\n        class=\"tab-list-item text-overflow\"\n        [class.disabled]=\"tab.disabled\"\n        tooltipPosition=\"bottom\"\n        [pTooltip]=\"tab.header\"\n        (click)=\"selectTabFromList($event, tab.index); op.hide()\"\n      >\n        {{ tab.header }}\n      </div>\n    </ng-template>\n  </p-overlayPanel>\n\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\n</div>\n"
        },
        {
            "name": "ZyfraTextareaComponent",
            "id": "component-ZyfraTextareaComponent-23483688e447ff1191f934b8a9ed10bb",
            "file": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-textarea.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoResize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "maxlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number"
                },
                {
                    "name": "minlength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean"
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onResize",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-textarea',\n  templateUrl: './zyfra-textarea.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraTextareaComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() rows: number;\n  @Input() cols: number;\n  @Input() autoResize: boolean;\n  @Input() id: string;\n  @Input() name: string;\n  @Input() placeholder: string;\n  @Input() class: string;\n  @Input() disabled: boolean; // TODO remove this, use FormControl disable state\n  @Input() maxlength: number;\n  @Input() minlength: number;\n  @Input() label = '';\n  @Input() required = false;\n\n  @Output() onResize = new EventEmitter<unknown>();\n\n  public override setDisabledState(): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\n  <textarea\n    pInputTextarea\n    [rows]=\"rows\"\n    [cols]=\"cols\"\n    [autoResize]=\"autoResize\"\n    [formControl]=\"$any(ngControl.control)\"\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\n    [placeholder]=\"placeholder\"\n    [class]=\"class\"\n    [disabled]=\"disabled\"\n    [maxlength]=\"maxlength\"\n    [minlength]=\"minlength\"\n    [name]=\"name\"\n    (onResize)=\"onResize.emit($event)\"\n  ></textarea>\n\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\n</span>\n"
        },
        {
            "name": "ZyfraToastComponent",
            "id": "component-ZyfraToastComponent-f495ff2a982b550c0d3c1ad86d5e4821",
            "file": "libs/components/src/lib/toast/zyfra-toast.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService"
                }
            ],
            "selector": "zyfra-toast",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoZIndex",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean"
                },
                {
                    "name": "baseZIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean"
                },
                {
                    "name": "customTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "TemplateRef<any>"
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "any"
                },
                {
                    "name": "detail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string"
                },
                {
                    "name": "hideTransformOptions",
                    "defaultValue": "'translateY(-100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "hideTransitionOptions",
                    "defaultValue": "'250ms ease-in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any"
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "life",
                    "defaultValue": "3000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number"
                },
                {
                    "name": "position",
                    "defaultValue": "'top-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "preventDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "preventOpenDuplicates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean"
                },
                {
                    "name": "severity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "showTransformOptions",
                    "defaultValue": "'translateY(100%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "showTransitionOptions",
                    "defaultValue": "'300ms ease-out'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "sticky",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-toast',\n  templateUrl: './zyfra-toast.component.html',\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraToastComponent {\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() key: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() position: string = 'top-right';\n  @Input() baseZIndex: number = 0;\n  @Input() autoZIndex: boolean = true;\n  @Input() showTransitionOptions: string = '300ms ease-out';\n  @Input() hideTransitionOptions: string = '250ms ease-in';\n  @Input() showTransformOptions: string = 'translateY(100%)';\n  @Input() hideTransformOptions: string = 'translateY(-100%)';\n  @Input() preventOpenDuplicates: boolean;\n  @Input() preventDuplicates: boolean;\n\n  // --- for message -----\n  @Input() severity: string;\n  @Input() summary: string;\n  @Input() detail: string;\n  @Input() id: any;\n  @Input() life: number = 3000;\n  @Input() sticky: boolean = false;\n  @Input() closable: boolean = true;\n  @Input() data: any;\n\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\n    this.primengConfig.ripple = true;\n  }\n\n  public showMessage(): void {\n    this.messageService.add({\n      severity: this.severity,\n      summary: this.summary,\n      detail: this.detail,\n      life: this.life,\n      id: this.id,\n      sticky: this.sticky,\n      closable: this.closable,\n      data: this.data,\n    });\n  }\n\n  // нужны ли кастомные методы?\n  public onReject(): void {\n    this.messageService.clear('c');\n    this.onClose.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-toast\n  [key]=\"key\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [position]=\"position\"\n  [baseZIndex]=\"baseZIndex\"\n  [autoZIndex]=\"autoZIndex\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [hideTransitionOptions]=\"hideTransitionOptions\"\n  [showTransformOptions]=\"showTransformOptions\"\n  [hideTransformOptions]=\"hideTransformOptions\"\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\n  [preventDuplicates]=\"preventDuplicates\"\n  (onClose)=\"onReject()\"\n>\n  <ng-template *ngIf=\"customTemplate\" let-message pTemplate=\"message\">\n    <div class=\"p-toast-message-custom\">\n      <ng-container *ngTemplateOutlet=\"customTemplate\"></ng-container>\n    </div>\n  </ng-template>\n</p-toast>\n"
        },
        {
            "name": "ZyfraToggleButtonComponent",
            "id": "component-ZyfraToggleButtonComponent-4df1c4e5b84c529f740f9b74f58407ae",
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-toggle-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-toggle-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "iconPos",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"left\" | \"right\""
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string"
                },
                {
                    "name": "model",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "offIcon",
                    "defaultValue": "'zyfra-icon cancel-close'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "offLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "onIcon",
                    "defaultValue": "'zyfra-icon selection-check-simple'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "onLabel",
                    "defaultValue": "'confirm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TToggleButtonClick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nexport interface TToggleButtonClick {\n  originalEvent: PointerEvent;\n  checked: boolean;\n}\n\n@Component({\n  selector: 'zyfra-toggle-button',\n  templateUrl: './zyfra-toggle-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraToggleButtonComponent {\n  @Input() model = true;\n  @Input() onLabel: string = 'confirm';\n  @Input() offLabel: string;\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\n  @Input() offIcon = 'zyfra-icon cancel-close';\n  @Input() iconPos: 'left' | 'right' = 'left';\n  @Input() disabled: boolean;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public handleChange(event: TToggleButtonClick): void {\n    this.model = event.checked;\n    this.onChange.emit(this.model);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-toggleButton\n  [(ngModel)]=\"model\"\n  [onLabel]=\"onLabel\"\n  [offLabel]=\"offLabel\"\n  [onIcon]=\"onIcon\"\n  [offIcon]=\"offIcon\"\n  [iconPos]=\"iconPos\"\n  [disabled]=\"disabled\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  (onChange)=\"handleChange($event)\"\n>\n</p-toggleButton>\n"
        },
        {
            "name": "ZyfraTooltipComponent",
            "id": "component-ZyfraTooltipComponent-8659848c5eaedd9860f723d8bb9eafbe",
            "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tooltip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTooltipOptionsModel",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "hostClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'animationend', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "style.left.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number"
                },
                {
                    "name": "style.top.px",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number"
                }
            ],
            "hostListeners": [
                {
                    "name": "animationend",
                    "args": [
                        {
                            "name": "event",
                            "type": "AnimationEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  ViewEncapsulation,\n  Output,\n  TemplateRef,\n  HostBinding,\n  ChangeDetectionStrategy,\n  HostListener,\n} from '@angular/core';\nimport { ZyfraTooltipOptionsModel } from './zyfra-tooltip.model';\n\n@Component({\n  selector: 'zyfra-tooltip',\n  templateUrl: './zyfra-tooltip.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTooltipComponent {\n  @HostBinding('style.top.px') get topParam(): number {\n    return this.options.top;\n  }\n  @HostBinding('style.left.px') get leftParam(): number {\n    return this.options.left;\n  }\n\n  set options(op: ZyfraTooltipOptionsModel) {\n    this._options = op;\n    this.hostClasses = op.className;\n  }\n  get options(): ZyfraTooltipOptionsModel {\n    return this._options;\n  }\n\n  get hasTemplateRef(): boolean {\n    return this._options.content instanceof TemplateRef;\n  }\n  @HostBinding('class') hostClasses = '';\n\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\n\n  private _options: ZyfraTooltipOptionsModel;\n  @HostListener('animationend', ['$event'])\n  public animationend(event: AnimationEvent): void {\n    if (event.animationName === 'tooltipOut') {\n      this.close.emit(true);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "topParam": {
                    "name": "topParam",
                    "getSignature": {
                        "name": "topParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 20
                    }
                },
                "leftParam": {
                    "name": "leftParam",
                    "getSignature": {
                        "name": "leftParam",
                        "type": "number",
                        "returnType": "number",
                        "line": 23
                    }
                },
                "options": {
                    "name": "options",
                    "setSignature": {
                        "name": "options",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "op",
                                "type": "ZyfraTooltipOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "op",
                                "type": "ZyfraTooltipOptionsModel",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "options",
                        "type": "",
                        "returnType": "ZyfraTooltipOptionsModel",
                        "line": 31
                    }
                },
                "hasTemplateRef": {
                    "name": "hasTemplateRef",
                    "getSignature": {
                        "name": "hasTemplateRef",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 35
                    }
                }
            },
            "templateData": "<ng-template [ngIf]=\"hasTemplateRef\" [ngIfElse]=\"string\">\n  <ng-container *ngTemplateOutlet=\"$any(options.content); context: { $implicit: options.context }\"> </ng-container>\n</ng-template>\n<ng-template #string>\n  {{ $any(options.content) | charLimit: 220 }}\n</ng-template>\n"
        },
        {
            "name": "ZyfraTreeComponent",
            "id": "component-ZyfraTreeComponent-36603cda0b16f14934642caa115b1e0d",
            "file": "libs/components/src/lib/tree/zyfra-tree.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string"
                },
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "string"
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any"
                },
                {
                    "name": "draggableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean"
                },
                {
                    "name": "draggableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "any"
                },
                {
                    "name": "droppableNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "droppableScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "any"
                },
                {
                    "name": "emptyMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string"
                },
                {
                    "name": "enableFilter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "boolean"
                },
                {
                    "name": "filterBy",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "string"
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string"
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string"
                },
                {
                    "name": "filterPlaceholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string"
                },
                {
                    "name": "indentation",
                    "defaultValue": "1.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "number"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "TreeNode[]"
                },
                {
                    "name": "layout",
                    "defaultValue": "'vertical'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean"
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "string"
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "number"
                },
                {
                    "name": "metaKeySelection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "number"
                },
                {
                    "name": "propagateSelectionDown",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean"
                },
                {
                    "name": "propagateSelectionUp",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean"
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string"
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any"
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string"
                },
                {
                    "name": "trackBy",
                    "defaultValue": "(index: number, item: any): any => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "(index: number, item: any) => any"
                },
                {
                    "name": "validateDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "virtualNodeHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "string"
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeContextMenuSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeDrop",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onFilterHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeCollapseHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeContextMenuSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeDropHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeExpandHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeSelectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNodeUnselectHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\n\n@Component({\n  selector: 'zyfra-tree',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './zyfra-tree.component.html',\n})\nexport class ZyfraTreeComponent {\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n  @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\n\n  @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n  @Input() items: TreeNode[];\n\n  @Input() selectionMode: string; // single | multipple | checkbox\n\n  @Input() selection: any;\n\n  @Input() style: any;\n\n  @Input() styleClass: string;\n\n  @Input() contextMenu: any;\n\n  @Input() layout = 'vertical';\n\n  @Input() draggableScope: any;\n\n  @Input() droppableScope: any;\n\n  @Input() draggableNodes: boolean;\n\n  @Input() droppableNodes: boolean;\n\n  @Input() metaKeySelection = true;\n\n  @Input() propagateSelectionUp = true;\n\n  @Input() propagateSelectionDown = true;\n\n  @Input() loading: boolean;\n\n  @Input() loadingIcon = 'pi pi-spinner';\n\n  @Input() emptyMessage = '';\n\n  @Input() ariaLabel: string;\n\n  @Input() ariaLabelledBy: string;\n\n  @Input() validateDrop: boolean;\n\n  @Input() enableFilter: boolean;\n\n  @Input() filterBy = 'label';\n\n  @Input() filterMode = 'lenient';\n\n  @Input() filterPlaceholder: string;\n\n  @Input() filterLocale: string;\n\n  @Input() scrollHeight: string;\n\n  @Input() virtualScroll: boolean;\n\n  @Input() virtualNodeHeight: string;\n\n  @Input() minBufferPx: number;\n\n  @Input() maxBufferPx: number;\n\n  @Input() indentation = 1.5;\n\n  @Input() trackBy = (index: number, item: any): any => item;\n\n  public onNodeSelectHandler(event: Event): void {\n    this.onNodeSelect.emit(event);\n  }\n\n  public onNodeUnselectHandler(event: Event): void {\n    this.onNodeUnselect.emit(event);\n  }\n\n  public onNodeExpandHandler(event: Event): void {\n    this.onNodeExpand.emit(event);\n  }\n\n  public onNodeCollapseHandler(event: Event): void {\n    this.onNodeCollapse.emit(event);\n  }\n\n  public onNodeContextMenuSelectHandler(event: Event): void {\n    this.onNodeContextMenuSelect.emit(event);\n  }\n\n  public onNodeDropHandler(event: Event): void {\n    this.onNodeDrop.emit(event);\n  }\n\n  public onFilterHandler(event: Event): void {\n    this.onFilter.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-tree\n  [value]=\"items\"\n  [selectionMode]=\"selectionMode\"\n  [(selection)]=\"selection\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [contextMenu]=\"contextMenu\"\n  [layout]=\"layout\"\n  [draggableScope]=\"draggableScope\"\n  [droppableScope]=\"droppableScope\"\n  [draggableNodes]=\"draggableNodes\"\n  [droppableNodes]=\"droppableNodes\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [propagateSelectionUp]=\"propagateSelectionUp\"\n  [propagateSelectionDown]=\"propagateSelectionDown\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [emptyMessage]=\"emptyMessage\"\n  [ariaLabel]=\"ariaLabel\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [validateDrop]=\"validateDrop\"\n  [filter]=\"enableFilter\"\n  [filterBy]=\"filterBy\"\n  [filterMode]=\"filterMode\"\n  [filterPlaceholder]=\"filterPlaceholder\"\n  [filterLocale]=\"filterLocale\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualNodeHeight]=\"virtualNodeHeight\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [trackBy]=\"trackBy\"\n  [indentation]=\"indentation\"\n  (onNodeSelect)=\"onNodeSelectHandler($event)\"\n  (onNodeUnselect)=\"onNodeUnselectHandler($event)\"\n  (onNodeExpand)=\"onNodeExpandHandler($event)\"\n  (onNodeCollapse)=\"onNodeCollapseHandler($event)\"\n  (onNodeContextMenuSelect)=\"onNodeContextMenuSelectHandler($event)\"\n  (onNodeDrop)=\"onNodeDropHandler($event)\"\n  (onFilter)=\"onFilterHandler($event)\"\n></p-tree>\n"
        },
        {
            "name": "ZyfraTreeTableCellEditorComponent",
            "id": "component-ZyfraTreeTableCellEditorComponent-f928f2b77491efe4ec5202d5058e9312",
            "file": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: TTEditableColumn, useFactory: (treeTableEditableColumnDirective): TTEditableColumn => treeTableEditableColumnDirective, deps: [ZyfraTreeTableEditableColumnDirective],\n}",
                    "type": "directive"
                }
            ],
            "selector": "zyfra-tree-table-cell-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-cell-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTreeTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTreeTableTemplateDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n} from '@angular/core';\nimport { TTEditableColumn } from 'primeng/treetable';\nimport { ZyfraTreeTableEditableColumnDirective } from '../directives/tree-table-editable-column.directive';\nimport { ZyfraTreeTableTemplateDirective } from '../directives/tree-table-template.directive';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'zyfra-tree-table-cell-editor',\n  templateUrl: './tree-table-cell-editor.component.html',\n  providers: [\n    {\n      provide: TTEditableColumn,\n      useFactory: (treeTableEditableColumnDirective): TTEditableColumn => treeTableEditableColumnDirective,\n      deps: [ZyfraTreeTableEditableColumnDirective],\n    },\n  ],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZyfraTreeTableCellEditorComponent implements AfterContentInit {\n  @ContentChildren(ZyfraTreeTableTemplateDirective) templates: QueryList<ZyfraTreeTableTemplateDirective>;\n\n  @Input() value = '';\n  @Output() valueChange = new EventEmitter<string>();\n\n  inputTemplate: TemplateRef<unknown>;\n\n  public stopPropagation(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  ngAfterContentInit(): void {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "templateData": "<p-treeTableCellEditor>\n  <ng-template pTemplate=\"input\">\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-template #defaultInputTemplate>\n      <input\n        type=\"text\"\n        [value]=\"value\"\n        (input)=\"valueChange.emit($any($event.target).value)\"\n        (click)=\"stopPropagation($event)\"\n      />\n    </ng-template>\n  </ng-template>\n\n  <ng-template pTemplate=\"output\">\n    <ng-content></ng-content>\n  </ng-template>\n</p-treeTableCellEditor>\n"
        },
        {
            "name": "ZyfraTreeTableCheckboxComponent",
            "id": "component-ZyfraTreeTableCheckboxComponent-b7c0083fa64a165d50e02c73062b3e0d",
            "file": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional } from '@angular/core';\nimport { ZyfraTreeTableSelectableRowDirective } from '../directives/tree-table-selectable-row.directive';\n\n@Component({\n  selector: 'zyfra-tree-table-checkbox',\n  templateUrl: './tree-table-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableCheckboxComponent {\n  @Input() disabled: boolean;\n  @Input('value') rowNode: any;\n\n  constructor(@Optional() private selectableRowDirective: ZyfraTreeTableSelectableRowDirective) {}\n\n  public onClick(event: Event): void {\n    if (this.selectableRowDirective) {\n      event.stopPropagation();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "selectableRowDirective",
                        "type": "ZyfraTreeTableSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "selectableRowDirective",
                        "type": "ZyfraTreeTableSelectableRowDirective",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-treeTableCheckbox\n  [value]=\"rowNode\"\n  [disabled]=\"disabled\"\n  (click)=\"onClick($event)\"\n></p-treeTableCheckbox>\n"
        },
        {
            "name": "ZyfraTreeTableComponent",
            "id": "component-ZyfraTreeTableComponent-9b894679f7eb2e65b0ca65d5f3548e0a",
            "file": "libs/components/src/lib/tree-table/tree-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TreeTableService"
                },
                {
                    "name": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable.table, deps: [ZyfraTreeTableComponent],\n}",
                    "type": "component",
                    "ns": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable"
                }
            ],
            "selector": "zyfra-tree-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filters",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of FilterMetadata objects to provide external filters",
                    "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
                    "line": 43,
                    "type": "literal type"
                },
                {
                    "name": "rowTrackBy",
                    "defaultValue": "(index: number, item: any) => item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
                    "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
                    "line": 75,
                    "type": "function"
                },
                {
                    "name": "alwaysShowPaginator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show it even there is only one page",
                    "description": "<p>Whether to show it even there is only one page</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "autoLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the cell widths scale according to their content or not",
                    "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
                    "line": 60,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columnResizeMode",
                    "defaultValue": "'fit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
                    "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
                    "line": 221,
                    "type": "\"fit\" | \"expand\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns",
                    "description": "<p>An array of objects to represent dynamic columns</p>\n",
                    "line": 40,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "compareSelectionBy",
                    "defaultValue": "'deepEquals'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Algorithm to define if a row is selected,\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
                    "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
                    "line": 165,
                    "type": "\"deepEquals\" | \"equals\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Local ng-template varilable of a ContextMenu",
                    "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
                    "line": 229,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection",
                    "description": "<p>Context menu selection</p>\n",
                    "line": 127,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionMode",
                    "defaultValue": "'separate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Context menu selection mode",
                    "description": "<p>Context menu selection mode</p>\n",
                    "line": 131,
                    "type": "\"separate\" | \"joint\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "currentPageReportTemplate",
                    "defaultValue": "'{currentPage} of {totalPages}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
                    "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
                    "line": 107,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "customSort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
                    "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
                    "line": 147,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "dataKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "A property to uniquely identify a record in data",
                    "description": "<p>A property to uniquely identify a record in data</p>\n",
                    "line": 155,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "defaultSortOrder",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
                    "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
                    "line": 135,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterDelay",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Delay in milliseconds before filtering the data",
                    "description": "<p>Delay in milliseconds before filtering the data</p>\n",
                    "line": 237,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterLocale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
                    "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
                    "line": 245,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterMode",
                    "defaultValue": "'lenient'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
                    "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
                    "line": 241,
                    "type": "\"lenient\" | \"strict\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Index of the first row to be displayed",
                    "description": "<p>Index of the first row to be displayed</p>\n",
                    "line": 80,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to represent dynamic columns that are frozen",
                    "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
                    "line": 213,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Width of the frozen columns container",
                    "description": "<p>Width of the frozen columns container</p>\n",
                    "line": 209,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "globalFilterFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of fields as string to use in global filtering",
                    "description": "<p>An array of fields as string to use in global filtering</p>\n",
                    "line": 233,
                    "type": "string[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
                    "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
                    "line": 64,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoadOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to call lazy loading on initialization",
                    "description": "<p>Whether to call lazy loading on initialization</p>\n",
                    "line": 68,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Displays a loader to indicate data load is in progress",
                    "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
                    "line": 173,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "loadingIcon",
                    "defaultValue": "'pi pi-spinner'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "The icon to show while indicating data load is in progress",
                    "description": "<p>The icon to show while indicating data load is in progress</p>\n",
                    "line": 177,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "maxBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
                    "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
                    "line": 205,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "metaKeySelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically",
                    "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
                    "line": 160,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "minBufferPx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
                    "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
                    "line": 201,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "multiSortMeta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
                    "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
                    "line": 261,
                    "type": "SortMeta[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "pageLinks",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 84,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specified as true, enables the pagination",
                    "description": "<p>When specified as true, enables the pagination</p>\n",
                    "line": 72,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownAppendTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Target element to attach the paginator dropdown overlay,\nvalid values are \"body\" or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
                    "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
                    "line": 102,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
                    "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
                    "line": 96,
                    "type": "\"top\" | \"bottom\" | \"both\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "reorderableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be reordered using drag and drop",
                    "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
                    "line": 225,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetPageOnSort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true, resets paginator to first page after sorting",
                    "description": "<p>When true, resets paginator to first page after sorting</p>\n",
                    "line": 143,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resizableColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, columns can be resized using drag and drop",
                    "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
                    "line": 217,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Adds hover effect to rows without the need for selectionMode",
                    "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
                    "line": 169,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rows",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of rows to display per page",
                    "description": "<p>Number of rows to display per page</p>\n",
                    "line": 76,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of page links to display in paginator",
                    "description": "<p>Number of page links to display in paginator</p>\n",
                    "line": 88,
                    "type": "any[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
                    "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
                    "line": 185,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
                    "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
                    "line": 189,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Selected row in single mode or an array of values in multiple mode",
                    "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
                    "line": 265,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
                    "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
                    "line": 151,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showCurrentPageReport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display current page report",
                    "description": "<p>Whether to display current page report</p>\n",
                    "line": 111,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showFirstLastIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
                    "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
                    "line": 119,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showJumpToPageDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to display a dropdown to navigate to any page",
                    "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
                    "line": 115,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show the loading mask when loading property is true",
                    "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
                    "line": 181,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "showPageLinks",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether to show page links",
                    "description": "<p>Whether to show page links</p>\n",
                    "line": 123,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Name of the field to sort data by default",
                    "description": "<p>Name of the field to sort data by default</p>\n",
                    "line": 253,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortMode",
                    "defaultValue": "'single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Defines whether sorting works on single column or on multiple columns",
                    "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
                    "line": 139,
                    "type": "\"single\" | \"multiple\"",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Order to sort when default sorting is enabled",
                    "description": "<p>Order to sort when default sorting is enabled</p>\n",
                    "line": 257,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "stripedMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "When true turns on striped display mode",
                    "description": "<p>When true turns on striped display mode</p>\n",
                    "line": 269,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the component",
                    "description": "<p>Inline style of the component</p>\n",
                    "line": 44,
                    "type": "any",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the component",
                    "description": "<p>Style class of the component</p>\n",
                    "line": 48,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Inline style of the table",
                    "description": "<p>Inline style of the table</p>\n",
                    "line": 52,
                    "type": "Record<string | string>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "tableStyleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Style class of the table",
                    "description": "<p>Style class of the table</p>\n",
                    "line": 56,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Table title",
                    "description": "<p>Table title</p>\n",
                    "line": 32,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Number of total records, defaults to length of value when not defined",
                    "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
                    "line": 249,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "An array of objects to display",
                    "description": "<p>An array of objects to display</p>\n",
                    "line": 36,
                    "type": "T[]",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualRowHeight",
                    "defaultValue": "32",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Height of a row to use in calculations of virtual scrolling",
                    "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
                    "line": 197,
                    "type": "number",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "virtualScroll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Whether the data should be loaded on demand during scroll",
                    "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
                    "line": 193,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "activeElementChange",
                    "defaultValue": "new EventEmitter<T>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange active element\n",
                    "description": "<p>Change active element</p>\n",
                    "line": 50,
                    "type": "EventEmitter<T>",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection of context menu selection is changed\n",
                    "description": "<p>Callback to invoke when selection of context menu selection is changed</p>\n",
                    "line": 70,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeCollapse",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is collapsed\n",
                    "description": "<p>Callback to invoke when a node is collapsed</p>\n",
                    "line": 58,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeExpand",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is expanded\n",
                    "description": "<p>Callback to invoke when a node is expanded</p>\n",
                    "line": 54,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected\n",
                    "description": "<p>Callback to invoke when a node is selected</p>\n",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onNodeUnselect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is unselected\n",
                    "description": "<p>Callback to invoke when a node is unselected</p>\n",
                    "line": 66,
                    "type": "EventEmitter"
                },
                {
                    "name": "colReorder",
                    "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
                    "description": "<p>Callback to invoke when a column is reordered</p>\n",
                    "line": 319,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colResize",
                    "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column is resized\n",
                    "description": "<p>Callback to invoke when a column is resized</p>\n",
                    "line": 314,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "contextMenuSelect",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
                    "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
                    "line": 310,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editCancel",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
                    "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
                    "line": 331,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editComplete",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
                    "description": "<p>Callback to invoke when cell edit is completed</p>\n",
                    "line": 327,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "editInit",
                    "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
                    "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
                    "line": 323,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerCheckboxToggle",
                    "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
                    "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
                    "line": 335,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "lazyLoad",
                    "defaultValue": "new EventEmitter<{\n    first: number;\n    rows: number;\n    sortField: string;\n    sortOrder: SortOrder;\n    multiSortMeta: SortMeta[];\n    filters: Record<string, unknown>;\n    globalFilter: unknown;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
                    "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
                    "line": 293,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onFilter",
                    "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when data is filtered\n",
                    "description": "<p>Callback to invoke when data is filtered</p>\n",
                    "line": 276,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "onSort",
                    "defaultValue": "new EventEmitter<{\n    field: string;\n    order: SortOrder;\n    multisortmeta: SortMeta[];\n  } | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
                    "description": "<p>Callback to invoke when a column gets sorted</p>\n",
                    "line": 284,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "page",
                    "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
                    "description": "<p>Callback to invoke when pagination occurs</p>\n",
                    "line": 280,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter<unknown>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCallback to invoke when selection is changed\n",
                    "description": "<p>Callback to invoke when selection is changed</p>\n",
                    "line": 339,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "sortFunction",
                    "defaultValue": "new EventEmitter<TableSortEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nA function to implement custom sorting\n",
                    "description": "<p>A function to implement custom sorting</p>\n",
                    "line": 306,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeTable",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'table', {static: true}"
                        }
                    ]
                },
                {
                    "name": "templates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ZyfraTreeTableTemplateDirective>",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "ZyfraTreeTableTemplateDirective"
                        }
                    ]
                },
                {
                    "name": "_activeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 343,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "bodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "captionTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "colGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "emptyMessageTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "footerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenBodyTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenColGroupTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenFooterTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "frozenHeaderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "headerTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initialData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 342,
                    "modifierKind": [
                        121
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorDropdownItemTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorLeftTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "paginatorRightTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "styleClasses",
                    "defaultValue": "'p-datatable-gridlines'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "summaryTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getContentTemplate",
                    "args": [],
                    "optional": false,
                    "returnType": "QueryList<BaseTableTemplateDirective>",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "getTable",
                    "args": [],
                    "optional": false,
                    "returnType": "TreeTable",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "initTemplateByType",
                    "args": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BaseTableTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "checkUpdateStyleClasses",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 483,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 455,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "filterGlobal",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 459,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 463,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "rowData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 357,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetScrollTop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 425,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "resetSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollTo",
                    "args": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "scrollToVirtualIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 421,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                },
                {
                    "name": "updateStyleClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 467,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseTableComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { FilterMetadata } from 'primeng/api';\nimport { TreeTable, TreeTableService } from 'primeng/treetable';\nimport { ZyfraBaseTableComponent } from '../@core/base-table';\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\nimport { ZyfraTreeTableTemplateDirective } from './directives/tree-table-template.directive';\n\n@Component({\n  selector: 'zyfra-tree-table',\n  templateUrl: './tree-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    TreeTableService,\n    {\n      provide: TreeTable,\n      useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable.table,\n      deps: [ZyfraTreeTableComponent],\n    },\n  ],\n})\nexport class ZyfraTreeTableComponent<T = unknown>\n  extends ZyfraBaseTableComponent<T>\n  implements AfterContentInit, OnChanges\n{\n  @ViewChild('table', { static: true }) table: TreeTable;\n  @ContentChildren(ZyfraTreeTableTemplateDirective) templates: QueryList<ZyfraTreeTableTemplateDirective>;\n\n  //region Inputs\n  /**\n   * An array of FilterMetadata objects to provide external filters\n   */\n  @Input() filters: { [s: string]: FilterMetadata } = {};\n  //endregion\n\n  //region Outputs\n  /**\n   * Change active element\n   */\n  @Output() activeElementChange: EventEmitter<T> = new EventEmitter<T>();\n  /**\n   * Callback to invoke when a node is expanded\n   */\n  @Output() onNodeExpand = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is collapsed\n   */\n  @Output() onNodeCollapse = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is selected\n   */\n  @Output() onNodeSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when a node is unselected\n   */\n  @Output() onNodeUnselect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\n  /**\n   * Callback to invoke when selection of context menu selection is changed\n   */\n  @Output() contextMenuSelectionChange = new EventEmitter<unknown>();\n\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\n   */\n  @Input() rowTrackBy: <K>(index: number, item: K) => K = (index: number, item: any) => item;\n\n  //region Base class overrides\n  public override getContentTemplate():QueryList<BaseTableTemplateDirective> {\n    return this.templates;\n  }\n\n  public override getTable(): TreeTable {\n    return this.table\n  };\n\n  public override initTemplateByType(item: BaseTableTemplateDirective): void {\n    // do nothing\n  };\n  //endregion\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "ZyfraBaseTableComponent",
            "implements": [
                "AfterContentInit",
                "OnChanges"
            ],
            "templateData": "<p-treeTable\n  #table\n  [value]=\"value\"\n  [columns]=\"columns\"\n  [style]=\"style\"\n  [styleClass]=\"styleClasses\"\n  [tableStyle]=\"tableStyle\"\n  [tableStyleClass]=\"(paginator ? 'zyfra-table_paginator ' : '') + tableStyleClass\"\n  [autoLayout]=\"autoLayout\"\n  [lazy]=\"lazy\"\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\n  [paginator]=\"paginator\"\n  [rows]=\"rows\"\n  [first]=\"first\"\n  [pageLinks]=\"pageLinks\"\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\n  [paginatorPosition]=\"paginatorPosition\"\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\n  [showCurrentPageReport]=\"showCurrentPageReport\"\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n  [showFirstLastIcon]=\"showFirstLastIcon\"\n  [showPageLinks]=\"showPageLinks\"\n  [defaultSortOrder]=\"defaultSortOrder\"\n  [sortMode]=\"sortMode\"\n  [resetPageOnSort]=\"resetPageOnSort\"\n  [customSort]=\"customSort\"\n  [selectionMode]=\"selectionMode\"\n  [contextMenuSelection]=\"contextMenuSelection\"\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\n  [dataKey]=\"dataKey\"\n  [metaKeySelection]=\"metaKeySelection\"\n  [compareSelectionBy]=\"compareSelectionBy\"\n  [rowHover]=\"rowHover\"\n  [loading]=\"loading\"\n  [loadingIcon]=\"loadingIcon\"\n  [showLoader]=\"showLoader\"\n  [scrollable]=\"scrollable\"\n  [scrollHeight]=\"scrollHeight\"\n  [virtualScroll]=\"virtualScroll\"\n  [virtualRowHeight]=\"virtualRowHeight\"\n  [minBufferPx]=\"minBufferPx\"\n  [maxBufferPx]=\"maxBufferPx\"\n  [frozenWidth]=\"frozenWidth\"\n  [frozenColumns]=\"frozenColumns\"\n  [resizableColumns]=\"resizableColumns\"\n  [columnResizeMode]=\"columnResizeMode\"\n  [reorderableColumns]=\"reorderableColumns\"\n  [contextMenu]=\"contextMenu\"\n  [rowTrackBy]=\"rowTrackBy\"\n  [filters]=\"filters\"\n  [globalFilterFields]=\"globalFilterFields\"\n  [filterDelay]=\"filterDelay\"\n  [filterMode]=\"filterMode\"\n  [filterLocale]=\"filterLocale\"\n  [totalRecords]=\"totalRecords\"\n  [sortField]=\"sortField\"\n  [sortOrder]=\"sortOrder\"\n  [multiSortMeta]=\"multiSortMeta\"\n  [selection]=\"selection\"\n  (onFilter)=\"onFilter.emit($event)\"\n  (onNodeExpand)=\"onNodeExpand.emit($event)\"\n  (onNodeCollapse)=\"onNodeCollapse.emit($event)\"\n  (onPage)=\"page.emit($event)\"\n  (onSort)=\"onSort.emit($event)\"\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\n  (sortFunction)=\"sortFunction.emit($event)\"\n  (onColResize)=\"colResize.emit($event)\"\n  (onColReorder)=\"colReorder.emit($event)\"\n  (onNodeSelect)=\"onNodeSelect.emit($event)\"\n  (onNodeUnselect)=\"onNodeUnselect.emit($event)\"\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\n  (onEditInit)=\"editInit.emit($event)\"\n  (onEditComplete)=\"editComplete.emit($event)\"\n  (onEditCancel)=\"editCancel.emit($event)\"\n  (selectionChange)=\"selectionChange.emit($event)\"\n  (contextMenuSelectionChange)=\"contextMenuSelectionChange.emit($event)\"\n>\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\n    <div class=\"zyfra-table-title\" *ngIf=\"title\">{{ title }}</div>\n    <ng-container *ngIf=\"captionTemplate\">\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n    </ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"header\" let-columns *ngIf=\"headerTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        headerTemplate;\n        context: {\n          $implicit: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\" *ngIf=\"bodyTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        bodyTemplate;\n        context: {\n          $implicit: rowNode,\n          rowData: rowData,\n          columns: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"footer\" let-columns *ngIf=\"footerTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        footerTemplate;\n        context: {\n          $implicit: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"colgroup\" let-columns *ngIf=\"colGroupTemplate\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        colGroupTemplate;\n        context: {\n          $implicit: columns\n        }\n      \"\n    ></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\n  </ng-template>\n\n  <ng-template pTemplate=\"paginatordropdownitem\" *ngIf=\"paginatorDropdownItemTemplate\">\n    <ng-container *ngTemplateOutlet=\"paginatorDropdownItemTemplate\"></ng-container>\n  </ng-template>\n</p-treeTable>\n"
        },
        {
            "name": "ZyfraTreeTableHeaderCheckboxComponent",
            "id": "component-ZyfraTreeTableHeaderCheckboxComponent-895cb6208b7fffa5843d6f5d70561b68",
            "file": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-header-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-header-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-header-checkbox',\n  templateUrl: './tree-table-header-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableHeaderCheckboxComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\n"
        },
        {
            "name": "ZyfraTreeTableSearchCellComponent",
            "id": "component-ZyfraTreeTableSearchCellComponent-d80c0625b2fb46753ca5a01e23513d96",
            "file": "libs/components/src/lib/tree-table/tree-table-search-cell/tree-table-search-cell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[zyfra-search-cell]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-search-cell.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "isNativeFiltering",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted",
                    "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "matchMode",
                    "defaultValue": "'contains'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<ValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraTreeTableComponent",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                },
                {
                    "name": "hostClass",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "matchMode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'search-cell'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "inheritance": {
                        "file": "ZyfraBaseSearchCellComponent"
                    }
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ZyfraBaseSearchCellComponent } from '../../@core/base-table';\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\n\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[zyfra-search-cell]',\n  templateUrl: './tree-table-search-cell.component.html',\n  // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableSearchCellComponent extends ZyfraBaseSearchCellComponent {\n  constructor(public readonly table: ZyfraTreeTableComponent) {\n    super();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "table",
                        "type": "ZyfraTreeTableComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ZyfraBaseSearchCellComponent",
            "templateData": "<input\n  class=\"search-cell__input\"\n  type=\"text\"\n  (input)=\"filter($any($event.target).value, field, matchMode)\"\n  [value]=\"$any(table.filters[field])?.value || ''\"\n  [placeholder]=\"placeholder\"\n>\n<i class=\"search-cell__icon pi pi-search\"></i>\n"
        },
        {
            "name": "ZyfraTreeTableSortIconComponent",
            "id": "component-ZyfraTreeTableSortIconComponent-078832992b9a8b797ccb01e39665548f",
            "file": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-sort-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-sort-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelAsc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "ariaLabelDesc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-sort-icon',\n  templateUrl: './tree-table-sort-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableSortIconComponent {\n  @Input() field: string;\n  @Input() ariaLabelDesc: string;\n  @Input() ariaLabelAsc: string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableSortIcon\n  [field]=\"field\"\n  [ariaLabelDesc]=\"ariaLabelDesc\"\n  [ariaLabelAsc]=\"ariaLabelAsc\"\n></p-treeTableSortIcon>\n"
        },
        {
            "name": "ZyfraTreeTableTogglerComponent",
            "id": "component-ZyfraTreeTableTogglerComponent-8eaedc4cfbc162a155e8ec7c6492cee5",
            "file": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tree-table-toggler",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree-table-toggler.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "rowNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'zyfra-tree-table-toggler',\n  templateUrl: './tree-table-toggler.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTreeTableTogglerComponent {\n  @Input() rowNode: any;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\n"
        },
        {
            "name": "ZyfraTriCheckboxComponent",
            "id": "component-ZyfraTriCheckboxComponent-e5e2d22d52480d66f0ae91e781ea9f6f",
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zyfra-tri-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./zyfra-tri-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabelledBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "inputId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean | null"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "styleClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "tabindex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "injector",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Injector",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                },
                {
                    "name": "ngControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123,
                        143
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "setDisabledState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        157
                    ],
                    "inheritance": {
                        "file": "WrappedFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\n\n@Component({\n  selector: 'zyfra-tri-checkbox',\n  templateUrl: './zyfra-tri-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZyfraTriCheckboxComponent extends WrappedFormComponent implements ControlValueAccessor {\n  @Input() name: string;\n  @Input() label: string;\n  @Input() disabled: boolean; // TODO remove this, use FormControl disable\n  @Input() tabindex: number;\n  @Input() inputId: string;\n  @Input() ariaLabelledBy: string;\n  @Input() style: string;\n  @Input() styleClass: string;\n  @Input() readonly: boolean;\n  @Input() model: boolean | null;\n\n  public override setDisabledState(): void {\n    // do nothing\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "WrappedFormComponent",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<p-triStateCheckbox\n  [formControl]=\"$any(ngControl.control)\"\n  [name]=\"name\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [tabindex]=\"tabindex\"\n  [inputId]=\"inputId\"\n  [ariaLabelledBy]=\"ariaLabelledBy\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  [readonly]=\"readonly\"\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\n></p-triStateCheckbox>\n"
        }
    ],
    "modules": [
        {
            "name": "ZyfraAccordionModule",
            "id": "module-ZyfraAccordionModule-28d0f0ffe0b6169d647e97027de04f02",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/accordion/zyfra-accordion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraAccordionComponent } from './zyfra-accordion/zyfra-accordion.component';\nimport { AccordionModule } from 'primeng/accordion';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\nimport { ZyfraAccordionTabComponent } from './zyfra-accordion-tab/zyfra-accordion-tab.component';\n\n@NgModule({\n  declarations: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\n  imports: [AccordionModule, CommonModule, ZyfraSharedModule],\n  exports: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\n})\nexport class ZyfraAccordionModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraSharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionComponent"
                        },
                        {
                            "name": "ZyfraAccordionTabComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraAutoCompleteModule",
            "id": "module-ZyfraAutoCompleteModule-169ad929da076883c645be700b0c2c50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraAutoCompleteComponent } from './zyfra-auto-complete.component';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\n\n@NgModule({\n  declarations: [ZyfraAutoCompleteComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AutoCompleteModule],\n  exports: [ZyfraAutoCompleteComponent],\n})\nexport class ZyfraAutoCompleteModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraAutoCompleteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraBreadcrumbModule",
            "id": "module-ZyfraBreadcrumbModule-dfc56fe49b841bd4b100bcf41b9cf805",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraBreadcrumbComponent } from './zyfra-breadcrumb.component';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\n\n@NgModule({\n  declarations: [ZyfraBreadcrumbComponent],\n  imports: [BreadcrumbModule],\n  exports: [ZyfraBreadcrumbComponent],\n})\nexport class ZyfraBreadcrumbModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraBreadcrumbComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraButtonModule",
            "id": "module-ZyfraButtonModule-20a48762081a65585ac80731af10bb9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/button/zyfra-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraButtonComponent } from './zyfra-button.component';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  declarations: [ZyfraButtonComponent],\n  imports: [ButtonModule],\n  exports: [ZyfraButtonComponent],\n})\nexport class ZyfraButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraCheckBoxModule",
            "id": "module-ZyfraCheckBoxModule-9e2b623d6bd40d1355e9043d3074f404",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/checkbox/zyfra-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ZyfraCheckboxComponent } from './zyfra-checkbox.component';\n\n@NgModule({\n  declarations: [ZyfraCheckboxComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, CheckboxModule],\n  exports: [ZyfraCheckboxComponent],\n})\nexport class ZyfraCheckBoxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraChipModule",
            "id": "module-ZyfraChipModule-5c72a675429fc3e130f8da29f29382a3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/chip/zyfra-chip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraChipComponent } from './zyfra-chip.component';\nimport { ChipModule } from 'primeng/chip';\n\n@NgModule({\n  declarations: [ZyfraChipComponent],\n  imports: [ChipModule],\n  exports: [ZyfraChipComponent],\n})\nexport class ZyfraChipModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraConfirmDialogModule",
            "id": "module-ZyfraConfirmDialogModule-90c8eb5f81b0f70100d2b1283576b831",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { ButtonModule } from 'primeng/button';\nimport { ZyfraConfirmDialogComponent } from './zyfra-confirm-dialog.component';\n\n@NgModule({\n  declarations: [ZyfraConfirmDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ConfirmDialogModule,\n    MessagesModule,\n    ToastModule,\n    ButtonModule,\n  ],\n  exports: [ZyfraConfirmDialogComponent],\n})\nexport class ZyfraConfirmDialogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraConfirmDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDatepickerModule",
            "id": "module-ZyfraDatepickerModule-15a56fca59d2d7c8aecb133c799e4787",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/datepicker/zyfra-datepicker.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ListboxModule } from 'primeng/listbox';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { ZyfraDropdownModule } from '../dropdown';\nimport { ZyfraButtonModule } from '../button';\nimport { ZyfraRadioButtonModule } from '../radio-button';\nimport { ZyfraInputModule } from '../input';\nimport { ZyfraDatepickerComponent } from './zyfra-datepicker.component';\nimport { ZyfraDatepickerModeSelectComponent } from './zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component';\nimport { ZyfraRelativeDatepickerComponent } from './zyfra-relative-datepicker/zyfra-relative-datepicker.component';\nimport { ZyfraDatepickerMultiComponent } from './zyfra-datepicker-multi/zyfra-datepicker-multi.component';\nimport { ZyfraCalendarComponent } from './calendar/zyfra-calendar.component';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\n\n@NgModule({\n  declarations: [\n    ZyfraDatepickerComponent,\n    ZyfraRelativeDatepickerComponent,\n    ZyfraDatepickerModeSelectComponent,\n    ZyfraDatepickerMultiComponent,\n    ZyfraCalendarComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n    ZyfraButtonModule,\n    ZyfraRadioButtonModule,\n    ZyfraInputModule,\n    ZyfraDropdownModule,\n    OverlayPanelModule,\n    ListboxModule,\n    RippleModule,\n    SharedModule,\n    ButtonModule,\n  ],\n  exports: [ZyfraDatepickerComponent, ZyfraRelativeDatepickerComponent, ZyfraDatepickerModeSelectComponent],\n})\nexport class ZyfraDatepickerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCalendarComponent"
                        },
                        {
                            "name": "ZyfraDatepickerComponent"
                        },
                        {
                            "name": "ZyfraDatepickerModeSelectComponent"
                        },
                        {
                            "name": "ZyfraDatepickerMultiComponent"
                        },
                        {
                            "name": "ZyfraRelativeDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraDropdownModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraRadioButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDatepickerComponent"
                        },
                        {
                            "name": "ZyfraDatepickerModeSelectComponent"
                        },
                        {
                            "name": "ZyfraRelativeDatepickerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDialogModule",
            "id": "module-ZyfraDialogModule-cb74f165fa4e9d82d80c6ac04665f020",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dialog/zyfra-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { ToastModule } from 'primeng/toast';\nimport { ZyfraDialogComponent } from './zyfra-dialog.component';\n\n@NgModule({\n  declarations: [ZyfraDialogComponent],\n  imports: [CommonModule, DialogModule, ToastModule],\n  exports: [ZyfraDialogComponent],\n})\nexport class ZyfraDialogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDropdownModule",
            "id": "module-ZyfraDropdownModule-cc521d53be7e1b65d0ec6bd45c19521f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dropdown/zyfra-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraDropdownComponent } from './zyfra-dropdown.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\n\n@NgModule({\n  declarations: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule],\n  exports: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\n})\nexport class ZyfraDropdownModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownComponent"
                        },
                        {
                            "name": "ZyfraDropdownTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDropdownWithContentModule",
            "id": "module-ZyfraDropdownWithContentModule-be191f8029708716c3bbe5e12efa10b7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraDropdownWithContentComponent } from './zyfra-dropdown-with-content.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ZyfraDropdownModule } from '../dropdown';\n\n@NgModule({\n  declarations: [ZyfraDropdownWithContentComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule, ZyfraDropdownModule],\n  exports: [ZyfraDropdownWithContentComponent],\n})\nexport class ZyfraDropdownWithContentModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraDropdownWithContentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraDropdownWithContentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraDynamicDialogModule",
            "id": "module-ZyfraDynamicDialogModule-07ba88a6c16cb1a340038559f0023998",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DynamicDialogModule\n  ]\n})\nexport class ZyfraDynamicDialogModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraIconModule",
            "id": "module-ZyfraIconModule-a1121453d6349f877dcfd7af17be42b5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/icon/zyfra-icon.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraIconComponent } from './zyfra-icon.component';\n\n@NgModule({\n  declarations: [ZyfraIconComponent],\n  imports: [CommonModule],\n  exports: [ZyfraIconComponent],\n})\nexport class ZyfraIconModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraIconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputMaskModule",
            "id": "module-ZyfraInputMaskModule-07c56c20456b97442cd8a4f0cdb3b761",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-mask/zyfra-input-mask.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraInputMaskComponent } from './zyfra-input-mask.component';\n\n@NgModule({\n  declarations: [ZyfraInputMaskComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputMaskModule],\n  exports: [ZyfraInputMaskComponent],\n})\nexport class ZyfraInputMaskModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputMaskComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputModule",
            "id": "module-ZyfraInputModule-45efa2c9a52a836c6d22f8fac6ae8265",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input/zyfra-input.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraInputComponent } from './zyfra-input.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraTooltipModule } from '../tooltip';\n\n@NgModule({\n  declarations: [ZyfraInputComponent],\n  imports: [\n    CommonModule,\n    InputTextModule,\n    TooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ZyfraTooltipModule,\n  ],\n  exports: [ZyfraInputComponent],\n})\nexport class ZyfraInputModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputNumberModule",
            "id": "module-ZyfraInputNumberModule-960c538256d6aa1fce6d0c7b8f9f6bb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-number/zyfra-input-number.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraInputNumberComponent } from './zyfra-input-number.component';\nimport { InputNumberModule } from 'primeng/inputnumber';\n\n@NgModule({\n  declarations: [ZyfraInputNumberComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputNumberModule],\n  exports: [ZyfraInputNumberComponent],\n})\nexport class ZyfraInputNumberModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputNumberComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraInputSwitchModule",
            "id": "module-ZyfraInputSwitchModule-29fe3a5e7a35ccd6a5986aea867d3c87",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/input-switch/zyfra-input-switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { ZyfraInputSwitchComponent } from './zyfra-input-switch.component';\n\n@NgModule({\n  declarations: [ZyfraInputSwitchComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule],\n  exports: [ZyfraInputSwitchComponent],\n})\nexport class ZyfraInputSwitchModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraInputSwitchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMenuApplicationsModule",
            "id": "module-ZyfraMenuApplicationsModule-8f670b3437de3a69c0d59b00ddbfbc64",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraIconModule } from '../icon';\nimport { ZyfraMenuApplicationsComponent } from './zyfra-menu-applications.component';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraMenuApplicationsItemComponent } from './zyfra-menu-applications-item/zyfra-menu-applications-item.component';\nimport { ZyfraSplitterModule } from '../splitter';\nimport { ZyfraTooltipModule } from '../tooltip';\n\n@NgModule({\n  declarations: [ZyfraMenuApplicationsComponent, ZyfraMenuApplicationsItemComponent],\n  imports: [CommonModule, ZyfraIconModule, ZyfraSplitterModule, ZyfraTooltipModule],\n  exports: [ZyfraMenuApplicationsComponent],\n})\nexport class ZyfraMenuApplicationsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        },
                        {
                            "name": "ZyfraMenuApplicationsItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraIconModule"
                        },
                        {
                            "name": "ZyfraSplitterModule"
                        },
                        {
                            "name": "ZyfraTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMenuApplicationsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraMessageModule",
            "id": "module-ZyfraMessageModule-e05170874c1db916f5ea23d35e448f58",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/message/zyfra-message.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ZyfraMessageComponent } from './zyfra-message.component';\n\n@NgModule({\n  declarations: [ZyfraMessageComponent],\n  imports: [MessagesModule, MessageModule],\n  exports: [ZyfraMessageComponent],\n})\nexport class ZyfraMessageModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraMessageComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraNavMenuModule",
            "id": "module-ZyfraNavMenuModule-f535713ed7350e00b0235f14c80205b1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { MenuModule } from 'primeng/menu';\nimport { TreeModule } from 'primeng/tree';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\nimport { ZyfraAutofocusDirective } from './directives/zyfra-autofocus.directives';\nimport { ZyfraNavMenuGroupDirective } from './directives/nav-menu-group.directive';\nimport { NavMenuService } from './service/selection.service';\nimport { ZyfraNavMenuItemComponent } from './components/zyfra-menu-item/zyfra-nav-menu-item.component';\nimport { ZyfraNavMenuGroupComponent } from './components/zyfra-nav-menu-group/zyfra-nav-menu-group.component';\nimport { ZyfraTooltipModule } from '../tooltip/zyfra-tooltip.module';\nimport { ZyfraAccordionModule } from '../accordion/zyfra-accordion.module';\nimport { ZyfraInputModule } from '../input/zyfra-input.module';\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\nimport { ZyfraCheckBoxModule } from '../checkbox/zyfra-checkbox.module';\nimport { ZyfraSharedModule } from '../@core/shared/zyfra-shared.module';\n\n@NgModule({\n  declarations: [\n    ZyfraNavMenuComponent,\n    ZyfraAutofocusDirective,\n    ZyfraNavMenuGroupDirective,\n    ZyfraNavMenuGroupComponent,\n    ZyfraNavMenuItemComponent\n  ],\n  imports: [\n    PanelMenuModule,\n    MenuModule,\n    TreeModule,\n    ToggleButtonModule,\n    FormsModule,\n    ButtonModule,\n    RippleModule,\n    CommonModule,\n    InputTextModule,\n    OverlayPanelModule,\n    RadioButtonModule,\n    TooltipModule,\n    ZyfraCheckBoxModule,\n    ZyfraButtonModule,\n    ZyfraInputModule,\n    ZyfraAccordionModule,\n    ZyfraSharedModule,\n    ZyfraTooltipModule\n  ],\n  providers: [NavMenuService],\n  exports: [\n    ZyfraNavMenuComponent,\n    ZyfraNavMenuGroupDirective\n  ]\n})\nexport class ZyfraNavMenuModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "NavMenuService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraAutofocusDirective"
                        },
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        },
                        {
                            "name": "ZyfraNavMenuItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraAccordionModule"
                        },
                        {
                            "name": "ZyfraButtonModule"
                        },
                        {
                            "name": "ZyfraCheckBoxModule"
                        },
                        {
                            "name": "ZyfraInputModule"
                        },
                        {
                            "name": "ZyfraSharedModule"
                        },
                        {
                            "name": "ZyfraTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraNavMenuComponent"
                        },
                        {
                            "name": "ZyfraNavMenuGroupDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPaginatorModule",
            "id": "module-ZyfraPaginatorModule-b2bc129d592fac8e2ebd30ac8a492751",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/paginator/zyfra-paginator.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraPaginatorComponent } from './zyfra-paginator.component';\nimport { PaginatorModule } from 'primeng/paginator';\n\n@NgModule({\n  declarations: [ZyfraPaginatorComponent],\n  imports: [PaginatorModule],\n  exports: [ZyfraPaginatorComponent],\n})\nexport class ZyfraPaginatorModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPaginatorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraPasswordModule",
            "id": "module-ZyfraPasswordModule-3ef28a8629ff6507c9bf1bae84a220b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/password/zyfra-password.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PasswordModule } from 'primeng/password';\nimport { ZyfraPasswordComponent } from './zyfra-password.component';\n\n@NgModule({\n  declarations: [ZyfraPasswordComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PasswordModule],\n  exports: [ZyfraPasswordComponent],\n})\nexport class ZyfraPasswordModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraProgressBarModule",
            "id": "module-ZyfraProgressBarModule-a07d6ca7d938b248ebf7a781a4942301",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/progress/zyfra-progress-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ZyfraProgressBarComponent } from './zyfra-progress-bar.component';\n\n@NgModule({\n  declarations: [ZyfraProgressBarComponent],\n  imports: [ProgressBarModule],\n  exports: [ZyfraProgressBarComponent],\n})\nexport class ZyfraProgressBarModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraProgressBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraRadioButtonModule",
            "id": "module-ZyfraRadioButtonModule-707e4fbbe87a90cd73b102ff50c5bcf3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/radio-button/zyfra-radio-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraRadioButtonComponent } from './zyfra-radio-button.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ZyfraRadioButtonComponent],\n  imports: [RadioButtonModule, FormsModule, ReactiveFormsModule, CommonModule],\n  exports: [ZyfraRadioButtonComponent],\n})\nexport class ZyfraRadioButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraRadioButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSelectButtonModule",
            "id": "module-ZyfraSelectButtonModule-0f9934b56ab25fce81cd0e4c6cce78cb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/select-button/zyfra-select-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\nimport { SelectButtonModule } from 'primeng/selectbutton';\n\n@NgModule({\n  declarations: [ZyfraSelectButtonComponent],\n  imports: [SelectButtonModule],\n  exports: [ZyfraSelectButtonComponent],\n})\nexport class ZyfraSelectButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSelectButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSharedModule",
            "id": "module-ZyfraSharedModule-862041899a22275f7f2620c2bb218563",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/@core/shared/zyfra-shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTemplateDirective } from './zyfra-template.directives';\n\n@NgModule({\n  declarations: [ZyfraTemplateDirective],\n  exports: [ZyfraTemplateDirective],\n})\nexport class ZyfraSharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSliderModule",
            "id": "module-ZyfraSliderModule-1fb6cb7d5877c5db0197f4be9d3cf67a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/slider/zyfra-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {SliderModule} from 'primeng/slider';\nimport { ZyfraSliderComponent } from './zyfra-slider.component';\n\n\n@NgModule({\n  declarations: [ZyfraSliderComponent],\n  imports: [\n    CommonModule,\n    FormsModule, \n    ReactiveFormsModule,\n    SliderModule,\n  ],\n  exports: [ZyfraSliderComponent]\n})\nexport class ZyfraSliderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSpinnerModule",
            "id": "module-ZyfraSpinnerModule-d559707838213510f8d4d829064eecea",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/spinner/zyfra-spinner.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSpinnerComponent } from './zyfra-spinner.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@NgModule({\n  declarations: [ZyfraSpinnerComponent],\n  imports: [ProgressSpinnerModule],\n  exports: [ZyfraSpinnerComponent],\n})\nexport class ZyfraSpinnerModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSpinnerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitButtonModule",
            "id": "module-ZyfraSplitButtonModule-159a398b3322c731d3451cec6c90d477",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/split-button/zyfra-split-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSplitButtonComponent } from './zyfra-split-button.component';\nimport { SplitButtonModule } from 'primeng/splitbutton';\n\n@NgModule({\n  declarations: [ZyfraSplitButtonComponent],\n  imports: [SplitButtonModule],\n  exports: [ZyfraSplitButtonComponent],\n})\nexport class ZyfraSplitButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraSplitterModule",
            "id": "module-ZyfraSplitterModule-cb22d0d8edfa74f1ee008905c92acfb0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/splitter/zyfra-splitter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraSplitterComponent } from './zyfra-splitter.component';\nimport { SplitterModule } from 'primeng/splitter';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\n\n@NgModule({\n  declarations: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n  imports: [CommonModule, SplitterModule],\n  exports: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\n})\nexport class ZyfraSplitterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraSplitterComponent"
                        },
                        {
                            "name": "ZyfraSplitterTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTableModule",
            "id": "module-ZyfraTableModule-50cd186166e9e42819bd3c3dc8161a5b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/table/zyfra-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableModule } from 'primeng/table';\nimport { ZyfraTableComponent } from './zyfra-table.component';\nimport { ZyfraTableHeaderCheckboxComponent } from './table-header-checkbox/table-header-checkbox.component';\nimport { ZyfraTableCheckboxComponent } from './table-checkbox/zyfra-table-checkbox.component';\nimport { ZyfraSortableColumnDirective } from './directives/sortable-column.directive';\nimport { ZyfraSortIconComponent } from './sort-icon/sort-icon.component';\nimport { ZyfraTableColumnFilterComponent } from './table-column-filter/table-column-filter.component';\nimport { ZyfraEditableColumnDirective } from './directives/editable-column.directive';\nimport { ZyfraCellEditorComponent } from './cell-editor/cell-editor.component';\nimport { ZyfraEditableRowDirective } from './directives/editable-row.directive';\nimport { ZyfraInitEditableRowDirective } from './directives/init-editable-row.directive';\nimport { ZyfraSaveEditableRowDirective } from './directives/save-editable-row.directive';\nimport { ZyfraCancelEditableRowDirective } from './directives/cancel-editable-row.directive';\nimport { ZyfraFrozenColumnDirective } from './directives/frozen-column.directive';\nimport { ZyfraResizableColumnDirective } from './directives/resizable-column.directive';\nimport { ZyfraReordableRowDirective } from './directives/reordable-row.directive';\nimport { ZyfraReordableRowHandlerDirective } from './directives/reordable-row-handler.directive';\nimport { ZyfraSelectableRowDirective } from './directives/selectable-row.directive';\nimport { ZyfraRowGroupHeaderDirective } from './directives/row-group-header.directive';\nimport { ZyfraReordableColumnDirective } from './directives/reordable-column.directive';\nimport { ZyfraRowTogglerComponent } from './row-toggler/row-toggler.component';\nimport { ZyfraRowDirective } from './directives/row.directive';\nimport { ZyfraTableTemplateDirective } from './directives/table-template.directive';\nimport {ZyfraSearchCellComponent} from \"./search-cell/search-cell.component\";\n\n@NgModule({\n  declarations: [\n    ZyfraTableComponent,\n    ZyfraTableHeaderCheckboxComponent,\n    ZyfraTableCheckboxComponent,\n    ZyfraSortableColumnDirective,\n    ZyfraSortIconComponent,\n    ZyfraTableColumnFilterComponent,\n    ZyfraEditableColumnDirective,\n    ZyfraCellEditorComponent,\n    ZyfraEditableRowDirective,\n    ZyfraInitEditableRowDirective,\n    ZyfraSaveEditableRowDirective,\n    ZyfraCancelEditableRowDirective,\n    ZyfraFrozenColumnDirective,\n    ZyfraResizableColumnDirective,\n    ZyfraReordableRowDirective,\n    ZyfraReordableRowHandlerDirective,\n    ZyfraSelectableRowDirective,\n    ZyfraRowGroupHeaderDirective,\n    ZyfraReordableColumnDirective,\n    ZyfraTableTemplateDirective,\n    ZyfraRowTogglerComponent,\n    ZyfraRowDirective,\n    ZyfraSearchCellComponent\n  ],\n  imports: [\n    CommonModule,\n    TableModule,\n  ],\n  exports: [\n    ZyfraTableComponent,\n    ZyfraTableHeaderCheckboxComponent,\n    ZyfraTableCheckboxComponent,\n    ZyfraSortableColumnDirective,\n    ZyfraSortIconComponent,\n    ZyfraTableColumnFilterComponent,\n    ZyfraEditableColumnDirective,\n    ZyfraCellEditorComponent,\n    ZyfraEditableRowDirective,\n    ZyfraInitEditableRowDirective,\n    ZyfraSaveEditableRowDirective,\n    ZyfraCancelEditableRowDirective,\n    ZyfraFrozenColumnDirective,\n    ZyfraResizableColumnDirective,\n    ZyfraReordableRowDirective,\n    ZyfraReordableRowHandlerDirective,\n    ZyfraSelectableRowDirective,\n    ZyfraReordableColumnDirective,\n    ZyfraRowTogglerComponent,\n    ZyfraRowGroupHeaderDirective,\n    ZyfraTableTemplateDirective,\n    ZyfraRowDirective,\n    ZyfraSearchCellComponent\n  ]\n})\nexport class ZyfraTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraCancelEditableRowDirective"
                        },
                        {
                            "name": "ZyfraCellEditorComponent"
                        },
                        {
                            "name": "ZyfraEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraEditableRowDirective"
                        },
                        {
                            "name": "ZyfraFrozenColumnDirective"
                        },
                        {
                            "name": "ZyfraInitEditableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableColumnDirective"
                        },
                        {
                            "name": "ZyfraReordableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableRowHandlerDirective"
                        },
                        {
                            "name": "ZyfraResizableColumnDirective"
                        },
                        {
                            "name": "ZyfraRowDirective"
                        },
                        {
                            "name": "ZyfraRowGroupHeaderDirective"
                        },
                        {
                            "name": "ZyfraRowTogglerComponent"
                        },
                        {
                            "name": "ZyfraSaveEditableRowDirective"
                        },
                        {
                            "name": "ZyfraSearchCellComponent"
                        },
                        {
                            "name": "ZyfraSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraSortIconComponent"
                        },
                        {
                            "name": "ZyfraSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableColumnFilterComponent"
                        },
                        {
                            "name": "ZyfraTableComponent"
                        },
                        {
                            "name": "ZyfraTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraCancelEditableRowDirective"
                        },
                        {
                            "name": "ZyfraCellEditorComponent"
                        },
                        {
                            "name": "ZyfraEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraEditableRowDirective"
                        },
                        {
                            "name": "ZyfraFrozenColumnDirective"
                        },
                        {
                            "name": "ZyfraInitEditableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableColumnDirective"
                        },
                        {
                            "name": "ZyfraReordableRowDirective"
                        },
                        {
                            "name": "ZyfraReordableRowHandlerDirective"
                        },
                        {
                            "name": "ZyfraResizableColumnDirective"
                        },
                        {
                            "name": "ZyfraRowDirective"
                        },
                        {
                            "name": "ZyfraRowGroupHeaderDirective"
                        },
                        {
                            "name": "ZyfraRowTogglerComponent"
                        },
                        {
                            "name": "ZyfraSaveEditableRowDirective"
                        },
                        {
                            "name": "ZyfraSearchCellComponent"
                        },
                        {
                            "name": "ZyfraSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraSortIconComponent"
                        },
                        {
                            "name": "ZyfraSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableColumnFilterComponent"
                        },
                        {
                            "name": "ZyfraTableComponent"
                        },
                        {
                            "name": "ZyfraTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTableTemplateDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabMenuModule",
            "id": "module-ZyfraTabMenuModule-98c8c112624044ed5c2ee800c40befee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { SlideMenuModule } from 'primeng/slidemenu';\nimport { ZyfraTabMenuComponent } from './zyfra-tab-menu.component';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { ZyfraTooltipModule } from '../tooltip';\n\n@NgModule({\n  declarations: [ZyfraTabMenuComponent],\n  imports: [CommonModule, TooltipModule, TabMenuModule, OverlayPanelModule, SlideMenuModule, ZyfraTooltipModule],\n  exports: [ZyfraTabMenuComponent],\n})\nexport class ZyfraTabMenuModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ZyfraTooltipModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTabViewModule",
            "id": "module-ZyfraTabViewModule-15d7978d26fed8109681b029a1f66829",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tab-view/zyfra-tab-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { TabViewModule } from 'primeng/tabview';\nimport { CommonModule } from '@angular/common';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZyfraTabViewComponent } from './zyfra-tab-view/zyfra-tab-view.component';\nimport { ZyfraTabPanelComponent } from './zyfra-tab-panel/zyfra-tab-panel.component';\n\n@NgModule({\n  declarations: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n  imports: [CommonModule, OverlayPanelModule, TabViewModule, TooltipModule],\n  exports: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\n})\nexport class ZyfraTabViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTabPanelComponent"
                        },
                        {
                            "name": "ZyfraTabViewComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTextareaModule",
            "id": "module-ZyfraTextareaModule-7b57aa344af1cb9917640978884272b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/textarea/zyfra-textarea.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraTextareaComponent } from './zyfra-textarea.component';\n\n@NgModule({\n  declarations: [ZyfraTextareaComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextareaModule],\n  exports: [ZyfraTextareaComponent],\n})\nexport class ZyfraTextareaModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTextareaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToastModule",
            "id": "module-ZyfraToastModule-a950e2c1f132faec1ba17ac027588496",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toast/zyfra-toast.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ToastModule } from 'primeng/toast';\nimport { RippleModule } from 'primeng/ripple';\nimport { ZyfraToastComponent } from './zyfra-toast.component';\n\n@NgModule({\n  declarations: [ZyfraToastComponent],\n  imports: [CommonModule, ToastModule, RippleModule, FormsModule],\n  exports: [ZyfraToastComponent],\n})\nexport class ZyfraToastModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToastComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraToggleButtonModule",
            "id": "module-ZyfraToggleButtonModule-dfbafc24fae96d513b9df44bebac00b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraToggleButtonComponent } from './zyfra-toggle-button.component';\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ZyfraToggleButtonComponent],\n  imports: [FormsModule, CommonModule, ToggleButtonModule],\n  exports: [ZyfraToggleButtonComponent],\n})\nexport class ZyfraToggleButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraToggleButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTooltipModule",
            "id": "module-ZyfraTooltipModule-ae2386ac95ee234a6f84319955adf9ec",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTooltipDirective } from './zyfra-tooltip.directive';\nimport { ZyfraTooltipComponent } from './zyfra-tooltip.component';\nimport { CommonModule } from '@angular/common';\nimport { ZyfraTooltipOverlayManager } from './zyfra-tooltip-overlay-manager.service';\nimport { CharLimitPipe } from '../@core/utils/chars-limit.pipe';\n\nconst EXPORTED_DECLARATIONS = [ZyfraTooltipDirective, ZyfraTooltipComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: [\n    ...EXPORTED_DECLARATIONS,\n    CharLimitPipe\n  ],\n  providers: [ZyfraTooltipOverlayManager],\n  entryComponents: [ZyfraTooltipComponent],\n})\nexport class ZyfraTooltipModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ZyfraTooltipOverlayManager"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CharLimitPipe"
                        },
                        {
                            "name": "ZyfraTooltipComponent"
                        },
                        {
                            "name": "ZyfraTooltipDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTooltipComponent"
                        },
                        {
                            "name": "ZyfraTooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeModule",
            "id": "module-ZyfraTreeModule-55b06e4b842f1e363847b7b43efa1e96",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree/zyfra-tree.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { ZyfraTreeComponent } from './zyfra-tree.component';\nimport { TreeModule } from 'primeng/tree';\n\n@NgModule({\n  declarations: [\n    ZyfraTreeComponent,\n  ],\n  imports: [\n    TreeModule,\n  ],\n  exports: [\n    ZyfraTreeComponent,\n  ]\n})\nexport class ZyfraTreeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTreeTableModule",
            "id": "module-ZyfraTreeTableModule-bbbd18d917025e3aa04036333fa7b859",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tree-table/zyfra-tree-table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TreeTableModule } from 'primeng/treetable';\n\nimport { ZyfraTreeTableComponent } from './tree-table.component';\nimport { ZyfraTreeTableBaseRowDirective } from './directives/tree-table-base-row.directive';\nimport { ZyfraTreeTableSelectableRowDirective } from './directives/tree-table-selectable-row.directive';\nimport { ZyfraTreeTableTogglerComponent } from './tree-table-toggler/tree-table-toggler.component';\nimport { ZyfraTreeTableCheckboxComponent } from './tree-table-checkbox/tree-table-checkbox.component';\nimport { ZyfraTreeTableHeaderCheckboxComponent } from './tree-table-header-checkbox/tree-table-header-checkbox.component';\nimport { ZyfraTreeTableSortableColumnDirective } from './directives/tree-table-sortable-column.directive';\nimport { ZyfraTreeTableSortIconComponent } from './tree-table-sort-icon/tree-table-sort-icon.component';\nimport { ZyfraTreeTableCellEditorComponent } from './tree-table-cell-editor/tree-table-cell-editor.component';\nimport { ZyfraTreeTableEditableColumnDirective } from './directives/tree-table-editable-column.directive';\nimport { ZyfraTreeTableReorderableColumnDirective } from './directives/tree-table-reorderable-column.directive';\nimport { ZyfraTreeTableTemplateDirective } from './directives/tree-table-template.directive';\nimport { ZyfraTreeTableRowDirective } from './directives/tree-table-row.directive';\nimport { ZyfraTreeTableSearchCellComponent } from './tree-table-search-cell/tree-table-search-cell.component';\n\n@NgModule({\n  declarations: [\n    ZyfraTreeTableComponent,\n    ZyfraTreeTableBaseRowDirective,\n    ZyfraTreeTableRowDirective,\n    ZyfraTreeTableSelectableRowDirective,\n    ZyfraTreeTableTogglerComponent,\n    ZyfraTreeTableCheckboxComponent,\n    ZyfraTreeTableHeaderCheckboxComponent,\n    ZyfraTreeTableSortableColumnDirective,\n    ZyfraTreeTableSortIconComponent,\n    ZyfraTreeTableCellEditorComponent,\n    ZyfraTreeTableEditableColumnDirective,\n    ZyfraTreeTableReorderableColumnDirective,\n    ZyfraTreeTableTemplateDirective,\n    ZyfraTreeTableSearchCellComponent,\n  ],\n  imports: [CommonModule, TreeTableModule],\n  exports: [\n    ZyfraTreeTableComponent,\n    ZyfraTreeTableBaseRowDirective,\n    ZyfraTreeTableRowDirective,\n    ZyfraTreeTableSelectableRowDirective,\n    ZyfraTreeTableTogglerComponent,\n    ZyfraTreeTableCheckboxComponent,\n    ZyfraTreeTableHeaderCheckboxComponent,\n    ZyfraTreeTableSortableColumnDirective,\n    ZyfraTreeTableSortIconComponent,\n    ZyfraTreeTableCellEditorComponent,\n    ZyfraTreeTableEditableColumnDirective,\n    ZyfraTreeTableReorderableColumnDirective,\n    ZyfraTreeTableTemplateDirective,\n    ZyfraTreeTableSearchCellComponent,\n  ],\n})\nexport class ZyfraTreeTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTreeTableBaseRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableCellEditorComponent"
                        },
                        {
                            "name": "ZyfraTreeTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableComponent"
                        },
                        {
                            "name": "ZyfraTreeTableEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableReorderableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSearchCellComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSortIconComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTemplateDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTogglerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTreeTableBaseRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableCellEditorComponent"
                        },
                        {
                            "name": "ZyfraTreeTableCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableComponent"
                        },
                        {
                            "name": "ZyfraTreeTableEditableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableHeaderCheckboxComponent"
                        },
                        {
                            "name": "ZyfraTreeTableReorderableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSearchCellComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSelectableRowDirective"
                        },
                        {
                            "name": "ZyfraTreeTableSortIconComponent"
                        },
                        {
                            "name": "ZyfraTreeTableSortableColumnDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTemplateDirective"
                        },
                        {
                            "name": "ZyfraTreeTableTogglerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraTriCheckBoxModule",
            "id": "module-ZyfraTriCheckBoxModule-9e230312c00a7d378a89240cdb898e9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ZyfraTriCheckboxComponent } from './zyfra-tri-checkbox.component';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\n\n@NgModule({\n  declarations: [ZyfraTriCheckboxComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TriStateCheckboxModule],\n  exports: [ZyfraTriCheckboxComponent],\n})\nexport class ZyfraTriCheckBoxModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ZyfraTriCheckboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ZyfraUiRootModule",
            "id": "module-ZyfraUiRootModule-f8753356d0c284cf332d03130a7d3c08",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/components/src/lib/root/zyfra-ui-root.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\n\n@NgModule({})\nexport class ZyfraUiRootModule {\n  // do nothing,\n  // override if need root providers for components\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Absolute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AbsoluteMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  rowExpand: action('rowExpand'),\n  rowCollapse: action('rowCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  rowSelect: action('rowSelect'),\n  rowUnselect: action('rowUnselect'),\n  selectionChange: action('selectionChange'),\n  headerCheckboxToggle: action('headerCheckboxToggle'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  elementChange: action('elementChange'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onNodeSelect: action('onNodeSelect'),\n  onNodeUnselect: action('onNodeUnselect'),\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\n}"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Animation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AnimationSpeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1'},\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\n  {label: 'Наименование ячейки 3 длиннее остальных'},\n  {label: 'Наименование ячейки 4'},\n  {label: 'Наименование ячейки 5'},\n]"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BasicTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "basicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "BasicWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Binary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "bottomMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\n  {\n    title: 'Избранное',\n    icon: 'social-star'\n  },\n  {\n    title: 'Поиск',\n    icon: 'sort-zoom-in'\n  },\n  {\n    title: 'Служба техподдежки',\n    icon: 'alerts-pulse'\n  },\n]"
            },
            {
                "name": "ButtonBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CALENDAR_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\n  multi: true,\n}"
            },
            {
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Provider",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n}"
            },
            {
                "name": "CheckboxWithFormControlComponentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `\n    <div><zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox></div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})</div>\n    <br>\n    <br>\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n    toggleStatus(): void {\n      if (this.fControl.disabled) {\n        this.fControl.enable();\n      } else {\n        this.fControl.disable();\n      }\n    },\n    toggleValue(): void {\n      this.fControl.setValue(!this.fControl.value);\n    },\n  },\n})"
            },
            {
                "name": "cities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryCity[]",
                "defaultValue": "[\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n]"
            },
            {
                "name": "Closable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ColGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "convertToNode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\n  let children;\n  const node: TreeNode = {\n    label: item.label,\n    data: item,\n    key: generateKey(),\n    parent\n  };\n  if (item.items) {\n    children = item.items.map(childItem => {\n      return convertToNode(childItem, node);\n    });\n  }\n  node.children = children;\n  return node;\n}"
            },
            {
                "name": "Currency",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CustomTemplate.bind({})"
            },
            {
                "name": "Customers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Customer[]",
                "defaultValue": "[\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n]"
            },
            {
                "name": "CustomIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\n  component: ZyfraCalendarComponent,\n  props: args,\n  template: `\n  <zyfra-custom-calendar [placeholder]='placeholder' [label]='label' [times]='times' [selectedTime]='selectedTime'></zyfra-custom-calendar>\n  `,\n})"
            },
            {
                "name": "CustomTemplateWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CustomWithBadge.bind({})"
            },
            {
                "name": "CustomTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomWithBadge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChange($event)\"\n              (onClose)=\"onClose($event)\"\n              (activeIndexChange)=\"activeIndexChange($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DangerMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Date",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DateFormat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Decimal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DEFAULT_SETTINGS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SettingsConfig",
                "defaultValue": "{\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n}"
            },
            {
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ToolbarConfig",
                "defaultValue": "{\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}"
            },
            {
                "name": "DefaultDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultRelativeMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'plus-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const"
            },
            {
                "name": "defaultTransition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  open: {\n    duration: 300,\n    delay: 500,\n    timingFunction: 'ease-in',\n  },\n  close: {\n    duration: 300,\n    delay: 300,\n    timingFunction: 'ease-out',\n  }\n}"
            },
            {
                "name": "directionMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<string, RelativeDateDirectionId>([\n  ['-', 'minus'],\n  ['+', 'plus'],\n])"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledDays",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "Edit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditCell",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "en",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  \"dayNames\": [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  \"dayNamesShort\": [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ],\n  \"dayNamesMin\": [\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\"\n  ],\n  \"monthNames\": [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  \"monthNamesShort\": [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  \"dateFormat\": \"mm/dd/yy\",\n  \"today\": \"Today\",\n  \"weekHeader\": \"Wk\",\n  \"clear\": \"Clear\"\n}"
            },
            {
                "name": "EnlargedSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Expand",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EXPORTED_DECLARATIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[ZyfraTooltipDirective, ZyfraTooltipComponent]"
            },
            {
                "name": "ExtraItemTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "ExtraTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ExtraItemTemplate.bind({})"
            },
            {
                "name": "FileSystem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    data: {\n      name: 'Applications',\n      size: '200mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Angular',\n          size: '25mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'angular.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'cli.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'mobile.app',\n              size: '5mb',\n              type: 'Application'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'editor.app',\n          size: '25mb',\n          type: 'Application'\n        }\n      },\n      {\n        data: {\n          name: 'settings.app',\n          size: '50mb',\n          type: 'Application'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Cloud',\n      size: '20mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'backup-1.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      },\n      {\n        data: {\n          name: 'backup-2.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Desktop',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'note-meeting.txt',\n          size: '50kb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'note-todo.txt',\n          size: '100kb',\n          type: 'Text'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Documents',\n      size: '75kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Work',\n          size: '55kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Expenses.doc',\n              size: '30kb',\n              type: 'Document'\n            }\n          },\n          {\n            data: {\n              name: 'Resume.doc',\n              size: '25kb',\n              type: 'Resume'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Home',\n          size: '20kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Invoices',\n              size: '20kb',\n              type: 'Text'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Downloads',\n      size: '25mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Spanish',\n          size: '10mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'tutorial-a1.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          },\n          {\n            data: {\n              name: 'tutorial-a2.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Travel',\n          size: '15mb',\n          type: 'Text'\n        },\n        children: [\n          {\n            data: {\n              name: 'Hotel.pdf',\n              size: '10mb',\n              type: 'PDF'\n            }\n          },\n          {\n            data: {\n              name: 'Flight.pdf',\n              size: '5mb',\n              type: 'PDF'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Main',\n      size: '50mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'bin',\n          size: '50kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'etc',\n          size: '100kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'var',\n          size: '100kb',\n          type: 'Link'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Other',\n      size: '5mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'todo.txt',\n          size: '3mb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'logo.png',\n          size: '2mb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Pictures',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'barcelona.jpg',\n          size: '90kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'primeng.png',\n          size: '30kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'prime.jpg',\n          size: '30kb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Videos',\n      size: '1500mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'primefaces.mkv',\n          size: '1000mb',\n          type: 'Video'\n        }\n      },\n      {\n        data: {\n          name: 'intro.avi',\n          size: '500mb',\n          type: 'Video'\n        }\n      }\n    ]\n  }\n]"
            },
            {
                "name": "Filter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Filter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FilterSortSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "flatNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\n}"
            },
            {
                "name": "FolderMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "FormControlRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormControlTemplate.bind({})"
            },
            {
                "name": "FormControlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\n  template: `\n<div class=\"p-radiobutton-group\">\n    <ng-container *ngFor=\"let item of items\">\n      <zyfra-radio-button\n        [name]=\"name\"\n        [styleClass]=\"styleClass\"\n        [label]=\"item.label\"\n        [value]=\"item.value\"\n        [disabled]=\"disabled\"\n        [formControl]=\"control\"\n        (onClick)=\"onClick($event)\"\n        (ngModelChange)=\"ngModelChange($event)\"\n        (onFocus)=\"onFocus($event)\"\n        (onBlur)=\"onBlur($event)\"\n      ></zyfra-radio-button>\n    <br/>\n  </ng-container>\n  </div>\n  ` + formControlTemplateChunk,\n  props: {\n    ...args,\n    items: items,\n    disabledPink: true,\n    ngModelChange: () => {},\n    control: new FormControl('red', [Validators.required]),\n  },\n})"
            },
            {
                "name": "formControlTemplateChunk",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<div style=\"font-family: var(--fontFamily);\">\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\n    <br>\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\n    <br>\n    </div>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\n`"
            },
            {
                "name": "fromRubricatorNodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\n  const rubricatorNodes = [];\n  letters.forEach(letter => {\n    rubricatorNodes.push({\n      key: letter,\n      label: letter,\n      data: { label: letter },\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\n    });\n  });\n  return rubricatorNodes;\n}"
            },
            {
                "name": "FrozenRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "generateKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
            },
            {
                "name": "getPath",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\n  acc.push(node.parent);\n  return node.parent\n    ? getPath(node.parent, acc)\n    : acc.reverse();\n}"
            },
            {
                "name": "Group",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GroupPanels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "GroupPanelTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
            },
            {
                "name": "GroupWithContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateWithContent.bind({})"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "htmlContentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\n  content\n`"
            },
            {
                "name": "htmlTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\n  <div>\n    <p>content</p>\n    <ul>\n      <li>item 1 (for example)</li>\n      <li><b>item 2</b></li>\n    </ul>\n  </div>\n`"
            },
            {
                "name": "htmlTopContentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SafeHtml",
                "defaultValue": "`\n  content position top\n`"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IconDefs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-close-all\",\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-logo-green\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-asterisk\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-day\",\n            \"date-history\",\n            \"date-hour\",\n            \"date-minute\",\n            \"date-month\",\n            \"date-now\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-second\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\",\n            \"date-year\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-mode\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
            },
            {
                "name": "IconsSet",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SelectItem[]",
                "defaultValue": "[]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'red',\n    value: 'red',\n  },\n  {\n    label: 'black',\n    value: 'black',\n  },\n  {\n    label: 'blue',\n    value: 'blue',\n  },\n  {\n    label: 'pink',\n    value: 'pink',\n  },\n  {\n    label: 'Не заполнено',\n    value: null,\n  },\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\n  { separator: true },\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder ',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "generateTimeArray('HH:mm:ss')"
            },
            {
                "name": "itemsUrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1', url: '#' },\n  { label: 'Название цеха 2', url: '#' },\n  { label: 'Название цеха 3', url: '#' },\n  { label: 'Название цеха 4', url: '#' }\n]"
            },
            {
                "name": "ManyItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MatchPattern",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'(T|\\\\*)?(\\\\+|\\\\-)?(\\\\d+)?(Y|M|d|h|m|s)?'"
            },
            {
                "name": "MenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RelativeDateMenuItems",
                "defaultValue": "getDefaultRelativeDateMenuItems()"
            },
            {
                "name": "Mini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MiniRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "MultiMessages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultipleSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "NoIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoValueDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnlyTime",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OverflowTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Pagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "PaginationTemplate.bind({})"
            },
            {
                "name": "PaginationTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [paginator]=\"paginator\"\n      [rows]=\"rows\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      (page)=\"page($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n  },\n})"
            },
            {
                "name": "periodMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<string, RelativeDatePeriodId>([\n  ['Y', 'year'],\n  ['M', 'month'],\n  ['d', 'day'],\n  ['h', 'hour'],\n  ['m', 'minute'],\n  ['s', 'second'],\n])"
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PhoneExt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Position",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PositionTop",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Products",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Product[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
            },
            {
                "name": "ProductsOrdersSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProductOrder[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n]"
            },
            {
                "name": "ProductsSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Product[]",
                "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Range",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "renderDirectionMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<RelativeDateDirectionId, string>([\n  ['minus', '-'],\n  ['plus', '+'],\n])"
            },
            {
                "name": "renderPeriodMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<RelativeDatePeriodId, string>([\n  ['year', 'Y'],\n  ['month', 'M'],\n  ['day', 'd'],\n  ['hour', 'h'],\n  ['minute', 'm'],\n  ['second', 's'],\n])"
            },
            {
                "name": "renderTimeMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<RelativeDateTimeId, string>([\n  ['current', '*'],\n  ['midnight', 'T'],\n])"
            },
            {
                "name": "Reorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Reorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Resize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RowGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ru",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  \"dayNames\": [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\"\n  ],\n  \"dayNamesShort\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"dayNamesMin\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"monthNames\": [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\"\n  ],\n  \"monthNamesShort\": [\n    \"Янв\",\n    \"Февр\",\n    \"Март\",\n    \"Апр\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Авг\",\n    \"Сент\",\n    \"Окт\",\n    \"Ноябрь\",\n    \"Дек\"\n  ],\n  \"dateFormat\": \"dd.mm.yyyy\",\n  \"today\": \"Сегодня\",\n  \"weekHeader\": \"Нд\",\n  \"clear\": \"Очистить\"\n}"
            },
            {
                "name": "RubricatorMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Sales",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Sale[]",
                "defaultValue": "[\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n]"
            },
            {
                "name": "Sales",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\n    expanded: true,\n    children: [\n      {\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\n        expanded: true,\n        children: [\n          {\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\n          },\n          {\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\n          }\n        ]\n      },\n      {\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\n    children: [\n      {\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\n      },\n      {\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\n    children: [\n      {\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\n      },\n      {\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\n    children: [\n      {\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\n      },\n      {\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\n    children: [\n      {\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\n    children: [\n      {\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\n    children: [\n      {\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\n      },\n      {\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\n    children: [\n      {\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\n      },\n      {\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\n    children: [\n      {\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\n      },\n      {\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\n      }\n    ]\n  },\n  {\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\n    children: [\n      {\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\n      },\n      {\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\n      }\n    ]\n  }\n]"
            },
            {
                "name": "Scroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollHorizontalAndVertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollVertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ScrollVirtual",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Selection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SelectionTemplate.bind({})"
            },
            {
                "name": "Selection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectionTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [selectionMode]=\"selectionMode\"\n      [metaKeySelection]=\"metaKeySelection\"\n      [stripedMode]=\"stripedMode\"\n      (selectionChange)=\"selectionChange($event)\"\n      (rowSelect)=\"rowSelect($event)\"\n      (rowUnselect)=\"rowUnselect($event)\"\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 32px\">\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\n          </th>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\n          <td>\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\n          </td>\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    selectionChange: consoleLogAction('selectionChange'),\n    headerCheckboxToggle: consoleLogAction('headerCheckboxToggle'),\n    rowUnselect: (event): void => actions.rowUnselect({ data: event.data, ...event }),\n    rowSelect: (event): void => actions.rowSelect({ data: event.data, ...event }),\n  },\n})"
            },
            {
                "name": "SerialNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Simple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "simpleMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
            },
            {
                "name": "simpleMenuItemsWithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MenuItem[]",
                "defaultValue": "[\n  {\n    label: 'Наименование вкладки сорок четыре символа + 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
            },
            {
                "name": "SimpleMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleRadio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SimpleTemplate.bind({})"
            },
            {
                "name": "SimpleSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SimpleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRadioButtonComponent<string>>",
                "defaultValue": "(args) => ({\n  template: `\n  <div class=\"p-radiobutton-group\">\n    <ng-container *ngFor=\"let item of items\">\n      <zyfra-radio-button\n        [name]=\"name\"\n        [styleClass]=\"styleClass\"\n        [label]=\"item.label\"\n        [value]=\"item.value\"\n        [disabled]=\"disabled\"\n        [(ngModel)]=\"model\"\n        (onClick)=\"onClick($event)\"\n        (ngModelChange)=\"ngModelChange($event)\"\n        (onFocus)=\"onFocus($event)\"\n        (onBlur)=\"onBlur($event)\"\n      ></zyfra-radio-button>\n    <br/>\n  </ng-container>\n  </div>\n`,\n  props: {\n    ...args,\n    items: items,\n    ngModelChange: () => {},\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n  },\n})"
            },
            {
                "name": "SimpleWithContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateWithContent.bind({})"
            },
            {
                "name": "SimpleWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Simple.bind({})"
            },
            {
                "name": "SingleGroupPanel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "GroupPanelTemplate.bind({})"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sort",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sortByLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(a: TreeNode, b: TreeNode): number => {\n  if (a.label > b.label) {\n    return 1;\n  }\n  if (a.label < b.label) {\n    return -1;\n  }\n  return 0;\n}"
            },
            {
                "name": "SortMultiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SSN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "State",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/State.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Status",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Style",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "subItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    badge: 'warning',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1 длиннее остальных',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\n            icon: 'zyfra-icon files-file',\n            badge: 'danger',\n            badgeStyleClass: 'p-badge-dot',\n            routerLink: ['/page1']\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    badge: 'info',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2 длиннее остальных',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "SubItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "BasicTemplate.bind({})"
            },
            {
                "name": "subItemsRubricator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuItem[]",
                "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'A-Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Д-Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Б-Ячейка третьего уровня 1',\n            icon: 'zyfra-icon files-file',\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'В-Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ц-Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Э-Ячейка пятого уровня 2',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ж-Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'М-Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'У-Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuccessMini",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraBreadcrumbComponent>",
                "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAutoCompleteComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-auto-complete\n      [ngModel]=\"value\"\n      [placeholder]=\"placeholder\"\n      [label]=\"label\"\n      [suggestions]=\"suggestions\"\n      [field]=\"field\"\n      [scrollHeight]=\"scrollHeight\"\n      [dropdown]=\"dropdown\"\n      [multiple]=\"multiple\"\n      [dropdownIcon]=\"dropdownIcon\"\n      [minLength]=\"minLength\"\n      [delay]=\"delay\"\n      [completeOnFocus]=\"completeOnFocus\"\n      [style]=\"style\"\n      [inputStyle]=\"inputStyle\"\n      [panelStyle]=\"panelStyle\"\n      [styleClass]=\"styleClass\"\n      [inputStyleClass]=\"inputStyleClass\"\n      [panelStyleClass]=\"panelStyleClass\"\n      [inputId]=\"inputId\"\n      [name]=\"name\"\n      [optionGroupLabel]=\"optionGroupLabel\"\n      [group]=\"group\"\n      [optionGroupChildren]=\"optionGroupChildren\"\n      [readonly]=\"readonly\"\n      [disabled]=\"disabled\"\n      [maxlength]=\"maxlength\"\n      [size]=\"size\"\n      [appendTo]=\"appendTo\"\n      [tabindex]=\"tabindex\"\n      [dataKey]=\"dataKey\"\n      [autoHighlight]=\"autoHighlight\"\n      [type]=\"type\"\n      [showEmptyMessage]=\"showEmptyMessage\"\n      [emptyMessage]=\"emptyMessage\"\n      [required]=\"required\"\n      [autofocus]=\"autofocus\"\n      [forceSelection]=\"forceSelection\"\n      [dropdownMode]=\"dropdownMode\"\n      [baseZIndex]=\"baseZIndex\"\n      [autoZIndex]=\"autoZIndex\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [hideTransitionOptions]=\"hideTransitionOptions\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [unique]=\"unique\"\n      [autocomplete]=\"autocomplete\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      (completeMethod)=\"completeMethod($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onKeyUp)=\"onKeyUp($event)\"\n      (onSelect)=\"onSelect($event)\"\n      (onUnselect)=\"onUnselect($event)\"\n      (onDropdownClick)=\"onDropdownClick($event)\"\n      (onClear)=\"onClear($event)\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n    >\n      <ng-template zyfraTemplate=\"item\" let-obj>{{ obj.name}} ({{obj.code}})</ng-template>\n      <ng-template zyfraTemplate=\"selectedItem\" let-obj>{{ obj.name}} - {{obj.code}}</ng-template>\n    </zyfra-auto-complete>\n  `,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethod(event): void {\n      const query = event.query.toLowerCase();\n      this.suggestions = this.countries.filter(country => country.name.toLowerCase().indexOf(query) > -1);\n      action('completeMethod')(event);\n    },\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onKeyUp: action('onKeyUp'),\n    onSelect: action('onSelect'),\n    onUnselect: action('onUnselect'),\n    onDropdownClick: action('onDropdownClick'),\n    onClear: action('onClear'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraCheckboxComponent>",
                "defaultValue": "(args) => ({\n  template: `<div>\n    <zyfra-checkbox\n      [(model)]=\"model\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [label]=\"label\"\n      [disabled]=\"disabled\"\n      [binary]=\"binary\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [labelStyleClass]=\"labelStyleClass\"\n      [checkboxIcon]=\"checkboxIcon\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      (modelChange)=\"modelChange($event)\"\n    ></zyfra-checkbox>\n    </div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{model === null ? 'null' : model}})</div>\n  `,\n  props: {\n    ...args,\n    modelChange: action('modelChange'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraChipComponent>",
                "defaultValue": "(args: ZyfraChipComponent) => ({\n  component: ZyfraChipComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraConfirmDialogComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"confirmDialog.onClick($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-confirm-dialog\n      #confirmDialog\n      [message]=\"message\"\n      [icon]=\"icon\"\n      [header]=\"header\"\n      [acceptLabel]=\"acceptLabel\"\n      [rejectLabel]=\"rejectLabel\"\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n      [acceptMessages]=\"acceptMessages\"\n      [position]=\"position\"\n      [baseZIndex]=\"baseZIndex\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-confirm-dialog>\n  `,\n  props: {\n    ...args,\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDialogComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"dialog.onInit($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-dialog\n      #dialog\n      [header]=\"header\"\n      [htmlTemplate]=\"htmlTemplate\"\n      [position]=\"position\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n      (onResizeInit)=\"onResizeInit($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n      (onDragEnd)=\"onDragEnd($event)\"\n      (onMaximize)=\"onMaximize($event)\"\n    ></zyfra-dialog>\n  `,\n  props: {\n    ...args,\n    onResizeInit: action('onResizeInit'),\n    onResizeEnd: action('onResizeEnd'),\n    onDragEnd: action('onDragEnd'),\n    onMaximize: action('onMaximize'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDropdownComponent>",
                "defaultValue": "args => ({\n  component: ZyfraDropdownComponent,\n  template: `<div>\n    <zyfra-dropdown\n      [(ngModel)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [mini]=\"mini\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n      (onChange)=\"onChange($event)\"\n      (onClick)=\"onClick($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-dropdown>\n    </div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\n      <p>Selected value:</p>\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\n    </div>\n  `,\n  props: {\n    ...args,\n    onChange: event => action('onChange')({ value: event.value, ...event }),\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDatepickerComponent>",
                "defaultValue": "args => ({\n  component: ZyfraDatepickerComponent,\n  template: `\n  <zyfra-datepicker\n  [ngModel]=\"model\"\n  (ngModelChange)=\"$event\"\n  [dateFormat]=\"dateFormat\"\n  [timeFormat]=\"timeFormat\"\n  [returnFormatValue]=\"returnFormatValue\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [required]=\"required\"\n  [label]=\"label\"\n  [spanClass]=\"spanClass\"\n  [locale]=\"locale\"\n  [showClear]=\"showClear\"\n  [showDate]=\"showDate\"\n  [showTime]=\"showTime\"\n  [monthNavigator]=\"monthNavigator\"\n  [yearNavigator]=\"yearNavigator\"\n  [yearRange]=\"yearRange\"\n  [showCalendarBtn]=\"showCalendarBtn\"\n  [calendarBtnLabel]=\"calendarBtnLabel\"\n  [numberOfMonths]=\"numberOfMonths\"\n  [selectionMode]=\"selectionMode\"\n  [disabledDates]=\"disabledDates\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  >\n  </zyfra-datepicker>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponents>",
                "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDynamicDialogComponent>",
                "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputComponent,\n  props: args,\n  template: `\n<zyfra-input\n  [id]=\"id\"\n  [type]=\"type\"\n  [(ngModel)]=\"value\"\n  [disabled]=\"disabled\"\n  [placeholder]=\"placeholder\"\n  [tooltip]=\"tooltip\"\n  [tooltipPosition]=\"tooltipPosition\"\n  [label]=\"label\"\n></zyfra-input>\n`\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputMaskComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputMaskComponent,\n  template: `\n  <zyfra-input-mask\n    [label]=\"label\"\n    [(ngModel)]=\"ngModel\"\n    [mask]=\"mask\"\n    [slotChar]=\"slotChar\"\n    [placeholder]=\"placeholder\"\n    (onBlur)=\"onBlur($event)\"\n    (onFocus)=\"onFocus($event)\"\n    (onComplete)=\"onComplete($event)\"\n    (onKeydown)=\"onKeydown($event)\"\n    (onInput)=\"onInput($event)\"\n></zyfra-input-mask>\n  `,\n  props: {\n    ...args,\n    onBlur: action('onBlur'),\n    onFocus: action('onFocus'),\n    onComplete: action('onComplete'),\n    onKeydown: action('onKeydown'),\n    onInput: action('onInput'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputNumberComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputNumberComponent,\n  template: `\n    <zyfra-input-number\n      [(ngModel)]=\"value\"\n      [showButtons]=\"showButtons\"\n      [mode]=\"mode\"\n      [currency]=\"currency\"\n      [label]=\"label\"\n      [placeholder]=\"placeholder\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onInput)=\"onInput($event)\"\n    ></zyfra-input-number>\n  `,\n  props: {\n    ...args,\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onInput: action('onInput'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraInputSwitchComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraInputSwitchComponent,\n  props: args,\n  template: `\n<zyfra-input-switch [(ngModel)]=\"checked\"></zyfra-input-switch>`,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <div>\n      <zyfra-button\n        label=\"Toggle\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.toggle()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Open\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.open()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Close\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.close()\"\n      ></zyfra-button>\n    </div>\n\n    <br>\n\n    <div style=\"height: 650px; display: flex; position: relative;\">\n      <zyfra-menu-applications\n        #menu\n        [transition]=\"transition\"\n        [tooltipDelay]=\"tooltipDelay\"\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\n        [topMenuItems]=\"topMenuItems\"\n        [bottomMenuItems]=\"bottomMenuItems\"\n        [activeItem]=\"activeItem\"\n        (selectItem)=\"selectItem($event);\"\n        (toggleState)=\"toggleState($event)\"\n      ></zyfra-menu-applications>\n\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\n        <p>Some content</p>\n      </div>\n    </div>\n  `,\n  props: {\n    ...args,\n    activeItem: null,\n    toggleState: value => action('toggleState')({ value }),\n    selectItem(item: any): void {\n      action('selectItem')(item);\n\n      const isTopItem = this.topMenuItems.includes(item);\n\n      if (isTopItem) {\n        this.activeItem = item;\n      } else {\n        alert(JSON.stringify(item, null, 2));\n      }\n    }\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMessageComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraMessageComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPaginatorComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraPaginatorComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraPasswordComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraPasswordComponent,\n  template: `\n    <zyfra-password\n      [(ngModel)]='ngModel'\n      [toggleMask]='toggleMask'\n      [mediumRegex]='mediumRegex'\n      [strongRegex]='strongRegex'\n      [weakLabel]='weakLabel'\n      [mediumLabel]='mediumLabel'\n      [strongLabel]='strongLabel'\n      [label]='label'\n      [promptLabel]='promptLabel'\n      [required]='required'\n      [disabled]='disabled'>\n      (onBlur)=\"onBlur($event)\"\n      (onFocus)=\"onFocus($event)\"\n    ></zyfra-password>\n  `,\n  props: {\n    ...args,\n    onBlur: action('onBlur'),\n    onFocus: action('onFocus'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraProgressBarComponent>",
                "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                "defaultValue": "(args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSliderComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  template: `\n    <zyfra-slider\n      [(ngModel)]=\"ngModel\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [range]=\"range\"\n      [orientation]=\"orientation\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onSlideEnd)=\"onSlideEnd($event)\"\n    ></zyfra-slider>\n    <br>\n    <p style=\"font-size: 14px; font-family: Inter, sans-serif;\">Control value: {{ngModel}}</p>\n  `,\n  props: {\n    ...args,\n    ngModelChange: action('ngModelChange'),\n    onSlideEnd: action('onSlideEnd'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSpinnerComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraSplitButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraSplitterComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabMenuComponent>",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTextareaComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraTextareaComponent,\n  props: args,\n  template: `\n<zyfra-textarea\n  [rows]=\"rows\"\n  [cols]=\"cols\"\n  [autoResize]=\"autoResize\"\n  [(ngModel)]=\"ngModel\"\n  [placeholder]=\"placeholder\"\n  [class]=\"class\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [maxlength]=\"maxlength\"\n  [minlength]=\"minlength\"\n  [name]=\"name\"\n></zyfra-textarea>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToastComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\n      label=\"for toast\"\n    ></zyfra-button>\n\n    <zyfra-toast\n      #toast\n      [position]=\"position\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\n      [preventDuplicates]=\"preventDuplicates\"\n      [severity]=\"severity\"\n      [summary]=\"summary\"\n      [detail]=\"detail\"\n      [life]=\"life\"\n      [closable]=\"closable\"\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\n      (onClose)=\"onClose($event)\"\n    ></zyfra-toast>\n\n    <ng-template #customTemplate>\n    <div>\n        <p>content</p>\n        <ul>\n          <li>item 1 (for example)</li>\n          <li><b>item 2</b></li>\n        </ul>\n    </div>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onClose: action('onClose'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraToggleButtonComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraToggleButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTooltipComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <div\n      style=\"height: 100vh;width: 100%;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\n    >\n      <div *ngIf=\"title !== undefined\">\n        <div>\n          <ng-template #testTooltip>\n            <div class=\"zyfra-tooltip__title\">{{ title }}</div>\n            <div>{{ text }}</div>\n          </ng-template>\n\n          <zyfra-button\n            [ngStyle]=\"{display: 'block'}\"\n            [zyfraTooltip]=\"testTooltip\"\n            [zyfraTooltipColor]=\"color\"\n            [zyfraTooltipPosition]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n      <div *ngIf=\"title == undefined\">\n        <div>\n          <zyfra-button\n            [ngStyle]=\"{display: 'block'}\"\n            [zyfraTooltip]=\"text\"\n            [zyfraTooltipColor]=\"color\"\n            [zyfraTooltipPosition]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n    </div>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTriCheckboxComponent>",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tri-checkbox\n      [label]=\"label\"\n      [name]=\"name\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [(ngModel)]=\"model\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\n    <br>\n    <br>\n    <br>\n    <zyfra-tri-checkbox\n      [formControl]=\"fControl\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\n    <br>\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px' }\"\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeComponent>",
                "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionComponent>",
                "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon selection-radio-off\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon selection-radio-off\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraAccordionTabComponent>",
                "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\n  component: ZyfraCalendarComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDatepickerMultiComponent>",
                "defaultValue": "(args: ZyfraDatepickerMultiComponent) => ({\n  component: ZyfraDatepickerMultiComponent,\n  template: `\n  <zyfra-datepicker-multi\n    [label]='label'\n    [placeholder]='placeholder'\n    [disabled]='disabled'\n    [showClear]='showClear'\n    [relativeValue]='value'\n    [model]=\"model\"\n    [dateFormat]=\"dateFormat\"\n    [timeFormat]=\"timeFormat\"\n    [returnFormatValue]=\"returnFormatValue\"\n    [required]=\"required\"\n    [spanClass]=\"spanClass\"\n    [locale]=\"locale\"\n    [showDate]=\"showDate\"\n    [showTime]=\"showTime\"\n    [monthNavigator]=\"monthNavigator\"\n    [yearNavigator]=\"yearNavigator\"\n    [yearRange]=\"yearRange\"\n    [showCalendarBtn]=\"showCalendarBtn\"\n    [calendarBtnLabel]=\"calendarBtnLabel\"\n    [numberOfMonths]=\"numberOfMonths\"\n    [selectionMode]=\"selectionMode\"\n    [disabledDates]=\"disabledDates\"\n    [firstDayOfWeek]=\"firstDayOfWeek\"\n    [mode]=\"mode\"\n  >\n  </zyfra-datepicker-multi>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraRelativeDatepickerComponent>",
                "defaultValue": "(args: ZyfraRelativeDatepickerComponent) => ({\n  component: ZyfraRelativeDatepickerComponent,\n  template: `\n  <zyfra-relative-datepicker\n    [label]='label'\n    [placeholder]='placeholder'\n    [disabled]='disabled'\n    [showClear]='showClear'\n    [(ngModel)]='ngModel'\n  >\n  </zyfra-relative-datepicker>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraMenuApplicationsItemComponent>",
                "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\n  component: ZyfraMenuApplicationsItemComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTabPanelComponent>",
                "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChange($event)\"\n      (onClose)=\"onClose($event)\"\n      (activeIndexChange)=\"activeIndexChange($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [stripedMode]=\"stripedMode\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [editMode]=\"editMode\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n      (rowsChange)=\"rowsChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n          <th style=\"width:8rem\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n              {{product.code}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: right;\">\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              <ng-template zyfraTableTemplate=\"input\">\n                <input type=\"text\" [(ngModel)]=\"product.price\">\n              </ng-template>\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: center; font-size: 16px;\">\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5; cursor: pointer;\">\n              <i class=\"zyfra-icon editor-mode\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65; cursor: pointer;\">\n              <i class=\"pi pi-check\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050; cursor: pointer;\">\n              <i class=\"pi pi-times\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n    statuses: [\n      { label: 'In Stock', value: 'INSTOCK' },\n      { label: 'Low Stock', value: 'LOWSTOCK' },\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' },\n    ],\n    clonedProducts: {} as { [s: string]: Product },\n    onRowEditInit(product: Product): void {\n      this.clonedProducts[product.id] = { ...product };\n    },\n    onRowEditSave(product: Product): void {\n      if (product.price > 0) {\n        delete this.clonedProducts[product.id];\n      }\n    },\n    onRowEditCancel(product: Product, index: number): void {\n      this.value[index] = this.clonedProducts[product.id];\n      delete this.clonedProducts[product.id];\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      (rowExpand)=\"rowExpand($event)\"\n      (rowCollapse)=\"rowCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 38px\"></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th>Code</th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\n        <tr [zyfraRow]=\"product\">\n          <td>\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\n          </td>\n          <td>{{product.name}}</td>\n          <td>{{product.code}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.rating}}</td>\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\n        <tr>\n          <td colspan=\"7\">\n            <div class=\"p-p-3\">\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\n                <ng-template zyfraTableTemplate=\"header\">\n                  <tr>\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"body\" let-order>\n                  <tr>\n                    <td>{{order.id}}</td>\n                    <td>{{order.customer}}</td>\n                    <td style=\"text-align: right;\">{{order.date}}</td>\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"emptymessage\">\n                  <tr>\n                    <td colspan=\"6\">There are no order for this product yet.</td>\n                  </tr>\n                </ng-template>\n              </zyfra-table>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    rowExpand: (event): void => actions.rowExpand({ data: event.data, ...event }),\n    rowCollapse: (event): void => actions.rowCollapse({ data: event.data, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n               {{ product.code}}\n            </zyfra-cell-editor>\n          </td>\n\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    editComplete: consoleLogAction('editComplete'),\n    editCancel: consoleLogAction('editCancel'),\n    editInit: consoleLogAction('editInit'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Product</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\n        <tr [zyfraRow]=\"sale\">\n          <td>{{sale.product}}</td>\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    lastYearTotal: 3_283_772.0,\n    thisYearTotal: 1_541_925.0,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <div style=\"font-family: Inter, sans-serif;\">\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме\n      локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает\n      корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\n    </div>\n\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [lazy]=\"true\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"country.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"representative.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter\n                  field=\"representative\"\n                  matchMode=\"in\"\n                  display=\"menu\"\n                  [showMatchModes]=\"false\"\n                  [showOperator]=\"false\"\n                  [showAddButton]=\"false\"\n                >\n                  <ng-template zyfraTableTemplate=\"header\">\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                      <span class=\"p-text-bold\">Agent Picker</span>\n                    </div>\n                  </ng-template>\n\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                     filter testing\n                  </ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"date\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"balance\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"status\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"activity\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n    onFilter: consoleLogAction('onFilter'),\n    valueChange: action('valueChange'),\n    onSort: consoleLogAction('onSort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <zyfra-table-column-filter\n                field=\"representative\"\n                matchMode=\"in\"\n                display=\"menu\"\n                [showMatchModes]=\"false\"\n                [showOperator]=\"false\"\n                [showAddButton]=\"false\"\n              >\n                <ng-template zyfraTableTemplate=\"header\">\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                    <span class=\"p-text-bold\">Agent Picker</span>\n                  </div>\n                </ng-template>\n\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                   filter testing\n                </ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n            </div>\n          </th>\n          <th style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n    onFilter: consoleLogAction('onFilter'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [frozenValue]=\"frozenValue\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n          <th style=\"flex: 0 0 45px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\n              <i class=\"pi pi-lock-open\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\n              <i class=\"pi pi-lock\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    toggleLock(data, frozen, index): void {\n      if (frozen) {\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\n        this.value.push(data);\n      } else {\n        this.value = this.value.filter((c, i) => i !== index);\n        this.frozenValue.push(data);\n      }\n\n      this.value.sort((val1, val2) => {\n        return val1.id < val2.id ? -1 : 1;\n      });\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (rowReorder)=\"rowReorder($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th style=\"width: 32px\"></th>\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\n          <td>\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\n          </td>\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n\n  `,\n  props: {\n    ...args,\n    colReorder: action('colReorder'),\n    rowReorder: action('rowReorder'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [resizableColumns]=\"resizableColumns\"\n      (colResize)=\"colResize($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraResizableColumn>Code</th>\n          <th zyfraResizableColumn>Name</th>\n          <th zyfraResizableColumn>Category</th>\n          <th zyfraResizableColumn>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    colResize: consoleLogAction('colResize'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [scrollDirection]=\"scrollDirection\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\n          <th style=\"width:100px\">Id</th>\n          <th style=\"width:200px\">Country</th>\n          <th style=\"width:200px\">Date</th>\n          <th style=\"width:200px\">Balance</th>\n          <th style=\"width:200px\">Company</th>\n          <th style=\"width:200px\">Status</th>\n          <th style=\"width:200px\">Activity</th>\n          <th style=\"width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\n          <td style=\"width:100px\">{{customer.id}}</td>\n          <td style=\"width:200px\">{{customer.country.name}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\n          <td style=\"width:200px\">{{customer.company}}</td>\n          <td style=\"width:200px\">{{customer.status}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    formatCurrency(value): string {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortField]=\"sortField\"\n      [sortMode]=\"sortMode\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [rowGroupMode]=\"rowGroupMode\"\n      [groupRowsBy]=\"groupRowsBy\"\n      [responsiveLayout]=\"responsiveLayout\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Status</th>\n          <th style=\"min-width:200px\">Date</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\n        <tr zyfraRowGroupHeader>\n          <td colspan=\"5\">\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\n        <tr class=\"p-rowgroup-footer\">\n          <td style=\"min-width: 80%\">\n            <div style=\"width: 100%\">Total Customers</div>\n          </td>\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\n            {{calculateCustomerTotal(value, customer.representative.name)}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">\n            {{customer.name}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td style=\"min-width:200px\">\n            {{customer.company}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\n            {{customer.date}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    calculateCustomerTotal(customers, name): number {\n      let total = 0;\n\n      if (customers) {\n        for (const customer of customers) {\n          if (customer.representative.name === name) {\n            total++;\n          }\n        }\n      }\n\n      return total;\n    },\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [columns]=\"columns\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [rows]=\"rows\"\n      [scrollHeight]=\"scrollHeight\"\n      [virtualScroll]=\"virtualScroll\"\n      [virtualRowHeight]=\"virtualRowHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowIndex\">\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    value: [...getProducts()],\n    title: 'Сортировка по одному столбцу',\n    onSort: consoleLogAction('onSort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortMode]=\"'multiple'\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    title: 'Сортировка по нескольким столбцам (с зажатым ctrl)',\n    value: getProducts(),\n    onSort: consoleLogAction('onSort'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Status</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\n          <td>{{ item }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/table/_story/stories/State.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [selectionMode]=\"selectionMode\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rows]=\"rows\"\n      [paginator]=\"paginator\"\n      [stateStorage]=\"stateStorage\"\n      [stateKey]=\"stateKey\"\n      (stateSave)=\"stateSave($event)\"\n      (stateRestore)=\"stateRestore($event)\"\n      (selectionChange)=\"selectionChange()\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell field=\"name\"></th>\n          <th zyfra-search-cell field=\"country.name\"></th>\n          <th zyfra-search-cell field=\"representative.name\"></th>\n          <th zyfra-search-cell field=\"status\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span>{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span>{{customer.representative.name}}</span>\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"4\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    selectionChange: consoleLogAction('selectionChange'),\n    stateSave: action('stateSave'),\n    stateRestore: action('stateRestore'),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field ]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n    elementChange: actions.elementChange,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [paginator]=\"paginator\"\n      [rows]=\"7\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Brand</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td>\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\n            {{rowData.brand}}\n          </td>\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">$3,283,772</td>\n          <td style=\"text-align: right;\">$2,126,925</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    colReorder: consoleLogAction('colReorder'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"onEditComplete($event)\"\n      (editCancel)=\"onEditCancel($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td\n            *ngFor=\"let col of columns; let i = index\"\n            zyfraTTEditableColumn\n          >\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\n              {{ rowData[col.field] }}\n            </zyfra-tree-table-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    editInit: consoleLogAction('editInit'),\n    editComplete: consoleLogAction('editComplete'),\n    editCancel: consoleLogAction('editCancel'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      #tt\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onFilter)=\"onFilter($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [field]=\"col.field\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onFilter: consoleLogAction('onFilter'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onSort)=\"onSort($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\n            {{col.header}}\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <span>{{rowData[col.field]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onSort: consoleLogAction('onSort'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraTreeTableComponent>",
                "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [selectionMode]=\"selectionMode\"\n      [stripedMode]=\"stripedMode\"\n      [(selection)]=\"selection\"\n      (onNodeSelect)=\"onNodeSelect($event)\"\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\n      (selectionChange)=\"selectionChange($event)\"\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\n          <th>Размер</th>\n          <th>Тип</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\" [zyfraTTSelectableRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field] }}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onNodeSelect: (event): void => actions.onNodeSelect({ node: event.node, ...event }),\n    onNodeUnselect: (event): void => actions.onNodeUnselect({ node: event.node, ...event }),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n    selectionChange: consoleLogAction('selectionChange'),\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\n  },\n})"
            },
            {
                "name": "TemplateWithContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ZyfraDropdownWithContentComponent>",
                "defaultValue": "args => ({\r\n  component: ZyfraDropdownWithContentComponent,\r\n  template: `\r\n    <div>\r\n       <zyfra-dropdown-with-content\r\n        [(ngModel)]=\"value\"\r\n        [options]=\"options\"\r\n        [optionLabel]=\"optionLabel\"\r\n        [placeholder]=\"placeholder\"\r\n        [showClear]=\"showClear\"\r\n        [label]=\"label\"\r\n        [mini]=\"mini\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        [group]=\"group\"\r\n        [virtualScroll]=\"virtualScroll\"\r\n        [itemSize]=\"itemSize\"\r\n        [filter]=\"filter\"\r\n        [style]=\"{ width: '360px' }\"\r\n        (onChange)=\"onChange($event)\"\r\n        (onClick)=\"onClick($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n        (onShow)=\"onShow($event)\"\r\n        (onHide)=\"onHide($event)\"\r\n      >\r\n        <span left  style=\"width: 15px; height: 15px; background: pink; border-radius: 50%; margin: 5px;\"></span>\r\n        <div right style=\"display: flex; align-items: center;\">\r\n          <span style=\"width: 25px; height: 25px; background: cadetblue; border-radius: 50%;\"></span>\r\n          <span style=\"width: 25px; height: 25px; background: wheat; border-radius: 50%; margin: 5px;\"></span>\r\n        </div>\r\n      </zyfra-dropdown-with-content>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Time",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "timeMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<string, RelativeDateTimeId>([\n  ['*', 'current'],\n  ['T', 'midnight'],\n  ['t', 'midnight'], // Can be optional\n])"
            },
            {
                "name": "ToggleMask",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TooltipWithoutTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TooltipWithTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "topMenuItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ZyfraMenuAppItem[]",
                "defaultValue": "[\n  {\n    title: 'Z-QA — Zyfra Quality Assurance',\n    icon: 'shapes-cube',\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\n  },\n  {\n    title: 'Zyfra Document Explorer',\n    icon: 'view-dashboard',\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'charts-bar-stacked',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n  {\n    title: 'Z-PS — Zyfra Production Scheduling',\n    icon: 'tools-eyedropper',\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'vectors-difference-ab',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n]"
            },
            {
                "name": "Url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ValidationPattern",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'(T|\\\\*)(\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s)'"
            },
            {
                "name": "Vertical",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VirtualScroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WarningWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "withDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithFormControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithoutLayoutShift",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithPageOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSubMenu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "cloneArrayOfObjects",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T[]",
                "jsdoctags": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "cloneArrayOfObjects",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "T[]",
                "jsdoctags": [
                    {
                        "name": "array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "consoleLogAction",
                "file": "libs/components/.storybook/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "literal type",
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateCar",
                "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "literal type"
            },
            {
                "name": "generateTimeArray",
                "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ZyfraTime[]",
                "jsdoctags": [
                    {
                        "name": "formatTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getCustomers",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Customer[]"
            },
            {
                "name": "getDefaultRelativeDateMenuItems",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "RelativeDateMenuItems"
            },
            {
                "name": "getFileSystem",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            },
            {
                "name": "getProducts",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Product[]"
            },
            {
                "name": "getProductsOrdersSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ProductOrder[]"
            },
            {
                "name": "getProductsSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Product[]"
            },
            {
                "name": "getSales",
                "file": "libs/components/src/lib/tree-table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            },
            {
                "name": "getSalesSmall",
                "file": "libs/components/src/lib/table/_story/data.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "Sale[]"
            },
            {
                "name": "isIsoDate",
                "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "str",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "onSortColumnClick",
                "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "event",
                        "type": "MouseEvent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": "event",
                        "type": "MouseEvent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ParseTextInput",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Parse input text to model</p>\n",
                "args": [
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "RelativeDateModel",
                "jsdoctags": [
                    {
                        "name": "text",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideValueAccessor",
                "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "type",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "RenderText",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Render text from RelativeDateModel</p>\n",
                "args": [
                    {
                        "name": "model",
                        "type": "RelativeDateModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "RelativeDateModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "UpdateActiveItem",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Check items as radio button, to active id</p>\n",
                "args": [
                    {
                        "name": "items",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "id",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "RelativeDateMenuItem[]",
                "jsdoctags": [
                    {
                        "name": "items",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "id",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "DropdownTemplateType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "Filters",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<string | FilterMetadata | []>",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 176
            },
            {
                "name": "HeaderConfig",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "IdByGroup",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ItemClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "MenuItemSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"standard\" | \"enlarged\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "OnChangeCallback",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "onResizeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "PageOption",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "number | Record<string | >",
                "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "RelativeDateDirectionId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RelativeDatePeriodId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RelativeDateTimeId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RowSelectionEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "SelectionType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"single\" | \"checkbox\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SliderOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SortOrder",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": " | \"1\"",
                "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SpinnerColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TableSortEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SortEvent",
                "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 176
            },
            {
                "name": "TableSortMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"single\" | \"multiple\"",
                "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TableTemplateType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
                "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "TZyfraButtonIconPosision",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "ValueChangeEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "ViewMode",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [
            {
                "name": "ZyfraDatePickerMode",
                "childs": [
                    {
                        "name": "absolute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "absolute"
                    },
                    {
                        "name": "relative",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "relative"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
            },
            {
                "name": "ZyfraDatePickerValueType",
                "childs": [
                    {
                        "name": "date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "date"
                    },
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "string"
                    },
                    {
                        "name": "isoString",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "isoString"
                    },
                    {
                        "name": "timestamp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "timestamp"
                    },
                    {
                        "name": "null",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "null"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
            },
            {
                "name": "ZyfraLocale",
                "childs": [
                    {
                        "name": "ru",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ru_RU"
                    },
                    {
                        "name": "en",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "en_US"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
            }
        ],
        "groupedVariables": {
            "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts": [
                {
                    "name": "Absolute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AbsoluteMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDatepickerComponent>",
                    "defaultValue": "args => ({\n  component: ZyfraDatepickerComponent,\n  template: `\n  <zyfra-datepicker\n  [ngModel]=\"model\"\n  (ngModelChange)=\"$event\"\n  [dateFormat]=\"dateFormat\"\n  [timeFormat]=\"timeFormat\"\n  [returnFormatValue]=\"returnFormatValue\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [required]=\"required\"\n  [label]=\"label\"\n  [spanClass]=\"spanClass\"\n  [locale]=\"locale\"\n  [showClear]=\"showClear\"\n  [showDate]=\"showDate\"\n  [showTime]=\"showTime\"\n  [monthNavigator]=\"monthNavigator\"\n  [yearNavigator]=\"yearNavigator\"\n  [yearRange]=\"yearRange\"\n  [showCalendarBtn]=\"showCalendarBtn\"\n  [calendarBtnLabel]=\"calendarBtnLabel\"\n  [numberOfMonths]=\"numberOfMonths\"\n  [selectionMode]=\"selectionMode\"\n  [disabledDates]=\"disabledDates\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  >\n  </zyfra-datepicker>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  activeItemChange: action('activeItemChange'),\n  homeClick: action('homeClick'),\n  selectionChange: action('selectionChange'),\n  nodeCollapse: action('nodeCollapse'),\n  nodeExpand: action('nodeExpand'),\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "BasicTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "BasicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "EnlargedSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "ExtraItemTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [model]=\"model\"\n                                      [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (selectionChange)=\"selectionChange($event)\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\n\n                           <ng-template let-item zyfraTemplate='menuitem'>\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='toolbar'>\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\n                          </ng-template>\n\n                          <ng-template zyfraTemplate='header'>\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\n                          </ng-template>\n                    </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "ExtraTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ExtraItemTemplate.bind({})"
                },
                {
                    "name": "FolderMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "GroupPanels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "GroupPanelTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template:\n      `<wrapper>\n          <ng-template zyfraTemplate>\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\n                  <ng-template zyfraSplitterTemplate>\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\n                                      [emptyMessage]=\"emptyMessage\"\n                                      [headerConfig]=\"headerConfig\"\n                                      [settingsConfig]=\"settingsConfig\"\n                                      [toolbarConfig]=\"toolbarConfig\"\n                                      [searchPlaceholder]=\"searchPlaceholder\"\n                                      (homeClick)=\"homeClick($event)\"\n                                      (activeItemChange)=\"activeItemChange($event)\"\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\n                                      (nodeExpand)=\"nodeExpand($event)\"\n                                      (selectionChange)=\"selectionChange($event)\">\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header1\"\n                                   [items]=\"items1\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header2\"\n                                   [items]=\"items2\"></ng-template>\n\n                      <ng-template zyfraNavMenuGroup\n                                   [header]=\"header3\"\n                                   [items]=\"items3\"></ng-template>\n                      </zyfra-nav-menu>\n                  </ng-template>\n                  <ng-template zyfraSplitterTemplate>\n                      <router-outlet></router-outlet>\n                  </ng-template>\n              </zyfra-splitter>\n          </ng-template>\n      </wrapper>`,\n  props: {\n    ...args,\n    ...actions\n  },\n})"
                },
                {
                    "name": "MultipleSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "RubricatorMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                },
                {
                    "name": "SingleGroupPanel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "GroupPanelTemplate.bind({})"
                },
                {
                    "name": "SubItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "BasicTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Expand.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  rowExpand: action('rowExpand'),\n  rowCollapse: action('rowCollapse'),\n}"
                },
                {
                    "name": "Expand",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Expand.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      (rowExpand)=\"rowExpand($event)\"\n      (rowCollapse)=\"rowCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 38px\"></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th>Code</th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\n        <tr [zyfraRow]=\"product\">\n          <td>\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\n          </td>\n          <td>{{product.name}}</td>\n          <td>{{product.code}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.rating}}</td>\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\n        <tr>\n          <td colspan=\"7\">\n            <div class=\"p-p-3\">\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\n                <ng-template zyfraTableTemplate=\"header\">\n                  <tr>\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"body\" let-order>\n                  <tr>\n                    <td>{{order.id}}</td>\n                    <td>{{order.customer}}</td>\n                    <td style=\"text-align: right;\">{{order.date}}</td>\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\n                  </tr>\n                </ng-template>\n                <ng-template zyfraTableTemplate=\"emptymessage\">\n                  <tr>\n                    <td colspan=\"6\">There are no order for this product yet.</td>\n                  </tr>\n                </ng-template>\n              </zyfra-table>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    rowExpand: (event): void => actions.rowExpand({ data: event.data, ...event }),\n    rowCollapse: (event): void => actions.rowCollapse({ data: event.data, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Selection.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  rowSelect: action('rowSelect'),\n  rowUnselect: action('rowUnselect'),\n  selectionChange: action('selectionChange'),\n  headerCheckboxToggle: action('headerCheckboxToggle'),\n}"
                },
                {
                    "name": "Selection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SelectionTemplate.bind({})"
                },
                {
                    "name": "SelectionTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [selectionMode]=\"selectionMode\"\n      [metaKeySelection]=\"metaKeySelection\"\n      [stripedMode]=\"stripedMode\"\n      (selectionChange)=\"selectionChange($event)\"\n      (rowSelect)=\"rowSelect($event)\"\n      (rowUnselect)=\"rowUnselect($event)\"\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width: 32px\">\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\n          </th>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\n          <td>\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\n          </td>\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    selectionChange: consoleLogAction('selectionChange'),\n    headerCheckboxToggle: consoleLogAction('headerCheckboxToggle'),\n    rowUnselect: (event): void => actions.rowUnselect({ data: event.data, ...event }),\n    rowSelect: (event): void => actions.rowSelect({ data: event.data, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Basic.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  elementChange: action('elementChange'),\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n      (activeElementChange)=\"elementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field ]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n    elementChange: actions.elementChange,\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "ColGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [stripedMode]=\"stripedMode\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [paginator]=\"paginator\"\n      [rows]=\"7\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Brand</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td>\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\n            {{rowData.brand}}\n          </td>\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">$3,283,772</td>\n          <td style=\"text-align: right;\">$2,126,925</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Reorder.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Reorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    colReorder: consoleLogAction('colReorder'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Edit.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Edit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [title]=\"title\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"onEditComplete($event)\"\n      (editCancel)=\"onEditCancel($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td\n            *ngFor=\"let col of columns; let i = index\"\n            zyfraTTEditableColumn\n          >\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\n\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\n              {{ rowData[col.field] }}\n            </zyfra-tree-table-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    editInit: consoleLogAction('editInit'),\n    editComplete: consoleLogAction('editComplete'),\n    editCancel: consoleLogAction('editCancel'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Filter.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Filter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      #tt\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onFilter)=\"onFilter($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n        <tr>\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [field]=\"col.field\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onFilter: consoleLogAction('onFilter'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Sort.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Sort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      (onSort)=\"onSort($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\n            {{col.header}}\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <span>{{rowData[col.field]}}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onSort: consoleLogAction('onSort'),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Scroll.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n}"
                },
                {
                    "name": "Scroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\">\n            {{col.header}}\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n  `,\n  props: {\n    ...args,\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tree-table/_story/stories/Selection.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onNodeSelect: action('onNodeSelect'),\n  onNodeUnselect: action('onNodeUnselect'),\n  onNodeExpand: action('onNodeExpand'),\n  onNodeCollapse: action('onNodeCollapse'),\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\n}"
                },
                {
                    "name": "Selection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-tree-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [selectionMode]=\"selectionMode\"\n      [stripedMode]=\"stripedMode\"\n      [(selection)]=\"selection\"\n      (onNodeSelect)=\"onNodeSelect($event)\"\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\n      (selectionChange)=\"selectionChange($event)\"\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\n      (onNodeExpand)=\"onNodeExpand($event)\"\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\n          <th>Размер</th>\n          <th>Тип</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\" [zyfraTTSelectableRow]=\"rowNode\">\n          <td *ngFor=\"let col of columns; let i = index\">\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\n            <ng-container *ngIf=\"i === 0\">\n              <span\n                class=\"zyfra-icon files-folder\"\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\n                style=\"margin-right: 10px;\"\n              ></span>\n            </ng-container>\n            <span>{{ rowData[col.field] }}</span>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-tree-table>\n\n    <ng-template #docIcon>\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onNodeSelect: (event): void => actions.onNodeSelect({ node: event.node, ...event }),\n    onNodeUnselect: (event): void => actions.onNodeUnselect({ node: event.node, ...event }),\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\n    selectionChange: consoleLogAction('selectionChange'),\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\n  },\n})"
                }
            ],
            "libs/components/src/lib/message/zyfra-message.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiMessages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMessageComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraMessageComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/toast/zyfra-toast.component.stories.ts": [
                {
                    "name": "Animation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToastComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"$event.stopPropagation(); toast.showMessage()\"\n      label=\"for toast\"\n    ></zyfra-button>\n\n    <zyfra-toast\n      #toast\n      [position]=\"position\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\n      [preventDuplicates]=\"preventDuplicates\"\n      [severity]=\"severity\"\n      [summary]=\"summary\"\n      [detail]=\"detail\"\n      [life]=\"life\"\n      [closable]=\"closable\"\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\n      (onClose)=\"onClose($event)\"\n    ></zyfra-toast>\n\n    <ng-template #customTemplate>\n    <div>\n        <p>content</p>\n        <ul>\n          <li>item 1 (for example)</li>\n          <li><b>item 2</b></li>\n        </ul>\n    </div>\n    </ng-template>\n  `,\n  props: {\n    ...args,\n    onClose: action('onClose'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts": [
                {
                    "name": "AnimationSpeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\n  { separator: true },\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSplitButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "WarningWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/nav-menu/dataForStories.ts": [
                {
                    "name": "basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1'},\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\n  {label: 'Наименование ячейки 3 длиннее остальных'},\n  {label: 'Наименование ячейки 4'},\n  {label: 'Наименование ячейки 5'},\n]"
                },
                {
                    "name": "basicWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                },
                {
                    "name": "subItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    badge: 'warning',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1 длиннее остальных',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\n            icon: 'zyfra-icon files-file',\n            badge: 'danger',\n            badgeStyleClass: 'p-badge-dot',\n            routerLink: ['/page1']\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    badge: 'info',\n    badgeStyleClass: 'p-badge-dot',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2 длиннее остальных',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                },
                {
                    "name": "subItemsRubricator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuItem[]",
                    "defaultValue": "[\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 2',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'A-Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Д-Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file',\n        items: [\n          {\n            label: 'Б-Ячейка третьего уровня 1',\n            icon: 'zyfra-icon files-file',\n          },\n          {\n            label: 'Ячейка третьего уровня 2',\n            icon: 'zyfra-icon files-file',\n            items: [\n              {\n                label: 'В-Ячейка четвертого уровня 1',\n                icon: 'zyfra-icon files-file',\n                items: [\n                  {\n                    label: 'Ц-Ячейка пятого уровня 1',\n                    icon: 'zyfra-icon files-file',\n                  },\n                  {\n                    label: 'Э-Ячейка пятого уровня 2',\n                    icon: 'zyfra-icon files-file',\n                  }\n                ]\n              },\n              {\n                label: 'Ж-Ячейка четвертого уровня 2',\n                icon: 'zyfra-icon files-file',\n              },\n              {\n                label: 'М-Ячейка четвертого уровня 3',\n                icon: 'zyfra-icon files-file',\n              }\n            ]\n          }\n        ]\n      },\n      {\n        label: 'У-Ячейка второго уровня 3',\n        icon: 'zyfra-icon files-file',\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\n  {\n    label: 'Наименование ячейки 4',\n    icon: 'zyfra-icon files-file',\n    items: [\n      {\n        label: 'Ячейка второго уровня 1',\n        icon: 'zyfra-icon files-file',\n      },\n      {\n        label: 'Ячейка второго уровня 2',\n        icon: 'zyfra-icon files-file'\n      }\n    ]\n  },\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\n]"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckboxWithFormControlComponentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `\n    <div><zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"fControl\"></zyfra-checkbox></div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{fControl?.value === undefined ? 'undefined' : fControl?.value}})</div>\n    <br>\n    <br>\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n    toggleStatus(): void {\n      if (this.fControl.disabled) {\n        this.fControl.enable();\n      } else {\n        this.fControl.disable();\n      }\n    },\n    toggleValue(): void {\n      this.fControl.setValue(!this.fControl.value);\n    },\n  },\n})"
                },
                {
                    "name": "CustomIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  template: `<div>\n    <zyfra-checkbox\n      [(model)]=\"model\"\n      [name]=\"name\"\n      [value]=\"value\"\n      [label]=\"label\"\n      [disabled]=\"disabled\"\n      [binary]=\"binary\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [labelStyleClass]=\"labelStyleClass\"\n      [checkboxIcon]=\"checkboxIcon\"\n      [readonly]=\"readonly\"\n      [required]=\"required\"\n      (modelChange)=\"modelChange($event)\"\n    ></zyfra-checkbox>\n    </div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{model === null ? 'null' : model}})</div>\n  `,\n  props: {\n    ...args,\n    modelChange: action('modelChange'),\n  },\n})"
                },
                {
                    "name": "WithFormControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
                }
            ],
            "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Date",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PhoneExt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SerialNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SSN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputMaskComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputMaskComponent,\n  template: `\n  <zyfra-input-mask\n    [label]=\"label\"\n    [(ngModel)]=\"ngModel\"\n    [mask]=\"mask\"\n    [slotChar]=\"slotChar\"\n    [placeholder]=\"placeholder\"\n    (onBlur)=\"onBlur($event)\"\n    (onFocus)=\"onFocus($event)\"\n    (onComplete)=\"onComplete($event)\"\n    (onKeydown)=\"onKeydown($event)\"\n    (onInput)=\"onInput($event)\"\n></zyfra-input-mask>\n  `,\n  props: {\n    ...args,\n    onBlur: action('onBlur'),\n    onFocus: action('onFocus'),\n    onComplete: action('onComplete'),\n    onKeydown: action('onKeydown'),\n    onInput: action('onInput'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Currency",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Decimal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputNumberComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputNumberComponent,\n  template: `\n    <zyfra-input-number\n      [(ngModel)]=\"value\"\n      [showButtons]=\"showButtons\"\n      [mode]=\"mode\"\n      [currency]=\"currency\"\n      [label]=\"label\"\n      [placeholder]=\"placeholder\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onInput)=\"onInput($event)\"\n    ></zyfra-input-number>\n  `,\n  props: {\n    ...args,\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onInput: action('onInput'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputSwitchComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputSwitchComponent,\n  props: args,\n  template: `\n<zyfra-input-switch [(ngModel)]=\"checked\"></zyfra-input-switch>`,\n})"
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPaginatorComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraPaginatorComponent,\n  props: args,\n})"
                },
                {
                    "name": "WithPageOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Style",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSpinnerComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSpinnerComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ButtonBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CustomTemplate.bind({})"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\n  component: ZyfraCalendarComponent,\n  props: args,\n  template: `\n  <zyfra-custom-calendar [placeholder]='placeholder' [label]='label' [times]='times' [selectedTime]='selectedTime'></zyfra-custom-calendar>\n  `,\n})"
                },
                {
                    "name": "DateFormat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DisabledDays",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "generateTimeArray('HH:mm:ss')"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyTime",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\n  component: ZyfraCalendarComponent,\n  props: args,\n})"
                },
                {
                    "name": "Time",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Basic.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Basic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [stripedMode]=\"stripedMode\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts": [
                {
                    "name": "Binary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTriCheckboxComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tri-checkbox\n      [label]=\"label\"\n      [name]=\"name\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      [(ngModel)]=\"model\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})\n    <br>\n    <br>\n    <br>\n    <zyfra-tri-checkbox\n      [formControl]=\"fControl\"\n      [tabindex]=\"tabindex\"\n      [inputId]=\"inputId\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      label=\"Чекбокс С FormControl. Свойства disabled, readonly, name, label не распространяются\"\n    ></zyfra-tri-checkbox>\n    <br>\n    (Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})\n    <br>\n    <br>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px' }\"\n      (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\n  `,\n  props: {\n    ...args,\n    fControl: new FormControl(true),\n  },\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts": [
                {
                    "name": "bottomMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\n  {\n    title: 'Избранное',\n    icon: 'social-star'\n  },\n  {\n    title: 'Поиск',\n    icon: 'sort-zoom-in'\n  },\n  {\n    title: 'Служба техподдежки',\n    icon: 'alerts-pulse'\n  },\n]"
                },
                {
                    "name": "CustomTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultTransition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  open: {\n    duration: 300,\n    delay: 500,\n    timingFunction: 'ease-in',\n  },\n  close: {\n    duration: 300,\n    delay: 300,\n    timingFunction: 'ease-out',\n  }\n}"
                },
                {
                    "name": "ManyItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <div>\n      <zyfra-button\n        label=\"Toggle\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.toggle()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Open\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.open()\"\n      ></zyfra-button>\n\n      <zyfra-button\n        label=\"Close\"\n        [style]=\"{'margin-right': '10px'}\"\n        (onClick)=\"menu.close()\"\n      ></zyfra-button>\n    </div>\n\n    <br>\n\n    <div style=\"height: 650px; display: flex; position: relative;\">\n      <zyfra-menu-applications\n        #menu\n        [transition]=\"transition\"\n        [tooltipDelay]=\"tooltipDelay\"\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\n        [topMenuItems]=\"topMenuItems\"\n        [bottomMenuItems]=\"bottomMenuItems\"\n        [activeItem]=\"activeItem\"\n        (selectItem)=\"selectItem($event);\"\n        (toggleState)=\"toggleState($event)\"\n      ></zyfra-menu-applications>\n\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\n        <p>Some content</p>\n      </div>\n    </div>\n  `,\n  props: {\n    ...args,\n    activeItem: null,\n    toggleState: value => action('toggleState')({ value }),\n    selectItem(item: any): void {\n      action('selectItem')(item);\n\n      const isTopItem = this.topMenuItems.includes(item);\n\n      if (isTopItem) {\n        this.activeItem = item;\n      } else {\n        alert(JSON.stringify(item, null, 2));\n      }\n    }\n  },\n})"
                },
                {
                    "name": "topMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ZyfraMenuAppItem[]",
                    "defaultValue": "[\n  {\n    title: 'Z-QA — Zyfra Quality Assurance',\n    icon: 'shapes-cube',\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\n  },\n  {\n    title: 'Zyfra Document Explorer',\n    icon: 'view-dashboard',\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'charts-bar-stacked',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n  {\n    title: 'Z-PS — Zyfra Production Scheduling',\n    icon: 'tools-eyedropper',\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\n  },\n  {\n    title: 'Z-MEB — Mass & Energy Balance',\n    icon: 'vectors-difference-ab',\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\n  },\n]"
                },
                {
                    "name": "WithLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithoutLayoutShift",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts": [
                {
                    "name": "CALENDAR_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\n  multi: true,\n}"
                }
            ],
            "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts": [
                {
                    "name": "CHECKBOX_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Provider",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ZyfraCheckboxComponent),\n  multi: true,\n}"
                }
            ],
            "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts": [
                {
                    "name": "cities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryCity[]",
                    "defaultValue": "[\n  { name: 'Russia', code: 'RU' },\n  { name: 'Rome', code: 'RM' },\n  { name: 'London', code: 'LDN' },\n  { name: 'Istanbul', code: 'IST' },\n  { name: 'Paris', code: 'PRS' },\n]"
                },
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSelectButtonComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts": [
                {
                    "name": "Closable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomTemplateWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "CustomWithBadge.bind({})"
                },
                {
                    "name": "CustomWithBadge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  template: `\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\n              [activeIndex]=\"activeIndex\"\n              [controlClose]=\"controlClose\"\n              [style]=\"style\"\n              [styleClass]=\"styleClass\"\n              (onChange)=\"onChange($event)\"\n              (onClose)=\"onClose($event)\"\n              (activeIndexChange)=\"activeIndexChange($event)\">\n          <ng-container *ngFor=\"let tab of tabs\">\n              <zyfra-tab-panel [header]=\"tab.header\"\n                               [selected]=\"tab.selected\"\n                               [disabled]=\"tab.disabled\"\n                               [closable]=\"tab.closable\"\n                               [leftIcon]=\"tab.leftIcon\"\n                               [rightIcon]=\"tab.rightIcon\"\n                               [headerStyle]=\"tab.headerStyle\"\n                               [headerStyleClass]=\"tab.headerStyleClass\"\n                               [cache]=\"tab.cache\"\n                               [tooltip]=\"tab.tooltip\"\n                               [tooltipPosition]=\"tab.tooltipPosition\"\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\n                  <ng-template #header>\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\n                               [value]=\"tab.badgeValue\"\n                               [severity]=\"tab.severity\"></p-badge>\n                  </ng-template>\n\n                {{tab.content}}\n              </zyfra-tab-panel>\n          </ng-container>\n      </zyfra-tab-view>`,\n})"
                },
                {
                    "name": "OverflowTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SimpleWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Simple.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-tab-view\n      [class]=\"zyfraTabViewTagStyle\"\n      [activeIndex]=\"activeIndex\"\n      [controlClose]=\"controlClose\"\n      [style]=\"style\"\n      [styleClass]=\"styleClass\"\n      (onChange)=\"onChange($event)\"\n      (onClose)=\"onClose($event)\"\n      (activeIndexChange)=\"activeIndexChange($event)\"\n    >\n      <ng-container *ngFor=\"let tab of tabs\">\n        <zyfra-tab-panel\n          [header]=\"tab.header\"\n          [selected]=\"tab.selected\"\n          [disabled]=\"tab.disabled\"\n          [closable]=\"tab.closable\"\n          [leftIcon]=\"tab.leftIcon\"\n          [rightIcon]=\"tab.rightIcon\"\n          [headerStyle]=\"tab.headerStyle\"\n          [headerStyleClass]=\"tab.headerStyleClass\"\n          [cache]=\"tab.cache\"\n          [tooltip]=\"tab.tooltip\"\n          [tooltipPosition]=\"tab.tooltipPosition\"\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n        >\n          {{ tab.content }}\n        </zyfra-tab-panel>\n      </ng-container>\n    </zyfra-tab-view>\n  `,\n  props: {\n    ...args,\n  },\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ColGroup.ts": [
                {
                    "name": "ColGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th rowspan=\"3\">Product</th>\n          <th colspan=\"4\">Sale Rate</th>\n        </tr>\n        <tr>\n          <th colspan=\"2\">Sales</th>\n          <th colspan=\"2\">Profits</th>\n        </tr>\n        <tr>\n          <th>Last Year</th>\n          <th>This Year</th>\n          <th>Last Year</th>\n          <th>This Year</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\n        <tr [zyfraRow]=\"sale\">\n          <td>{{sale.product}}</td>\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"footer\">\n        <tr>\n          <td colspan=\"3\">Totals</td>\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    lastYearTotal: 3_283_772.0,\n    thisYearTotal: 1_541_925.0,\n  },\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts": [
                {
                    "name": "convertToNode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\n  let children;\n  const node: TreeNode = {\n    label: item.label,\n    data: item,\n    key: generateKey(),\n    parent\n  };\n  if (item.items) {\n    children = item.items.map(childItem => {\n      return convertToNode(childItem, node);\n    });\n  }\n  node.children = children;\n  return node;\n}"
                },
                {
                    "name": "flatNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\n}"
                },
                {
                    "name": "fromRubricatorNodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\n  const rubricatorNodes = [];\n  letters.forEach(letter => {\n    rubricatorNodes.push({\n      key: letter,\n      label: letter,\n      data: { label: letter },\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\n    });\n  });\n  return rubricatorNodes;\n}"
                },
                {
                    "name": "getPath",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\n  acc.push(node.parent);\n  return node.parent\n    ? getPath(node.parent, acc)\n    : acc.reverse();\n}"
                },
                {
                    "name": "sortByLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(a: TreeNode, b: TreeNode): number => {\n  if (a.label > b.label) {\n    return 1;\n  }\n  if (a.label < b.label) {\n    return -1;\n  }\n  return 0;\n}"
                }
            ],
            "libs/components/src/lib/table/_story/data.ts": [
                {
                    "name": "Customers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "defaultValue": "[\n  {\n    id: 1000,\n    name: 'James Butt',\n    country: {\n      name: 'Algeria',\n      code: 'dz'\n    },\n    company: 'Benton, John B Jr',\n    date: '13.09.2015',\n    status: 'unqualified',\n    verified: true,\n    activity: 17,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 70663\n  },\n  {\n    id: 1001,\n    name: 'Josephine Darakjy',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chanay, Jeffrey A Esq',\n    date: '09.02.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 0,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 82429\n  },\n  {\n    id: 1002,\n    name: 'Art Venere',\n    country: {\n      name: 'Panama',\n      code: 'pa'\n    },\n    company: 'Chemel, James L Cpa',\n    date: '13.05.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 28334\n  },\n  {\n    id: 1003,\n    name: 'Lenna Paprocki',\n    country: {\n      name: 'Slovenia',\n      code: 'si'\n    },\n    company: 'Feltz Printing Service',\n    date: '15.09.2020',\n    status: 'new',\n    verified: false,\n    activity: 37,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 88521\n  },\n  {\n    id: 1004,\n    name: 'Donette Foller',\n    country: {\n      name: 'South Africa',\n      code: 'za'\n    },\n    company: 'Printing Dimensions',\n    date: '20.05.2016',\n    status: 'proposal',\n    verified: true,\n    activity: 33,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 93905\n  },\n  {\n    id: 1005,\n    name: 'Simona Morasca',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Chapman, Ross E Esq',\n    date: '16.02.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 68,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 50041\n  },\n  {\n    id: 1006,\n    name: 'Mitsue Tollner',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Morlong Associates',\n    date: '19.02.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 58706\n  },\n  {\n    id: 1007,\n    name: 'Leota Dilliard',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Commercial Press',\n    date: '13.08.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 69,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 26640\n  },\n  {\n    id: 1008,\n    name: 'Sage Wieser',\n    country: {\n      name: 'Egypt',\n      code: 'eg'\n    },\n    company: 'Truhlar And Truhlar Attys',\n    date: '21.11.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 76,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 65369\n  },\n  {\n    id: 1009,\n    name: 'Kris Marrier',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'King, Christopher A Esq',\n    date: '07.07.2015',\n    status: 'proposal',\n    verified: false,\n    activity: 3,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 63451\n  },\n  {\n    id: 1010,\n    name: 'Minna Amigon',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'Dorl, James J Esq',\n    date: '07.11.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 38,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 71169\n  },\n  {\n    id: 1011,\n    name: 'Abel Maclead',\n    country: {\n      name: 'Singapore',\n      code: 'sg'\n    },\n    company: 'Rangoni Of Florence',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 87,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 96842\n  },\n  {\n    id: 1012,\n    name: 'Kiley Caldarera',\n    country: {\n      name: 'Serbia',\n      code: 'rs'\n    },\n    company: 'Feiner Bros',\n    date: '20.10.2015',\n    status: 'unqualified',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 92734\n  },\n  {\n    id: 1013,\n    name: 'Graciela Ruta',\n    country: {\n      name: 'Chile',\n      code: 'cl'\n    },\n    company: 'Buckley Miller & Wright',\n    date: '25.07.2016',\n    status: 'negotiation',\n    verified: false,\n    activity: 59,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 45250\n  },\n  {\n    id: 1014,\n    name: 'Cammy Albares',\n    country: {\n      name: 'Philippines',\n      code: 'ph'\n    },\n    company: 'Rousseaux, Michael Esq',\n    date: '25.06.2019',\n    status: 'new',\n    verified: true,\n    activity: 90,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 30236\n  },\n  {\n    id: 1015,\n    name: 'Mattie Poquette',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Century Communications',\n    date: '12.12.2017',\n    status: 'negotiation',\n    verified: false,\n    activity: 52,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 64533\n  },\n  {\n    id: 1016,\n    name: 'Meaghan Garufi',\n    country: {\n      name: 'Malaysia',\n      code: 'my'\n    },\n    company: 'Bolton, Wilbur Esq',\n    date: '04.07.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 31,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 37279\n  },\n  {\n    id: 1017,\n    name: 'Gladys Rim',\n    country: {\n      name: 'Netherlands',\n      code: 'nl'\n    },\n    company: 'T M Byxbee Company Pc',\n    date: '27.02.2020',\n    status: 'renewal',\n    verified: true,\n    activity: 48,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 27381\n  },\n  {\n    id: 1018,\n    name: 'Yuki Whobrey',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Farmers Insurance Group',\n    date: '21.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 16,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 9257\n  },\n  {\n    id: 1019,\n    name: 'Fletcher Flosi',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Post Box Services Plus',\n    date: '04.01.2016',\n    status: 'renewal',\n    verified: true,\n    activity: 19,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 67783\n  },\n  {\n    id: 1020,\n    name: 'Bette Nicka',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Sport En Art',\n    date: '21.10.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 4609\n  },\n  {\n    id: 1021,\n    name: 'Veronika Inouye',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'C 4 Network Inc',\n    date: '24.03.2017',\n    status: 'renewal',\n    verified: false,\n    activity: 72,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 26565\n  },\n  {\n    id: 1022,\n    name: 'Willard Kolmetz',\n    country: {\n      name: 'Tunisia',\n      code: 'tn'\n    },\n    company: 'Ingalls, Donald R Esq',\n    date: '15.04.2017',\n    status: 'renewal',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 75876\n  },\n  {\n    id: 1023,\n    name: 'Maryann Royster',\n    country: {\n      name: 'Belarus',\n      code: 'by'\n    },\n    company: 'Franklin, Peter L Esq',\n    date: '11.03.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 56,\n    representative: {\n      name: 'Elwin Sharvill',\n      image: 'elwinsharvill.png'\n    },\n    balance: 41121\n  },\n  {\n    id: 1024,\n    name: 'Alisha Slusarski',\n    country: {\n      name: 'Iceland',\n      code: 'is'\n    },\n    company: 'Wtlz Power 107 Fm',\n    date: '27.03.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 91691\n  },\n  {\n    id: 1025,\n    name: 'Allene Iturbide',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Ledecky, David Esq',\n    date: '20.02.2016',\n    status: 'qualified',\n    verified: true,\n    activity: 1,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 40137\n  },\n  {\n    id: 1026,\n    name: 'Chanel Caudy',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'Professional Image Inc',\n    date: '24.06.2018',\n    status: 'new',\n    verified: true,\n    activity: 26,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 21304\n  },\n  {\n    id: 1027,\n    name: 'Ezekiel Chui',\n    country: {\n      name: 'Ireland',\n      code: 'ie'\n    },\n    company: 'Sider, Donald C Esq',\n    date: '24.09.2016',\n    status: 'new',\n    verified: false,\n    activity: 76,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 60454\n  },\n  {\n    id: 1028,\n    name: 'Willow Kusko',\n    country: {\n      name: 'Romania',\n      code: 'ro'\n    },\n    company: 'U Pull It',\n    date: '11.04.2020',\n    status: 'qualified',\n    verified: true,\n    activity: 7,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 17565\n  },\n  {\n    id: 1029,\n    name: 'Bernardo Figeroa',\n    country: {\n      name: 'Israel',\n      code: 'il'\n    },\n    company: 'Clark, Richard Cpa',\n    date: '04.11.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 81,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 17774\n  },\n  {\n    id: 1030,\n    name: 'Ammie Corrio',\n    country: {\n      name: 'Hungary',\n      code: 'hu'\n    },\n    company: 'Moskowitz, Barry S',\n    date: '11.06.2016',\n    status: 'negotiation',\n    verified: true,\n    activity: 56,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 49201\n  },\n  {\n    id: 1031,\n    name: 'Francine Vocelka',\n    country: {\n      name: 'Honduras',\n      code: 'hn'\n    },\n    company: 'Cascade Realty Advisors Inc',\n    date: '02.08.2017',\n    status: 'qualified',\n    verified: true,\n    activity: 94,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 67126\n  },\n  {\n    id: 1032,\n    name: 'Ernie Stenseth',\n    country: {\n      name: 'Australia',\n      code: 'au'\n    },\n    company: 'Knwz Newsradio',\n    date: '06.06.2018',\n    status: 'renewal',\n    verified: true,\n    activity: 68,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 76017\n  },\n  {\n    id: 1033,\n    name: 'Albina Glick',\n    country: {\n      name: 'Ukraine',\n      code: 'ua'\n    },\n    company: 'Giampetro, Anthony D',\n    date: '08.08.2019',\n    status: 'proposal',\n    verified: true,\n    activity: 85,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 91201\n  },\n  {\n    id: 1034,\n    name: 'Alishia Sergi',\n    country: {\n      name: 'Qatar',\n      code: 'qa'\n    },\n    company: 'Milford Enterprises Inc',\n    date: '19.05.2018',\n    status: 'negotiation',\n    verified: false,\n    activity: 46,\n    representative: {\n      name: 'Ivan Magalhaes',\n      image: 'ivanmagalhaes.png'\n    },\n    balance: 12237\n  },\n  {\n    id: 1035,\n    name: 'Solange Shinko',\n    country: {\n      name: 'Cameroon',\n      code: 'cm'\n    },\n    company: 'Mosocco, Ronald A',\n    date: '12.02.2015',\n    status: 'qualified',\n    verified: true,\n    activity: 32,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 34072\n  },\n  {\n    id: 1036,\n    name: 'Jose Stockham',\n    country: {\n      name: 'Italy',\n      code: 'it'\n    },\n    company: 'Tri State Refueler Co',\n    date: '25.04.2018',\n    status: 'qualified',\n    verified: true,\n    activity: 77,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 94909\n  },\n  {\n    id: 1037,\n    name: 'Rozella Ostrosky',\n    country: {\n      name: 'Venezuela',\n      code: 've'\n    },\n    company: 'Parkway Company',\n    date: '27.02.2016',\n    status: 'unqualified',\n    verified: true,\n    activity: 66,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 57245\n  },\n  {\n    id: 1038,\n    name: 'Valentine Gillian',\n    country: {\n      name: 'Paraguay',\n      code: 'py'\n    },\n    company: 'Fbs Business Finance',\n    date: '17.09.2019',\n    status: 'qualified',\n    verified: true,\n    activity: 25,\n    representative: {\n      name: 'Bernardo Dominic',\n      image: 'bernardodominic.png'\n    },\n    balance: 75502\n  },\n  {\n    id: 1039,\n    name: 'Kati Rulapaugh',\n    country: {\n      name: 'Puerto Rico',\n      code: 'pr'\n    },\n    company: 'Eder Assocs Consltng Engrs Pc',\n    date: '03.12.2016',\n    status: 'renewal',\n    verified: false,\n    activity: 51,\n    representative: {\n      name: 'Ioni Bowcher',\n      image: 'ionibowcher.png'\n    },\n    balance: 82075\n  },\n  {\n    id: 1040,\n    name: 'Youlanda Schemmer',\n    country: {\n      name: 'Bolivia',\n      code: 'bo'\n    },\n    company: 'Tri M Tool Inc',\n    date: '15.12.2017',\n    status: 'negotiation',\n    verified: true,\n    activity: 49,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 19208\n  },\n  {\n    id: 1041,\n    name: 'Dyan Oldroyd',\n    country: {\n      name: 'Argentina',\n      code: 'ar'\n    },\n    company: 'International Eyelets Inc',\n    date: '02.02.2017',\n    status: 'qualified',\n    verified: false,\n    activity: 5,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 50194\n  },\n  {\n    id: 1042,\n    name: 'Roxane Campain',\n    country: {\n      name: 'France',\n      code: 'fr'\n    },\n    company: 'Rapid Trading Intl',\n    date: '25.12.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 100,\n    representative: {\n      name: 'Anna Fali',\n      image: 'annafali.png'\n    },\n    balance: 77714\n  },\n  {\n    id: 1043,\n    name: 'Lavera Perin',\n    country: {\n      name: 'Vietnam',\n      code: 'vn'\n    },\n    company: 'Abc Enterprises Inc',\n    date: '10.04.2018',\n    status: 'qualified',\n    verified: false,\n    activity: 71,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 35740\n  },\n  {\n    id: 1044,\n    name: 'Erick Ferencz',\n    country: {\n      name: 'Belgium',\n      code: 'be'\n    },\n    company: 'Cindy Turner Associates',\n    date: '06.05.2018',\n    status: 'unqualified',\n    verified: true,\n    activity: 54,\n    representative: {\n      name: 'Amy Elsner',\n      image: 'amyelsner.png'\n    },\n    balance: 30790\n  },\n  {\n    id: 1045,\n    name: 'Fatima Saylors',\n    country: {\n      name: 'Canada',\n      code: 'ca'\n    },\n    company: 'Stanton, James D Esq',\n    date: '10.07.2019',\n    status: 'renewal',\n    verified: true,\n    activity: 93,\n    representative: {\n      name: 'Onyama Limba',\n      image: 'onyamalimba.png'\n    },\n    balance: 52343\n  },\n  {\n    id: 1046,\n    name: 'Jina Briddick',\n    country: {\n      name: 'Mexico',\n      code: 'mx'\n    },\n    company: 'Grace Pastries Inc',\n    date: '19.02.2018',\n    status: 'unqualified',\n    verified: false,\n    activity: 97,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 53966\n  },\n  {\n    id: 1047,\n    name: 'Kanisha Waycott',\n    country: {\n      name: 'Ecuador',\n      code: 'ec'\n    },\n    company: 'Schroer, Gene E Esq',\n    date: '27.11.2019',\n    status: 'new',\n    verified: false,\n    activity: 80,\n    representative: {\n      name: 'Xuxue Feng',\n      image: 'xuxuefeng.png'\n    },\n    balance: 9920\n  },\n  {\n    id: 1048,\n    name: 'Emerson Bowley',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Knights Inn',\n    date: '24.11.2018',\n    status: 'new',\n    verified: false,\n    activity: 63,\n    representative: {\n      name: 'Stephen Shaw',\n      image: 'stephenshaw.png'\n    },\n    balance: 78069\n  },\n  {\n    id: 1049,\n    name: 'Blair Malet',\n    country: {\n      name: 'Finland',\n      code: 'fi'\n    },\n    company: 'Bollinger Mach Shp & Shipyard',\n    date: '19.04.2018',\n    status: 'new',\n    verified: true,\n    activity: 92,\n    representative: {\n      name: 'Asiya Javayant',\n      image: 'asiyajavayant.png'\n    },\n    balance: 65005\n  }\n]"
                },
                {
                    "name": "Products",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
                },
                {
                    "name": "ProductsOrdersSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductOrder[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '1000',\n        productCode: 'f230fh0g3',\n        date: '13.08.2020',\n        amount: 65,\n        quantity: 1,\n        customer: 'David James',\n        status: 'PENDING'\n      },\n      {\n        id: '1001',\n        productCode: 'f230fh0g3',\n        date: '14.05.2020',\n        amount: 130,\n        quantity: 2,\n        customer: 'Leon Rodrigues',\n        status: 'DELIVERED'\n      },\n      {\n        id: '1002',\n        productCode: 'f230fh0g3',\n        date: '04.01.2019',\n        amount: 65,\n        quantity: 1,\n        customer: 'Juan Alejandro',\n        status: 'RETURNED'\n      },\n      {\n        id: '1003',\n        productCode: 'f230fh0g3',\n        date: '13.09.2020',\n        amount: 195,\n        quantity: 3,\n        customer: 'Claire Morrow',\n        status: 'CANCELLED'\n      }\n    ]\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '2000',\n        productCode: 'nvklal433',\n        date: '14.05.2020',\n        amount: 72,\n        quantity: 1,\n        customer: 'Maisha Jefferson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '2001',\n        productCode: 'nvklal433',\n        date: '28.02.2020',\n        amount: 144,\n        quantity: 2,\n        customer: 'Octavia Murillo',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '3000',\n        productCode: 'zz21cz3c1',\n        date: '05.07.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Stacey Leja',\n        status: 'DELIVERED'\n      },\n      {\n        id: '3001',\n        productCode: 'zz21cz3c1',\n        date: '06.02.2020',\n        amount: 79,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: []\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '5000',\n        productCode: 'h456wer53',\n        date: '05.09.2020',\n        amount: 60,\n        quantity: 4,\n        customer: 'Mayumi Misaki',\n        status: 'PENDING'\n      },\n      {\n        id: '5001',\n        productCode: 'h456wer53',\n        date: '16.04.2019',\n        amount: 2,\n        quantity: 30,\n        customer: 'Francesco Salvatore',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '6000',\n        productCode: 'av2231fwg',\n        date: '25.01.2020',\n        amount: 120,\n        quantity: 1,\n        customer: 'Isabel Sinclair',\n        status: 'RETURNED'\n      },\n      {\n        id: '6001',\n        productCode: 'av2231fwg',\n        date: '12.03.2019',\n        amount: 240,\n        quantity: 2,\n        customer: 'Lionel Clifford',\n        status: 'DELIVERED'\n      },\n      {\n        id: '6002',\n        productCode: 'av2231fwg',\n        date: '05.05.2019',\n        amount: 120,\n        quantity: 1,\n        customer: 'Cody Chavez',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '7000',\n        productCode: 'bib36pfvm',\n        date: '24.02.2020',\n        amount: 32,\n        quantity: 1,\n        customer: 'Arvin Darci',\n        status: 'DELIVERED'\n      },\n      {\n        id: '7001',\n        productCode: 'bib36pfvm',\n        date: '14.01.2020',\n        amount: 64,\n        quantity: 2,\n        customer: 'Izzy Jones',\n        status: 'PENDING'\n      }\n    ]\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5,\n    orders: [\n      {\n        id: '8000',\n        productCode: 'mbvjkgip5',\n        date: '19.06.2020',\n        amount: 34,\n        quantity: 1,\n        customer: 'Jennifer Smith',\n        status: 'DELIVERED'\n      }\n    ]\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4,\n    orders: [\n      {\n        id: '9000',\n        productCode: 'vbb124btr',\n        date: '05.01.2020',\n        amount: 99,\n        quantity: 1,\n        customer: 'Jeanfrancois David',\n        status: 'DELIVERED'\n      },\n      {\n        id: '9001',\n        productCode: 'vbb124btr',\n        date: '19.01.2020',\n        amount: 198,\n        quantity: 2,\n        customer: 'Ivar Greenwood',\n        status: 'RETURNED'\n      }\n    ]\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3,\n    orders: [\n      {\n        id: '10000',\n        productCode: 'cm230f032',\n        date: '24.06.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Kadeem Mujtaba',\n        status: 'PENDING'\n      },\n      {\n        id: '10001',\n        productCode: 'cm230f032',\n        date: '11.05.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Ashley Wickens',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10002',\n        productCode: 'cm230f032',\n        date: '07.02.2019',\n        amount: 299,\n        quantity: 1,\n        customer: 'Julie Johnson',\n        status: 'DELIVERED'\n      },\n      {\n        id: '10003',\n        productCode: 'cm230f032',\n        date: '26.04.2020',\n        amount: 299,\n        quantity: 1,\n        customer: 'Tony Costa',\n        status: 'CANCELLED'\n      }\n    ]\n  }\n]"
                },
                {
                    "name": "ProductsSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "defaultValue": "[\n  {\n    id: '1000',\n    code: 'f230fh0g3',\n    name: 'Bamboo Watch',\n    description: 'Product Description',\n    image: 'bamboo-watch.jpg',\n    price: 65,\n    category: 'Accessories',\n    quantity: 24,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1001',\n    code: 'nvklal433',\n    name: 'Black Watch',\n    description: 'Product Description',\n    image: 'black-watch.jpg',\n    price: 72,\n    category: 'Accessories',\n    quantity: 61,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1002',\n    code: 'zz21cz3c1',\n    name: 'Blue Band',\n    description: 'Product Description',\n    image: 'blue-band.jpg',\n    price: 79,\n    category: 'Fitness',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1003',\n    code: '244wgerg2',\n    name: 'Blue T-Shirt',\n    description: 'Product Description',\n    image: 'blue-t-shirt.jpg',\n    price: 29,\n    category: 'Clothing',\n    quantity: 25,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1004',\n    code: 'h456wer53',\n    name: 'Bracelet',\n    description: 'Product Description',\n    image: 'bracelet.jpg',\n    price: 15,\n    category: 'Accessories',\n    quantity: 73,\n    inventoryStatus: 'INSTOCK',\n    rating: 4\n  },\n  {\n    id: '1005',\n    code: 'av2231fwg',\n    name: 'Brown Purse',\n    description: 'Product Description',\n    image: 'brown-purse.jpg',\n    price: 120,\n    category: 'Accessories',\n    quantity: 0,\n    inventoryStatus: 'OUTOFSTOCK',\n    rating: 4\n  },\n  {\n    id: '1006',\n    code: 'bib36pfvm',\n    name: 'Chakra Bracelet',\n    description: 'Product Description',\n    image: 'chakra-bracelet.jpg',\n    price: 32,\n    category: 'Accessories',\n    quantity: 5,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 3\n  },\n  {\n    id: '1007',\n    code: 'mbvjkgip5',\n    name: 'Galaxy Earrings',\n    description: 'Product Description',\n    image: 'galaxy-earrings.jpg',\n    price: 34,\n    category: 'Accessories',\n    quantity: 23,\n    inventoryStatus: 'INSTOCK',\n    rating: 5\n  },\n  {\n    id: '1008',\n    code: 'vbb124btr',\n    name: 'Game Controller',\n    description: 'Product Description',\n    image: 'game-controller.jpg',\n    price: 99,\n    category: 'Electronics',\n    quantity: 2,\n    inventoryStatus: 'LOWSTOCK',\n    rating: 4\n  },\n  {\n    id: '1009',\n    code: 'cm230f032',\n    name: 'Gaming Set',\n    description: 'Product Description',\n    image: 'gaming-set.jpg',\n    price: 299,\n    category: 'Electronics',\n    quantity: 63,\n    inventoryStatus: 'INSTOCK',\n    rating: 3\n  }\n]"
                },
                {
                    "name": "Sales",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sale[]",
                    "defaultValue": "[\n  { product: 'Bamboo Watch', lastYearSale: 51, thisYearSale: 40, lastYearProfit: 54406, thisYearProfit: 43342 },\n  { product: 'Black Watch', lastYearSale: 83, thisYearSale: 9, lastYearProfit: 423132, thisYearProfit: 312122 },\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\n  { product: 'Blue T-Shirt', lastYearSale: 49, thisYearSale: 22, lastYearProfit: 745232, thisYearProfit: 65323 },\n  { product: 'Brown Purse', lastYearSale: 17, thisYearSale: 79, lastYearProfit: 643242, thisYearProfit: 500332 },\n  { product: 'Chakra Bracelet', lastYearSale: 52, thisYearSale: 65, lastYearProfit: 421132, thisYearProfit: 150005 },\n  { product: 'Galaxy Earrings', lastYearSale: 82, thisYearSale: 12, lastYearProfit: 131211, thisYearProfit: 100214 },\n  { product: 'Game Controller', lastYearSale: 44, thisYearSale: 45, lastYearProfit: 66442, thisYearProfit: 53322 },\n  { product: 'Gaming Set', lastYearSale: 90, thisYearSale: 56, lastYearProfit: 765442, thisYearProfit: 296232 },\n  { product: 'Gold Phone Case', lastYearSale: 75, thisYearSale: 54, lastYearProfit: 21212, thisYearProfit: 12533 }\n]"
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuccessMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraButtonComponent,\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Mini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoValueDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraProgressBarComponent>",
                    "defaultValue": "(args: ZyfraProgressBarComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts": [
                {
                    "name": "DangerMini",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraToggleButtonComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraToggleButtonComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "DEFAULT_SETTINGS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SettingsConfig",
                    "defaultValue": "{\n  singleGroup: false,\n  selectionMode: 'single',\n  selectedSize: 'standard'\n}"
                },
                {
                    "name": "DEFAULT_TOOLBAR_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ToolbarConfig",
                    "defaultValue": "{\n  filter: false,\n  group: false,\n  filesMode: false,\n  rubricatorMode: false,\n  search: false,\n  closeAll: false,\n  refresh: false,\n}"
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
                {
                    "name": "DefaultRelativeMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\n  time: [\n    {\n      id: 'current',\n      groupId: 'time',\n      icon: 'date-asterisk',\n      label: 'Текущее время',\n    },\n    {\n      id: 'midnight',\n      groupId: 'time',\n      icon: 'date-now',\n      label: 'Полночь текущих суток',\n    },\n  ],\n\n  direction: [\n    { id: 'plus', groupId: 'direction', icon: 'plus-circle', label: 'Смещение вперед' },\n    {\n      id: 'minus',\n      groupId: 'direction',\n      icon: 'delete-minus-circle',\n      label: 'Смещение назад',\n    },\n  ],\n\n  period: [\n    {\n      id: 'year',\n      groupId: 'period',\n      icon: 'date-year',\n      label: 'Год',\n    },\n    {\n      id: 'month',\n      groupId: 'period',\n      icon: 'date-month',\n      label: 'Месяц',\n    },\n    {\n      id: 'day',\n      groupId: 'period',\n      icon: 'date-day',\n      label: 'День',\n    },\n    {\n      id: 'hour',\n      groupId: 'period',\n      icon: 'date-hour',\n      label: 'Час',\n    },\n    {\n      id: 'minute',\n      groupId: 'period',\n      icon: 'date-minute',\n      label: 'Минута',\n    },\n    {\n      id: 'second',\n      groupId: 'period',\n      icon: 'date-second',\n      label: 'Секунда',\n    },\n  ],\n} as const"
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts": [
                {
                    "name": "directionMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<string, RelativeDateDirectionId>([\n  ['-', 'minus'],\n  ['+', 'plus'],\n])"
                },
                {
                    "name": "MatchPattern",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'(T|\\\\*)?(\\\\+|\\\\-)?(\\\\d+)?(Y|M|d|h|m|s)?'"
                },
                {
                    "name": "periodMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<string, RelativeDatePeriodId>([\n  ['Y', 'year'],\n  ['M', 'month'],\n  ['d', 'day'],\n  ['h', 'hour'],\n  ['m', 'minute'],\n  ['s', 'second'],\n])"
                },
                {
                    "name": "renderDirectionMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<RelativeDateDirectionId, string>([\n  ['minus', '-'],\n  ['plus', '+'],\n])"
                },
                {
                    "name": "renderPeriodMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<RelativeDatePeriodId, string>([\n  ['year', 'Y'],\n  ['month', 'M'],\n  ['day', 'd'],\n  ['hour', 'h'],\n  ['minute', 'm'],\n  ['second', 's'],\n])"
                },
                {
                    "name": "renderTimeMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<RelativeDateTimeId, string>([\n  ['current', '*'],\n  ['midnight', 'T'],\n])"
                },
                {
                    "name": "timeMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<string, RelativeDateTimeId>([\n  ['*', 'current'],\n  ['T', 'midnight'],\n  ['t', 'midnight'], // Can be optional\n])"
                }
            ],
            "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts": [
                {
                    "name": "DisabledRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "FormControlRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormControlTemplate.bind({})"
                },
                {
                    "name": "FormControlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\n  template: `\n<div class=\"p-radiobutton-group\">\n    <ng-container *ngFor=\"let item of items\">\n      <zyfra-radio-button\n        [name]=\"name\"\n        [styleClass]=\"styleClass\"\n        [label]=\"item.label\"\n        [value]=\"item.value\"\n        [disabled]=\"disabled\"\n        [formControl]=\"control\"\n        (onClick)=\"onClick($event)\"\n        (ngModelChange)=\"ngModelChange($event)\"\n        (onFocus)=\"onFocus($event)\"\n        (onBlur)=\"onBlur($event)\"\n      ></zyfra-radio-button>\n    <br/>\n  </ng-container>\n  </div>\n  ` + formControlTemplateChunk,\n  props: {\n    ...args,\n    items: items,\n    disabledPink: true,\n    ngModelChange: () => {},\n    control: new FormControl('red', [Validators.required]),\n  },\n})"
                },
                {
                    "name": "formControlTemplateChunk",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<div style=\"font-family: var(--fontFamily);\">\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\n    <br>\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\n    <br>\n    </div>\n    <zyfra-button\n      label=\"toggle disable/enable\"\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\n    ></zyfra-button>\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\n`"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'red',\n    value: 'red',\n  },\n  {\n    label: 'black',\n    value: 'black',\n  },\n  {\n    label: 'blue',\n    value: 'blue',\n  },\n  {\n    label: 'pink',\n    value: 'pink',\n  },\n  {\n    label: 'Не заполнено',\n    value: null,\n  },\n]"
                },
                {
                    "name": "MiniRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleRadio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SimpleTemplate.bind({})"
                },
                {
                    "name": "SimpleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRadioButtonComponent<string>>",
                    "defaultValue": "(args) => ({\n  template: `\n  <div class=\"p-radiobutton-group\">\n    <ng-container *ngFor=\"let item of items\">\n      <zyfra-radio-button\n        [name]=\"name\"\n        [styleClass]=\"styleClass\"\n        [label]=\"item.label\"\n        [value]=\"item.value\"\n        [disabled]=\"disabled\"\n        [(ngModel)]=\"model\"\n        (onClick)=\"onClick($event)\"\n        (ngModelChange)=\"ngModelChange($event)\"\n        (onFocus)=\"onFocus($event)\"\n        (onBlur)=\"onBlur($event)\"\n      ></zyfra-radio-button>\n    <br/>\n  </ng-container>\n  </div>\n`,\n  props: {\n    ...args,\n    items: items,\n    ngModelChange: () => {},\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/EditCell.ts": [
                {
                    "name": "EditCell",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n               {{ product.code}}\n            </zyfra-cell-editor>\n          </td>\n\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td zyfraEditableColumn>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    editComplete: consoleLogAction('editComplete'),\n    editCancel: consoleLogAction('editCancel'),\n    editInit: consoleLogAction('editInit'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/EditRow.ts": [
                {
                    "name": "EditRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [editMode]=\"editMode\"\n      [responsiveLayout]=\"responsiveLayout\"\n      (editInit)=\"editInit($event)\"\n      (editComplete)=\"editComplete($event)\"\n      (editCancel)=\"editCancel($event)\"\n      (rowsChange)=\"rowsChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Category</th>\n          <th>Quantity</th>\n          <th style=\"width:8rem\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.code\">\n              {{product.code}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.name\">\n              {{product.name}}\n            </zyfra-cell-editor>\n          </td>\n          <td>\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\n              {{product.inventoryStatus}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: right;\">\n            <zyfra-cell-editor [(value)]=\"product.price\">\n              <ng-template zyfraTableTemplate=\"input\">\n                <input type=\"text\" [(ngModel)]=\"product.price\">\n              </ng-template>\n              {{product.price | currency: 'USD'}}\n            </zyfra-cell-editor>\n          </td>\n          <td style=\"text-align: center; font-size: 16px;\">\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5; cursor: pointer;\">\n              <i class=\"zyfra-icon editor-mode\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65; cursor: pointer;\">\n              <i class=\"pi pi-check\"></i>\n            </button>\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050; cursor: pointer;\">\n              <i class=\"pi pi-times\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    editComplete: action('editComplete'),\n    editCancel: action('editCancel'),\n    editInit: action('editInit'),\n    statuses: [\n      { label: 'In Stock', value: 'INSTOCK' },\n      { label: 'Low Stock', value: 'LOWSTOCK' },\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' },\n    ],\n    clonedProducts: {} as { [s: string]: Product },\n    onRowEditInit(product: Product): void {\n      this.clonedProducts[product.id] = { ...product };\n    },\n    onRowEditSave(product: Product): void {\n      if (product.price > 0) {\n        delete this.clonedProducts[product.id];\n      }\n    },\n    onRowEditCancel(product: Product, index: number): void {\n      this.value[index] = this.clonedProducts[product.id];\n      delete this.clonedProducts[product.id];\n    },\n  },\n})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/en_US.ts": [
                {
                    "name": "en",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  \"dayNames\": [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ],\n  \"dayNamesShort\": [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ],\n  \"dayNamesMin\": [\n    \"Su\",\n    \"Mo\",\n    \"Tu\",\n    \"We\",\n    \"Th\",\n    \"Fr\",\n    \"Sa\"\n  ],\n  \"monthNames\": [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  \"monthNamesShort\": [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  \"dateFormat\": \"mm/dd/yy\",\n  \"today\": \"Today\",\n  \"weekHeader\": \"Wk\",\n  \"clear\": \"Clear\"\n}"
                }
            ],
            "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts": [
                {
                    "name": "EXPORTED_DECLARATIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[ZyfraTooltipDirective, ZyfraTooltipComponent]"
                }
            ],
            "libs/components/src/lib/tree-table/_story/data.ts": [
                {
                    "name": "FileSystem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    data: {\n      name: 'Applications',\n      size: '200mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Angular',\n          size: '25mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'angular.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'cli.app',\n              size: '10mb',\n              type: 'Application'\n            }\n          },\n          {\n            data: {\n              name: 'mobile.app',\n              size: '5mb',\n              type: 'Application'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'editor.app',\n          size: '25mb',\n          type: 'Application'\n        }\n      },\n      {\n        data: {\n          name: 'settings.app',\n          size: '50mb',\n          type: 'Application'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Cloud',\n      size: '20mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'backup-1.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      },\n      {\n        data: {\n          name: 'backup-2.zip',\n          size: '10mb',\n          type: 'Zip'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Desktop',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'note-meeting.txt',\n          size: '50kb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'note-todo.txt',\n          size: '100kb',\n          type: 'Text'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Documents',\n      size: '75kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Work',\n          size: '55kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Expenses.doc',\n              size: '30kb',\n              type: 'Document'\n            }\n          },\n          {\n            data: {\n              name: 'Resume.doc',\n              size: '25kb',\n              type: 'Resume'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Home',\n          size: '20kb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'Invoices',\n              size: '20kb',\n              type: 'Text'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Downloads',\n      size: '25mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'Spanish',\n          size: '10mb',\n          type: 'Folder'\n        },\n        children: [\n          {\n            data: {\n              name: 'tutorial-a1.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          },\n          {\n            data: {\n              name: 'tutorial-a2.txt',\n              size: '5mb',\n              type: 'Text'\n            }\n          }\n        ]\n      },\n      {\n        data: {\n          name: 'Travel',\n          size: '15mb',\n          type: 'Text'\n        },\n        children: [\n          {\n            data: {\n              name: 'Hotel.pdf',\n              size: '10mb',\n              type: 'PDF'\n            }\n          },\n          {\n            data: {\n              name: 'Flight.pdf',\n              size: '5mb',\n              type: 'PDF'\n            }\n          }\n        ]\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Main',\n      size: '50mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'bin',\n          size: '50kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'etc',\n          size: '100kb',\n          type: 'Link'\n        }\n      },\n      {\n        data: {\n          name: 'var',\n          size: '100kb',\n          type: 'Link'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Other',\n      size: '5mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'todo.txt',\n          size: '3mb',\n          type: 'Text'\n        }\n      },\n      {\n        data: {\n          name: 'logo.png',\n          size: '2mb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Pictures',\n      size: '150kb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'barcelona.jpg',\n          size: '90kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'primeng.png',\n          size: '30kb',\n          type: 'Picture'\n        }\n      },\n      {\n        data: {\n          name: 'prime.jpg',\n          size: '30kb',\n          type: 'Picture'\n        }\n      }\n    ]\n  },\n  {\n    data: {\n      name: 'Videos',\n      size: '1500mb',\n      type: 'Folder'\n    },\n    children: [\n      {\n        data: {\n          name: 'primefaces.mkv',\n          size: '1000mb',\n          type: 'Video'\n        }\n      },\n      {\n        data: {\n          name: 'intro.avi',\n          size: '500mb',\n          type: 'Video'\n        }\n      }\n    ]\n  }\n]"
                },
                {
                    "name": "Sales",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\n    expanded: true,\n    children: [\n      {\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\n        expanded: true,\n        children: [\n          {\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\n          },\n          {\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\n          }\n        ]\n      },\n      {\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\n    children: [\n      {\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\n      },\n      {\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\n    children: [\n      {\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\n      },\n      {\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\n    children: [\n      {\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\n      },\n      {\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\n    children: [\n      {\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\n    children: [\n      {\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\n      },\n      {\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\n    children: [\n      {\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\n      },\n      {\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\n    children: [\n      {\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\n      },\n      {\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\n      }\n    ]\n  },\n  {\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\n    children: [\n      {\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\n      },\n      {\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\n      }\n    ]\n  },\n  {\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\n    children: [\n      {\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\n      },\n      {\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\n      }\n    ]\n  }\n]"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Filter.ts": [
                {
                    "name": "Filter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Filter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <zyfra-table-column-filter\n                field=\"representative\"\n                matchMode=\"in\"\n                display=\"menu\"\n                [showMatchModes]=\"false\"\n                [showOperator]=\"false\"\n                [showAddButton]=\"false\"\n              >\n                <ng-template zyfraTableTemplate=\"header\">\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                    <span class=\"p-text-bold\">Agent Picker</span>\n                  </div>\n                </ng-template>\n\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                   filter testing\n                </ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n              </zyfra-table-column-filter>\n            </div>\n          </th>\n          <th>\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n            </div>\n          </th>\n          <th style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n            </div>\n          </th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n    onFilter: consoleLogAction('onFilter'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts": [
                {
                    "name": "FilterSortSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <div style=\"font-family: Inter, sans-serif;\">\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме\n      локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает\n      корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\n    </div>\n\n    <zyfra-table\n      #dt\n      [title]=\"title\"\n      [value]=\"value\"\n      [dataKey]=\"dataKey\"\n      [lazy]=\"true\"\n      [rows]=\"rows\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      [paginator]=\"paginator\"\n      [globalFilterFields]=\"globalFilterFields\"\n      (page)=\"page($event)\"\n      (onFilter)=\"onFilter($event)\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Name\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"country.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Country\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"representative.name\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Agent\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter\n                  field=\"representative\"\n                  matchMode=\"in\"\n                  display=\"menu\"\n                  [showMatchModes]=\"false\"\n                  [showOperator]=\"false\"\n                  [showAddButton]=\"false\"\n                >\n                  <ng-template zyfraTableTemplate=\"header\">\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\n                      <span class=\"p-text-bold\">Agent Picker</span>\n                    </div>\n                  </ng-template>\n\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\n                     filter testing\n                  </ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"date\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Date\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"balance\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Balance\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"status\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Status\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\n                </zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"activity\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Activity\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\n            </div>\n          </th>\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\n              Verified\n              <div style=\"display: flex; align-items: center;\">\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\n              </div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span class=\"image-text\">{{customer.representative.name}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.date}}\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.balance | currency:'USD':'symbol'}}\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"text-align: right;\">\n            {{customer.activity}}\n          </td>\n          <td class=\"p-text-center\">\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"7\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n    onFilter: consoleLogAction('onFilter'),\n    valueChange: action('valueChange'),\n    onSort: consoleLogAction('onSort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/FrozenRows.ts": [
                {
                    "name": "FrozenRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [frozenValue]=\"frozenValue\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n          <th style=\"flex: 0 0 45px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\n              <i class=\"pi pi-lock-open\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n          <td style=\"flex: 0 0 45px\">\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\n              <i class=\"pi pi-lock\"></i>\n            </button>\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    toggleLock(data, frozen, index): void {\n      if (frozen) {\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\n        this.value.push(data);\n      } else {\n        this.value = this.value.filter((c, i) => i !== index);\n        this.frozenValue.push(data);\n      }\n\n      this.value.sort((val1, val2) => {\n        return val1.id < val2.id ? -1 : 1;\n      });\n    },\n  },\n})"
                }
            ],
            "libs/components/src/lib/nav-menu/utils/generateKey.ts": [
                {
                    "name": "generateKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
                }
            ],
            "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts": [
                {
                    "name": "Group",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDropdownComponent>",
                    "defaultValue": "args => ({\n  component: ZyfraDropdownComponent,\n  template: `<div>\n    <zyfra-dropdown\n      [(ngModel)]=\"value\"\n      [options]=\"options\"\n      [optionLabel]=\"optionLabel\"\n      [placeholder]=\"placeholder\"\n      [showClear]=\"showClear\"\n      [label]=\"label\"\n      [style]=\"{ width: '360px' }\"\n      [group]=\"group\"\n      [mini]=\"mini\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      [filter]=\"filter\"\n      (onChange)=\"onChange($event)\"\n      (onClick)=\"onClick($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-dropdown>\n    </div>\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\n      <p>Selected value:</p>\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\n    </div>\n  `,\n  props: {\n    ...args,\n    onChange: event => action('onChange')({ value: event.value, ...event }),\n    onClick: action('onClick'),\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
                },
                {
                    "name": "VirtualScroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts": [
                {
                    "name": "GroupWithContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateWithContent.bind({})"
                },
                {
                    "name": "SimpleWithContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateWithContent.bind({})"
                },
                {
                    "name": "TemplateWithContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDropdownWithContentComponent>",
                    "defaultValue": "args => ({\r\n  component: ZyfraDropdownWithContentComponent,\r\n  template: `\r\n    <div>\r\n       <zyfra-dropdown-with-content\r\n        [(ngModel)]=\"value\"\r\n        [options]=\"options\"\r\n        [optionLabel]=\"optionLabel\"\r\n        [placeholder]=\"placeholder\"\r\n        [showClear]=\"showClear\"\r\n        [label]=\"label\"\r\n        [mini]=\"mini\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        [group]=\"group\"\r\n        [virtualScroll]=\"virtualScroll\"\r\n        [itemSize]=\"itemSize\"\r\n        [filter]=\"filter\"\r\n        [style]=\"{ width: '360px' }\"\r\n        (onChange)=\"onChange($event)\"\r\n        (onClick)=\"onClick($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n        (onShow)=\"onShow($event)\"\r\n        (onHide)=\"onHide($event)\"\r\n      >\r\n        <span left  style=\"width: 15px; height: 15px; background: pink; border-radius: 50%; margin: 5px;\"></span>\r\n        <div right style=\"display: flex; align-items: center;\">\r\n          <span style=\"width: 25px; height: 25px; background: cadetblue; border-radius: 50%;\"></span>\r\n          <span style=\"width: 25px; height: 25px; background: wheat; border-radius: 50%; margin: 5px;\"></span>\r\n        </div>\r\n      </zyfra-dropdown-with-content>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
                }
            ],
            "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1',\n    icon: 'zyfra-icon files-file',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus',\n      items: [\n        {\n          label: 'Bookmark',\n          icon: 'zyfra-icon   bookmarks-bookmark',\n          items: [\n            {\n              label: 'Video',\n              icon: 'zyfra-icon camera-video'\n            },\n            {\n              label: 'Bookmark',\n              icon: 'zyfra-icon   bookmarks-bookmark',\n              items: [\n                {\n                  label: 'Video',\n                  icon: 'zyfra-icon camera-video',\n                }\n              ]\n            }\n          ]\n        },\n        {\n          label: 'Video',\n          icon: 'zyfra-icon camera-video',\n        }\n      ]\n    },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon delete',\n      },\n      {\n        label: 'Export',\n        icon: 'zyfra-icon network-external-link'\n      }\n    ]\n  },\n  { label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon settings-power',\n    items: [{\n      label: 'New',\n      icon: 'zyfra-icon add-plus'\n    }]\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: 'zyfra-icon editor-mode',\n    items: [\n      {\n        label: 'Left',\n        icon: 'zyfra-icon editor-format-align-left'\n      },\n      {\n        label: 'Right',\n        icon: 'zyfra-icon editor-format-align-right'\n      },\n      {\n        label: 'Center',\n        icon: 'zyfra-icon editor-format-align-center'\n      },\n      {\n        label: 'Justify',\n        icon: 'zyfra-icon editor-format-align-justify'\n      }]\n  },\n  {\n    label: 'Наименование вкладки 5',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 6',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 7',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 8',\n    icon: 'zyfra-icon settings-power'\n  },\n  {\n    label: 'Наименование вкладки 9',\n    icon: 'zyfra-icon account',\n    items: [\n      {\n        label: 'New',\n        icon: 'zyfra-icon account-plus',\n\n      },\n      {\n        label: 'Delete',\n        icon: 'zyfra-icon account-minus',\n\n      }]\n  }\n]"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "simpleMenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки 1'\n  },\n  {\n    label: 'Наименование вкладки 2'\n  },\n  {\n    label: 'Наименование вкладки 3',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4'\n  },\n]"
                },
                {
                    "name": "simpleMenuItemsWithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  {\n    label: 'Наименование вкладки сорок четыре символа + 1',\n    icon: 'zyfra-icon files-file',\n  },\n  {\n    label: 'Наименование вкладки 2',\n    icon: 'zyfra-icon bookmarks-bookmark',\n  },\n  {\n    label: 'Наименование вкладки 3',\n    icon: 'zyfra-icon editor-mode',\n    disabled: true\n  },\n  {\n    label: 'Наименование вкладки 4',\n    icon: '',\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabMenuComponent>",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  }\n})"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSubMenu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts": [
                {
                    "name": "htmlContentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\n  content\n`"
                },
                {
                    "name": "htmlTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\n  <div>\n    <p>content</p>\n    <ul>\n      <li>item 1 (for example)</li>\n      <li><b>item 2</b></li>\n    </ul>\n  </div>\n`"
                },
                {
                    "name": "htmlTopContentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "defaultValue": "`\n  content position top\n`"
                },
                {
                    "name": "PositionTop",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDialogComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"dialog.onInit($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-dialog\n      #dialog\n      [header]=\"header\"\n      [htmlTemplate]=\"htmlTemplate\"\n      [position]=\"position\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n      (onResizeInit)=\"onResizeInit($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n      (onDragEnd)=\"onDragEnd($event)\"\n      (onMaximize)=\"onMaximize($event)\"\n    ></zyfra-dialog>\n  `,\n  props: {\n    ...args,\n    onResizeInit: action('onResizeInit'),\n    onResizeEnd: action('onResizeEnd'),\n    onDragEnd: action('onDragEnd'),\n    onMaximize: action('onMaximize'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/chip/zyfra-chip.component.stories.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnlyText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraChipComponent>",
                    "defaultValue": "(args: ZyfraChipComponent) => ({\n  component: ZyfraChipComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/icon/story/icon-definitions.ts": [
                {
                    "name": "IconDefs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    {\n        \"dir\": \"account\",\n        \"data\": [\n            \"account-card-details\",\n            \"account-circle\",\n            \"account-done\",\n            \"account-down-list-open\",\n            \"account-down-list\",\n            \"account-edit\",\n            \"account-group\",\n            \"account-key\",\n            \"account-location\",\n            \"account-lock\",\n            \"account-log-in\",\n            \"account-logout\",\n            \"account-minus\",\n            \"account-multiple-minus\",\n            \"account-multiple-plus\",\n            \"account-multiple-shield\",\n            \"account-multiple\",\n            \"account-plus\",\n            \"account-remove\",\n            \"account-search\",\n            \"account-setting-1\",\n            \"account-setting\",\n            \"account-shield-1\",\n            \"account-shield-alarm\",\n            \"account-shield-off\",\n            \"account-shield\",\n            \"account-switch\",\n            \"account-unlock\",\n            \"account-worker\",\n            \"account\"\n        ]\n    },\n    {\n        \"dir\": \"add\",\n        \"data\": [\n            \"add-alarm\",\n            \"add-bell-plus\",\n            \"add-bookmark-plus\",\n            \"add-cart-plus\",\n            \"add-file-plus\",\n            \"add-folder-plus\",\n            \"add-label-add\",\n            \"add-library-plus\",\n            \"add-map-marker-plus\",\n            \"add-phone\",\n            \"add-plus-box-fill\",\n            \"add-plus-box\",\n            \"add-plus-circle-multiple\",\n            \"add-plus-drop-down-list\",\n            \"add-plus\",\n            \"add-shape-square-plus\"\n        ]\n    },\n    {\n        \"dir\": \"alerts\",\n        \"data\": [\n            \"alerts-alarm-1\",\n            \"alerts-alarm-2\",\n            \"alerts-alarm-3\",\n            \"alerts-alarm-light\",\n            \"alerts-bell-fill\",\n            \"alerts-bell-off\",\n            \"alerts-bell-ring-fill\",\n            \"alerts-bell-ring\",\n            \"alerts-bell\",\n            \"alerts-box-fill\",\n            \"alerts-circle-fill\",\n            \"alerts-circle\",\n            \"alerts-decagram-fill\",\n            \"alerts-decagram\",\n            \"alerts-flag-fill\",\n            \"alerts-flag\",\n            \"alerts-help-box-fill\",\n            \"alerts-help-box\",\n            \"alerts-help-circle-outline\",\n            \"alerts-help-fill\",\n            \"alerts-info-circle-fill\",\n            \"alerts-info-square-fill\",\n            \"alerts-info-square\",\n            \"alerts-info-triangle-fill\",\n            \"alerts-info-triangle\",\n            \"alerts-inform-fill-mini\",\n            \"alerts-inform-mini\",\n            \"alerts-inform\",\n            \"alerts-information-variant\",\n            \"alerts-mark\",\n            \"alerts-octagon-fill\",\n            \"alerts-octagon\",\n            \"alerts-pulse\",\n            \"alerts-question-mark\",\n            \"alerts-square\",\n            \"alerts-warning\",\n            \"alerts\"\n        ]\n    },\n    {\n        \"dir\": \"apps\",\n        \"data\": [\n            \"apps-collector\",\n            \"apps-key\",\n            \"apps-ontology-2\",\n            \"apps-ontology\",\n            \"apps-own\",\n            \"apps-star\"\n        ]\n    },\n    {\n        \"dir\": \"arrows\",\n        \"data\": [\n            \"arrows-all\",\n            \"arrows-arrow-circle-down\",\n            \"arrows-arrow-circle-left\",\n            \"arrows-arrow-circle-right\",\n            \"arrows-arrow-circle-up\",\n            \"arrows-arrow-expand-horizontal\",\n            \"arrows-arrow-expand-vertical\",\n            \"arrows-arrow-left\",\n            \"arrows-arrow-right\",\n            \"arrows-arrow-up-level\",\n            \"arrows-arrow-upward\",\n            \"arrows-autorenew-1\",\n            \"arrows-autorenew\",\n            \"arrows-back\",\n            \"arrows-cached-1\",\n            \"arrows-cached\",\n            \"arrows-chevron-left\",\n            \"arrows-chevron-right\",\n            \"arrows-collapse-four-arrows\",\n            \"arrows-collapse\",\n            \"arrows-compare\",\n            \"arrows-corner-down-left\",\n            \"arrows-corner-down-right\",\n            \"arrows-corner-left-down\",\n            \"arrows-corner-left-up\",\n            \"arrows-corner-right-down\",\n            \"arrows-corner-right-up\",\n            \"arrows-corner-up-left\",\n            \"arrows-corner-up-right\",\n            \"arrows-diagonal-arrow-left-down\",\n            \"arrows-diagonal-arrow-left-up\",\n            \"arrows-diagonal-arrow-right-down\",\n            \"arrows-diagonal-arrow-right-up\",\n            \"arrows-down-2\",\n            \"arrows-down-bold\",\n            \"arrows-down-double-2\",\n            \"arrows-down-double-top-2\",\n            \"arrows-down-limit-1\",\n            \"arrows-down-limit-double-1\",\n            \"arrows-down\",\n            \"arrows-expand-all\",\n            \"arrows-expand\",\n            \"arrows-left-bold\",\n            \"arrows-long-arrow-left\",\n            \"arrows-long-arrow-right\",\n            \"arrows-next\",\n            \"arrows-refresh\",\n            \"arrows-replay\",\n            \"arrows-right-bold\",\n            \"arrows-shuffle-variant\",\n            \"arrows-shuffle\",\n            \"arrows-swap-horiz\",\n            \"arrows-swap-vert\",\n            \"arrows-swap\",\n            \"arrows-up-2\",\n            \"arrows-up-bold\",\n            \"arrows-up-double-2\",\n            \"arrows-up-double-top-2\",\n            \"arrows-up-limit-1\",\n            \"arrows-up-limit-double-1\"\n        ]\n    },\n    {\n        \"dir\": \"audio\",\n        \"data\": [\n            \"audio-add-library-music\",\n            \"audio-artist\",\n            \"audio-bookmark-music\",\n            \"audio-file-music\",\n            \"audio-microphone-off\",\n            \"audio-microphone\",\n            \"audio-music-box\",\n            \"audio-music-circle\",\n            \"audio-music-off\",\n            \"audio-music\",\n            \"audio-volume-high\",\n            \"audio-volume-low\",\n            \"audio-volume-medium\",\n            \"audio-volume-minus\",\n            \"audio-volume-mute\",\n            \"audio-volume-off\",\n            \"audio-volume-plus\"\n        ]\n    },\n    {\n        \"dir\": \"badges\",\n        \"data\": [\n            \"badges-clipboard-tex\",\n            \"badges-clipboard\",\n            \"badges-code-download\",\n            \"badges-code\",\n            \"badges-tag-fill\",\n            \"badges-tag-multiple\",\n            \"badges-tag-plus\",\n            \"badges-tag-remove\",\n            \"badges-tag-search\",\n            \"badges-tag-text\",\n            \"badges-tag\"\n        ]\n    },\n    {\n        \"dir\": \"battery\",\n        \"data\": [\n            \"battery-10\",\n            \"battery-30\",\n            \"battery-50\",\n            \"battery-80\",\n            \"battery-alert\",\n            \"battery-charging\",\n            \"battery-flash-off\",\n            \"battery-flash\",\n            \"battery-minus\",\n            \"battery-plus\",\n            \"battery\"\n        ]\n    },\n    {\n        \"dir\": \"bookmarks\",\n        \"data\": [\n            \"bookmarks-book-open-page-variant\",\n            \"bookmarks-book-open-plus\",\n            \"bookmarks-book-open-variant\",\n            \"bookmarks-book-open\",\n            \"bookmarks-book\",\n            \"bookmarks-bookmark-check-fill\",\n            \"bookmarks-bookmark-check\",\n            \"bookmarks-bookmark-fill\",\n            \"bookmarks-bookmark-music-fill\",\n            \"bookmarks-bookmark-music\",\n            \"bookmarks-bookmark-plus-fill\",\n            \"bookmarks-bookmark-plus\",\n            \"bookmarks-bookmark-remove-fill\",\n            \"bookmarks-bookmark-remove\",\n            \"bookmarks-bookmark\"\n        ]\n    },\n    {\n        \"dir\": \"camera\",\n        \"data\": [\n            \"camera-camera\",\n            \"camera-clapperboard-close\",\n            \"camera-clapperboard\",\n            \"camera-close\",\n            \"camera-film-close\",\n            \"camera-film\",\n            \"camera-image\",\n            \"camera-video-close\",\n            \"camera-video-off\",\n            \"camera-video\",\n            \"camera\"\n        ]\n    },\n    {\n        \"dir\": \"cancel\",\n        \"data\": [\n            \"cancel-block\",\n            \"cancel-close-box-fill\",\n            \"cancel-close-box\",\n            \"cancel-close-circle-fill\",\n            \"cancel-close-circle\",\n            \"cancel-close\"\n        ]\n    },\n    {\n        \"dir\": \"charts\",\n        \"data\": [\n            \"charts-arc-1\",\n            \"charts-arc\",\n            \"charts-areaspline\",\n            \"charts-bar-stacked\",\n            \"charts-bar\",\n            \"charts-bubble-line\",\n            \"charts-bubble\",\n            \"charts-chart-donut-variant-half\",\n            \"charts-chart-donut-variant\",\n            \"charts-donut\",\n            \"charts-elevation-decline\",\n            \"charts-elevation-rise\",\n            \"charts-finance\",\n            \"charts-gantt\",\n            \"charts-google-analytics\",\n            \"charts-google-assistant\",\n            \"charts-hexagon-multiple\",\n            \"charts-histogram-chart-dashed-2\",\n            \"charts-histogram-chart-dashed\",\n            \"charts-histogram\",\n            \"charts-line-variant\",\n            \"charts-line\",\n            \"charts-pie-2\",\n            \"charts-pie\",\n            \"charts-poll-box\",\n            \"charts-poll\",\n            \"charts-scatterplot-hexbin\",\n            \"charts-signal\",\n            \"charts-trending-down\",\n            \"charts-trending-up\"\n        ]\n    },\n    {\n        \"dir\": \"chevrons\",\n        \"data\": [\n            \"chevrons-close-all\",\n            \"chevrons-double-down\",\n            \"chevrons-double-left\",\n            \"chevrons-double-right\",\n            \"chevrons-double-up\",\n            \"chevrons-down\",\n            \"chevrons-dropdown\",\n            \"chevrons-dropup\",\n            \"chevrons-input\",\n            \"chevrons-left\",\n            \"chevrons-menu-left\",\n            \"chevrons-menu-right\",\n            \"chevrons-right\",\n            \"chevrons-unfold-less-horizontal\",\n            \"chevrons-unfold-less-verica\",\n            \"chevrons-unfold-more-horizontal\",\n            \"chevrons-unfold-more-vertical\",\n            \"chevrons-up\"\n        ]\n    },\n    {\n        \"dir\": \"color\",\n        \"data\": [\n            \"angular\",\n            \"application\",\n            \"color-France-drop\",\n            \"color-France\",\n            \"color-German-drop\",\n            \"color-German\",\n            \"color-Grat-Britan-down-list\",\n            \"color-Grat-Britan-drop\",\n            \"color-Indian-drop\",\n            \"color-Indian\",\n            \"color-Russia-drop\",\n            \"color-Russia\",\n            \"color-arrows-down-double-2\",\n            \"color-arrows-down-double-top-2\",\n            \"color-arrows-down-limit-double-1\",\n            \"color-arrows-up-double-2\",\n            \"color-arrows-up-double-top-2\",\n            \"color-arrows-up-limit-double-1\",\n            \"color-compass\",\n            \"color-logo-green\",\n            \"ecp-alert-1\",\n            \"ecp-wind\",\n            \"external\",\n            \"react\",\n            \"vue\"\n        ]\n    },\n    {\n        \"dir\": \"date\",\n        \"data\": [\n            \"date-access-alarm\",\n            \"date-asterisk\",\n            \"date-calendar-blank\",\n            \"date-calendar-check\",\n            \"date-calendar-clock\",\n            \"date-calendar-plus\",\n            \"date-calendar-question\",\n            \"date-calendar-range\",\n            \"date-calendar-remove\",\n            \"date-calendar-text\",\n            \"date-calendar-today\",\n            \"date-calendar\",\n            \"date-clock-alert\",\n            \"date-clock-end\",\n            \"date-clock-in\",\n            \"date-clock-out\",\n            \"date-clock-start\",\n            \"date-clock\",\n            \"date-day\",\n            \"date-history\",\n            \"date-hour\",\n            \"date-minute\",\n            \"date-month\",\n            \"date-now\",\n            \"date-period-dropdown-list-open\",\n            \"date-period-dropdown-list\",\n            \"date-range\",\n            \"date-second\",\n            \"date-time-add\",\n            \"date-time-remove\",\n            \"date-timer-sand-empty\",\n            \"date-timer\",\n            \"date-update\",\n            \"date-year\"\n        ]\n    },\n    {\n        \"dir\": \"delete\",\n        \"data\": [\n            \"delete-do-not-disturb\",\n            \"delete-drop\",\n            \"delete-empty\",\n            \"delete-forever\",\n            \"delete-label-delete\",\n            \"delete-minus-circle\",\n            \"delete-minus-square\",\n            \"delete-minus\",\n            \"delete-restore\",\n            \"delete\"\n        ]\n    },\n    {\n        \"dir\": \"devices\",\n        \"data\": [\n            \"devices-android-debug-bridge\",\n            \"devices-android\",\n            \"devices-camera-front\",\n            \"devices-cellphone-basic\",\n            \"devices-cellphone-link-off\",\n            \"devices-cellphone-link\",\n            \"devices-cellphone-wireless\",\n            \"devices-cellphone\",\n            \"devices-desktop-tower\",\n            \"devices-hard-drive-outline\",\n            \"devices-headphones\",\n            \"devices-input-device\",\n            \"devices-laptop-off\",\n            \"devices-laptop\",\n            \"devices-monitor\",\n            \"devices-printer\",\n            \"devices-sensor\",\n            \"devices-speaker\",\n            \"devices-tablet\",\n            \"devices-touchpad\",\n            \"devices-transmitter\",\n            \"devices-tv\",\n            \"devices-watch-variant\"\n        ]\n    },\n    {\n        \"dir\": \"ecp\",\n        \"data\": [\n            \"alert\",\n            \"ecologist-1\",\n            \"expand-four-arrows-24\",\n            \"false-event1\",\n            \"false-event3\",\n            \"pin-1\",\n            \"pin-alarm\",\n            \"wind-1\"\n        ]\n    },\n    {\n        \"dir\": \"editor\",\n        \"data\": [\n            \"editor-add-column\",\n            \"editor-add-comment\",\n            \"editor-add-row\",\n            \"editor-alfavit\",\n            \"editor-attach-2\",\n            \"editor-attach-file\",\n            \"editor-border-all\",\n            \"editor-border-bottom\",\n            \"editor-border-clear\",\n            \"editor-border-color\",\n            \"editor-border-horizontal\",\n            \"editor-border-inner\",\n            \"editor-border-left\",\n            \"editor-border-outer\",\n            \"editor-border-right\",\n            \"editor-border-style\",\n            \"editor-border-top\",\n            \"editor-border-vertical\",\n            \"editor-copy-drop\",\n            \"editor-copy\",\n            \"editor-crop\",\n            \"editor-delete-column\",\n            \"editor-delete-row\",\n            \"editor-down\",\n            \"editor-drag-and-drop\",\n            \"editor-dropdown-list-open\",\n            \"editor-dropdown-list\",\n            \"editor-droplet\",\n            \"editor-format-align-center\",\n            \"editor-format-align-justify\",\n            \"editor-format-align-left\",\n            \"editor-format-align-right\",\n            \"editor-format-bold\",\n            \"editor-format-color-fill\",\n            \"editor-format-color-reset\",\n            \"editor-format-color-text\",\n            \"editor-format-italic\",\n            \"editor-format-list-bulleted\",\n            \"editor-format-list-numbered\",\n            \"editor-format-textdirection-l-to-r\",\n            \"editor-format-underlined\",\n            \"editor-formula\",\n            \"editor-functions\",\n            \"editor-group-dropdown\",\n            \"editor-group\",\n            \"editor-hash\",\n            \"editor-insert-emoticon-sad\",\n            \"editor-insert-emoticon\",\n            \"editor-insert-link\",\n            \"editor-line-height\",\n            \"editor-link\",\n            \"editor-list-dushed-2\",\n            \"editor-merge-type\",\n            \"editor-mini\",\n            \"editor-mode\",\n            \"editor-panel-left\",\n            \"editor-panel-right\",\n            \"editor-panel-top\",\n            \"editor-percent\",\n            \"editor-right\",\n            \"editor-screen\",\n            \"editor-search-tags-words\",\n            \"editor-sort-asc\",\n            \"editor-table\",\n            \"editor-title\",\n            \"editor-ungroup\",\n            \"editor-vertical-align-bottom\",\n            \"editor-vertical-align-center\",\n            \"editor-vertical-align-top\",\n            \"editor-window\",\n            \"editor-wrap-text\"\n        ]\n    },\n    {\n        \"dir\": \"export\",\n        \"data\": [\n            \"export-files-pdf\",\n            \"export-files-xlsx\"\n        ]\n    },\n    {\n        \"dir\": \"files\",\n        \"data\": [\n            \"files-archive\",\n            \"files-cloud-check\",\n            \"files-cloud\",\n            \"files-cloup-upload\",\n            \"files-correct\",\n            \"files-description-properties\",\n            \"files-document-image\",\n            \"files-document-text\",\n            \"files-download\",\n            \"files-excel-box\",\n            \"files-export-csv\",\n            \"files-export-pdf\",\n            \"files-export-xlsx\",\n            \"files-export\",\n            \"files-file-open-all\",\n            \"files-file-remove\",\n            \"files-file\",\n            \"files-find\",\n            \"files-folder-delete\",\n            \"files-folder-remove\",\n            \"files-folder-root-add\",\n            \"files-folder\",\n            \"files-in-om\",\n            \"files-loader\",\n            \"files-mnemo\",\n            \"files-mode\",\n            \"files-multi\",\n            \"files-powerpoint\",\n            \"files-upload\",\n            \"files-view-document\",\n            \"files-word-box\"\n        ]\n    },\n    {\n        \"dir\": \"finance\",\n        \"data\": [\n            \"finance-calculator\",\n            \"finance-credit-card-of\",\n            \"finance-credit-card-plus\",\n            \"finance-credit-card\",\n            \"finance-currency-btc\",\n            \"finance-currency-usd-off\",\n            \"finance-currency-usd\",\n            \"finance-qr-code-search\",\n            \"finance-qr-code\",\n            \"finance-scanner\",\n            \"finance-wallet\"\n        ]\n    },\n    {\n        \"dir\": \"location\",\n        \"data\": [\n            \"location-compass\",\n            \"location-crosshairs-gps\",\n            \"location-crosshairs\",\n            \"location-language\",\n            \"location-localization-down-list\",\n            \"location-map-2\",\n            \"location-map-marker-minus\",\n            \"location-map-marker-off\",\n            \"location-map-marker-plus\",\n            \"location-map-marker\",\n            \"location-map\",\n            \"location-navigation-1\",\n            \"location-navigation\",\n            \"location-person-pin-circle\",\n            \"location-pin-1\",\n            \"location-pin-2\",\n            \"location-pin\"\n        ]\n    },\n    {\n        \"dir\": \"lokoil\",\n        \"data\": [\n            \"lokoil-compass\",\n            \"lokoil-gas-work\",\n            \"lokoil-gas\",\n            \"lokoil-wind\",\n            \"lokoil-work\"\n        ]\n    },\n    {\n        \"dir\": \"messaging\",\n        \"data\": [\n            \"messaging-alert\",\n            \"messaging-at\",\n            \"messaging-emai\",\n            \"messaging-email-open\",\n            \"messaging-forward\",\n            \"messaging-inbox\",\n            \"messaging-message-circle\",\n            \"messaging-message-off\",\n            \"messaging-message\",\n            \"messaging-processing\",\n            \"messaging-question-ask\",\n            \"messaging-reply\",\n            \"messaging-send\",\n            \"messaging-text\"\n        ]\n    },\n    {\n        \"dir\": \"network\",\n        \"data\": [\n            \"network-close\",\n            \"network-cloud-download\",\n            \"network-cloud-upload\",\n            \"network-database-delete\",\n            \"network-database-json\",\n            \"network-database-minus\",\n            \"network-database-plus\",\n            \"network-database-search\",\n            \"network-database-sql\",\n            \"network-database\",\n            \"network-download\",\n            \"network-external-link\",\n            \"network-lan-connect\",\n            \"network-lan-disconnect\",\n            \"network-lan-pending\",\n            \"network-lan\",\n            \"network-layers\",\n            \"network-library\",\n            \"network-minus\",\n            \"network-no-layers\",\n            \"network-object\",\n            \"network-plus\",\n            \"network-scheme-2\",\n            \"network-scheme\",\n            \"network-security\",\n            \"network-server-1\",\n            \"network-server-network-off\",\n            \"network-server-network\",\n            \"network-server-off\",\n            \"network-server-security\",\n            \"network-server\",\n            \"network-upload\"\n        ]\n    },\n    {\n        \"dir\": \"phone\",\n        \"data\": [\n            \"phone-call-missed\",\n            \"phone-in-talk\",\n            \"phone-minus\",\n            \"phone-missed\",\n            \"phone-off\",\n            \"phone-paused\",\n            \"phone-plus\",\n            \"phone\"\n        ]\n    },\n    {\n        \"dir\": \"player\",\n        \"data\": [\n            \"player-loop\",\n            \"player-pause\",\n            \"player-play\",\n            \"player-skip-backward\",\n            \"player-skip-forward\",\n            \"player-skip-next-circle-outline\",\n            \"player-skip-previous\",\n            \"player-stop\",\n            \"player-voicemail\"\n        ]\n    },\n    {\n        \"dir\": \"plus\",\n        \"data\": [\n            \"plus-circle-fill\",\n            \"plus-circle\"\n        ]\n    },\n    {\n        \"dir\": \"poi\",\n        \"data\": [\n            \"poi-barley\",\n            \"poi-factory\",\n            \"poi-flask-1\",\n            \"poi-flask-2\",\n            \"poi-flask-3\",\n            \"poi-flask-4\",\n            \"poi-flask-5\",\n            \"poi-fuel\",\n            \"poi-gas-monitoring\",\n            \"poi-gas-station\",\n            \"poi-nuclear-station\",\n            \"poi-oil-factory\",\n            \"poi-power-station\",\n            \"poi-respirator-2\",\n            \"poi-respirator-3\",\n            \"poi-respirator-4\",\n            \"poi-respirator-5\",\n            \"poi-respirator-6\",\n            \"poi-respirator\",\n            \"poi-water-pump\"\n        ]\n    },\n    {\n        \"dir\": \"selection\",\n        \"data\": [\n            \"selection-check-all\",\n            \"selection-check-circle\",\n            \"selection-check-simple\",\n            \"selection-checkbox-blank-circle\",\n            \"selection-checkbox-blank\",\n            \"selection-checkbox-marked-circle-chanel\",\n            \"selection-checkbox-marked-circle\",\n            \"selection-checked-1\",\n            \"selection-checked-empty\",\n            \"selection-checked\",\n            \"selection-radio-off\",\n            \"selection-radio-on\",\n            \"selection-success\",\n            \"selection-toggle-left\",\n            \"selection-toggle-right\"\n        ]\n    },\n    {\n        \"dir\": \"settings\",\n        \"data\": [\n            \"settings-2\",\n            \"settings-apps\",\n            \"settings-more-horiz\",\n            \"settings-more-vert\",\n            \"settings-power\",\n            \"settings-tune-vertical\",\n            \"settings-tune\",\n            \"settings\"\n        ]\n    },\n    {\n        \"dir\": \"shapes\",\n        \"data\": [\n            \"shapes-animation\",\n            \"shapes-arrange-bring-forward\",\n            \"shapes-arrange-send-backward\",\n            \"shapes-arrange-send-to-back\",\n            \"shapes-box-shadow\",\n            \"shapes-checkbox-intermediate\",\n            \"shapes-checkerboard\",\n            \"shapes-collage\",\n            \"shapes-cube-3\",\n            \"shapes-cube-outline\",\n            \"shapes-cube\",\n            \"shapes-drawing-box\",\n            \"shapes-drawing\",\n            \"shapes-hexagon-fill\",\n            \"shapes-hexagon\",\n            \"shapes-layers-off\",\n            \"shapes-layers\",\n            \"shapes-nest-protec\",\n            \"shapes-nut\",\n            \"shapes-pentagon-fill\",\n            \"shapes-pentagon\",\n            \"shapes-rhombus-fill\",\n            \"shapes-rhombus\",\n            \"shapes-shape-fill\",\n            \"shapes-shape-plus-1\",\n            \"shapes-shape-plus\",\n            \"shapes-shape\",\n            \"shapes-square-inc\",\n            \"shapes-triangle-fill\",\n            \"shapes-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"shopping\",\n        \"data\": [\n            \"shopping-box\",\n            \"shopping-cart\",\n            \"shopping-gift\",\n            \"shopping\"\n        ]\n    },\n    {\n        \"dir\": \"signal\",\n        \"data\": [\n            \"signal-access-point\",\n            \"signal-bluetooth\",\n            \"signal-cast\",\n            \"signal-off\",\n            \"signal-radio-tower\",\n            \"signal-rss-box\",\n            \"signal-wifi-off\",\n            \"signal-wifi\",\n            \"signal\"\n        ]\n    },\n    {\n        \"dir\": \"social\",\n        \"data\": [\n            \"social-behance\",\n            \"social-browser\",\n            \"social-facebook\",\n            \"social-github\",\n            \"social-globe-2\",\n            \"social-google-plus\",\n            \"social-heart-fill\",\n            \"social-heart\",\n            \"social-home-breadcrumbs\",\n            \"social-home\",\n            \"social-instagram\",\n            \"social-linkedin-box\",\n            \"social-moon\",\n            \"social-share\",\n            \"social-star-fill\",\n            \"social-star-half\",\n            \"social-star\",\n            \"social-sun\",\n            \"social-tab\",\n            \"social-telegram\",\n            \"social-thumb-down\",\n            \"social-thumb-up\",\n            \"social-twitter\",\n            \"social-vk\"\n        ]\n    },\n    {\n        \"dir\": \"sort\",\n        \"data\": [\n            \"sort-abc-ru-up\",\n            \"sort-abc-ru\",\n            \"sort-alphabetical-up\",\n            \"sort-alphabetical\",\n            \"sort-apps\",\n            \"sort-asc-arr\",\n            \"sort-desc-arr\",\n            \"sort-eye-off-2\",\n            \"sort-eye-off\",\n            \"sort-eye\",\n            \"sort-filter-remove\",\n            \"sort-filter\",\n            \"sort-funnel-drop-down-list-open\",\n            \"sort-funnel-drop-down-list\",\n            \"sort-look-into-the-buffer\",\n            \"sort-maximize\",\n            \"sort-numeric\",\n            \"sort-real-size\",\n            \"sort-search-mistake\",\n            \"sort-zoom-in\",\n            \"sort-zoom-out\"\n        ]\n    },\n    {\n        \"dir\": \"tools\",\n        \"data\": [\n            \"tools-auto-fix\",\n            \"tools-award\",\n            \"tools-briefcase\",\n            \"tools-broom\",\n            \"tools-brush\",\n            \"tools-content-cut\",\n            \"tools-content-save-as\",\n            \"tools-content-save\",\n            \"tools-earth-work\",\n            \"tools-eraser\",\n            \"tools-eyedropper\",\n            \"tools-keyboard-close-1\",\n            \"tools-keyboard-close\",\n            \"tools-keyboard\",\n            \"tools-lightbulb\",\n            \"tools-npm\",\n            \"tools-palette\",\n            \"tools-pantone\",\n            \"tools-ruler\",\n            \"tools-save-back\",\n            \"tools-solver\",\n            \"tools-thermometer-minus\",\n            \"tools-thermometer-plus\",\n            \"tools-thermometer\",\n            \"tools-umbrella\"\n        ]\n    },\n    {\n        \"dir\": \"transport\",\n        \"data\": [\n            \"transport-airplane\",\n            \"transport-ambulance\",\n            \"transport-truck\"\n        ]\n    },\n    {\n        \"dir\": \"vectors\",\n        \"data\": [\n            \"vectors-arrange-above\",\n            \"vectors-arrange-below\",\n            \"vectors-circle-variant\",\n            \"vectors-circle\",\n            \"vectors-combine-1\",\n            \"vectors-combine\",\n            \"vectors-curve\",\n            \"vectors-difference-ab\",\n            \"vectors-difference-ba\",\n            \"vectors-difference\",\n            \"vectors-ellipse\",\n            \"vectors-intersection\",\n            \"vectors-line\",\n            \"vectors-point\",\n            \"vectors-polygon\",\n            \"vectors-polyline\",\n            \"vectors-radius\",\n            \"vectors-rectangle\",\n            \"vectors-selection\",\n            \"vectors-square\",\n            \"vectors-triangle\"\n        ]\n    },\n    {\n        \"dir\": \"view\",\n        \"data\": [\n            \"view-agenda\",\n            \"view-array\",\n            \"view-carousel\",\n            \"view-column\",\n            \"view-component\",\n            \"view-dashboard-variant\",\n            \"view-dashboard\",\n            \"view-day\",\n            \"view-folder-mode\",\n            \"view-grid-1\",\n            \"view-grid\",\n            \"view-headline\",\n            \"view-list\",\n            \"view-logo-grey-z\",\n            \"view-logo-sgrey\",\n            \"view-menu-2\",\n            \"view-menu-arrow-down\",\n            \"view-menu-arrow-left\",\n            \"view-menu-arrow-right\",\n            \"view-menu-arrow-up\",\n            \"view-menu\",\n            \"view-module\",\n            \"view-quilt\",\n            \"view-sequential\"\n        ]\n    }\n]"
                }
            ],
            "libs/components/src/lib/icon/zyfra-icon.component.stories.ts": [
                {
                    "name": "IconsSet",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponents>",
                    "defaultValue": "(args: IconComponents) => ({\n  component: IconComponents,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1' },\n  { label: 'Название цеха 2' },\n  { label: 'Название цеха 3' },\n  { label: 'Название цеха 4' }\n]"
                },
                {
                    "name": "itemsUrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "defaultValue": "[\n  { label: 'Начало' },\n  { label: 'Название цеха 1', url: '#' },\n  { label: 'Название цеха 2', url: '#' },\n  { label: 'Название цеха 3', url: '#' },\n  { label: 'Название цеха 4', url: '#' }\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraBreadcrumbComponent>",
                    "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\n  component: ZyfraBreadcrumbComponent,\n  props: {\n    ...args,\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\n  }\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/tree/zyfra-tree.component.stories.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    label: 'Documents',\n    data: 'Documents Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [{\n      label: 'Work',\n      data: 'Work Folder',\n      expandedIcon: 'zyfra-icon files-folder',\n      collapsedIcon: 'zyfra-icon files-folder',\n      children: [\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\n      ]\n    },\n      {\n        label: 'Home',\n        data: 'Home Folder',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder',\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\n      }]\n  },\n  {\n    label: 'Pictures',\n    data: 'Pictures Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder',\n    children: [\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\n  },\n  {\n    label: 'Movies',\n    data: 'Movies Folder',\n    expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n    children: [{\n      label: 'Al Pacino',\n      data: 'Pacino Movies',\n      expandedIcon: 'zyfra-icon files-folder',\n    collapsedIcon: 'zyfra-icon files-folder ',\n      children: [\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\n      ]\n    },\n      {\n        label: 'Robert De Niro',\n        data: 'De Niro Movies',\n        expandedIcon: 'zyfra-icon files-folder',\n        collapsedIcon: 'zyfra-icon files-folder ',\n        children: [\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\n        ]\n      }]\n  }\n]"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTreeComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraTreeComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts": [
                {
                    "name": "MenuItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RelativeDateMenuItems",
                    "defaultValue": "getDefaultRelativeDateMenuItems()"
                },
                {
                    "name": "ValidationPattern",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'(T|\\\\*)(\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s)'"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Pagination.ts": [
                {
                    "name": "Pagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "PaginationTemplate.bind({})"
                },
                {
                    "name": "PaginationTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [paginator]=\"paginator\"\n      [rows]=\"rows\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\n      (page)=\"page($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Name</th>\n          <th>Country</th>\n          <th>Company</th>\n          <th>Representative</th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td>{{customer.name}}</td>\n          <td>{{customer.country.name}}</td>\n          <td>{{customer.company}}</td>\n          <td>{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    page: consoleLogAction('page'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts": [
                {
                    "name": "Position",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraConfirmDialogComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-button\n      (click)=\"confirmDialog.onClick($event)\"\n      label=\"for dialog\"\n      icon=\"zyfra-icon selection-check-simple\"\n    ></zyfra-button>\n\n    <zyfra-confirm-dialog\n      #confirmDialog\n      [message]=\"message\"\n      [icon]=\"icon\"\n      [header]=\"header\"\n      [acceptLabel]=\"acceptLabel\"\n      [rejectLabel]=\"rejectLabel\"\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\n      [acceptMessages]=\"acceptMessages\"\n      [position]=\"position\"\n      [baseZIndex]=\"baseZIndex\"\n      (onHide)=\"onHide($event)\"\n    ></zyfra-confirm-dialog>\n  `,\n  props: {\n    ...args,\n    onHide: action('onHide'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionTabComponent>",
                    "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\n  component: ZyfraAccordionTabComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDatepickerMultiComponent>",
                    "defaultValue": "(args: ZyfraDatepickerMultiComponent) => ({\n  component: ZyfraDatepickerMultiComponent,\n  template: `\n  <zyfra-datepicker-multi\n    [label]='label'\n    [placeholder]='placeholder'\n    [disabled]='disabled'\n    [showClear]='showClear'\n    [relativeValue]='value'\n    [model]=\"model\"\n    [dateFormat]=\"dateFormat\"\n    [timeFormat]=\"timeFormat\"\n    [returnFormatValue]=\"returnFormatValue\"\n    [required]=\"required\"\n    [spanClass]=\"spanClass\"\n    [locale]=\"locale\"\n    [showDate]=\"showDate\"\n    [showTime]=\"showTime\"\n    [monthNavigator]=\"monthNavigator\"\n    [yearNavigator]=\"yearNavigator\"\n    [yearRange]=\"yearRange\"\n    [showCalendarBtn]=\"showCalendarBtn\"\n    [calendarBtnLabel]=\"calendarBtnLabel\"\n    [numberOfMonths]=\"numberOfMonths\"\n    [selectionMode]=\"selectionMode\"\n    [disabledDates]=\"disabledDates\"\n    [firstDayOfWeek]=\"firstDayOfWeek\"\n    [mode]=\"mode\"\n  >\n  </zyfra-datepicker-multi>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraRelativeDatepickerComponent>",
                    "defaultValue": "(args: ZyfraRelativeDatepickerComponent) => ({\n  component: ZyfraRelativeDatepickerComponent,\n  template: `\n  <zyfra-relative-datepicker\n    [label]='label'\n    [placeholder]='placeholder'\n    [disabled]='disabled'\n    [showClear]='showClear'\n    [(ngModel)]='ngModel'\n  >\n  </zyfra-relative-datepicker>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraMenuApplicationsItemComponent>",
                    "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\n  component: ZyfraMenuApplicationsItemComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTabPanelComponent>",
                    "defaultValue": "(args: ZyfraTabPanelComponent) => ({\n  component: ZyfraTabPanelComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.stories.ts": [
                {
                    "name": "Range",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSliderComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraSliderComponent,\n  template: `\n    <zyfra-slider\n      [(ngModel)]=\"ngModel\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [range]=\"range\"\n      [orientation]=\"orientation\"\n      (ngModelChange)=\"ngModelChange($event)\"\n      (onSlideEnd)=\"onSlideEnd($event)\"\n    ></zyfra-slider>\n    <br>\n    <p style=\"font-size: 14px; font-family: Inter, sans-serif;\">Control value: {{ngModel}}</p>\n  `,\n  props: {\n    ...args,\n    ngModelChange: action('ngModelChange'),\n    onSlideEnd: action('onSlideEnd'),\n  },\n})"
                },
                {
                    "name": "Vertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Reorder.ts": [
                {
                    "name": "Reorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [columns]=\"columns\"\n      [reorderableColumns]=\"reorderableColumns\"\n      (colReorder)=\"colReorder($event)\"\n      (rowReorder)=\"rowReorder($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th style=\"width: 32px\"></th>\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\n          <td>\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\n          </td>\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n\n  `,\n  props: {\n    ...args,\n    colReorder: action('colReorder'),\n    rowReorder: action('rowReorder'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Resize.ts": [
                {
                    "name": "Resize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Resize.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [resizableColumns]=\"resizableColumns\"\n      (colResize)=\"colResize($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraResizableColumn>Code</th>\n          <th zyfraResizableColumn>Name</th>\n          <th zyfraResizableColumn>Category</th>\n          <th zyfraResizableColumn>Quantity</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{ product.code }}</td>\n          <td>{{ product.name }}</td>\n          <td>{{ product.category }}</td>\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    colResize: consoleLogAction('colResize'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/RowGroup.ts": [
                {
                    "name": "RowGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortField]=\"sortField\"\n      [sortMode]=\"sortMode\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [rowGroupMode]=\"rowGroupMode\"\n      [groupRowsBy]=\"groupRowsBy\"\n      [responsiveLayout]=\"responsiveLayout\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Status</th>\n          <th style=\"min-width:200px\">Date</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\n        <tr zyfraRowGroupHeader>\n          <td colspan=\"5\">\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\n        <tr class=\"p-rowgroup-footer\">\n          <td style=\"min-width: 80%\">\n            <div style=\"width: 100%\">Total Customers</div>\n          </td>\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\n            {{calculateCustomerTotal(value, customer.representative.name)}}\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">\n            {{customer.name}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span class=\"image-text\">{{customer.country.name}}</span>\n          </td>\n          <td style=\"min-width:200px\">\n            {{customer.company}}\n          </td>\n          <td style=\"min-width:200px\">\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\n            {{customer.date}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    calculateCustomerTotal(customers, name): number {\n      let total = 0;\n\n      if (customers) {\n        for (const customer of customers) {\n          if (customer.representative.name === name) {\n            total++;\n          }\n        }\n      }\n\n      return total;\n    },\n  },\n})"
                }
            ],
            "libs/components/src/lib/datepicker/i18n/ru_RU.ts": [
                {
                    "name": "ru",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  \"dayNames\": [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\"\n  ],\n  \"dayNamesShort\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"dayNamesMin\": [\n    \"Вс\",\n    \"Пн\",\n    \"Вт\",\n    \"Ср\",\n    \"Чт\",\n    \"Пт\",\n    \"Сб\"\n  ],\n  \"monthNames\": [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\"\n  ],\n  \"monthNamesShort\": [\n    \"Янв\",\n    \"Февр\",\n    \"Март\",\n    \"Апр\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Авг\",\n    \"Сент\",\n    \"Окт\",\n    \"Ноябрь\",\n    \"Дек\"\n  ],\n  \"dateFormat\": \"dd.mm.yyyy\",\n  \"today\": \"Сегодня\",\n  \"weekHeader\": \"Нд\",\n  \"clear\": \"Очистить\"\n}"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts": [
                {
                    "name": "ScrollHorizontalAndVertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [scrollHeight]=\"scrollHeight\"\n      [scrollDirection]=\"scrollDirection\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\n          <th style=\"width:100px\">Id</th>\n          <th style=\"width:200px\">Country</th>\n          <th style=\"width:200px\">Date</th>\n          <th style=\"width:200px\">Balance</th>\n          <th style=\"width:200px\">Company</th>\n          <th style=\"width:200px\">Status</th>\n          <th style=\"width:200px\">Activity</th>\n          <th style=\"width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\n          <td style=\"width:100px\">{{customer.id}}</td>\n          <td style=\"width:200px\">{{customer.country.name}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\n          <td style=\"width:200px\">{{customer.company}}</td>\n          <td style=\"width:200px\">{{customer.status}}</td>\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    formatCurrency(value): string {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    },\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVertical.ts": [
                {
                    "name": "ScrollVertical",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th style=\"min-width:200px\">Name</th>\n          <th style=\"min-width:200px\">Country</th>\n          <th style=\"min-width:200px\">Company</th>\n          <th style=\"min-width:200px\">Representative</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\">\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts": [
                {
                    "name": "ScrollVirtual",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [columns]=\"columns\"\n      [value]=\"value\"\n      [scrollable]=\"scrollable\"\n      [rows]=\"rows\"\n      [scrollHeight]=\"scrollHeight\"\n      [virtualScroll]=\"virtualScroll\"\n      [virtualRowHeight]=\"virtualRowHeight\"\n    >\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\n        <tr>\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\n          </th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\n        <tr [zyfraRow]=\"rowIndex\">\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\n            {{rowData[col.field]}}\n          </td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAutoCompleteComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-auto-complete\n      [ngModel]=\"value\"\n      [placeholder]=\"placeholder\"\n      [label]=\"label\"\n      [suggestions]=\"suggestions\"\n      [field]=\"field\"\n      [scrollHeight]=\"scrollHeight\"\n      [dropdown]=\"dropdown\"\n      [multiple]=\"multiple\"\n      [dropdownIcon]=\"dropdownIcon\"\n      [minLength]=\"minLength\"\n      [delay]=\"delay\"\n      [completeOnFocus]=\"completeOnFocus\"\n      [style]=\"style\"\n      [inputStyle]=\"inputStyle\"\n      [panelStyle]=\"panelStyle\"\n      [styleClass]=\"styleClass\"\n      [inputStyleClass]=\"inputStyleClass\"\n      [panelStyleClass]=\"panelStyleClass\"\n      [inputId]=\"inputId\"\n      [name]=\"name\"\n      [optionGroupLabel]=\"optionGroupLabel\"\n      [group]=\"group\"\n      [optionGroupChildren]=\"optionGroupChildren\"\n      [readonly]=\"readonly\"\n      [disabled]=\"disabled\"\n      [maxlength]=\"maxlength\"\n      [size]=\"size\"\n      [appendTo]=\"appendTo\"\n      [tabindex]=\"tabindex\"\n      [dataKey]=\"dataKey\"\n      [autoHighlight]=\"autoHighlight\"\n      [type]=\"type\"\n      [showEmptyMessage]=\"showEmptyMessage\"\n      [emptyMessage]=\"emptyMessage\"\n      [required]=\"required\"\n      [autofocus]=\"autofocus\"\n      [forceSelection]=\"forceSelection\"\n      [dropdownMode]=\"dropdownMode\"\n      [baseZIndex]=\"baseZIndex\"\n      [autoZIndex]=\"autoZIndex\"\n      [showTransitionOptions]=\"showTransitionOptions\"\n      [hideTransitionOptions]=\"hideTransitionOptions\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledBy]=\"ariaLabelledBy\"\n      [unique]=\"unique\"\n      [autocomplete]=\"autocomplete\"\n      [virtualScroll]=\"virtualScroll\"\n      [itemSize]=\"itemSize\"\n      (completeMethod)=\"completeMethod($event)\"\n      (onFocus)=\"onFocus($event)\"\n      (onBlur)=\"onBlur($event)\"\n      (onKeyUp)=\"onKeyUp($event)\"\n      (onSelect)=\"onSelect($event)\"\n      (onUnselect)=\"onUnselect($event)\"\n      (onDropdownClick)=\"onDropdownClick($event)\"\n      (onClear)=\"onClear($event)\"\n      (onShow)=\"onShow($event)\"\n      (onHide)=\"onHide($event)\"\n    >\n      <ng-template zyfraTemplate=\"item\" let-obj>{{ obj.name}} ({{obj.code}})</ng-template>\n      <ng-template zyfraTemplate=\"selectedItem\" let-obj>{{ obj.name}} - {{obj.code}}</ng-template>\n    </zyfra-auto-complete>\n  `,\n  props: {\n    ...args,\n    countries: [\n      { name: 'Argentina', code: 'AR' },\n      { name: 'Armenia', code: 'AM' },\n      { name: 'Aruba', code: 'AW' },\n      { name: 'Russia', code: 'RU' },\n      { name: 'India', code: 'IN' },\n      { name: 'Indonesia', code: 'ID' },\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\n      { name: 'Iraq', code: 'IQ' },\n      { name: 'Ireland', code: 'IE' },\n      { name: 'Isle of Man', code: 'IM' },\n      { name: 'Israel', code: 'IL' },\n      { name: 'Italy', code: 'IT' },\n      { name: 'Zambia', code: 'ZM' },\n      { name: 'Zimbabwe', code: 'ZW' },\n    ],\n    completeMethod(event): void {\n      const query = event.query.toLowerCase();\n      this.suggestions = this.countries.filter(country => country.name.toLowerCase().indexOf(query) > -1);\n      action('completeMethod')(event);\n    },\n    onFocus: action('onFocus'),\n    onBlur: action('onBlur'),\n    onKeyUp: action('onKeyUp'),\n    onSelect: action('onSelect'),\n    onUnselect: action('onUnselect'),\n    onDropdownClick: action('onDropdownClick'),\n    onClear: action('onClear'),\n    onShow: action('onShow'),\n    onHide: action('onHide'),\n  },\n})"
                },
                {
                    "name": "withDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraDynamicDialogComponent>",
                    "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\n  component: ZyfraDynamicDialogComponent,\n  props: args,\n})"
                }
            ],
            "libs/components/src/lib/input/zyfra-input.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraInputComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraInputComponent,\n  props: args,\n  template: `\n<zyfra-input\n  [id]=\"id\"\n  [type]=\"type\"\n  [(ngModel)]=\"value\"\n  [disabled]=\"disabled\"\n  [placeholder]=\"placeholder\"\n  [tooltip]=\"tooltip\"\n  [tooltipPosition]=\"tooltipPosition\"\n  [label]=\"label\"\n></zyfra-input>\n`\n})"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/password/zyfra-password.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraPasswordComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraPasswordComponent,\n  template: `\n    <zyfra-password\n      [(ngModel)]='ngModel'\n      [toggleMask]='toggleMask'\n      [mediumRegex]='mediumRegex'\n      [strongRegex]='strongRegex'\n      [weakLabel]='weakLabel'\n      [mediumLabel]='mediumLabel'\n      [strongLabel]='strongLabel'\n      [label]='label'\n      [promptLabel]='promptLabel'\n      [required]='required'\n      [disabled]='disabled'>\n      (onBlur)=\"onBlur($event)\"\n      (onFocus)=\"onFocus($event)\"\n    ></zyfra-password>\n  `,\n  props: {\n    ...args,\n    onBlur: action('onBlur'),\n    onFocus: action('onFocus'),\n  },\n})"
                },
                {
                    "name": "ToggleMask",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraSplitterComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <zyfra-splitter\n      [panelSizes]=\"panelSizes\"\n      [minSizes]=\"minSizes\"\n      [style]=\"style\"\n      (onResizeStart)=\"onResizeStart($event)\"\n      (onResizeEnd)=\"onResizeEnd($event)\"\n    >\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 1</div>\n      </ng-template>\n      <ng-template zyfraSplitterTemplate>\n        <div>Panel 2</div>\n      </ng-template>\n    </zyfra-splitter>\n  `,\n  props: {\n    ...args,\n  },\n})"
                }
            ],
            "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTextareaComponent>",
                    "defaultValue": "(args) => ({\n  component: ZyfraTextareaComponent,\n  props: args,\n  template: `\n<zyfra-textarea\n  [rows]=\"rows\"\n  [cols]=\"cols\"\n  [autoResize]=\"autoResize\"\n  [(ngModel)]=\"ngModel\"\n  [placeholder]=\"placeholder\"\n  [class]=\"class\"\n  [label]=\"label\"\n  [disabled]=\"disabled\"\n  [maxlength]=\"maxlength\"\n  [minlength]=\"minlength\"\n  [name]=\"name\"\n></zyfra-textarea>\n  `,\n})"
                }
            ],
            "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts": [
                {
                    "name": "Simple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraAccordionComponent>",
                    "defaultValue": "(args: ZyfraAccordionComponent) => ({\n  template: `\n  <zyfra-accordion [multiple]=\"multiple\"\n                   (mouseover)=\"mouseover()\"\n                   (onOpen)=\"onOpen($event)\"\n                   (onClose)=\"onClose($event)\"\n                   (activeIndexChange)=\"activeIndexChange($event)\">\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\n      Content 1\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\n      <ng-template zyfraTemplate=\"header\">\n          {{dynamicString}} header Content 2\n      </ng-template>\n      <ng-template zyfraTemplate=\"icons\">\n          <span class=\"zyfra-icon selection-radio-off\" title=\"{{dynamicString}} title\"></span>\n          <span class=\"zyfra-icon selection-radio-off\" title=\"static title\"></span>\n      </ng-template>\n      <ng-template zyfraTemplate=\"content\">\n      {{dynamicString}} body Content 2\n      </ng-template>\n    </zyfra-accordion-tab>\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\n    </zyfra-accordion-tab>\n  </zyfra-accordion>\n  `,\n  props: {\n    ...args,\n    selectedChange: action('selectedChange'),\n    onOpen: action('onOpen'),\n    onClose: action('onClose'),\n    activeIndexChange: action('activeIndexChange'),\n    mouseover(): void {\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\n      this.showThirdForReInitTabTest = true;\n    }\n  }\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Sort.ts": [
                {
                    "name": "Sort",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Sort.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\n\n    <br><br>\n\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    value: [...getProducts()],\n    title: 'Сортировка по одному столбцу',\n    onSort: consoleLogAction('onSort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/SortMultiple.ts": [
                {
                    "name": "SortMultiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      [sortMode]=\"'multiple'\"\n      (onSort)=\"onSort($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\n        </tr>\n      </ng-template>\n\n      <ng-template zyfraTableTemplate=\"body\" let-product>\n        <tr [zyfraRow]=\"product\">\n          <td>{{product.code}}</td>\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    title: 'Сортировка по нескольким столбцам (с зажатым ctrl)',\n    value: getProducts(),\n    onSort: consoleLogAction('onSort'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/State.ts": [
                {
                    "name": "State",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/State.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/State.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      #table\n      [title]=\"title\"\n      [value]=\"value\"\n      [selectionMode]=\"selectionMode\"\n      [(selection)]=\"selection\"\n      [dataKey]=\"dataKey\"\n      [responsiveLayout]=\"responsiveLayout\"\n      [rows]=\"rows\"\n      [paginator]=\"paginator\"\n      [stateStorage]=\"stateStorage\"\n      [stateKey]=\"stateKey\"\n      (stateSave)=\"stateSave($event)\"\n      (stateRestore)=\"stateRestore($event)\"\n      (selectionChange)=\"selectionChange()\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\n        </tr>\n        <tr>\n          <th zyfra-search-cell field=\"name\"></th>\n          <th zyfra-search-cell field=\"country.name\"></th>\n          <th zyfra-search-cell field=\"representative.name\"></th>\n          <th zyfra-search-cell field=\"status\"></th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\n          <td>\n            {{customer.name}}\n          </td>\n          <td>\n            <span>{{customer.country.name}}</span>\n          </td>\n          <td>\n            <span>{{customer.representative.name}}</span>\n          </td>\n          <td>\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"4\">No customers found.</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    selectionChange: consoleLogAction('selectionChange'),\n    stateSave: action('stateSave'),\n    stateRestore: action('stateRestore'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/table/_story/stories/Status.ts": [
                {
                    "name": "Status",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/table/_story/stories/Status.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTableComponent>",
                    "defaultValue": "args => ({\n  template: `\n    <zyfra-table\n      [title]=\"title\"\n      [value]=\"value\"\n      (activeElementChange)=\"activeElementChange($event)\"\n    >\n      <ng-template zyfraTableTemplate=\"header\">\n        <tr>\n          <th>Status</th>\n        </tr>\n      </ng-template>\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\n          <td>{{ item }}</td>\n        </tr>\n      </ng-template>\n    </zyfra-table>\n  `,\n  props: {\n    ...args,\n    activeElementChange: action('activeElementChange'),\n  },\n})"
                }
            ],
            "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ZyfraTooltipComponent>",
                    "defaultValue": "(args) => ({\n  template: `\n    <div\n      style=\"height: 100vh;width: 100%;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\n    >\n      <div *ngIf=\"title !== undefined\">\n        <div>\n          <ng-template #testTooltip>\n            <div class=\"zyfra-tooltip__title\">{{ title }}</div>\n            <div>{{ text }}</div>\n          </ng-template>\n\n          <zyfra-button\n            [ngStyle]=\"{display: 'block'}\"\n            [zyfraTooltip]=\"testTooltip\"\n            [zyfraTooltipColor]=\"color\"\n            [zyfraTooltipPosition]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n      <div *ngIf=\"title == undefined\">\n        <div>\n          <zyfra-button\n            [ngStyle]=\"{display: 'block'}\"\n            [zyfraTooltip]=\"text\"\n            [zyfraTooltipColor]=\"color\"\n            [zyfraTooltipPosition]=\"position\"\n            label=\"Button\"\n            type=\"button\"\n            styleClass=\"btn-default btn-primary\"\n          ></zyfra-button>\n        </div>\n      </div>\n    </div>\n  `,\n  props: args,\n})"
                },
                {
                    "name": "TooltipWithoutTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "TooltipWithTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {
            "libs/components/src/lib/table/_story/data.ts": [
                {
                    "name": "cloneArrayOfObjects",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T[]",
                    "jsdoctags": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCustomers",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Customer[]"
                },
                {
                    "name": "getProducts",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Product[]"
                },
                {
                    "name": "getProductsOrdersSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ProductOrder[]"
                },
                {
                    "name": "getProductsSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Product[]"
                },
                {
                    "name": "getSalesSmall",
                    "file": "libs/components/src/lib/table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "Sale[]"
                }
            ],
            "libs/components/src/lib/tree-table/_story/data.ts": [
                {
                    "name": "cloneArrayOfObjects",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "T[]",
                    "jsdoctags": [
                        {
                            "name": "array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFileSystem",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                },
                {
                    "name": "getSales",
                    "file": "libs/components/src/lib/tree-table/_story/data.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ],
            "libs/components/.storybook/helpers.ts": [
                {
                    "name": "consoleLogAction",
                    "file": "libs/components/.storybook/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "literal type",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts": [
                {
                    "name": "generateCar",
                    "file": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "literal type"
                }
            ],
            "libs/components/src/lib/datepicker/utils/generate-time-array.ts": [
                {
                    "name": "generateTimeArray",
                    "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ZyfraTime[]",
                    "jsdoctags": [
                        {
                            "name": "formatTime",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
                {
                    "name": "getDefaultRelativeDateMenuItems",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "RelativeDateMenuItems"
                }
            ],
            "libs/components/src/lib/datepicker/utils/is-iso-date.ts": [
                {
                    "name": "isIsoDate",
                    "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts": [
                {
                    "name": "onSortColumnClick",
                    "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts": [
                {
                    "name": "ParseTextInput",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Parse input text to model</p>\n",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "RelativeDateModel",
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "RenderText",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Render text from RelativeDateModel</p>\n",
                    "args": [
                        {
                            "name": "model",
                            "type": "RelativeDateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "RelativeDateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "UpdateActiveItem",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Check items as radio button, to active id</p>\n",
                    "args": [
                        {
                            "name": "items",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "RelativeDateMenuItem[]",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts": [
                {
                    "name": "provideValueAccessor",
                    "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "type",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts": [
                {
                    "name": "ZyfraDatePickerMode",
                    "childs": [
                        {
                            "name": "absolute",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "absolute"
                        },
                        {
                            "name": "relative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "relative"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts": [
                {
                    "name": "ZyfraDatePickerValueType",
                    "childs": [
                        {
                            "name": "date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "date"
                        },
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "string"
                        },
                        {
                            "name": "isoString",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "isoString"
                        },
                        {
                            "name": "timestamp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "timestamp"
                        },
                        {
                            "name": "null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "null"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
                }
            ],
            "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts": [
                {
                    "name": "ZyfraLocale",
                    "childs": [
                        {
                            "name": "ru",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ru_RU"
                        },
                        {
                            "name": "en",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "en_US"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts": [
                {
                    "name": "DropdownTemplateType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
                    "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/table/zyfra-table.types.ts": [
                {
                    "name": "Filters",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<string | FilterMetadata | []>",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 176
                },
                {
                    "name": "RowSelectionEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "TableSortEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SortEvent",
                    "file": "libs/components/src/lib/table/zyfra-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 176
                }
            ],
            "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
                {
                    "name": "HeaderConfig",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "MenuItemSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"standard\" | \"enlarged\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "SelectionType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"single\" | \"checkbox\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "ViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
                    "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
                {
                    "name": "IdByGroup",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "RelativeDateDirectionId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "RelativeDatePeriodId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "RelativeDateTimeId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts": [
                {
                    "name": "ItemClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts": [
                {
                    "name": "OnChangeCallback",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "libs/components/src/lib/splitter/zyfra-splitter.component.ts": [
                {
                    "name": "onResizeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "libs/components/src/lib/paginator/zyfra-paginator.component.ts": [
                {
                    "name": "PageOption",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "number | Record<string | >",
                    "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/slider/zyfra-slider.component.ts": [
                {
                    "name": "SliderOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/shared-table.types.ts": [
                {
                    "name": "SortOrder",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": " | \"1\"",
                    "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/spinner/zyfra-spinner.component.ts": [
                {
                    "name": "SpinnerColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
                    "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/tree-table/tree-table.types.ts": [
                {
                    "name": "TableSortMode",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"single\" | \"multiple\"",
                    "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts": [
                {
                    "name": "TableTemplateType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
                    "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/button/zyfra-button.component.ts": [
                {
                    "name": "TZyfraButtonIconPosision",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "file": "libs/components/src/lib/button/zyfra-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts": [
                {
                    "name": "ValueChangeEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "libs/components/.storybook/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "consoleLogAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BaseTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "onSortColumnClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowBaseDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraBaseSearchCellComponent",
                "coveragePercent": 10,
                "coverageCount": "1/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraBaseTableComponent",
                "coveragePercent": 67,
                "coverageCount": "72/106",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/@core/shared/zyfra-template.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/utils/chars-limit.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CharLimitPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/value-accessor/accessor-impl.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AccessorImplClass",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ValueAccessorFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideValueAccessor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/@core/value-accessor/wrapped-form.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "WrappedFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionTabComponent",
                "coveragePercent": 40,
                "coverageCount": "6/15",
                "status": "medium"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAccordionComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraAccordionOpenClose",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraAutoCompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/67",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemsUrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuccessMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/button/zyfra-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxWithFormControlComponentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CHECKBOX_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/chip/zyfra-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Position",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraConfirmDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/story/custom-calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomCalendarComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateFormat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledDays",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnlyTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Time",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "1/268",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CALENDAR_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/en_US.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "en",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ru",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraDatePickerLocaleInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraTime",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateTimeArray",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isIsoDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDatepickerModeSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDatepickerMultiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/86",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Absolute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AbsoluteMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/79",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RelativeDateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RelativeDateMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RelativeDateModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getDefaultRelativeDateMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultRelativeMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ParseTextInput",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "RenderText",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "UpdateActiveItem",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "directionMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MatchPattern",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "periodMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "renderDirectionMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "renderPeriodMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "renderTimeMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "timeMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRelativeDatepickerComponent",
                "coveragePercent": 14,
                "coverageCount": "4/28",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidationPattern",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlContentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "htmlTopContentTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PositionTop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupWithContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleWithContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateWithContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDropdownWithContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/77",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraDropdownWithContentService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Dimensions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraDropdownTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/73",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraDynamicDialogRef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraDynamicDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraDynamicDialogService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/story/icon-definitions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconDefs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponents",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconsSet",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/icon/zyfra-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Date",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Phone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneExt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SerialNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SSN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputMaskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Currency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Decimal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputNumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/47",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/input/zyfra-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bottomMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTransition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManyItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "topMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutLayoutShift",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMenuApplicationsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransition",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuAppTransitionSettings",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiMessages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/message/zyfra-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraNavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "subItemsRubricator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraNavMenuGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraAutofocusDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavMenuSelectionEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SettingsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ToolbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SETTINGS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_TOOLBAR_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ZyfraMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/service/selection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "convertToNode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flatNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fromRubricatorNodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getPath",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sortByLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page1Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page2Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "Page3Component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "WrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnlargedSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraItemTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtraTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FolderMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupPanelTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RubricatorMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleGroupPanel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithPageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPaginatorComponent",
                "coveragePercent": 85,
                "coverageCount": "18/21",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageChangeEvent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ToggleMask",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/password/zyfra-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Mini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoValueDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormControlTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formControlTemplateChunk",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MiniRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleRadio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryCity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSelectButtonComponent",
                "coveragePercent": 25,
                "coverageCount": "4/16",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonChange",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectButtonOptionClick",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Range",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Vertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/slider/zyfra-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Style",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AnimationSpeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WarningWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSplitterComponent",
                "coveragePercent": 76,
                "coverageCount": "13/17",
                "status": "very-good"
            },
            {
                "filePath": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSplitterTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "simpleMenuItemsWithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSubMenu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplateWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWithBadge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OverflowTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTabViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductOrder",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Sale",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cloneArrayOfObjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCustomers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProductsOrdersSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getProductsSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSalesSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Customers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Products",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsOrdersSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductsSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditCell",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditCell.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/EditRow.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Expand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Expand.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilterSortSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FilterSortSearch.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FrozenRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/FrozenRows.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Pagination.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PaginationTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Resize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Resize.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RowGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/RowGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollHorizontalAndVertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollHorizontalAndVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollVertical",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVertical.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateCar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ScrollVirtual",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/ScrollVirtual.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectionTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SortMultiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/SortMultiple.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/State.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/State.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Status.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Status",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/_story/stories/Status.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraCellEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraCancelEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/editable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraEditableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraFrozenColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraInitEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableRowHandlerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraReordableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraResizableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowGroupHeaderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSaveEditableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSelectableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraSortableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/directives/table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraRowTogglerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSearchCellComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraSortIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableColumnFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableHeaderCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/table/zyfra-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTableComponent",
                "coveragePercent": 68,
                "coverageCount": "103/150",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Animation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toast/zyfra-toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DangerMini",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraToggleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TToggleButtonClick",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip-overlay-manager.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ZyfraTooltipOverlayManager",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TooltipWithoutTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TooltipWithTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTooltipDirective",
                "coveragePercent": 2,
                "coverageCount": "1/38",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ZyfraTooltipOptionsModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXPORTED_DECLARATIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cloneArrayOfObjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getFileSystem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FileSystem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sales",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Basic.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/ColGroup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Edit.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Filter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Reorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Reorder.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Scroll.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Selection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/_story/stories/Sort.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-base-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableBaseRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableEditableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableReorderableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableSelectableRowDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableSortableColumnDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/directives/tree-table-template.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ZyfraTreeTableTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableCellEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableHeaderCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-search-cell/tree-table-search-cell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableSearchCellComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableSortIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableTogglerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree-table/tree-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeTableComponent",
                "coveragePercent": 69,
                "coverageCount": "80/115",
                "status": "good"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Simple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tree/zyfra-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/48",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Binary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ZyfraTriCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            }
        ]
    }
}